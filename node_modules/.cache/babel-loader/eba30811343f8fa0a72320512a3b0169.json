{"ast":null,"code":"'use strict';\n\nvar globalThis = require('../internals/global-this');\n\nvar fails = require('../internals/fails'); // babel-minify and Closure Compiler transpiles RegExp('.', 'd') -> /./d and it causes SyntaxError\n\n\nvar RegExp = globalThis.RegExp;\nvar FLAGS_GETTER_IS_CORRECT = !fails(function () {\n  var INDICES_SUPPORT = true;\n\n  try {\n    RegExp('.', 'd');\n  } catch (error) {\n    INDICES_SUPPORT = false;\n  }\n\n  var O = {}; // modern V8 bug\n\n  var calls = '';\n  var expected = INDICES_SUPPORT ? 'dgimsy' : 'gimsy';\n\n  var addGetter = function (key, chr) {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty(O, key, {\n      get: function () {\n        calls += chr;\n        return true;\n      }\n    });\n  };\n\n  var pairs = {\n    dotAll: 's',\n    global: 'g',\n    ignoreCase: 'i',\n    multiline: 'm',\n    sticky: 'y'\n  };\n  if (INDICES_SUPPORT) pairs.hasIndices = 'd';\n\n  for (var key in pairs) addGetter(key, pairs[key]); // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n\n\n  var result = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags').get.call(O);\n  return result !== expected || calls !== expected;\n});\nmodule.exports = {\n  correct: FLAGS_GETTER_IS_CORRECT\n};","map":null,"metadata":{},"sourceType":"script"}