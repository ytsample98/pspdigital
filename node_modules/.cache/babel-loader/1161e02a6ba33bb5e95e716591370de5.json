{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\sales\\\\salestransactions\\\\invoice\\\\DirectBilling.js\";\nimport React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport { db } from '../../../../firebase';\nimport { collection, getDocs, addDoc, doc, updateDoc, serverTimestamp } from 'firebase/firestore';\nimport html2canvas from 'html2canvas';\nimport { jsPDF } from 'jspdf';\nimport { toWords } from 'number-to-words';\nimport { withRouter } from 'react-router-dom';\nimport { recalculateTotals, getTaxDetailsFromGroup } from '../calculation';\n\nconst numberToWords = num => {\n  const a = ['', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine', 'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];\n  const b = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\n  if (num === 0) return 'Zero';\n  if (num < 20) return a[num];\n  if (num < 100) return b[Math.floor(num / 10)] + ' ' + a[num % 10];\n  if (num < 1000) return a[Math.floor(num / 100)] + ' Hundred ' + numberToWords(num % 100);\n  if (num < 100000) return numberToWords(Math.floor(num / 1000)) + ' Thousand ' + numberToWords(num % 1000);\n  return 'Amount too large';\n};\n\nclass DirectBilling extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: 'co',\n      invoices: [],\n      customers: [],\n      products: [],\n      despatchModes: [],\n      paymentTerms: [],\n      showForm: false,\n      editingId: null,\n      showTaxOverlay: false,\n      currentTaxIdx: null,\n      overlayType: '',\n      overlaySearch: '',\n      productOverlayVisible: false,\n      productOverlaySearch: '',\n      selectedProductIds: [],\n      taxGroups: [],\n      formData: {\n        invoiceNo: '',\n        invoiceDate: new Date().toISOString().split('T')[0],\n        invoiceType: 'Standard',\n        customer: '',\n        status: 'Entered',\n        choose: 'Service',\n        qrefNo: '',\n        impExp: 'None',\n        currency: '',\n        conversionRate: '',\n        taxAmount: '',\n        invoiceValue: '',\n        discountPercent: 0,\n        discountAmount: 0,\n        afterDiscountValue: 0,\n        billTo: '',\n        shipTo: '',\n        despatchMode: 'By Air',\n        paymentTerms: '',\n        freightCharges: '',\n        freighttaxAmount: '',\n        taxPercent: '',\n        packingCharges: '',\n        lineItems: []\n      }\n    };\n    this.customerInputRef = React.createRef();\n\n    this.formatAddress = addr => {\n      if (!addr) return '';\n      if (typeof addr === 'string') return addr;\n      return [addr.address, [addr.city, addr.state, addr.country].filter(Boolean).join(', '), addr.zip].filter(Boolean).join('\\n');\n    };\n\n    this.showDirectBillingPDFWithOrg = async invoice => {\n      var _orgSnap$docs$, _invoice$billTo, _invoice$shipTo;\n\n      if (!invoice || !Array.isArray(invoice.lineItems) || invoice.lineItems.length === 0) {\n        alert(\"Invoice data is incomplete.\");\n        return;\n      } // 1. Fetch org and customer data\n\n\n      const orgSnap = await getDocs(collection(db, 'businessGroups'));\n      const org = ((_orgSnap$docs$ = orgSnap.docs[0]) === null || _orgSnap$docs$ === void 0 ? void 0 : _orgSnap$docs$.data()) || {};\n      const customer = this.state.customers.find(c => c.custshortName === invoice.customer || c.custname === invoice.customer) || {}; // GST State Map\n\n      const gstStateMap = {\n        \"01\": \"Jammu & Kashmir\",\n        \"02\": \"Himachal Pradesh\",\n        \"03\": \"Punjab\",\n        \"04\": \"Chandigarh\",\n        \"05\": \"Uttarakhand\",\n        \"06\": \"Haryana\",\n        \"07\": \"Delhi\",\n        \"08\": \"Rajasthan\",\n        \"09\": \"Uttar Pradesh\",\n        \"10\": \"Bihar\",\n        \"11\": \"Sikkim\",\n        \"12\": \"Arunachal Pradesh\",\n        \"13\": \"Nagaland\",\n        \"14\": \"Manipur\",\n        \"15\": \"Mizoram\",\n        \"16\": \"Tripura\",\n        \"17\": \"Meghalaya\",\n        \"18\": \"Assam\",\n        \"19\": \"West Bengal\",\n        \"20\": \"Jharkhand\",\n        \"21\": \"Odisha\",\n        \"22\": \"Chhattisgarh\",\n        \"23\": \"Madhya Pradesh\",\n        \"24\": \"Gujarat\",\n        \"25\": \"Daman and Diu\",\n        \"26\": \"Dadra and Nagar Haveli\",\n        \"27\": \"Maharashtra\",\n        \"28\": \"Andhra Pradesh (Old)\",\n        \"29\": \"Karnataka\",\n        \"30\": \"Goa\",\n        \"31\": \"Lakshadweep\",\n        \"32\": \"Kerala\",\n        \"33\": \"Tamil Nadu\",\n        \"34\": \"Puducherry\",\n        \"35\": \"Andaman and Nicobar Islands\",\n        \"36\": \"Telangana\",\n        \"37\": \"Andhra Pradesh\",\n        \"97\": \"Other Territory\"\n      };\n\n      const getPlaceOfSupply = gstin => {\n        if (!gstin || gstin.length < 2) return '';\n        const code = gstin.substring(0, 2);\n        const state = gstStateMap[code];\n        return state ? `${code} - ${state}` : '';\n      }; // 2. Enrich line items\n\n\n      const enrichedItems = invoice.lineItems.map(item => ({ ...item,\n        hsnCode: item.hsnCode || '',\n        uom: item.uom || '',\n        ptshortName: item.ptshortName || '',\n        taxGroupNames: item.taxGroupNames || (item.taxGroupName ? item.taxGroupName.split(',').map(s => s.trim()) : [])\n      })); // 3. Totals\n\n      const subtotal = enrichedItems.reduce((sum, item) => sum + (parseFloat(item.unitPrice) || 0) * (parseFloat(item.qty) || 0), 0);\n      const freightCharges = parseFloat(invoice.freightCharges || 0);\n      const packingCharges = parseFloat(invoice.packingCharges || 0);\n      const freightTax = parseFloat(invoice.freighttaxAmount || 0);\n      const totalTaxAmount = parseFloat(invoice.taxAmount || 0);\n      const discountAmount = invoice.discountAmount ? parseFloat(invoice.discountAmount) : 0;\n      const afterDiscountValue = invoice.afterDiscountValue ? parseFloat(invoice.afterDiscountValue) : null;\n      const invoiceValue = parseFloat(invoice.invoiceValue || subtotal + totalTaxAmount + freightCharges + packingCharges);\n      const grandTotal = afterDiscountValue !== null ? afterDiscountValue : invoiceValue;\n      const amountWords = `INR ${toWords(Math.floor(grandTotal))} Only`; // 4. Tax breakdown\n\n      let taxBreakdown = {};\n      let taxGroupDetails = [];\n      let sno = 1;\n      enrichedItems.forEach(item => {\n        const qty = parseFloat(item.qty || 0);\n        const unitPrice = parseFloat(item.unitPrice || 0);\n        const base = qty * unitPrice;\n        (item.taxGroupNames || []).forEach(tgName => {\n          const group = (this.state.taxGroups || []).find(g => g.groupName === tgName);\n\n          if (group) {\n            group.lineItems.forEach(li => {\n              const key = `${tgName} - ${li.component} (${li.percentOrAmt}${li.type === 'Amount' ? '' : '%'})`;\n              let taxAmt = li.type === 'Amount' ? parseFloat(li.percentOrAmt || 0) : base * parseFloat(li.percentOrAmt || 0) / 100;\n              taxBreakdown[key] = (taxBreakdown[key] || 0) + taxAmt;\n              taxGroupDetails.push({\n                sno: sno++,\n                group: tgName,\n                peramt: `${li.percentOrAmt}${li.type === 'Amount' ? '' : '%'}`,\n                taxAmt: taxAmt.toFixed(2)\n              });\n            });\n          }\n        });\n      });\n\n      if (freightTax > 0) {\n        taxBreakdown[\"Freight Tax\"] = freightTax;\n        taxGroupDetails.push({\n          sno: sno++,\n          group: \"Freight Tax\",\n          peramt: \"-\",\n          taxAmt: freightTax.toFixed(2)\n        });\n      } // 5. Build HTML for PDF\n\n\n      const container = document.createElement('div');\n      container.id = 'pdf-preview-container';\n      container.style.width = '794px';\n      container.style.padding = '40px';\n      container.style.fontFamily = 'Arial';\n      container.innerHTML = `\n    <div style=\"display:flex; justify-content:space-between; align-items:center;\">\n      <img src=\"${org.logoUrl || ''}\" style=\"height:50px;\" />\n      <div style=\"font-size:18px; font-weight:bold;\">DIRECT BILLING INVOICE</div>\n    </div>\n    <hr/>\n    <div style=\"display:flex; justify-content:space-between; font-size:11px;\">\n      <div style=\"line-height:1.5; width:50%;\">\n        <b>${org.bgName || ''}</b><br/>\n        ${org.address || ''}<br/>\n        <b>Email:</b> ${org.email || ''}<br/>\n        <b>Website:</b> ${org.website || ''}<br/>\n        <b>GSTIN:</b> ${org.gstin || ''}<br/>\n        <b>Mobile:</b> ${org.mobile || ''}<br/>\n        <b>CIN:</b> ${org.cin || ''}\n      </div>\n      <table style=\"font-size:11px; text-align:left;\">\n        <tr><td><b>Invoice No</b></td><td>: ${invoice.invoiceNo || ''}</td></tr>\n        <tr><td><b>Invoice Date</b></td><td>: ${invoice.invoiceDate || ''}</td></tr>\n        <tr><td><b>Customer Code</b></td><td>: ${customer.custcode || ''}</td></tr>\n        <tr><td><b>Currency</b></td><td>: ${invoice.currency || 'INR'}</td></tr>\n        <tr><td><b>Despatch</b></td><td>: ${invoice.despatchMode || ''}</td></tr>\n      </table>\n    </div>\n\n    <div style=\"margin-top:15px; display:flex; justify-content:space-between; font-size:11px;\">\n      <div style=\"width:48%;\">\n        <b style=\"background:#011b56; color:#fff; display:block; padding:4px;\">Bill To</b>\n        <div style=\"border:1px solid #ccc; padding:6px;\">\n         <b>${invoice.customer || ''}</b><br/>\n          ${((_invoice$billTo = invoice.billTo) === null || _invoice$billTo === void 0 ? void 0 : _invoice$billTo.replace(/\\n/g, '<br/>')) || ''}\n        </div>\n        <div style=\"font-size:10px; margin-top:6px;\">\n            <b>GSTIN:</b> ${customer.gstin || ''}<br/>\n            <b>Email:</b> ${customer.email || ''}<br/>\n            <b>Contact:</b> ${customer.contactPerson || ''}<br/>\n            <b>Phone:</b> ${customer.phone || ''}\n        </div>\n      </div>\n      <div style=\"width:48%;\">\n        <b style=\"background:#011b56; color:#fff; display:block; padding:4px;\">Ship To</b>\n        <div style=\"border:1px solid #ccc; padding:6px;\">\n         <b>${invoice.customer || ''}</b><br/>\n          ${((_invoice$shipTo = invoice.shipTo) === null || _invoice$shipTo === void 0 ? void 0 : _invoice$shipTo.replace(/\\n/g, '<br/>')) || ''}\n        </div>\n        <div style=\"font-size:10px; margin-top:6px;\">\n          <b>Place of Supply:</b> ${getPlaceOfSupply(customer.gstin || '')}\n        </div>\n      </div>\n    </div>\n\n    <table style=\"width:100%; border-collapse:collapse; margin-top:20px; font-size:10px;\">\n      <thead>\n        <tr style=\"background:#f4f6fa;\">\n          <th style=\"border:1px solid #011b56;\">Item Code</th>\n          <th style=\"border:1px solid #011b56;\">Description</th>\n          <th style=\"border:1px solid #011b56;\">HSN</th>\n          <th style=\"border:1px solid #011b56;\">UOM</th>\n          <th style=\"border:1px solid #011b56;\">Qty</th>\n          <th style=\"border:1px solid #011b56;\">Unit Price</th>\n          <th style=\"border:1px solid #011b56;\">GST Group</th>\n          <th style=\"border:1px solid #011b56;\">Item Total</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${enrichedItems.map(item => {\n        const gstLabel = item.taxGroupNames && item.taxGroupNames.length ? item.taxGroupNames.join(', ') : item.taxGroupName || item.taxId || '-';\n        return `\n            <tr>\n              <td style=\"border:1px solid #011b56;\">${item.itemCode || ''}</td>\n              <td style=\"border:1px solid #011b56;\">${item.itemDescription || ''}</td>\n              <td style=\"border:1px solid #011b56;\">${item.hsnCode}</td>\n              <td style=\"border:1px solid #011b56;\">${item.uom}</td>\n              <td style=\"border:1px solid #011b56;\">${item.qty}</td>\n              <td style=\"border:1px solid #011b56;\">${item.unitPrice}</td>\n              <td style=\"border:1px solid #011b56;\">${gstLabel}</td>\n              <td style=\"border:1px solid #011b56;\">${item.itemTotal}</td>\n            </tr>`;\n      }).join('')}\n        <tr>\n          <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>Subtotal</b></td>\n          <td style=\"border:1px solid #011b56;\"><b>${subtotal.toFixed(2)}</b></td>\n        </tr>\n        \n        <tr>\n          <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>Total Tax Amount</b></td>\n          <td style=\"border:1px solid #011b56;\"><b>${totalTaxAmount.toFixed(2)}</b></td>\n        </tr>\n        <tr>\n          <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>Invoice Value</b></td>\n          <td style=\"border:1px solid #011b56;\"><b>${invoiceValue.toFixed(2)}</b></td>\n        </tr>\n        <tr>\n          <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>After Discount Value</b></td>\n          <td style=\"border:1px solid #011b56;\"><b>${invoice.afterDiscountValue || ''}</b></td>\n        </tr>\n      </tbody>\n    </table>\n    <div style=\"margin-top:8px; font-size:11px;\"><b>Amount in Words:</b> ${amountWords}</div>\n    <div style=\"margin-top:20px; text-align:right; font-size:10px;\">Printed on ${new Date().toLocaleString()}</div>\n  `;\n      document.body.appendChild(container);\n      const canvas = await html2canvas(container, {\n        scale: 2,\n        useCORS: true\n      });\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'pt', 'a4');\n      const width = 595.28;\n      const height = canvas.height * width / canvas.width;\n      pdf.addImage(imgData, 'PNG', 0, 0, width, height);\n      document.body.removeChild(container); // 6. Tax Breakdown page\n\n      if (taxGroupDetails.length > 0) {\n        pdf.addPage();\n        let taxRows = taxGroupDetails.map(row => `\n      <tr>\n        <td style=\"border:1px solid #011b56;\">${row.sno}</td>\n        <td style=\"border:1px solid #011b56;\">${row.group}</td>\n        <td style=\"border:1px solid #011b56;\">${row.peramt}</td>\n        <td style=\"border:1px solid #011b56;\">${row.taxAmt}</td>\n      </tr>`).join('');\n        let taxHtml = `<div style=\"font-family:Arial; padding:20px; width:100%;\">\n    <h3 style=\"margin-bottom:10px; font-size:18px;\">Tax Breakdown</h3>\n    <table style=\"width:100%; border-collapse:collapse; margin-top:20px; font-size:14px;\">\n      <thead>\n        <tr style=\"background:#f4f6fa;\">\n          <th style=\"border:1px solid #011b56;\">S.No</th>\n          <th style=\"border:1px solid #011b56;\">Tax Group</th>\n          <th style=\"border:1px solid #011b56;\">Per/Amt</th>\n          <th style=\"border:1px solid #011b56;\">Tax Amt</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${taxRows}\n        <tr>\n          <td colspan=\"3\" style=\"text-align:right; border:1px solid #011b56;\"><b>Total Tax Amount</b></td>\n          <td style=\"border:1px solid #011b56;\"><b>${totalTaxAmount.toFixed(2)}</b></td>\n        </tr>\n      </tbody>\n    </table>\n    </div>`;\n        const taxContainer = document.createElement('div');\n        taxContainer.innerHTML = taxHtml;\n        document.body.appendChild(taxContainer);\n        const taxCanvas = await html2canvas(taxContainer, {\n          scale: 1.5,\n          useCORS: true\n        });\n        const taxImg = taxCanvas.toDataURL('image/png');\n        pdf.addImage(taxImg, 'PNG', 0, 0, width, taxCanvas.height * width / taxCanvas.width);\n        document.body.removeChild(taxContainer);\n      }\n\n      pdf.setFontSize(11);\n      pdf.text(`For ${org.bgName || ''}`, width - 200, 780);\n      pdf.text('Authorized Signatory', width - 200, 800); // 7. Show PDF\n\n      const blob = pdf.output('blob');\n      const url = URL.createObjectURL(blob);\n      const newWin = window.open();\n      newWin.document.write(`\n    <html><head><title>Direct Billing PDF Preview</title></head>\n    <body style=\"margin:0;\">\n      <iframe width=\"100%\" height=\"100%\" style=\"border:none;\" src=\"${url}\"></iframe>\n    </body></html>\n  `);\n      newWin.document.close();\n    };\n\n    this.calculateinvoiceTotals = () => {\n      const {\n        impExp,\n        freightCharges,\n        taxPercent,\n        packingCharges,\n        lineItems\n      } = this.state.formData;\n      let freight = parseFloat(freightCharges) || 0;\n      let packing = parseFloat(packingCharges) || 0;\n      let taxOnFreight = 0;\n\n      if (['None', 'CIF'].includes(impExp)) {\n        taxOnFreight = freight * (parseFloat(taxPercent) || 0) / 100;\n      }\n\n      let lineTotal = 0;\n      let itemTaxTotal = 0;\n      const updatedLineItems = lineItems.map(item => {\n        var _item$taxGroupNames;\n\n        const qty = parseFloat(item.qty || 1);\n        const unitPrice = parseFloat(item.unitPrice || 0);\n        const baseTotal = unitPrice * qty;\n        const groupNames = ((_item$taxGroupNames = item.taxGroupNames) === null || _item$taxGroupNames === void 0 ? void 0 : _item$taxGroupNames.length) ? item.taxGroupNames : [item.taxGroup || ''];\n        let percent = 0;\n        let amount = 0;\n        groupNames.forEach(groupName => {\n          const group = this.state.taxGroups.find(t => t.groupName === groupName);\n\n          if (group && Array.isArray(group.lineItems)) {\n            group.lineItems.forEach(comp => {\n              const val = parseFloat(comp.percentOrAmt || 0);\n              if (comp.type === 'Percentage') percent += val;\n              if (comp.type === 'Amount') amount += val;\n            });\n          }\n        });\n        const taxAmt = baseTotal * percent / 100 + amount;\n        const total = baseTotal;\n        item.taxAmt = taxAmt.toFixed(2);\n        item.total = total.toFixed(2);\n        lineTotal += baseTotal;\n        itemTaxTotal += taxAmt;\n        return item;\n      });\n      const totalTaxAmount = itemTaxTotal + taxOnFreight;\n      const invoiceValue = lineTotal + freight + packing + itemTaxTotal;\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          taxAmount: totalTaxAmount.toFixed(2),\n          // ✅ Top-level field\n          invoiceValue: invoiceValue.toFixed(2),\n          lineItems: updatedLineItems\n        }\n      }));\n    };\n\n    this.handleDiscountChange = (field, value) => {\n      let {\n        formData\n      } = this.state;\n      formData[field] = value;\n      const quoteValue = parseFloat(formData.quoteValue || 0);\n      const discountPercent = parseFloat(formData.discountPercent || 0);\n      const discountAmount = quoteValue * discountPercent / 100;\n      const afterDiscountValue = quoteValue - discountAmount;\n      formData.discountAmount = discountAmount;\n      formData.afterDiscountValue = afterDiscountValue;\n      this.setState({\n        formData\n      });\n    };\n\n    this.handleChooseChange = value => {\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          choose: value\n        }\n      }), this.filterProductsByCategory);\n    };\n\n    this.filterProductsByCategory = () => {\n      const {\n        choose\n      } = this.state.formData;\n      let filteredProducts = [];\n\n      if (choose === \"Service\") {\n        filteredProducts = this.state.products.filter(p => p.category === \"Service\");\n      } else if (choose === \"Product\") {\n        filteredProducts = this.state.products.filter(p => p.category === \"Product\");\n      } else if (choose === \"Bundle\") {\n        filteredProducts = this.state.products; // All products\n      }\n\n      this.setState({\n        filteredProducts\n      });\n    };\n\n    this.subscribeToInvoices = () => {\n      this._unsubInvoices = onSnapshot(collection(db, 'invoices'), snap => {\n        const data = snap.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        this.setState({\n          invoices: data.reverse()\n        });\n      }, err => {\n        console.error('invoices snapshot error', err);\n      });\n    };\n\n    this.fetchTaxGroups = async () => {\n      const snap = await getDocs(collection(db, 'taxGroups'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        taxGroups: data\n      });\n    };\n\n    this.fetchinvoice = async () => {\n      const snap = await getDocs(collection(db, 'invoices')); // <-- Correct collection name\n\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        invoices: data.reverse()\n      });\n    };\n\n    this.fetchCustomers = async () => {\n      const snap = await getDocs(collection(db, 'customers'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        customers: data\n      });\n    };\n\n    this.fetchProducts = async () => {\n      const snap = await getDocs(collection(db, 'products'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        products: data,\n        filteredProducts: data\n      }, this.filterProductsByCategory);\n    };\n\n    this.fetchDespatchModes = async () => {\n      const snap = await getDocs(collection(db, 'modes'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        despatchModes: data\n      });\n    };\n\n    this.fetchPaymentTerms = async () => {\n      const snap = await getDocs(collection(db, 'paymentTerms'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        paymentTerms: data\n      });\n    };\n\n    this.handleInputChange = (field, value) => {\n      this.setState(prev => {\n        const newForm = { ...prev.formData,\n          [field]: value\n        }; // When switching to FOB clear freight-related fields\n\n        if (field === 'impExp' && value === 'FOB') {\n          newForm.freightCharges = '';\n          newForm.taxPercent = '';\n          newForm.freighttaxAmount = '';\n          newForm.taxAmount = '';\n          newForm.packingCharges = '';\n          newForm.invoiceValue = '';\n        }\n\n        return {\n          formData: newForm\n        };\n      }, () => {\n        // Recalculate whenever fields that affect totals are changed\n        if (['freightCharges', 'packingCharges', 'taxPercent', 'impExp', 'discountPercent'].includes(field)) {\n          this.recalculateDirectBillingTotals();\n        }\n      });\n    };\n\n    this.handleLineItemChange = (idx, field, value) => {\n      const updatedItems = [...this.state.formData.lineItems];\n      updatedItems[idx] = { ...updatedItems[idx],\n        [field]: value\n      };\n      const qty = parseFloat(updatedItems[idx].qty || 0);\n      const unitPrice = parseFloat(updatedItems[idx].unitPrice || 0); // compute tax & item total numerically\n\n      const taxAmtNum = this.calcTaxAmt(updatedItems[idx]);\n      updatedItems[idx].taxAmt = taxAmtNum; // numeric here; will be formatted in recalc\n\n      updatedItems[idx].itemTotal = this.calcItemTotal(qty, unitPrice, taxAmtNum);\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          lineItems: updatedItems\n        }\n      }), this.recalculateDirectBillingTotals);\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        editingId,\n        formData,\n        invoices\n      } = this.state;\n      if (!formData.customer) return alert(\"Customer is required\");\n      if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\n\n      if (editingId) {\n        const {\n          id,\n          ...formDataWithoutId\n        } = formData;\n        await updateDoc(doc(db, \"invoices\", editingId), { ...formDataWithoutId,\n          status: \"Awaiting Approval\",\n          updatedAt: serverTimestamp()\n        });\n      } else {\n        formData.invoiceNo = `INV${1000 + invoices.length}`;\n        await addDoc(collection(db, \"invoices\"), { ...formData,\n          status: \"Awaiting Approval\",\n          createdAt: serverTimestamp()\n        });\n      }\n\n      this.setState({\n        showForm: false,\n        editingId: null,\n        formData: this.getEmptyInvoiceForm()\n      });\n      this.fetchinvoice();\n    };\n\n    this.getEmptyInvoiceForm = () => ({\n      invoiceNo: '',\n      invoiceDate: new Date().toISOString().split('T')[0],\n      invoiceType: 'Standard',\n      customer: '',\n      status: 'Entered',\n      choose: 'Service',\n      qrefNo: '',\n      impExp: 'None',\n      currency: '',\n      conversionRate: '',\n      taxAmount: '',\n      invoiceValue: '',\n      discountPercent: 0,\n      discountAmount: 0,\n      afterDiscountValue: 0,\n      billTo: '',\n      shipTo: '',\n      despatchMode: 'By Air',\n      paymentTerms: '',\n      freightCharges: '',\n      freighttaxAmount: '',\n      taxPercent: '',\n      packingCharges: '',\n      lineItems: []\n    });\n\n    this.openNewForm = () => {\n      this.setState({\n        showForm: true,\n        editingId: null,\n        formData: this.getEmptyInvoiceForm() // fresh blank form\n\n      });\n    };\n\n    this.loadinvoiceForEdit = invoice => {\n      const normalizedLineItems = (invoice.lineItems || []).map(item => {\n        const qty = parseFloat(item.qty || 0);\n        const unitPrice = parseFloat(item.unitPrice || 0);\n        const baseTotal = qty * unitPrice;\n        const taxAmt = item.taxAmt ? parseFloat(item.taxAmt) : this.calcTaxAmt(item);\n        const itemTotal = item.itemTotal ? parseFloat(item.itemTotal) : baseTotal + taxAmt;\n        return { ...item,\n          qty,\n          unitPrice,\n          taxAmt: taxAmt.toFixed(2),\n          itemTotal: itemTotal.toFixed(2),\n          taxGroupNames: item.taxGroupNames || (item.taxGroup ? [item.taxGroup] : [])\n        };\n      });\n      this.setState({\n        formData: { ...invoice,\n          lineItems: normalizedLineItems\n        },\n        editingId: invoice.id,\n        showForm: true,\n        activeTab: 'co'\n      }, this.recalculateDirectBillingTotals);\n    };\n\n    this.toggleInvoiceForm = () => {\n      this.setState({\n        showForm: true,\n        editingId: null,\n        formData: this.getEmptyInvoiceForm()\n      });\n    };\n\n    this.showOverlay = type => this.setState({\n      overlayType: type,\n      overlaySearch: ''\n    });\n\n    this.hideOverlay = () => this.setState({\n      overlayType: '',\n      overlaySearch: ''\n    });\n\n    this.selectOverlayValue = value => {\n      if (this.state.overlayType === 'customer') {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            customer: value.custname || value.custcode || '',\n            // Use custname or custcode\n            billTo: this.formatAddress(value.billTo),\n            shipTo: this.formatAddress(value.shipTo),\n            currency: value.currency || '' // despatchMode: value.despatchMode || '', // No auto-fill for despatch mode\n            // paymentTerms: value.paymentTerms || '' // No auto-fill for payment terms\n\n          },\n          overlayType: '',\n          overlaySearch: ''\n        }), () => {\n          if (this.customerInputRef.current) {\n            this.customerInputRef.current.value = value.custname || value.custcode || '';\n          }\n        });\n      }\n    };\n\n    this.renderOverlay = () => {\n      const {\n        overlayType,\n        overlaySearch,\n        customers,\n        despatchModes,\n        paymentTerms\n      } = this.state;\n\n      const getFilteredRows = (list, nameKey = 'name', codeKey = 'shortName') => list.filter(item => (item[nameKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()) || (item[codeKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()));\n\n      const handleSelect = item => {\n        if (overlayType === 'customer') {\n          this.selectOverlayValue(item);\n        } else if (overlayType === 'despatchMode') {\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              despatchMode: item.name\n            },\n            overlayType: '',\n            overlaySearch: ''\n          }));\n        } else if (overlayType === 'paymentTerms') {\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              paymentTerms: item.name\n            },\n            overlayType: '',\n            overlaySearch: ''\n          }));\n        }\n      };\n\n      let title = '';\n      let headers = [];\n      let rows = [];\n\n      if (overlayType === 'customer') {\n        title = 'Select Customer';\n        headers = ['Name', 'Code', 'Short Name'];\n        rows = getFilteredRows(customers, 'custname', 'custcode');\n      } else if (overlayType === 'despatchMode') {\n        title = 'Select Despatch Mode';\n        headers = ['Name'];\n        rows = getFilteredRows(despatchModes);\n      } else if (overlayType === 'paymentTerms') {\n        title = 'Select Payment Terms';\n        headers = ['Name'];\n        rows = getFilteredRows(paymentTerms);\n      } else {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 9\n        }\n      }, title), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: `Search ${overlayType}...`,\n        value: overlaySearch,\n        onChange: e => this.setState({\n          overlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 15\n        }\n      }, headers.map((h, i) => /*#__PURE__*/React.createElement(\"th\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 40\n        }\n      }, h)))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 13\n        }\n      }, rows.map((item, i) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id || i,\n        onClick: () => handleSelect(item),\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 17\n        }\n      }, headers.map((h, j) => /*#__PURE__*/React.createElement(\"td\", {\n        key: j,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 21\n        }\n      }, overlayType === 'customer' ? h === 'Name' ? item.custname : h === 'Code' ? item.custcode : item.custshortName : h === 'Name' ? item.name : item.shortName)))), rows.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: headers.length,\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 19\n        }\n      }, \"No records found\"))))), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm mt-2\",\n        onClick: this.hideOverlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 9\n        }\n      }, \"Cancel\")));\n    };\n\n    this.renderTaxOverlay = () => {\n      const {\n        taxGroups,\n        currentTaxIdx,\n        formData\n      } = this.state;\n      if (currentTaxIdx === null) return null;\n      const item = formData.lineItems[currentTaxIdx];\n      const selected = new Set(item.taxGroupNames || []);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'fixed',\n          zIndex: 1000,\n          top: '10%',\n          left: '15%',\n          background: '#fff',\n          border: '1px solid #ccc',\n          padding: '20px',\n          boxShadow: '0 0 10px rgba(0,0,0,0.3)',\n          width: '70%',\n          maxHeight: '70vh',\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 7\n        }\n      }, \"Select Tax Groups\"), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-sm table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 24\n        }\n      }, \"Group\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 38\n        }\n      }, \"Components\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 57\n        }\n      }, \"%\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 9\n        }\n      }, taxGroups.map(tg => /*#__PURE__*/React.createElement(\"tr\", {\n        key: tg.groupName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 837,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: selected.has(tg.groupName),\n        onChange: e => this.toggleTaxGroupSelection(tg.groupName, currentTaxIdx, e.target.checked),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 846,\n          columnNumber: 15\n        }\n      }, tg.groupName), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 15\n        }\n      }, tg.lineItems.map(li => li.component).join(', ')), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 15\n        }\n      }, tg.lineItems.map(li => li.percentOrAmt).join(', ')))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-success\",\n        onClick: () => this.setState({\n          showTaxOverlay: false,\n          currentTaxIdx: null\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 9\n        }\n      }, \"Done\")));\n    };\n\n    this.toggleTaxGroupSelection = (groupName, lineIdx, isChecked) => {\n      const formData = { ...this.state.formData\n      };\n      const item = formData.lineItems[lineIdx];\n      if (!item.taxGroupNames) item.taxGroupNames = [];\n\n      if (isChecked) {\n        if (!item.taxGroupNames.includes(groupName)) {\n          item.taxGroupNames.push(groupName);\n        }\n      } else {\n        item.taxGroupNames = item.taxGroupNames.filter(g => g !== groupName);\n      } // recalculate taxAmt and total// after changing taxGroupNames on the item:\n\n\n      item.taxAmt = this.calcTaxAmt(item); // numeric\n\n      item.itemTotal = this.calcItemTotal(item.qty, item.unitPrice, item.taxAmt); // numeric\n\n      this.setState({\n        formData\n      }, this.recalculateDirectBillingTotals);\n    };\n\n    this.calcTaxAmt = item => {\n      let percent = 0;\n      let amount = 0;\n      (item.taxGroupNames || []).forEach(groupName => {\n        const group = this.state.taxGroups.find(t => t.groupName === groupName);\n\n        if (group && Array.isArray(group.lineItems)) {\n          group.lineItems.forEach(comp => {\n            const val = parseFloat(comp.percentOrAmt || 0);\n            if (comp.type === 'Percentage') percent += val;\n            if (comp.type === 'Amount') amount += val;\n          });\n        }\n      });\n      const baseTotal = parseFloat(item.unitPrice || 0) * parseFloat(item.qty || 0);\n      const tax = baseTotal * percent / 100 + amount;\n      return isNaN(tax) ? 0 : tax;\n    };\n\n    this.calcItemTotal = (qty, unitPrice, taxAmt) => {\n      qty = parseFloat(qty) || 0;\n      unitPrice = parseFloat(unitPrice) || 0;\n      taxAmt = parseFloat(taxAmt) || 0;\n      return qty * unitPrice + taxAmt;\n    };\n\n    this.recalculateDirectBillingTotals = () => {\n      const fd = this.state.formData;\n      const lineItems = fd.lineItems || [];\n      let lineBaseTotal = 0;\n      let lineTaxTotal = 0;\n      const updatedLineItems = lineItems.map(item => {\n        const qty = parseFloat(item.qty || 0);\n        const unitPrice = parseFloat(item.unitPrice || 0);\n        const baseTotal = qty * unitPrice;\n        const taxAmt = this.calcTaxAmt(item); // numeric\n\n        const itemTotal = baseTotal + taxAmt;\n        lineBaseTotal += baseTotal;\n        lineTaxTotal += taxAmt;\n        return { ...item,\n          taxAmt: taxAmt.toFixed(2),\n          itemTotal: itemTotal.toFixed(2)\n        };\n      });\n      const freight = parseFloat(fd.freightCharges) || 0;\n      const packing = parseFloat(fd.packingCharges) || 0;\n      const taxPercent = parseFloat(fd.taxPercent) || 0; // freight tax only applies for None/CIF\n\n      const freightTax = ['None', 'CIF'].includes(fd.impExp) ? freight * taxPercent / 100 : 0;\n      const totalTaxAmount = lineTaxTotal + freightTax;\n      const invoiceValue = lineBaseTotal + freight + packing + totalTaxAmount;\n      let discountAmount = '';\n      let afterDiscountValue = '';\n\n      if (fd.discountPercent !== '' && fd.discountPercent !== null && !isNaN(fd.discountPercent)) {\n        const dPercent = parseFloat(fd.discountPercent) || 0;\n        discountAmount = (invoiceValue * dPercent / 100).toFixed(2);\n        afterDiscountValue = (invoiceValue - parseFloat(discountAmount)).toFixed(2);\n      }\n\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          lineItems: updatedLineItems,\n          taxAmount: totalTaxAmount.toFixed(2),\n          freighttaxAmount: freightTax.toFixed(2),\n          invoiceValue: invoiceValue.toFixed(2),\n          discountAmount,\n          afterDiscountValue\n        }\n      }));\n    };\n\n    this.renderProductOverlay = () => {\n      const {\n        filteredProducts,\n        productOverlaySearch,\n        selectedProductIds\n      } = this.state;\n      const filtered = filteredProducts.filter(p => (p.ptshortName || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) || (p.ptdescription || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) || (p.itemCode || '').toLowerCase().includes(productOverlaySearch.toLowerCase()));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 969,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 970,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 971,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 972,\n          columnNumber: 13\n        }\n      }, \"Select Products\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-success btn-sm\",\n        onClick: () => {\n          const selectedProducts = filteredProducts.filter(p => this.state.selectedProductIds.includes(p.id));\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              lineItems: [...prev.formData.lineItems, ...selectedProducts.filter(p => !prev.formData.lineItems.some(item => item.id === p.id)).map(p => ({\n                id: p.id,\n                itemCode: p.productId || '',\n                itemDescription: p.ptdescription || '',\n                itemType: p.itemType || '',\n                materialType: p.materialType || '',\n                onHand: p.onHand || 0,\n                taxGroup: p.taxGroup || '',\n                custPartNo: p.custPartNo || '',\n                // Assuming this is cust part table\n                hsnCode: p.hsnCode || '',\n                // Assuming HSN No.\n                unitPrice: p.unitPrice || 0,\n                qty: 1,\n                taxAmt: 0,\n                itemTotal: (p.unitPrice || 0).toFixed(2)\n              }))]\n            },\n            productOverlayVisible: false,\n            selectedProductIds: []\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 973,\n          columnNumber: 13\n        }\n      }, \"Add Selected\")), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: \"Search products...\",\n        value: productOverlaySearch,\n        onChange: e => this.setState({\n          productOverlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1007,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1014,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1015,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1017,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1018,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1019,\n          columnNumber: 19\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1020,\n          columnNumber: 19\n        }\n      }, \"Item Desc\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1021,\n          columnNumber: 19\n        }\n      }, \"Item Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 19\n        }\n      }, \"Material Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1023,\n          columnNumber: 19\n        }\n      }, \"On Hand\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1024,\n          columnNumber: 19\n        }\n      }, \"Tax Grp\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1025,\n          columnNumber: 19\n        }\n      }, \"Cust Part No\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1028,\n          columnNumber: 15\n        }\n      }, filtered.map(p => /*#__PURE__*/React.createElement(\"tr\", {\n        key: p.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1030,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1031,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: selectedProductIds.includes(p.id),\n        onChange: e => {\n          const checked = e.target.checked;\n          this.setState(prev => ({\n            selectedProductIds: checked ? [...prev.selectedProductIds, p.id] : prev.selectedProductIds.filter(id => id !== p.id)\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1032,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1045,\n          columnNumber: 21\n        }\n      }, p.productId), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1046,\n          columnNumber: 21\n        }\n      }, p.ptdescription || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1047,\n          columnNumber: 21\n        }\n      }, p.itemType || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1048,\n          columnNumber: 21\n        }\n      }, p.materialType || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1049,\n          columnNumber: 21\n        }\n      }, p.onHand || 0), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1050,\n          columnNumber: 21\n        }\n      }, p.taxGroup || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1051,\n          columnNumber: 21\n        }\n      }, p.custPartNo || ''))), filtered.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1055,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"8\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1056,\n          columnNumber: 21\n        }\n      }, \"No products found\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1063,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1064,\n          columnNumber: 13\n        }\n      }, \"Page 1 of 1\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        onClick: () => this.setState({\n          productOverlayVisible: false,\n          selectedProductIds: []\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1065,\n          columnNumber: 13\n        }\n      }, \"Cancel\"))));\n    };\n\n    this.renderinvoiceTable = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-4 full-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1073,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1074,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1075,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1076,\n        columnNumber: 11\n      }\n    }, \"Invoices\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.openNewForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1077,\n        columnNumber: 11\n      }\n    }, \"Create Invoice\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1079,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1080,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1081,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1082,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1083,\n        columnNumber: 17\n      }\n    }, \"Bill No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1084,\n        columnNumber: 17\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1085,\n        columnNumber: 17\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1086,\n        columnNumber: 17\n      }\n    }, \"Bill Value\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1087,\n        columnNumber: 17\n      }\n    }, \"After Discount\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1088,\n        columnNumber: 17\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1089,\n        columnNumber: 17\n      }\n    }, \"Print\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1092,\n        columnNumber: 13\n      }\n    }, this.state.invoices.map((q, i) => {\n      let statusClass = \"badge-secondary\";\n      if (q.status === \"Awaiting Approval\") statusClass = \"badge-warning\";else if (q.status === \"Amended\") statusClass = \"badge-info\";else if (q.status === \"Approved\") statusClass = \"badge-success\";else if (q.status === \"Cancelled\") statusClass = \"badge-danger\";\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        style: {\n          fontSize: '14px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1101,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1102,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-link p-0\",\n        onClick: () => this.loadinvoiceForEdit(q),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1103,\n          columnNumber: 21\n        }\n      }, q.invoiceNo)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1110,\n          columnNumber: 19\n        }\n      }, q.customer), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1111,\n          columnNumber: 19\n        }\n      }, q.invoiceDate), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1112,\n          columnNumber: 19\n        }\n      }, q.invoiceValue), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1113,\n          columnNumber: 19\n        }\n      }, q.afterDiscountValue), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1114,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: `badge ${statusClass}`,\n        style: {\n          fontSize: '14px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1115,\n          columnNumber: 21\n        }\n      }, q.status)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1118,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"mdi mdi-printer menu-icon\",\n        onClick: () => this.showDirectBillingPDFWithOrg(q),\n        style: {\n          fontSize: '24px',\n          color: '#2196F3',\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1119,\n          columnNumber: 23\n        }\n      })));\n    }), this.state.invoices.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1130,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"6\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1130,\n        columnNumber: 21\n      }\n    }, \"No Direct Bill found.\")))))));\n\n    this.renderinvoiceForm = () => {\n      const {\n        formData,\n        overlayType,\n        productOverlayVisible\n      } = this.state;\n      const isFOB = formData.impExp === 'FOB';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1144,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card full-height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1145,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: 'auto',\n          padding: '24px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1146,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1147,\n          columnNumber: 13\n        }\n      }, \"Direct Bill Form\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"nav nav-tabs\",\n        role: \"tablist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1148,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1149,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'co' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'co'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1150,\n          columnNumber: 17\n        }\n      }, \"CO Details\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1152,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'commercial'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1153,\n          columnNumber: 17\n        }\n      }, \"Commercial Terms\"))), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"form-sample\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1156,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tab-content pt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1157,\n          columnNumber: 15\n        }\n      }, this.state.activeTab === 'co' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1160,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1161,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1162,\n          columnNumber: 25\n        }\n      }, \"Bill No\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.invoiceNo,\n        onChange: e => this.handleInputChange('invoiceNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1163,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1165,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1166,\n          columnNumber: 25\n        }\n      }, \"Bill Date\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"date\",\n        className: \"form-control form-control-sm\",\n        value: formData.invoiceDate,\n        onChange: e => this.handleInputChange('invoiceDate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1167,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1169,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1170,\n          columnNumber: 25\n        }\n      }, \"Bill Type\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.invoiceType,\n        onChange: e => this.handleInputChange('invoiceType', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1171,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1172,\n          columnNumber: 27\n        }\n      }, \"Standard\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1173,\n          columnNumber: 27\n        }\n      }, \"Manual\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1176,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1177,\n          columnNumber: 25\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.status,\n        style: {\n          backgroundColor: '#fff'\n        },\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1178,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1181,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1182,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1183,\n          columnNumber: 25\n        }\n      }, \"Customer\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1184,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Choose Customer\",\n        ref: this.customerInputRef,\n        value: formData.customer,\n        readOnly: true,\n        onClick: () => this.showOverlay('customer'),\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1185,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1195,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        onClick: () => this.showOverlay('customer'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1196,\n          columnNumber: 29\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1200,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1201,\n          columnNumber: 25\n        }\n      }, \"IMP/EXP\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.impExp,\n        onChange: e => this.handleInputChange('impExp', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1202,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1207,\n          columnNumber: 27\n        }\n      }, \"None\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1208,\n          columnNumber: 27\n        }\n      }, \"COB\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1209,\n          columnNumber: 27\n        }\n      }, \"FOB\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1210,\n          columnNumber: 27\n        }\n      }, \"CIF\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1213,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1214,\n          columnNumber: 25\n        }\n      }, \"Ref No.\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.qrefNo,\n        onChange: e => this.handleInputChange('qrefNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1215,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1222,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1223,\n          columnNumber: 25\n        }\n      }, \"Choose\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1224,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check mr-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1225,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        className: \"form-check-input\",\n        name: \"choose\",\n        id: \"chooseService\",\n        value: \"Service\",\n        checked: formData.choose === 'Service',\n        onChange: e => this.handleChooseChange(e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1226,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"chooseService\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1230,\n          columnNumber: 29\n        }\n      }, \"Service\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check mr-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1232,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        className: \"form-check-input\",\n        name: \"choose\",\n        id: \"chooseProduct\",\n        value: \"Product\",\n        checked: formData.choose === 'Product',\n        onChange: e => this.handleChooseChange(e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1233,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"chooseProduct\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1237,\n          columnNumber: 29\n        }\n      }, \"Product\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1239,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        className: \"form-check-input\",\n        name: \"choose\",\n        id: \"chooseBundle\",\n        value: \"Bundle\",\n        checked: formData.choose === 'Bundle',\n        onChange: e => this.handleChooseChange(e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1240,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"chooseBundle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1244,\n          columnNumber: 29\n        }\n      }, \"Bundle (Service+Product)\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1249,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1250,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1251,\n          columnNumber: 25\n        }\n      }, \"Currency\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.currency,\n        style: {\n          backgroundColor: '#fff'\n        },\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1252,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1260,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1261,\n          columnNumber: 25\n        }\n      }, \"Conversion Rate\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.conversionRate,\n        onChange: e => this.handleInputChange('conversionRate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1262,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1269,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1270,\n          columnNumber: 25\n        }\n      }, \"Tax Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxAmount,\n        onChange: e => this.handleInputChange('taxAmount', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1271,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1279,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1280,\n          columnNumber: 25\n        }\n      }, \"Bill Value\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.invoiceValue,\n        onChange: e => this.handleInputChange('invoiceValue', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1281,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1290,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1291,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1292,\n          columnNumber: 23\n        }\n      }, \"Discount %\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.discountPercent,\n        onChange: e => {\n          this.handleInputChange('discountPercent', e.target.value);\n          this.recalculateDirectBillingTotals();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1293,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1304,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1305,\n          columnNumber: 21\n        }\n      }, \"Discount Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        value: this.state.formData.discountAmount,\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1306,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1313,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1314,\n          columnNumber: 23\n        }\n      }, \"After Discount - Quote Value\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        value: this.state.formData.afterDiscountValue,\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1315,\n          columnNumber: 23\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1324,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1325,\n          columnNumber: 29\n        }\n      }, \"Line Item\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-sm\",\n        onClick: () => this.setState({\n          productOverlayVisible: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1326,\n          columnNumber: 29\n        }\n      }, \"+ Add Item\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-responsive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1330,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1331,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1332,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1333,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1334,\n          columnNumber: 35\n        }\n      }, \"Item Code \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1335,\n          columnNumber: 35\n        }\n      }, \"Item Desc \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1336,\n          columnNumber: 35\n        }\n      }, \"Cust Part No \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1337,\n          columnNumber: 35\n        }\n      }, \"HSN No \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1338,\n          columnNumber: 35\n        }\n      }, \"On Hand \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1339,\n          columnNumber: 35\n        }\n      }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1340,\n          columnNumber: 35\n        }\n      }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1341,\n          columnNumber: 35\n        }\n      }, \"Tax Id\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1342,\n          columnNumber: 35\n        }\n      }, \"Tax Amt\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1343,\n          columnNumber: 35\n        }\n      }, \"Item Total\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1347,\n          columnNumber: 31\n        }\n      }, formData.lineItems.map((item, idx) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id || idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1349,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1350,\n          columnNumber: 37\n        }\n      }, item.itemCode), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1351,\n          columnNumber: 37\n        }\n      }, item.itemDescription), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1352,\n          columnNumber: 37\n        }\n      }, item.custPartNo), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1353,\n          columnNumber: 37\n        }\n      }, item.hsnCode), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1354,\n          columnNumber: 37\n        }\n      }, item.onHand), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1355,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        value: item.unitPrice,\n        onChange: e => this.handleLineItemChange(idx, 'unitPrice', e.target.value),\n        style: {\n          width: 80\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1356,\n          columnNumber: 39\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1363,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        min: \"1\",\n        value: item.qty,\n        onChange: e => this.handleLineItemChange(idx, 'qty', e.target.value),\n        style: {\n          width: 60\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1364,\n          columnNumber: 39\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1372,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-primary btn-sm\",\n        onClick: () => this.setState({\n          showTaxOverlay: true,\n          currentTaxIdx: idx\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1373,\n          columnNumber: 35\n        }\n      }, \"Select Tax\"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          fontSize: '10px',\n          marginTop: '4px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1380,\n          columnNumber: 35\n        }\n      }, (item.taxGroupNames || []).join(', ') || '-')), this.state.showTaxOverlay && this.renderTaxOverlay(), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1386,\n          columnNumber: 33\n        }\n      }, item.taxAmt || '0.00'), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1387,\n          columnNumber: 37\n        }\n      }, item.itemTotal || '0.00'))), formData.lineItems.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1392,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"9\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1393,\n          columnNumber: 37\n        }\n      }, \"No items\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1400,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1401,\n          columnNumber: 29\n        }\n      }, \"Page 1 of 1\"))), this.state.activeTab === 'commercial' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1408,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1409,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1410,\n          columnNumber: 25\n        }\n      }, \"Bill To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"3\",\n        value: formData.billTo,\n        onChange: e => this.handleInputChange('billTo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1411,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1418,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1419,\n          columnNumber: 25\n        }\n      }, \"Ship To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"3\",\n        value: formData.shipTo,\n        onChange: e => this.handleInputChange('shipTo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1420,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1428,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1429,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1430,\n          columnNumber: 3\n        }\n      }, \"Despatch Mode\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1431,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: formData.despatchMode,\n        readOnly: true,\n        onClick: () => !isFOB && this.showOverlay('despatchMode'),\n        style: {\n          cursor: isFOB ? 'not-allowed' : 'pointer',\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1432,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1440,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        disabled: isFOB,\n        onClick: () => this.showOverlay('despatchMode'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1441,\n          columnNumber: 7\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1453,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1454,\n          columnNumber: 3\n        }\n      }, \"Payment Terms\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1455,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: formData.paymentTerms,\n        readOnly: true,\n        onClick: () => !isFOB && this.showOverlay('paymentTerms'),\n        style: {\n          cursor: isFOB ? 'not-allowed' : 'pointer',\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1456,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1464,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        disabled: isFOB,\n        onClick: () => this.showOverlay('paymentTerms'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1465,\n          columnNumber: 7\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1477,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1478,\n          columnNumber: 25\n        }\n      }, \"Freight Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.freightCharges,\n        onChange: e => this.handleInputChange('freightCharges', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1479,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1488,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1489,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1490,\n          columnNumber: 25\n        }\n      }, \"Tax %\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxPercent,\n        onChange: e => this.handleInputChange('taxPercent', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1491,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1499,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1500,\n          columnNumber: 25\n        }\n      }, \"Freight Tax Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.freighttaxAmount || '',\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1501,\n          columnNumber: 1\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1509,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1510,\n          columnNumber: 25\n        }\n      }, \"Packing Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.packingCharges,\n        onChange: e => this.handleInputChange('packingCharges', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1511,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1520,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1521,\n          columnNumber: 23\n        }\n      }, \"Save All Details\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fixed-card-footer text-right p-3 border-top bg-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1526,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1527,\n          columnNumber: 17\n        }\n      }, \"Save All Details\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: () => this.setState({\n          showForm: false,\n          editingId: null\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1528,\n          columnNumber: 17\n        }\n      }, \"Cancel\"))), overlayType && this.renderOverlay(), productOverlayVisible && this.renderProductOverlay())));\n    };\n  }\n\n  getTaxDetailsFromGroup(groupName) {\n    if (!groupName || groupName === 'nill' || groupName === 'more') return {\n      totalPercent: 0,\n      totalAmount: 0\n    };\n    const group = this.state.taxGroups.find(tg => tg.groupName === groupName);\n    if (!group || !Array.isArray(group.lineItems)) return {\n      totalPercent: 0,\n      totalAmount: 0\n    };\n    let totalPercent = 0;\n    let totalAmount = 0;\n    group.lineItems.forEach(item => {\n      if (item.type === 'Percentage') {\n        totalPercent += parseFloat(item.percentOrAmt || 0);\n      } else if (item.type === 'Amount') {\n        totalAmount += parseFloat(item.percentOrAmt || 0);\n      }\n    });\n    return {\n      totalPercent,\n      totalAmount\n    };\n  }\n\n  componentDidMount() {\n    bsCustomFileInput.init();\n    this.subscribeToInvoices();\n    this.fetchCustomers();\n    this.fetchProducts().then(() => this.filterProductsByCategory());\n    this.fetchDespatchModes();\n    this.fetchPaymentTerms();\n    this.fetchTaxGroups();\n  }\n\n  componentWillUnmount() {\n    if (this._unsubInvoices) this._unsubInvoices();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // Customer details auto-fill (keep this)\n    if (this.state.showForm && this.state.customers.length > 0 && this.state.formData.customer && (prevState.formData.customer !== this.state.formData.customer || !this.state.formData.billTo && !this.state.formData.shipTo)) {\n      const customerObj = this.state.customers.find(c => c.custname === this.state.formData.customer || c.custcode === this.state.formData.customer);\n\n      if (customerObj) {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            billTo: this.formatAddress(customerObj.billTo),\n            shipTo: this.formatAddress(customerObj.shipTo),\n            currency: customerObj.currency || ''\n          }\n        }));\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1548,\n        columnNumber: 5\n      }\n    }, this.state.previewMode ? this.renderinvoicePreview() : this.state.showForm ? this.renderinvoiceForm() : this.renderinvoiceTable());\n  }\n\n}\n\nexport default DirectBilling;","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/sales/salestransactions/invoice/DirectBilling.js"],"names":["React","Component","Form","bsCustomFileInput","db","collection","getDocs","addDoc","doc","updateDoc","serverTimestamp","html2canvas","jsPDF","toWords","withRouter","recalculateTotals","getTaxDetailsFromGroup","numberToWords","num","a","b","Math","floor","DirectBilling","state","activeTab","invoices","customers","products","despatchModes","paymentTerms","showForm","editingId","showTaxOverlay","currentTaxIdx","overlayType","overlaySearch","productOverlayVisible","productOverlaySearch","selectedProductIds","taxGroups","formData","invoiceNo","invoiceDate","Date","toISOString","split","invoiceType","customer","status","choose","qrefNo","impExp","currency","conversionRate","taxAmount","invoiceValue","discountPercent","discountAmount","afterDiscountValue","billTo","shipTo","despatchMode","freightCharges","freighttaxAmount","taxPercent","packingCharges","lineItems","customerInputRef","createRef","formatAddress","addr","address","city","country","filter","Boolean","join","zip","showDirectBillingPDFWithOrg","invoice","Array","isArray","length","alert","orgSnap","org","docs","data","find","c","custshortName","custname","gstStateMap","getPlaceOfSupply","gstin","code","substring","enrichedItems","map","item","hsnCode","uom","ptshortName","taxGroupNames","taxGroupName","s","trim","subtotal","reduce","sum","parseFloat","unitPrice","qty","freightTax","totalTaxAmount","grandTotal","amountWords","taxBreakdown","taxGroupDetails","sno","forEach","base","tgName","group","g","groupName","li","key","component","percentOrAmt","type","taxAmt","push","peramt","toFixed","container","document","createElement","id","style","width","padding","fontFamily","innerHTML","logoUrl","bgName","email","website","mobile","cin","custcode","replace","contactPerson","phone","gstLabel","taxId","itemCode","itemDescription","itemTotal","toLocaleString","body","appendChild","canvas","scale","useCORS","imgData","toDataURL","pdf","height","addImage","removeChild","addPage","taxRows","row","taxHtml","taxContainer","taxCanvas","taxImg","setFontSize","text","blob","output","url","URL","createObjectURL","newWin","window","open","write","close","calculateinvoiceTotals","freight","packing","taxOnFreight","includes","lineTotal","itemTaxTotal","updatedLineItems","baseTotal","groupNames","taxGroup","percent","amount","t","comp","val","total","setState","prev","handleDiscountChange","field","value","quoteValue","handleChooseChange","filterProductsByCategory","filteredProducts","p","category","subscribeToInvoices","_unsubInvoices","onSnapshot","snap","reverse","err","console","error","fetchTaxGroups","fetchinvoice","fetchCustomers","fetchProducts","fetchDespatchModes","fetchPaymentTerms","handleInputChange","newForm","recalculateDirectBillingTotals","handleLineItemChange","idx","updatedItems","taxAmtNum","calcTaxAmt","calcItemTotal","handleSubmit","e","preventDefault","formDataWithoutId","updatedAt","createdAt","getEmptyInvoiceForm","openNewForm","loadinvoiceForEdit","normalizedLineItems","toggleInvoiceForm","showOverlay","hideOverlay","selectOverlayValue","current","renderOverlay","getFilteredRows","list","nameKey","codeKey","toLowerCase","handleSelect","name","title","headers","rows","target","maxHeight","overflowY","h","i","cursor","j","shortName","renderTaxOverlay","selected","Set","position","zIndex","top","left","background","border","boxShadow","tg","has","toggleTaxGroupSelection","checked","lineIdx","isChecked","tax","isNaN","fd","lineBaseTotal","lineTaxTotal","dPercent","renderProductOverlay","filtered","ptdescription","selectedProducts","some","productId","itemType","materialType","onHand","custPartNo","renderinvoiceTable","fontSize","q","statusClass","color","renderinvoiceForm","isFOB","flex","backgroundColor","marginTop","totalPercent","totalAmount","componentDidMount","init","then","componentWillUnmount","componentDidUpdate","prevProps","prevState","customerObj","render","previewMode","renderinvoicePreview"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport bsCustomFileInput from 'bs-custom-file-input';\r\nimport { db } from '../../../../firebase';\r\nimport { collection, getDocs, addDoc, doc, updateDoc ,serverTimestamp} from 'firebase/firestore';\r\nimport html2canvas from 'html2canvas';\r\nimport { jsPDF } from 'jspdf'; \r\nimport { toWords } from 'number-to-words';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { recalculateTotals, getTaxDetailsFromGroup } from '../calculation';\r\n\r\nconst numberToWords = (num) => {\r\n  const a = ['', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine',\r\n    'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen',\r\n    'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];\r\n  const b = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\r\n\r\n  if (num === 0) return 'Zero';\r\n  if (num < 20) return a[num];\r\n  if (num < 100) return b[Math.floor(num / 10)] + ' ' + a[num % 10];\r\n  if (num < 1000)\r\n    return a[Math.floor(num / 100)] + ' Hundred ' + numberToWords(num % 100);\r\n  if (num < 100000)\r\n    return numberToWords(Math.floor(num / 1000)) + ' Thousand ' + numberToWords(num % 1000);\r\n  return 'Amount too large';\r\n};\r\n\r\nclass DirectBilling extends Component {\r\n  state = {\r\n    activeTab: 'co',\r\n    invoices: [],\r\n    customers: [],\r\n    products: [],\r\n    despatchModes: [],\r\n    paymentTerms: [],\r\n\r\n    showForm: false,\r\n    editingId: null,\r\n    \r\n    showTaxOverlay: false,\r\n    currentTaxIdx: null,\r\n    \r\n    overlayType: '',\r\n    overlaySearch: '',\r\n    productOverlayVisible: false,\r\n    productOverlaySearch: '',\r\n    selectedProductIds: [],\r\n    taxGroups: [],\r\n    formData: {\r\n      invoiceNo: '',\r\n      invoiceDate: new Date().toISOString().split('T')[0],\r\n      invoiceType: 'Standard',\r\n      customer: '',\r\n      status: 'Entered', \r\n      choose: 'Service',\r\n      qrefNo: '',\r\n      impExp: 'None',\r\n      currency: '',\r\n      conversionRate: '',\r\n      taxAmount: '',\r\n      invoiceValue: '',\r\n      discountPercent: 0,\r\n      discountAmount: 0,\r\n      afterDiscountValue: 0,\r\n      billTo: '',\r\n      shipTo: '',\r\n      despatchMode: 'By Air',\r\n      paymentTerms: '',\r\n      freightCharges: '',\r\n      freighttaxAmount: '',\r\n      taxPercent: '',\r\n      packingCharges: '',\r\n      lineItems: [],\r\n    }\r\n  };\r\n  customerInputRef = React.createRef();\r\n\r\n  // Helper to format address for Bill To / Ship To\r\n  formatAddress = (addr) => {\r\n    if (!addr) return '';\r\n    if (typeof addr === 'string') return addr;\r\n    return [\r\n      addr.address,\r\n      [addr.city, addr.state, addr.country].filter(Boolean).join(', '),\r\n      addr.zip\r\n    ].filter(Boolean).join('\\n');\r\n  };\r\n\r\n  showDirectBillingPDFWithOrg = async (invoice) => {\r\n  if (!invoice || !Array.isArray(invoice.lineItems) || invoice.lineItems.length === 0) {\r\n    alert(\"Invoice data is incomplete.\");\r\n    return;\r\n  }\r\n\r\n  // 1. Fetch org and customer data\r\n  const orgSnap = await getDocs(collection(db, 'businessGroups'));\r\n  const org = orgSnap.docs[0]?.data() || {};\r\n  const customer = this.state.customers.find(\r\n    c => c.custshortName === invoice.customer || c.custname === invoice.customer\r\n  ) || {};\r\n\r\n  // GST State Map\r\n  const gstStateMap = { \"01\": \"Jammu & Kashmir\",\"02\": \"Himachal Pradesh\",\"03\": \"Punjab\",\"04\": \"Chandigarh\",\"05\": \"Uttarakhand\",\r\n    \"06\": \"Haryana\",\"07\": \"Delhi\",\"08\": \"Rajasthan\",\"09\": \"Uttar Pradesh\",\"10\": \"Bihar\",\"11\": \"Sikkim\",\"12\": \"Arunachal Pradesh\",\r\n    \"13\": \"Nagaland\",\"14\": \"Manipur\",\"15\": \"Mizoram\",\"16\": \"Tripura\",\"17\": \"Meghalaya\",\"18\": \"Assam\",\"19\": \"West Bengal\",\r\n    \"20\": \"Jharkhand\",\"21\": \"Odisha\",\"22\": \"Chhattisgarh\",\"23\": \"Madhya Pradesh\",\"24\": \"Gujarat\",\"25\": \"Daman and Diu\",\r\n    \"26\": \"Dadra and Nagar Haveli\",\"27\": \"Maharashtra\",\"28\": \"Andhra Pradesh (Old)\",\"29\": \"Karnataka\",\"30\": \"Goa\",\"31\": \"Lakshadweep\",\r\n    \"32\": \"Kerala\",\"33\": \"Tamil Nadu\",\"34\": \"Puducherry\",\"35\": \"Andaman and Nicobar Islands\",\"36\": \"Telangana\",\"37\": \"Andhra Pradesh\",\r\n    \"97\": \"Other Territory\" };\r\n  const getPlaceOfSupply = (gstin) => {\r\n    if (!gstin || gstin.length < 2) return '';\r\n    const code = gstin.substring(0, 2);\r\n    const state = gstStateMap[code];\r\n    return state ? `${code} - ${state}` : '';\r\n  };\r\n\r\n  // 2. Enrich line items\r\n  const enrichedItems = invoice.lineItems.map(item => ({\r\n    ...item,\r\n    hsnCode: item.hsnCode || '',\r\n    uom: item.uom || '',\r\n    ptshortName: item.ptshortName || '',\r\n    taxGroupNames: item.taxGroupNames || (item.taxGroupName ? item.taxGroupName.split(',').map(s => s.trim()) : [])\r\n  }));\r\n\r\n  // 3. Totals\r\n  const subtotal = enrichedItems.reduce((sum, item) =>\r\n    sum + ((parseFloat(item.unitPrice) || 0) * (parseFloat(item.qty) || 0)), 0\r\n  );\r\n  const freightCharges = parseFloat(invoice.freightCharges || 0);\r\n  const packingCharges = parseFloat(invoice.packingCharges || 0);\r\n  const freightTax = parseFloat(invoice.freighttaxAmount || 0);\r\n  const totalTaxAmount = parseFloat(invoice.taxAmount || 0);\r\n  const discountAmount = invoice.discountAmount ? parseFloat(invoice.discountAmount) : 0;\r\n  const afterDiscountValue = invoice.afterDiscountValue ? parseFloat(invoice.afterDiscountValue) : null;\r\n  const invoiceValue = parseFloat(invoice.invoiceValue || (subtotal + totalTaxAmount + freightCharges + packingCharges));\r\n  const grandTotal = afterDiscountValue !== null ? afterDiscountValue : invoiceValue;\r\n  const amountWords = `INR ${toWords(Math.floor(grandTotal))} Only`;\r\n\r\n  // 4. Tax breakdown\r\n  let taxBreakdown = {};\r\n  let taxGroupDetails = [];\r\n  let sno = 1;\r\n  enrichedItems.forEach(item => {\r\n    const qty = parseFloat(item.qty || 0);\r\n    const unitPrice = parseFloat(item.unitPrice || 0);\r\n    const base = qty * unitPrice;\r\n    (item.taxGroupNames || []).forEach(tgName => {\r\n      const group = (this.state.taxGroups || []).find(g => g.groupName === tgName);\r\n      if (group) {\r\n        group.lineItems.forEach(li => {\r\n          const key = `${tgName} - ${li.component} (${li.percentOrAmt}${li.type === 'Amount' ? '' : '%'})`;\r\n          let taxAmt = li.type === 'Amount'\r\n            ? parseFloat(li.percentOrAmt || 0)\r\n            : (base * parseFloat(li.percentOrAmt || 0)) / 100;\r\n          taxBreakdown[key] = (taxBreakdown[key] || 0) + taxAmt;\r\n          taxGroupDetails.push({\r\n            sno: sno++,\r\n            group: tgName,\r\n            peramt: `${li.percentOrAmt}${li.type === 'Amount' ? '' : '%'}`,\r\n            taxAmt: taxAmt.toFixed(2)\r\n          });\r\n        });\r\n      }\r\n    });\r\n  });\r\n  if (freightTax > 0) {\r\n    taxBreakdown[\"Freight Tax\"] = freightTax;\r\n    taxGroupDetails.push({ sno: sno++, group: \"Freight Tax\", peramt: \"-\", taxAmt: freightTax.toFixed(2) });\r\n  }\r\n\r\n  // 5. Build HTML for PDF\r\n  const container = document.createElement('div');\r\n  container.id = 'pdf-preview-container';\r\n  container.style.width = '794px';\r\n  container.style.padding = '40px';\r\n  container.style.fontFamily = 'Arial';\r\n\r\n  container.innerHTML = `\r\n    <div style=\"display:flex; justify-content:space-between; align-items:center;\">\r\n      <img src=\"${org.logoUrl || ''}\" style=\"height:50px;\" />\r\n      <div style=\"font-size:18px; font-weight:bold;\">DIRECT BILLING INVOICE</div>\r\n    </div>\r\n    <hr/>\r\n    <div style=\"display:flex; justify-content:space-between; font-size:11px;\">\r\n      <div style=\"line-height:1.5; width:50%;\">\r\n        <b>${org.bgName || ''}</b><br/>\r\n        ${org.address || ''}<br/>\r\n        <b>Email:</b> ${org.email || ''}<br/>\r\n        <b>Website:</b> ${org.website || ''}<br/>\r\n        <b>GSTIN:</b> ${org.gstin || ''}<br/>\r\n        <b>Mobile:</b> ${org.mobile || ''}<br/>\r\n        <b>CIN:</b> ${org.cin || ''}\r\n      </div>\r\n      <table style=\"font-size:11px; text-align:left;\">\r\n        <tr><td><b>Invoice No</b></td><td>: ${invoice.invoiceNo || ''}</td></tr>\r\n        <tr><td><b>Invoice Date</b></td><td>: ${invoice.invoiceDate || ''}</td></tr>\r\n        <tr><td><b>Customer Code</b></td><td>: ${customer.custcode || ''}</td></tr>\r\n        <tr><td><b>Currency</b></td><td>: ${invoice.currency || 'INR'}</td></tr>\r\n        <tr><td><b>Despatch</b></td><td>: ${invoice.despatchMode || ''}</td></tr>\r\n      </table>\r\n    </div>\r\n\r\n    <div style=\"margin-top:15px; display:flex; justify-content:space-between; font-size:11px;\">\r\n      <div style=\"width:48%;\">\r\n        <b style=\"background:#011b56; color:#fff; display:block; padding:4px;\">Bill To</b>\r\n        <div style=\"border:1px solid #ccc; padding:6px;\">\r\n         <b>${invoice.customer || ''}</b><br/>\r\n          ${invoice.billTo?.replace(/\\n/g, '<br/>') || ''}\r\n        </div>\r\n        <div style=\"font-size:10px; margin-top:6px;\">\r\n            <b>GSTIN:</b> ${customer.gstin || ''}<br/>\r\n            <b>Email:</b> ${customer.email || ''}<br/>\r\n            <b>Contact:</b> ${customer.contactPerson || ''}<br/>\r\n            <b>Phone:</b> ${customer.phone || ''}\r\n        </div>\r\n      </div>\r\n      <div style=\"width:48%;\">\r\n        <b style=\"background:#011b56; color:#fff; display:block; padding:4px;\">Ship To</b>\r\n        <div style=\"border:1px solid #ccc; padding:6px;\">\r\n         <b>${invoice.customer || ''}</b><br/>\r\n          ${invoice.shipTo?.replace(/\\n/g, '<br/>') || ''}\r\n        </div>\r\n        <div style=\"font-size:10px; margin-top:6px;\">\r\n          <b>Place of Supply:</b> ${getPlaceOfSupply(customer.gstin || '')}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <table style=\"width:100%; border-collapse:collapse; margin-top:20px; font-size:10px;\">\r\n      <thead>\r\n        <tr style=\"background:#f4f6fa;\">\r\n          <th style=\"border:1px solid #011b56;\">Item Code</th>\r\n          <th style=\"border:1px solid #011b56;\">Description</th>\r\n          <th style=\"border:1px solid #011b56;\">HSN</th>\r\n          <th style=\"border:1px solid #011b56;\">UOM</th>\r\n          <th style=\"border:1px solid #011b56;\">Qty</th>\r\n          <th style=\"border:1px solid #011b56;\">Unit Price</th>\r\n          <th style=\"border:1px solid #011b56;\">GST Group</th>\r\n          <th style=\"border:1px solid #011b56;\">Item Total</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        ${enrichedItems.map(item => {\r\n          const gstLabel = (item.taxGroupNames && item.taxGroupNames.length)\r\n            ? item.taxGroupNames.join(', ')\r\n            : (item.taxGroupName || item.taxId || '-');\r\n          return `\r\n            <tr>\r\n              <td style=\"border:1px solid #011b56;\">${item.itemCode || ''}</td>\r\n              <td style=\"border:1px solid #011b56;\">${item.itemDescription || ''}</td>\r\n              <td style=\"border:1px solid #011b56;\">${item.hsnCode}</td>\r\n              <td style=\"border:1px solid #011b56;\">${item.uom}</td>\r\n              <td style=\"border:1px solid #011b56;\">${item.qty}</td>\r\n              <td style=\"border:1px solid #011b56;\">${item.unitPrice}</td>\r\n              <td style=\"border:1px solid #011b56;\">${gstLabel}</td>\r\n              <td style=\"border:1px solid #011b56;\">${item.itemTotal}</td>\r\n            </tr>`;\r\n        }).join('')}\r\n        <tr>\r\n          <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>Subtotal</b></td>\r\n          <td style=\"border:1px solid #011b56;\"><b>${subtotal.toFixed(2)}</b></td>\r\n        </tr>\r\n        \r\n        <tr>\r\n          <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>Total Tax Amount</b></td>\r\n          <td style=\"border:1px solid #011b56;\"><b>${totalTaxAmount.toFixed(2)}</b></td>\r\n        </tr>\r\n        <tr>\r\n          <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>Invoice Value</b></td>\r\n          <td style=\"border:1px solid #011b56;\"><b>${invoiceValue.toFixed(2)}</b></td>\r\n        </tr>\r\n        <tr>\r\n          <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>After Discount Value</b></td>\r\n          <td style=\"border:1px solid #011b56;\"><b>${invoice.afterDiscountValue || ''}</b></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <div style=\"margin-top:8px; font-size:11px;\"><b>Amount in Words:</b> ${amountWords}</div>\r\n    <div style=\"margin-top:20px; text-align:right; font-size:10px;\">Printed on ${new Date().toLocaleString()}</div>\r\n  `;\r\n\r\n  document.body.appendChild(container);\r\n  const canvas = await html2canvas(container, { scale: 2, useCORS: true });\r\n  const imgData = canvas.toDataURL('image/png');\r\n  const pdf = new jsPDF('p', 'pt', 'a4');\r\n  const width = 595.28;\r\n  const height = canvas.height * width / canvas.width;\r\n  pdf.addImage(imgData, 'PNG', 0, 0, width, height);\r\n  document.body.removeChild(container);\r\n\r\n  // 6. Tax Breakdown page\r\n  if (taxGroupDetails.length > 0) {\r\n    pdf.addPage();\r\n    let taxRows = taxGroupDetails.map(row => `\r\n      <tr>\r\n        <td style=\"border:1px solid #011b56;\">${row.sno}</td>\r\n        <td style=\"border:1px solid #011b56;\">${row.group}</td>\r\n        <td style=\"border:1px solid #011b56;\">${row.peramt}</td>\r\n        <td style=\"border:1px solid #011b56;\">${row.taxAmt}</td>\r\n      </tr>`).join('');\r\n\r\n    let taxHtml = `<div style=\"font-family:Arial; padding:20px; width:100%;\">\r\n    <h3 style=\"margin-bottom:10px; font-size:18px;\">Tax Breakdown</h3>\r\n    <table style=\"width:100%; border-collapse:collapse; margin-top:20px; font-size:14px;\">\r\n      <thead>\r\n        <tr style=\"background:#f4f6fa;\">\r\n          <th style=\"border:1px solid #011b56;\">S.No</th>\r\n          <th style=\"border:1px solid #011b56;\">Tax Group</th>\r\n          <th style=\"border:1px solid #011b56;\">Per/Amt</th>\r\n          <th style=\"border:1px solid #011b56;\">Tax Amt</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        ${taxRows}\r\n        <tr>\r\n          <td colspan=\"3\" style=\"text-align:right; border:1px solid #011b56;\"><b>Total Tax Amount</b></td>\r\n          <td style=\"border:1px solid #011b56;\"><b>${totalTaxAmount.toFixed(2)}</b></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    </div>`;\r\n\r\n    const taxContainer = document.createElement('div');\r\n    taxContainer.innerHTML = taxHtml;\r\n    document.body.appendChild(taxContainer);\r\n\r\n    const taxCanvas = await html2canvas(taxContainer, { scale: 1.5, useCORS: true });\r\n    const taxImg = taxCanvas.toDataURL('image/png');\r\n    pdf.addImage(taxImg, 'PNG', 0, 0, width, taxCanvas.height * width / taxCanvas.width);\r\n\r\n    document.body.removeChild(taxContainer);\r\n  }\r\n\r\n  pdf.setFontSize(11);\r\n  pdf.text(`For ${org.bgName || ''}`, width - 200, 780);\r\n  pdf.text('Authorized Signatory', width - 200, 800);\r\n\r\n  // 7. Show PDF\r\n  const blob = pdf.output('blob');\r\n  const url = URL.createObjectURL(blob);\r\n  const newWin = window.open();\r\n  newWin.document.write(`\r\n    <html><head><title>Direct Billing PDF Preview</title></head>\r\n    <body style=\"margin:0;\">\r\n      <iframe width=\"100%\" height=\"100%\" style=\"border:none;\" src=\"${url}\"></iframe>\r\n    </body></html>\r\n  `);\r\n  newWin.document.close();\r\n};\r\n\r\n  getTaxDetailsFromGroup(groupName) {\r\n  if (!groupName || groupName === 'nill' || groupName === 'more') return { totalPercent: 0, totalAmount: 0 };\r\n\r\n  const group = this.state.taxGroups.find(tg => tg.groupName === groupName);\r\n  if (!group || !Array.isArray(group.lineItems)) return { totalPercent: 0, totalAmount: 0 };\r\n\r\n  let totalPercent = 0;\r\n  let totalAmount = 0;\r\n\r\n  group.lineItems.forEach(item => {\r\n    if (item.type === 'Percentage') {\r\n      totalPercent += parseFloat(item.percentOrAmt || 0);\r\n    } else if (item.type === 'Amount') {\r\n      totalAmount += parseFloat(item.percentOrAmt || 0);\r\n    }\r\n  });\r\n\r\n  return { totalPercent, totalAmount };\r\n}\r\n\r\ncalculateinvoiceTotals = () => {\r\n  const { impExp, freightCharges, taxPercent, packingCharges, lineItems } = this.state.formData;\r\n  let freight = parseFloat(freightCharges) || 0;\r\n  let packing = parseFloat(packingCharges) || 0;\r\n  let taxOnFreight = 0;\r\n  if (['None', 'CIF'].includes(impExp)) {\r\n    taxOnFreight = (freight * (parseFloat(taxPercent) || 0)) / 100;\r\n  }\r\n\r\n  let lineTotal = 0;\r\n  let itemTaxTotal = 0;\r\n\r\n  const updatedLineItems = lineItems.map(item => {\r\n  const qty = parseFloat(item.qty || 1);\r\n  const unitPrice = parseFloat(item.unitPrice || 0);\r\n  const baseTotal = unitPrice * qty;\r\n\r\n  const groupNames = item.taxGroupNames?.length ? item.taxGroupNames : [item.taxGroup || ''];\r\n\r\n  let percent = 0;\r\n  let amount = 0;\r\n  groupNames.forEach(groupName => {\r\n    const group = this.state.taxGroups.find(t => t.groupName === groupName);\r\n    if (group && Array.isArray(group.lineItems)) {\r\n      group.lineItems.forEach(comp => {\r\n        const val = parseFloat(comp.percentOrAmt || 0);\r\n        if (comp.type === 'Percentage') percent += val;\r\n        if (comp.type === 'Amount') amount += val;\r\n      });\r\n    }\r\n  });\r\n\r\n  const taxAmt = (baseTotal * percent) / 100 + amount;\r\n  const total = baseTotal;\r\n\r\n  item.taxAmt = taxAmt.toFixed(2);\r\n  item.total = total.toFixed(2);\r\n\r\n  lineTotal += baseTotal;\r\n  itemTaxTotal += taxAmt;\r\n\r\n  return item;\r\n});\r\n\r\n\r\n\r\n  const totalTaxAmount = itemTaxTotal + taxOnFreight;\r\n  const invoiceValue = lineTotal + freight + packing + itemTaxTotal;\r\n\r\n  this.setState(prev => ({\r\n    formData: {\r\n      ...prev.formData,\r\n      taxAmount: totalTaxAmount.toFixed(2),  // ✅ Top-level field\r\n      invoiceValue: invoiceValue.toFixed(2),\r\n      lineItems: updatedLineItems\r\n    }\r\n  }));\r\n};\r\nhandleDiscountChange = (field, value) => {\r\n  let { formData } = this.state;\r\n  formData[field] = value;\r\n\r\n  const quoteValue = parseFloat(formData.quoteValue || 0);\r\n  const discountPercent = parseFloat(formData.discountPercent || 0);\r\n  const discountAmount = (quoteValue * discountPercent) / 100;\r\n  const afterDiscountValue = quoteValue - discountAmount;\r\n\r\n  formData.discountAmount = discountAmount;\r\n  formData.afterDiscountValue = afterDiscountValue;\r\n\r\n  this.setState({ formData });\r\n};\r\n\r\n\r\nhandleChooseChange = (value) => {\r\n  this.setState(prev => ({\r\n    formData: { ...prev.formData, choose: value }\r\n  }), this.filterProductsByCategory);\r\n};\r\n\r\n// Filtering logic\r\nfilterProductsByCategory = () => {\r\n  const { choose } = this.state.formData;\r\n  let filteredProducts = [];\r\n  if (choose === \"Service\") {\r\n    filteredProducts = this.state.products.filter(p => p.category === \"Service\");\r\n  } else if (choose === \"Product\") {\r\n    filteredProducts = this.state.products.filter(p => p.category === \"Product\");\r\n  } else if (choose === \"Bundle\") {\r\n    filteredProducts = this.state.products; // All products\r\n  }\r\n  this.setState({ filteredProducts });\r\n};\r\n\r\ncomponentDidMount() {\r\n  bsCustomFileInput.init();\r\n  this.subscribeToInvoices();\r\n  this.fetchCustomers();\r\n  this.fetchProducts().then(() => this.filterProductsByCategory());\r\n  this.fetchDespatchModes();\r\n  this.fetchPaymentTerms();\r\n  this.fetchTaxGroups();\r\n}\r\n\r\ncomponentWillUnmount() {\r\n  if (this._unsubInvoices) this._unsubInvoices();\r\n}\r\n\r\nsubscribeToInvoices = () => {\r\n  this._unsubInvoices = onSnapshot(collection(db, 'invoices'), snap => {\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ invoices: data.reverse() });\r\n  }, err => {\r\n    console.error('invoices snapshot error', err);\r\n  });\r\n};\r\ncomponentDidUpdate(prevProps, prevState) {\r\n  // Customer details auto-fill (keep this)\r\n  if (\r\n    this.state.showForm &&\r\n    this.state.customers.length > 0 &&\r\n    this.state.formData.customer &&\r\n    (prevState.formData.customer !== this.state.formData.customer ||\r\n     (!this.state.formData.billTo && !this.state.formData.shipTo))\r\n  ) {\r\n    const customerObj = this.state.customers.find(\r\n      c => c.custname === this.state.formData.customer || c.custcode === this.state.formData.customer\r\n    );\r\n    if (customerObj) {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          billTo: this.formatAddress(customerObj.billTo),\r\n          shipTo: this.formatAddress(customerObj.shipTo),\r\n          currency: customerObj.currency || '',\r\n        }\r\n      }));\r\n    }\r\n  }\r\n}\r\n\r\nfetchTaxGroups = async () => {\r\n  const snap = await getDocs(collection(db, 'taxGroups'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ taxGroups: data });\r\n};\r\n\r\n  fetchinvoice = async () => {\r\n  const snap = await getDocs(collection(db, 'invoices')); // <-- Correct collection name\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ invoices: data.reverse() });\r\n};\r\n\r\n  fetchCustomers = async () => {\r\n    const snap = await getDocs(collection(db, 'customers'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ customers: data });\r\n  };\r\n\r\n fetchProducts = async () => {\r\n  const snap = await getDocs(collection(db, 'products'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ products: data, filteredProducts: data }, this.filterProductsByCategory);\r\n};\r\n  fetchDespatchModes = async () => {\r\n  const snap = await getDocs(collection(db, 'modes'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ despatchModes: data });\r\n};\r\n\r\nfetchPaymentTerms = async () => {\r\n  const snap = await getDocs(collection(db, 'paymentTerms'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ paymentTerms: data });\r\n};\r\n\r\n\r\n  handleInputChange = (field, value) => {\r\n  this.setState(prev => {\r\n    const newForm = { ...prev.formData, [field]: value };\r\n\r\n    // When switching to FOB clear freight-related fields\r\n    if (field === 'impExp' && value === 'FOB') {\r\n      newForm.freightCharges = '';\r\n      newForm.taxPercent = '';\r\n      newForm.freighttaxAmount = '';\r\n      newForm.taxAmount = '';\r\n      newForm.packingCharges = '';\r\n      newForm.invoiceValue = '';\r\n    }\r\n\r\n    return { formData: newForm };\r\n  }, () => {\r\n    // Recalculate whenever fields that affect totals are changed\r\n    if (['freightCharges', 'packingCharges', 'taxPercent', 'impExp', 'discountPercent'].includes(field)) {\r\n      this.recalculateDirectBillingTotals();\r\n    }\r\n  });\r\n};\r\n\r\nhandleLineItemChange = (idx, field, value) => {\r\n  const updatedItems = [...this.state.formData.lineItems];\r\n  updatedItems[idx] = { ...updatedItems[idx], [field]: value };\r\n\r\n  const qty = parseFloat(updatedItems[idx].qty || 0);\r\n  const unitPrice = parseFloat(updatedItems[idx].unitPrice || 0);\r\n\r\n  // compute tax & item total numerically\r\n  const taxAmtNum = this.calcTaxAmt(updatedItems[idx]);\r\n  updatedItems[idx].taxAmt = taxAmtNum; // numeric here; will be formatted in recalc\r\n  updatedItems[idx].itemTotal = this.calcItemTotal(qty, unitPrice, taxAmtNum);\r\n\r\n  this.setState(prev => ({\r\n    formData: {\r\n      ...prev.formData,\r\n      lineItems: updatedItems\r\n    }\r\n  }), this.recalculateDirectBillingTotals);\r\n};\r\n\r\nhandleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  const { editingId, formData, invoices } = this.state;\r\n  if (!formData.customer) return alert(\"Customer is required\");\r\n  if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\r\n\r\n  if (editingId) {\r\n    const { id, ...formDataWithoutId } = formData;\r\n    await updateDoc(doc(db, \"invoices\", editingId), {\r\n      ...formDataWithoutId,\r\n      status: \"Awaiting Approval\",\r\n      updatedAt: serverTimestamp()\r\n    });\r\n  } else {\r\n    formData.invoiceNo = `INV${1000 + invoices.length}`;\r\n    await addDoc(collection(db, \"invoices\"), {\r\n      ...formData,\r\n      status: \"Awaiting Approval\",\r\n      createdAt: serverTimestamp()\r\n    });\r\n  }\r\n\r\n  this.setState({ showForm: false, editingId: null, formData: this.getEmptyInvoiceForm() });\r\n  this.fetchinvoice();\r\n};\r\n// Helper to reset formData\r\ngetEmptyInvoiceForm = () => ({\r\n  invoiceNo: '',\r\n  invoiceDate: new Date().toISOString().split('T')[0],\r\n  invoiceType: 'Standard',\r\n  customer: '',\r\n  status: 'Entered',\r\n  choose: 'Service',\r\n  qrefNo: '',\r\n  impExp: 'None',\r\n  currency: '',\r\n  conversionRate: '',\r\n  taxAmount: '',\r\n  invoiceValue: '',\r\n  discountPercent: 0,\r\n  discountAmount: 0,\r\n  afterDiscountValue: 0,\r\n  billTo: '',\r\n  shipTo: '',\r\n  despatchMode: 'By Air',\r\n  paymentTerms: '',\r\n  freightCharges: '',\r\n  freighttaxAmount: '',\r\n  taxPercent: '',\r\n  packingCharges: '',\r\n  lineItems: [],\r\n});\r\nopenNewForm = () => {\r\n  this.setState({\r\n    showForm: true,\r\n    editingId: null,\r\n    formData: this.getEmptyInvoiceForm() // fresh blank form\r\n  });\r\n};\r\n\r\n  loadinvoiceForEdit = (invoice) => {\r\n  const normalizedLineItems = (invoice.lineItems || []).map(item => {\r\n    const qty = parseFloat(item.qty || 0);\r\n    const unitPrice = parseFloat(item.unitPrice || 0);\r\n    const baseTotal = qty * unitPrice;\r\n    const taxAmt = item.taxAmt ? parseFloat(item.taxAmt) : this.calcTaxAmt(item);\r\n    const itemTotal = item.itemTotal ? parseFloat(item.itemTotal) : (baseTotal + taxAmt);\r\n\r\n    return {\r\n      ...item,\r\n      qty,\r\n      unitPrice,\r\n      taxAmt: taxAmt.toFixed(2),\r\n      itemTotal: itemTotal.toFixed(2),\r\n      taxGroupNames: item.taxGroupNames || (item.taxGroup ? [item.taxGroup] : [])\r\n    };\r\n  });\r\n\r\n  this.setState({\r\n    formData: {\r\n      ...invoice,\r\n      lineItems: normalizedLineItems\r\n    },\r\n    editingId: invoice.id,\r\n    showForm: true,\r\n    activeTab: 'co'\r\n  }, this.recalculateDirectBillingTotals);\r\n};\r\n\r\ntoggleInvoiceForm = () => {\r\n  this.setState({\r\n    showForm: true,\r\n    editingId: null,\r\n    formData: this.getEmptyInvoiceForm(),\r\n  });\r\n};\r\n\r\n  showOverlay = (type) => this.setState({ overlayType: type, overlaySearch: '' });\r\n  hideOverlay = () => this.setState({ overlayType: '', overlaySearch: '' });\r\n\r\n  selectOverlayValue = (value) => {\r\n    if (this.state.overlayType === 'customer') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          customer: value.custname || value.custcode || '', // Use custname or custcode\r\n          billTo: this.formatAddress(value.billTo),\r\n          shipTo: this.formatAddress(value.shipTo),\r\n          currency: value.currency || '',\r\n          // despatchMode: value.despatchMode || '', // No auto-fill for despatch mode\r\n          // paymentTerms: value.paymentTerms || '' // No auto-fill for payment terms\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }), () => {\r\n        if (this.customerInputRef.current) {\r\n          this.customerInputRef.current.value = value.custname || value.custcode || '';\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n renderOverlay = () => {\r\n  const { overlayType, overlaySearch, customers, despatchModes, paymentTerms } = this.state;\r\n\r\n  const getFilteredRows = (list, nameKey = 'name', codeKey = 'shortName') =>\r\n    list.filter(item =>\r\n      (item[nameKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()) ||\r\n      (item[codeKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase())\r\n    );\r\n\r\n  const handleSelect = (item) => {\r\n    if (overlayType === 'customer') {\r\n      this.selectOverlayValue(item);\r\n    } else if (overlayType === 'despatchMode') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          despatchMode: item.name\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }));\r\n    } else if (overlayType === 'paymentTerms') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          paymentTerms: item.name\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  let title = '';\r\n  let headers = [];\r\n  let rows = [];\r\n\r\n  if (overlayType === 'customer') {\r\n    title = 'Select Customer';\r\n    headers = ['Name', 'Code', 'Short Name'];\r\n    rows = getFilteredRows(customers, 'custname', 'custcode');\r\n  } else if (overlayType === 'despatchMode') {\r\n    title = 'Select Despatch Mode';\r\n    headers = ['Name'];\r\n    rows = getFilteredRows(despatchModes);\r\n  } else if (overlayType === 'paymentTerms') {\r\n    title = 'Select Payment Terms';\r\n    headers = ['Name'];\r\n    rows = getFilteredRows(paymentTerms);\r\n  } else {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"custom-overlay\">\r\n      <div className=\"custom-overlay-content\">\r\n        <div className=\"custom-overlay-title\">{title}</div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control mb-2\"\r\n          placeholder={`Search ${overlayType}...`}\r\n          value={overlaySearch}\r\n          onChange={e => this.setState({ overlaySearch: e.target.value })}\r\n        />\r\n        <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n          <table className=\"table table-bordered table-sm\">\r\n            <thead>\r\n              <tr>\r\n                {headers.map((h, i) => <th key={i}>{h}</th>)}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {rows.map((item, i) => (\r\n                <tr key={item.id || i} onClick={() => handleSelect(item)} style={{ cursor: 'pointer' }}>\r\n                  {headers.map((h, j) => (\r\n                    <td key={j}>\r\n                      {overlayType === 'customer'\r\n                        ? h === 'Name' ? item.custname\r\n                          : h === 'Code' ? item.custcode\r\n                          : item.custshortName\r\n                        : h === 'Name' ? item.name\r\n                          : item.shortName}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n              {rows.length === 0 && (\r\n                <tr>\r\n                  <td colSpan={headers.length} className=\"text-center\">No records found</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <button className=\"btn btn-secondary btn-sm mt-2\" onClick={this.hideOverlay}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nrenderTaxOverlay = () => {\r\n  const { taxGroups, currentTaxIdx, formData } = this.state;\r\n  if (currentTaxIdx === null) return null;\r\n  const item = formData.lineItems[currentTaxIdx];\r\n  const selected = new Set(item.taxGroupNames || []);\r\n  return (\r\n    <div style={{\r\n      position: 'fixed', zIndex: 1000, top: '10%', left: '15%',\r\n      background: '#fff', border: '1px solid #ccc', padding: '20px',\r\n      boxShadow: '0 0 10px rgba(0,0,0,0.3)', width: '70%',\r\n      maxHeight: '70vh', overflowY: 'auto'\r\n    }}>\r\n      <h5>Select Tax Groups</h5>\r\n      <table className=\"table table-sm table-bordered\">\r\n        <thead>\r\n          <tr><th></th><th>Group</th><th>Components</th><th>%</th></tr>\r\n        </thead>\r\n        <tbody>\r\n          {taxGroups.map(tg => (\r\n            <tr key={tg.groupName}>\r\n              <td>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selected.has(tg.groupName)}\r\n                  onChange={e =>\r\n                    this.toggleTaxGroupSelection(tg.groupName, currentTaxIdx, e.target.checked)\r\n                  }\r\n                />\r\n              </td>\r\n              <td>{tg.groupName}</td>\r\n              <td>{tg.lineItems.map(li => li.component).join(', ')}</td>\r\n              <td>{tg.lineItems.map(li => li.percentOrAmt).join(', ')}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"text-right mt-3\">\r\n        <button className=\"btn btn-sm btn-success\" onClick={() => this.setState({ showTaxOverlay: false, currentTaxIdx: null })}>\r\n          Done\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ntoggleTaxGroupSelection = (groupName, lineIdx, isChecked) => {\r\n  const formData = { ...this.state.formData };\r\n  const item = formData.lineItems[lineIdx];\r\n  if (!item.taxGroupNames) item.taxGroupNames = [];\r\n  if (isChecked) {\r\n    if (!item.taxGroupNames.includes(groupName)) {\r\n      item.taxGroupNames.push(groupName);\r\n    }\r\n  } else {\r\n    item.taxGroupNames = item.taxGroupNames.filter(g => g !== groupName);\r\n  }\r\n  // recalculate taxAmt and total// after changing taxGroupNames on the item:\r\nitem.taxAmt = this.calcTaxAmt(item); // numeric\r\nitem.itemTotal = this.calcItemTotal(item.qty, item.unitPrice, item.taxAmt); // numeric\r\nthis.setState({ formData }, this.recalculateDirectBillingTotals);\r\n\r\n};\r\n\r\ncalcTaxAmt = (item) => {\r\n  let percent = 0;\r\n  let amount = 0;\r\n  (item.taxGroupNames || []).forEach(groupName => {\r\n    const group = this.state.taxGroups.find(t => t.groupName === groupName);\r\n    if (group && Array.isArray(group.lineItems)) {\r\n      group.lineItems.forEach(comp => {\r\n        const val = parseFloat(comp.percentOrAmt || 0);\r\n        if (comp.type === 'Percentage') percent += val;\r\n        if (comp.type === 'Amount') amount += val;\r\n      });\r\n    }\r\n  });\r\n  const baseTotal = (parseFloat(item.unitPrice || 0) * parseFloat(item.qty || 0));\r\n  const tax = ((baseTotal * percent) / 100 + amount);\r\n  return isNaN(tax) ? 0 : tax;\r\n};\r\n\r\ncalcItemTotal = (qty, unitPrice, taxAmt) => {\r\n  qty = parseFloat(qty) || 0;\r\n  unitPrice = parseFloat(unitPrice) || 0;\r\n  taxAmt = parseFloat(taxAmt) || 0;\r\n  return (qty * unitPrice) + taxAmt;\r\n};\r\n\r\nrecalculateDirectBillingTotals = () => {\r\n  const fd = this.state.formData;\r\n  const lineItems = fd.lineItems || [];\r\n\r\n  let lineBaseTotal = 0;\r\n  let lineTaxTotal = 0;\r\n\r\n  const updatedLineItems = lineItems.map(item => {\r\n    const qty = parseFloat(item.qty || 0);\r\n    const unitPrice = parseFloat(item.unitPrice || 0);\r\n    const baseTotal = qty * unitPrice;\r\n    const taxAmt = this.calcTaxAmt(item); // numeric\r\n    const itemTotal = baseTotal + taxAmt;\r\n\r\n    lineBaseTotal += baseTotal;\r\n    lineTaxTotal += taxAmt;\r\n\r\n    return {\r\n      ...item,\r\n      taxAmt: taxAmt.toFixed(2),\r\n      itemTotal: itemTotal.toFixed(2)\r\n    };\r\n  });\r\n\r\n  const freight = parseFloat(fd.freightCharges) || 0;\r\n  const packing = parseFloat(fd.packingCharges) || 0;\r\n  const taxPercent = parseFloat(fd.taxPercent) || 0;\r\n\r\n  // freight tax only applies for None/CIF\r\n  const freightTax = (['None', 'CIF'].includes(fd.impExp)) ? (freight * taxPercent) / 100 : 0;\r\n\r\n  const totalTaxAmount = lineTaxTotal + freightTax;\r\n  const invoiceValue = lineBaseTotal + freight + packing + totalTaxAmount;\r\n\r\n    let discountAmount = '';\r\n  let afterDiscountValue = '';\r\n\r\n  if (fd.discountPercent !== '' && fd.discountPercent !== null && !isNaN(fd.discountPercent)) {\r\n    const dPercent = parseFloat(fd.discountPercent) || 0;\r\n    discountAmount = ((invoiceValue * dPercent) / 100).toFixed(2);\r\n    afterDiscountValue = (invoiceValue - parseFloat(discountAmount)).toFixed(2);\r\n  }\r\n\r\n  this.setState(prev => ({\r\n    formData: {\r\n      ...prev.formData,\r\n      lineItems: updatedLineItems,\r\n      taxAmount: totalTaxAmount.toFixed(2),\r\n      freighttaxAmount: freightTax.toFixed(2),\r\n      invoiceValue: invoiceValue.toFixed(2),\r\n      discountAmount,\r\n      afterDiscountValue,\r\n    }\r\n  }));\r\n};\r\n\r\n  renderProductOverlay = () => {\r\n    const { filteredProducts, productOverlaySearch, selectedProductIds } = this.state;\r\nconst filtered = filteredProducts.filter(p =>\r\n  (p.ptshortName || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) ||\r\n  (p.ptdescription || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) ||\r\n  (p.itemCode || '').toLowerCase().includes(productOverlaySearch.toLowerCase())\r\n);\r\n    return (\r\n      <div className=\"custom-overlay\">\r\n        <div className=\"custom-overlay-content\">\r\n          <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n            <div className=\"custom-overlay-title\">Select Products</div>\r\n            <button\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => {\r\n                const selectedProducts = filteredProducts.filter(p => this.state.selectedProductIds.includes(p.id));\r\n                this.setState(prev => ({\r\n                  formData: {\r\n                    ...prev.formData,\r\n                    lineItems: [\r\n                      ...prev.formData.lineItems,\r\n                      ...selectedProducts\r\n                        .filter(p => !prev.formData.lineItems.some(item => item.id === p.id))\r\n                        .map(p => ({\r\n                          id: p.id,\r\n                          itemCode: p.productId || '',\r\n                          itemDescription: p.ptdescription || '',\r\n                          itemType: p.itemType || '',\r\n                          materialType: p.materialType || '',\r\n                          onHand: p.onHand || 0,\r\n                          taxGroup: p.taxGroup || '',\r\n                          custPartNo: p.custPartNo || '', // Assuming this is cust part table\r\n                          hsnCode: p.hsnCode || '', // Assuming HSN No.\r\n                          unitPrice: p.unitPrice || 0,\r\n                          qty: 1,\r\n                          taxAmt:0,\r\n                          itemTotal: (p.unitPrice || 0).toFixed(2)\r\n                        }))\r\n                    ]\r\n                  },\r\n                  productOverlayVisible: false,\r\n                  selectedProductIds: []\r\n                }));\r\n              }}\r\n            >Add Selected</button>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Search products...\"\r\n            value={productOverlaySearch}\r\n            onChange={e => this.setState({ productOverlaySearch: e.target.value })}\r\n          />\r\n          <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n            <table className=\"table table-bordered table-sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th></th>\r\n                  <th>Item Code</th>\r\n                  <th>Item Desc</th>\r\n                  <th>Item Type</th>\r\n                  <th>Material Type</th>\r\n                  <th>On Hand</th>\r\n                  <th>Tax Grp</th>\r\n                  <th>Cust Part No</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filtered.map(p => (\r\n                  <tr key={p.id}>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedProductIds.includes(p.id)}\r\n                        onChange={e => {\r\n                          const checked = e.target.checked;\r\n                          this.setState(prev => ({\r\n                            selectedProductIds: checked\r\n                              ? [...prev.selectedProductIds, p.id]\r\n                              : prev.selectedProductIds.filter(id => id !== p.id)\r\n                          }));\r\n                        }}\r\n                      />\r\n                    </td>\r\n                    <td>{p.productId}</td>\r\n                    <td>{p.ptdescription || ''}</td>\r\n                    <td>{p.itemType || ''}</td>\r\n                    <td>{p.materialType || ''}</td>\r\n                    <td>{p.onHand || 0}</td>\r\n                    <td>{p.taxGroup || ''}</td>\r\n                    <td>{p.custPartNo || ''}</td>\r\n                  </tr>\r\n                ))}\r\n                {filtered.length === 0 && (\r\n                  <tr>\r\n                    <td colSpan=\"8\" className=\"text-center\">No products found</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          {/* Add pagination here if needed, for now, it's just a placeholder */}\r\n          <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n            <span>Page 1 of 1</span>\r\n            <button className=\"btn btn-secondary btn-sm\" onClick={() => this.setState({ productOverlayVisible: false, selectedProductIds: [] })}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderinvoiceTable = () => (\r\n    <div className=\"card mt-4 full-height\">\r\n      <div className=\"card-body\">\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n          <h4 className=\"card-title\">Invoices</h4>\r\n          <button className=\"btn btn-primary\" onClick={this.openNewForm}>Create Invoice</button>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-bordered table-hover\">\r\n            <thead className=\"thead-light\">\r\n              <tr style={{ fontSize: '14px' }}>\r\n                <th>Bill No</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Bill Value</th>\r\n                <th>After Discount</th>\r\n                <th>Status</th>\r\n                <th>Print</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.invoices.map((q, i) =>  {\r\n                let statusClass = \"badge-secondary\";\r\n                if (q.status === \"Awaiting Approval\") statusClass = \"badge-warning\";\r\n                else if (q.status === \"Amended\") statusClass = \"badge-info\";\r\n                else if (q.status === \"Approved\") statusClass = \"badge-success\";\r\n                else if (q.status === \"Cancelled\") statusClass = \"badge-danger\";\r\n\r\n                return (\r\n                <tr key={i} style={{ fontSize: '14px' }}>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-link p-0\"\r\n                      onClick={() => this.loadinvoiceForEdit(q)}\r\n                    >\r\n                      {q.invoiceNo}\r\n                    </button>\r\n                  </td>\r\n                  <td>{q.customer}</td>\r\n                  <td>{q.invoiceDate}</td>\r\n                  <td>{q.invoiceValue}</td>\r\n                  <td>{q.afterDiscountValue}</td>\r\n                  <td>\r\n                    <label className={`badge ${statusClass}`}\r\n                      style={{ fontSize: '14px' }}>\r\n                    {q.status}</label></td>\r\n                    <td>\r\n                      <i\r\n                        className=\"mdi mdi-printer menu-icon\"\r\n                        onClick={() => this.showDirectBillingPDFWithOrg(q)}\r\n                        style={{ fontSize: '24px', color: '#2196F3', cursor: 'pointer' }}\r\n                      ></i>\r\n                    </td>\r\n                 \r\n                </tr>\r\n                );\r\n})}\r\n              {this.state.invoices.length === 0 && (\r\n                <tr><td colSpan=\"6\" className=\"text-center\">No Direct Bill found.</td></tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  renderinvoiceForm = () => {\r\n    const { formData, overlayType, productOverlayVisible } = this.state;\r\n    const isFOB = formData.impExp === 'FOB';\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"card full-height\">\r\n          <div style={{ flex: 1, overflowY: 'auto', padding: '24px' }}>\r\n            <h4 className=\"mb-3\">Direct Bill Form</h4>\r\n            <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n              <li className=\"nav-item\">\r\n                <button type=\"button\" className={`nav-link ${this.state.activeTab === 'co' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'co' })}>CO Details</button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <button type=\"button\" className={`nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'commercial' })}>Commercial Terms</button>\r\n              </li>\r\n            </ul>\r\n            <form className=\"form-sample\" onSubmit={this.handleSubmit}>\r\n              <div className=\"tab-content pt-3\">\r\n                {this.state.activeTab === 'co' && (\r\n                  <>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Bill No</label>\r\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={formData.invoiceNo} onChange={(e) => this.handleInputChange('invoiceNo', e.target.value)} />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Bill Date</label>\r\n                        <input type=\"date\" className=\"form-control form-control-sm\" value={formData.invoiceDate} onChange={(e) => this.handleInputChange('invoiceDate', e.target.value)} />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Bill Type</label>\r\n                        <select className=\"form-control form-control-sm\" value={formData.invoiceType} onChange={(e) => this.handleInputChange('invoiceType', e.target.value)}>\r\n                          <option>Standard</option>\r\n                          <option>Manual</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Status</label>\r\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={formData.status}   style={{ backgroundColor: '#fff' }} readOnly />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Customer</label>\r\n                        <div className=\"input-group input-group-sm\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Choose Customer\"\r\n                            ref={this.customerInputRef}\r\n                            value={formData.customer}\r\n                            readOnly\r\n                            onClick={() => this.showOverlay('customer')}\r\n                            style={{ cursor: 'pointer' }}\r\n                          />\r\n                          <div className=\"input-group-append\">\r\n                            <button className=\"btn btn-outline-secondary btn-sm\" type=\"button\" onClick={() => this.showOverlay('customer')}>Select</button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>IMP/EXP</label>\r\n                        <select\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.impExp}\r\n                          onChange={(e) => this.handleInputChange('impExp', e.target.value)}\r\n                        >\r\n                          <option>None</option>\r\n                          <option>COB</option>\r\n                          <option>FOB</option>\r\n                          <option>CIF</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group col-md-2\">\r\n                        <label>Ref No.</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.qrefNo}\r\n                          onChange={(e) => this.handleInputChange('qrefNo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Choose</label>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"form-check mr-4\">\r\n                            <input type=\"radio\" className=\"form-check-input\" name=\"choose\" id=\"chooseService\" value=\"Service\"\r\n                              checked={formData.choose === 'Service'}\r\n                              onChange={e => this.handleChooseChange(e.target.value)}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"chooseService\">Service</label>\r\n                          </div>\r\n                          <div className=\"form-check mr-4\">\r\n                            <input type=\"radio\" className=\"form-check-input\" name=\"choose\" id=\"chooseProduct\" value=\"Product\"\r\n                              checked={formData.choose === 'Product'}\r\n                              onChange={e => this.handleChooseChange(e.target.value)}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"chooseProduct\">Product</label>\r\n                          </div>\r\n                          <div className=\"form-check\">\r\n                            <input type=\"radio\" className=\"form-check-input\" name=\"choose\" id=\"chooseBundle\" value=\"Bundle\"\r\n                              checked={formData.choose === 'Bundle'}\r\n                              onChange={e => this.handleChooseChange(e.target.value)}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"chooseBundle\">Bundle (Service+Product)</label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Currency</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.currency}\r\n                          style={{ backgroundColor: '#fff' }}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Conversion Rate</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.conversionRate}\r\n                          onChange={(e) => this.handleInputChange('conversionRate', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Tax Amount</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxAmount}\r\n                          onChange={(e) => this.handleInputChange('taxAmount', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Bill Value</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.invoiceValue}\r\n                          onChange={(e) => this.handleInputChange('invoiceValue', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                      <label>Discount %</label>\r\n                      <input\r\n                      type=\"number\"\r\n                      className=\"form-control form-control-sm\"\r\n                      value={formData.discountPercent}\r\n                      onChange={e => {\r\n                        this.handleInputChange('discountPercent', e.target.value);\r\n                        this.recalculateDirectBillingTotals();\r\n                      }}\r\n                    />\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group col-md-4\">\r\n                    <label>Discount Amount</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-control\"\r\n                      value={this.state.formData.discountAmount}\r\n                      readOnly\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group col-md-4\">\r\n                      <label>After Discount - Quote Value</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={this.state.formData.afterDiscountValue}\r\n                        readOnly\r\n                      />\r\n                    </div>\r\n                </div>\r\n                   \r\n                          <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                            <h4 className=\"card-title\">Line Item</h4>\r\n                            <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={() => this.setState({ productOverlayVisible: true })}>\r\n                              + Add Item\r\n                            </button>\r\n                          </div>\r\n                          <div className=\"table-responsive\">\r\n                            <table className=\"table table-bordered\">\r\n                              <thead className=\"thead-light\">\r\n                                <tr >\r\n                                  <th>Item Code </th>\r\n                                  <th>Item Desc </th>\r\n                                  <th>Cust Part No </th>\r\n                                  <th>HSN No </th>\r\n                                  <th>On Hand </th> \r\n                                  <th>Unit Price</th>\r\n                                  <th>Quantity</th>\r\n                                  <th>Tax Id</th>\r\n                                  <th>Tax Amt</th>\r\n                                  <th>Item Total</th>\r\n                                  \r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {formData.lineItems.map((item, idx) => (\r\n                                  <tr key={item.id || idx}>\r\n                                    <td>{item.itemCode}</td>\r\n                                    <td>{item.itemDescription}</td>\r\n                                    <td>{item.custPartNo}</td>\r\n                                    <td>{item.hsnCode}</td>\r\n                                    <td>{item.onHand}</td>\r\n                                    <td>\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        value={item.unitPrice}\r\n                                        onChange={e => this.handleLineItemChange(idx, 'unitPrice', e.target.value)}\r\n                                        style={{ width: 80 }}\r\n                                      />\r\n                                    </td>\r\n                                    <td>\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        min=\"1\"\r\n                                        value={item.qty}\r\n                                        onChange={e => this.handleLineItemChange(idx, 'qty', e.target.value)}\r\n                                        style={{ width: 60 }}\r\n                                      />\r\n                                    </td>\r\n                                    <td>\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-outline-primary btn-sm\"\r\n                                    onClick={() => this.setState({ showTaxOverlay: true, currentTaxIdx: idx })}\r\n                                  >\r\n                                    Select Tax\r\n                                  </button>\r\n                                  <div style={{ fontSize: '10px', marginTop: '4px' }}>\r\n                                    {(item.taxGroupNames || []).join(', ') || '-'}\r\n                                  </div>\r\n                                </td>\r\n                                \r\n                                {this.state.showTaxOverlay && this.renderTaxOverlay()}\r\n                                <td>{item.taxAmt || '0.00'}</td>\r\n                                    <td>{item.itemTotal || '0.00'}</td>\r\n                                      \r\n                                  </tr>\r\n                                ))}\r\n                                {formData.lineItems.length === 0 && (\r\n                                  <tr>\r\n                                    <td colSpan=\"9\" className=\"text-center\">No items</td>\r\n                                  </tr>\r\n                                )}\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                          {/* Add pagination for line items here if needed */}\r\n                          <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n                            <span>Page 1 of 1</span>\r\n                          </div>\r\n                      \r\n                  </>\r\n                )}\r\n                {this.state.activeTab === 'commercial' && (\r\n                  <>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-6\">\r\n                        <label>Bill To</label>\r\n                        <textarea\r\n                          className=\"form-control form-control-sm\"\r\n                          rows=\"3\"\r\n                          value={formData.billTo}\r\n                          onChange={(e) => this.handleInputChange('billTo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-6\">\r\n                        <label>Ship To</label>\r\n                        <textarea\r\n                          className=\"form-control form-control-sm\"\r\n                          rows=\"3\"\r\n                          value={formData.shipTo}\r\n                          onChange={(e) => this.handleInputChange('shipTo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-4\">\r\n  <label>Despatch Mode</label>\r\n  <div className=\"input-group input-group-sm\">\r\n    <input\r\n      type=\"text\"\r\n      className=\"form-control\"\r\n      value={formData.despatchMode}\r\n      readOnly\r\n      onClick={() => !isFOB && this.showOverlay('despatchMode')}\r\n      style={{ cursor: isFOB ? 'not-allowed' : 'pointer', backgroundColor: '#fff' }}\r\n    />\r\n    <div className=\"input-group-append\">\r\n      <button\r\n        className=\"btn btn-outline-secondary btn-sm\"\r\n        type=\"button\"\r\n        disabled={isFOB}\r\n        onClick={() => this.showOverlay('despatchMode')}\r\n      >\r\n        Select\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div className=\"form-group col-md-4\">\r\n  <label>Payment Terms</label>\r\n  <div className=\"input-group input-group-sm\">\r\n    <input\r\n      type=\"text\"\r\n      className=\"form-control\"\r\n      value={formData.paymentTerms}\r\n      readOnly\r\n      onClick={() => !isFOB && this.showOverlay('paymentTerms')}\r\n      style={{ cursor: isFOB ? 'not-allowed' : 'pointer', backgroundColor: '#fff' }}\r\n    />\r\n    <div className=\"input-group-append\">\r\n      <button\r\n        className=\"btn btn-outline-secondary btn-sm\"\r\n        type=\"button\"\r\n        disabled={isFOB}\r\n        onClick={() => this.showOverlay('paymentTerms')}\r\n      >\r\n        Select\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Freight Charges</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.freightCharges}\r\n                          onChange={(e) => this.handleInputChange('freightCharges', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Tax %</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxPercent}\r\n                          onChange={(e) => this.handleInputChange('taxPercent', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Freight Tax Amount</label>\r\n<input\r\n  type=\"number\"\r\n  className=\"form-control form-control-sm\"\r\n  value={formData.freighttaxAmount || ''}\r\n  readOnly\r\n/>\r\n\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Packing Charges</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.packingCharges}\r\n                          onChange={(e) => this.handleInputChange('packingCharges', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-right mt-3\">\r\n                      <button type=\"submit\" className=\"btn btn-success\">Save All Details</button>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n              <div className=\"fixed-card-footer text-right p-3 border-top bg-white\">\r\n                <button type=\"submit\" className=\"btn btn-success mr-2\">Save All Details</button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => this.setState({ showForm: false, editingId: null })}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n            {overlayType && this.renderOverlay()}\r\n            {productOverlayVisible && this.renderProductOverlay()}\r\n          </div>\r\n           \r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {this.state.previewMode\r\n        ? this.renderinvoicePreview()\r\n        : this.state.showForm\r\n        ? this.renderinvoiceForm()\r\n        : this.renderinvoiceTable()}\r\n    </div>\r\n  );\r\n}\r\n\r\n}\r\n\r\n\r\nexport default DirectBilling;"]},"metadata":{},"sourceType":"module"}