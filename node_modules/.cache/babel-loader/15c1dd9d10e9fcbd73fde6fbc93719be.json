{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\sales\\\\salestransactions\\\\invoice\\\\BillingApproval.js\";\n// BillingApproval.js\nimport React, { Component } from 'react';\nimport { db } from '../../../../firebase';\nimport { collection, getDocs, updateDoc, doc } from 'firebase/firestore';\nimport { serverTimestamp } from 'firebase/firestore';\n\nclass BillingApproval extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cobilling: [],\n      loading: false\n    };\n\n    this.fetchAwaiting = async () => {\n      const snap = await getDocs(collection(db, 'cobilling'));\n      const data = snap.docs.map(d => ({\n        id: d.id,\n        ...d.data()\n      })); // filter by status awaiting (or Entered if you want)\n\n      const awaiting = data.filter(c => c.status === 'Awaiting Approval' || c.status === 'Entered');\n      this.setState({\n        cobilling: awaiting\n      });\n    };\n\n    this.approve = async cob => {\n      if (!window.confirm(`Approve ${cob.cobillingNo}?`)) return;\n      this.setState({\n        loading: true\n      });\n\n      try {\n        // 1) update COB doc to Approved and take snapshot of approved lines\n        const cobRef = doc(db, 'cobilling', cob.id);\n        await updateDoc(cobRef, {\n          status: 'Approved',\n          approvedAt: serverTimestamp(),\n          approvedLineItems: cob.lineItems || [],\n          updatedAt: serverTimestamp()\n        }); // 2) update corresponding order recvQty\n\n        if (cob.customerOrderId) {\n          const ordersSnap = await getDocs(collection(db, 'orders'));\n          const orderDoc = ordersSnap.docs.find(d => (d.data().orderNo || '') === (cob.customerOrderId || ''));\n\n          if (orderDoc) {\n            const orderId = orderDoc.id;\n            const orderData = orderDoc.data();\n            const updatedLineItems = (orderData.lineItems || []).map(oli => {\n              const match = (cob.lineItems || []).find(ci => ci.itemCode === oli.itemCode);\n\n              if (match) {\n                const incomingQty = parseFloat(match.qty || 0) || 0;\n                const prevRecv = parseFloat(oli.recvQty || 0) || 0;\n                oli.recvQty = Math.max(0, prevRecv + incomingQty); // optionally compute remaining\n\n                oli.remainingQty = Math.max(0, parseFloat(oli.qty || oli.orderQty || 0) - oli.recvQty);\n              }\n\n              return oli;\n            }); // determine new order status\n\n            let anyRecv = updatedLineItems.some(li => parseFloat(li.recvQty || 0) > 0);\n            let allDone = updatedLineItems.every(li => parseFloat(li.qty || li.orderQty || 0) <= parseFloat(li.recvQty || 0));\n            const newOrderStatus = allDone ? 'Completed' : anyRecv ? 'Partial' : orderData.status || 'Entered';\n            await updateDoc(doc(db, 'orders', orderId), {\n              lineItems: updatedLineItems,\n              status: newOrderStatus,\n              updatedAt: serverTimestamp()\n            });\n          }\n        }\n\n        alert('Approved.');\n        this.fetchAwaiting();\n      } catch (err) {\n        console.error(err);\n        alert('Error approving: ' + err.message);\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this.reject = async cob => {\n      if (!window.confirm(`Reject ${cob.cobillingNo}?`)) return;\n\n      try {\n        await updateDoc(doc(db, 'cobilling', cob.id), {\n          status: 'Rejected',\n          rejectedAt: serverTimestamp(),\n          updatedAt: serverTimestamp()\n        });\n        alert('Rejected.');\n        this.fetchAwaiting();\n      } catch (err) {\n        console.error(err);\n        alert(err.message);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAwaiting();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, \"Billing Approval\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, \"Bill No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 35\n      }\n    }, \"Order\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 49\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 66\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 79\n      }\n    }, \"Value\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 93\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 108\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, this.state.cobilling.map(c => /*#__PURE__*/React.createElement(\"tr\", {\n      key: c.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }\n    }, c.cobillingNo), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }\n    }, c.customerOrderId), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }\n    }, c.customer), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }, c.cobillingDate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }, c.billValue), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    }, c.status), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success btn-sm mr-1\",\n      disabled: this.state.loading,\n      onClick: () => this.approve(c),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, \"Approve\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-danger btn-sm\",\n      onClick: () => this.reject(c),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, \"Reject\")))), this.state.cobilling.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"7\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 57\n      }\n    }, \"No bills awaiting approval\"))))));\n  }\n\n}\n\nexport default BillingApproval;","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/sales/salestransactions/invoice/BillingApproval.js"],"names":["React","Component","db","collection","getDocs","updateDoc","doc","serverTimestamp","BillingApproval","state","cobilling","loading","fetchAwaiting","snap","data","docs","map","d","id","awaiting","filter","c","status","setState","approve","cob","window","confirm","cobillingNo","cobRef","approvedAt","approvedLineItems","lineItems","updatedAt","customerOrderId","ordersSnap","orderDoc","find","orderNo","orderId","orderData","updatedLineItems","oli","match","ci","itemCode","incomingQty","parseFloat","qty","prevRecv","recvQty","Math","max","remainingQty","orderQty","anyRecv","some","li","allDone","every","newOrderStatus","alert","err","console","error","message","reject","rejectedAt","componentDidMount","render","customer","cobillingDate","billValue","length"],"mappings":"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","sourcesContent":["// BillingApproval.js\r\nimport React, { Component } from 'react';\r\nimport { db } from '../../../../firebase';\r\nimport { collection, getDocs, updateDoc, doc } from 'firebase/firestore';\r\nimport { serverTimestamp } from 'firebase/firestore';\r\n\r\nclass BillingApproval extends Component {\r\n  state = { cobilling: [], loading: false };\r\n\r\n  componentDidMount() { this.fetchAwaiting(); }\r\n\r\n  fetchAwaiting = async () => {\r\n    const snap = await getDocs(collection(db, 'cobilling'));\r\n    const data = snap.docs.map(d => ({ id: d.id, ...d.data() }));\r\n    // filter by status awaiting (or Entered if you want)\r\n    const awaiting = data.filter(c => c.status === 'Awaiting Approval' || c.status === 'Entered');\r\n    this.setState({ cobilling: awaiting });\r\n  };\r\n\r\n  approve = async (cob) => {\r\n    if (!window.confirm(`Approve ${cob.cobillingNo}?`)) return;\r\n    this.setState({ loading: true });\r\n    try {\r\n      // 1) update COB doc to Approved and take snapshot of approved lines\r\n      const cobRef = doc(db, 'cobilling', cob.id);\r\n      await updateDoc(cobRef, {\r\n        status: 'Approved',\r\n        approvedAt: serverTimestamp(),\r\n        approvedLineItems: cob.lineItems || [],\r\n        updatedAt: serverTimestamp()\r\n      });\r\n\r\n      // 2) update corresponding order recvQty\r\n      if (cob.customerOrderId) {\r\n        const ordersSnap = await getDocs(collection(db, 'orders'));\r\n        const orderDoc = ordersSnap.docs.find(d => (d.data().orderNo || '') === (cob.customerOrderId || ''));\r\n        if (orderDoc) {\r\n          const orderId = orderDoc.id;\r\n          const orderData = orderDoc.data();\r\n          const updatedLineItems = (orderData.lineItems || []).map(oli => {\r\n            const match = (cob.lineItems || []).find(ci => ci.itemCode === oli.itemCode);\r\n            if (match) {\r\n              const incomingQty = parseFloat(match.qty || 0) || 0;\r\n              const prevRecv = parseFloat(oli.recvQty || 0) || 0;\r\n              oli.recvQty = Math.max(0, (prevRecv + incomingQty));\r\n              // optionally compute remaining\r\n              oli.remainingQty = Math.max(0, (parseFloat(oli.qty || oli.orderQty || 0) - oli.recvQty));\r\n            }\r\n            return oli;\r\n          });\r\n\r\n          // determine new order status\r\n          let anyRecv = updatedLineItems.some(li => (parseFloat(li.recvQty || 0) > 0));\r\n          let allDone = updatedLineItems.every(li => (parseFloat(li.qty || li.orderQty || 0) <= (parseFloat(li.recvQty || 0))));\r\n          const newOrderStatus = allDone ? 'Completed' : (anyRecv ? 'Partial' : orderData.status || 'Entered');\r\n\r\n          await updateDoc(doc(db, 'orders', orderId), {\r\n            lineItems: updatedLineItems,\r\n            status: newOrderStatus,\r\n            updatedAt: serverTimestamp()\r\n          });\r\n        }\r\n      }\r\n\r\n      alert('Approved.');\r\n      this.fetchAwaiting();\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Error approving: ' + err.message);\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  reject = async (cob) => {\r\n    if (!window.confirm(`Reject ${cob.cobillingNo}?`)) return;\r\n    try {\r\n      await updateDoc(doc(db, 'cobilling', cob.id), {\r\n        status: 'Rejected',\r\n        rejectedAt: serverTimestamp(),\r\n        updatedAt: serverTimestamp()\r\n      });\r\n      alert('Rejected.');\r\n      this.fetchAwaiting();\r\n    } catch (err) { console.error(err); alert(err.message); }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <h4>Billing Approval</h4>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-bordered table-sm\">\r\n            <thead>\r\n              <tr><th>Bill No</th><th>Order</th><th>Customer</th><th>Date</th><th>Value</th><th>Status</th><th>Action</th></tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.cobilling.map(c => (\r\n                <tr key={c.id}>\r\n                  <td>{c.cobillingNo}</td>\r\n                  <td>{c.customerOrderId}</td>\r\n                  <td>{c.customer}</td>\r\n                  <td>{c.cobillingDate}</td>\r\n                  <td>{c.billValue}</td>\r\n                  <td>{c.status}</td>\r\n                  <td>\r\n                    <button className=\"btn btn-success btn-sm mr-1\" disabled={this.state.loading} onClick={() => this.approve(c)}>Approve</button>\r\n                    <button className=\"btn btn-danger btn-sm\" onClick={() => this.reject(c)}>Reject</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n              {this.state.cobilling.length === 0 && <tr><td colSpan=\"7\" className=\"text-center\">No bills awaiting approval</td></tr>}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BillingApproval;\r\n"]},"metadata":{},"sourceType":"module"}