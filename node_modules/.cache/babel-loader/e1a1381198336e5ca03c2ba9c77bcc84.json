{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\inventory\\\\invmaster\\\\PaymentTerms.js\";\nimport React, { Component } from 'react';\nimport { db } from '../../../firebase';\nimport { collection, addDoc, getDocs, deleteDoc, doc, setDoc } from 'firebase/firestore';\nimport '../../../assets/styles/components/_custom-table.scss';\nconst TYPE_OPTIONS = ['Immediate', 'Days', 'Month'];\n\nclass PaymentTerms extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      terms: [],\n      showForm: false,\n      editingId: null,\n      formData: {\n        name: '',\n        type: 'Immediate',\n        description: '',\n        days: '',\n        monthDay: ''\n      }\n    };\n\n    this.fetchTerms = async () => {\n      const snap = await getDocs(collection(db, 'paymentTerms'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        terms: data\n      });\n    };\n\n    this.toggleForm = (edit = null) => {\n      if (edit) {\n        this.setState({\n          showForm: true,\n          editingId: edit.id,\n          formData: { ...edit\n          }\n        });\n      } else {\n        this.setState({\n          showForm: true,\n          editingId: null,\n          formData: {\n            name: '',\n            type: 'Immediate',\n            description: ''\n          }\n        });\n      }\n    };\n\n    this.handleChange = (field, value) => {\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          [field]: value\n        }\n      }));\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        editingId,\n        formData\n      } = this.state;\n      if (!formData.name) return alert('Enter name');\n\n      if (editingId) {\n        await setDoc(doc(db, 'paymentTerms', editingId), formData);\n      } else {\n        await addDoc(collection(db, 'paymentTerms'), formData);\n      }\n\n      this.setState({\n        showForm: false,\n        editingId: null\n      });\n      this.fetchTerms();\n    };\n\n    this.handleDelete = async id => {\n      await deleteDoc(doc(db, 'paymentTerms', id));\n      this.fetchTerms();\n    };\n\n    this.renderForm = () => {\n      const {\n        formData\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card full-height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: 'auto',\n          padding: '24px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, \"Payment Terms\"), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"form-sample\",\n        onSubmit: this.handleSubmit,\n        autoComplete: \"off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control form-control-sm\",\n        value: formData.name,\n        onChange: e => this.handleChange('name', e.target.value),\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.type,\n        onChange: e => this.handleChange('type', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      }, TYPE_OPTIONS.map(opt => /*#__PURE__*/React.createElement(\"option\", {\n        key: opt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 42\n        }\n      }, opt)))), formData.type === 'Days' && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, \"No. of Days\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.days,\n        onChange: e => this.handleChange('days', e.target.value),\n        placeholder: \"e.g., 30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      })), formData.type === 'Month' && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }, \"Day of Month\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        min: \"1\",\n        max: \"31\",\n        className: \"form-control form-control-sm\",\n        value: formData.monthDay,\n        onChange: e => this.handleChange('monthDay', e.target.value),\n        placeholder: \"e.g., 5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control form-control-sm\",\n        value: formData.description,\n        onChange: e => this.handleChange('description', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fixed-card-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success btn-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary btn-sm\",\n        onClick: () => this.setState({\n          showForm: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, \"Cancel\")))));\n    };\n\n    this.renderTable = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-4 full-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, \"Payment Terms\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-sm\",\n      onClick: () => this.toggleForm(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, \"+ Add Payment Term\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, this.state.terms.map((t, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: t.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-link p-0\",\n      onClick: () => this.toggleForm(t),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, t.name)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, t.type), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, t.description))), this.state.terms.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"4\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 51\n      }\n    }, \"No records found\")))))));\n  }\n\n  componentDidMount() {\n    this.fetchTerms();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 12\n      }\n    }, this.state.showForm ? this.renderForm() : this.renderTable());\n  }\n\n}\n\nexport default PaymentTerms;","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/inventory/invmaster/PaymentTerms.js"],"names":["React","Component","db","collection","addDoc","getDocs","deleteDoc","doc","setDoc","TYPE_OPTIONS","PaymentTerms","state","terms","showForm","editingId","formData","name","type","description","days","monthDay","fetchTerms","snap","data","docs","map","id","setState","toggleForm","edit","handleChange","field","value","prev","handleSubmit","e","preventDefault","alert","handleDelete","renderForm","flex","overflowY","padding","target","opt","renderTable","t","i","length","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,EAAT,QAAmB,mBAAnB;AAAuC,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,OAA7B,EAAsCC,SAAtC,EAAiDC,GAAjD,EAAsDC,MAAtD,QAAoE,oBAApE;AACvC,OAAO,sDAAP;AAEA,MAAMC,YAAY,GAAG,CAAC,WAAD,EAAc,MAAd,EAAsB,OAAtB,CAArB;;AAEA,MAAMC,YAAN,SAA2BT,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCU,KADmC,GAC3B;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,QAAQ,EAAE,KAFJ;AAGNC,MAAAA,SAAS,EAAE,IAHL;AAINC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,IAAI,EAAE,WAAlB;AAA+BC,QAAAA,WAAW,EAAE,EAA5C;AAA+CC,QAAAA,IAAI,EAAC,EAApD;AAAuDC,QAAAA,QAAQ,EAAC;AAAhE;AAJJ,KAD2B;;AAAA,SAYnCC,UAZmC,GAYtB,YAAY;AACvB,YAAMC,IAAI,GAAG,MAAMjB,OAAO,CAACF,UAAU,CAACD,EAAD,EAAK,cAAL,CAAX,CAA1B;AACA,YAAMqB,IAAI,GAAGD,IAAI,CAACE,IAAL,CAAUC,GAAV,CAAclB,GAAG,KAAK;AAAEmB,QAAAA,EAAE,EAAEnB,GAAG,CAACmB,EAAV;AAAc,WAAGnB,GAAG,CAACgB,IAAJ;AAAjB,OAAL,CAAjB,CAAb;AACA,WAAKI,QAAL,CAAc;AAAEf,QAAAA,KAAK,EAAEW;AAAT,OAAd;AACD,KAhBkC;;AAAA,SAkBnCK,UAlBmC,GAkBtB,CAACC,IAAI,GAAG,IAAR,KAAiB;AAC5B,UAAIA,IAAJ,EAAU;AACR,aAAKF,QAAL,CAAc;AAAEd,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,SAAS,EAAEe,IAAI,CAACH,EAAlC;AAAsCX,UAAAA,QAAQ,EAAE,EAAE,GAAGc;AAAL;AAAhD,SAAd;AACD,OAFD,MAEO;AACL,aAAKF,QAAL,CAAc;AAAEd,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,SAAS,EAAE,IAA7B;AAAmCC,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,IAAI,EAAE,EAAR;AAAYC,YAAAA,IAAI,EAAE,WAAlB;AAA+BC,YAAAA,WAAW,EAAE;AAA5C;AAA7C,SAAd;AACD;AACF,KAxBkC;;AAAA,SA0BnCY,YA1BmC,GA0BpB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC/B,WAAKL,QAAL,CAAcM,IAAI,KAAK;AACrBlB,QAAAA,QAAQ,EAAE,EAAE,GAAGkB,IAAI,CAAClB,QAAV;AAAoB,WAACgB,KAAD,GAASC;AAA7B;AADW,OAAL,CAAlB;AAGD,KA9BkC;;AAAA,SAgCnCE,YAhCmC,GAgCpB,MAAOC,CAAP,IAAa;AAC1BA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAM;AAAEtB,QAAAA,SAAF;AAAaC,QAAAA;AAAb,UAA0B,KAAKJ,KAArC;AACA,UAAI,CAACI,QAAQ,CAACC,IAAd,EAAoB,OAAOqB,KAAK,CAAC,YAAD,CAAZ;;AACpB,UAAIvB,SAAJ,EAAe;AACb,cAAMN,MAAM,CAACD,GAAG,CAACL,EAAD,EAAK,cAAL,EAAqBY,SAArB,CAAJ,EAAqCC,QAArC,CAAZ;AACD,OAFD,MAEO;AACL,cAAMX,MAAM,CAACD,UAAU,CAACD,EAAD,EAAK,cAAL,CAAX,EAAiCa,QAAjC,CAAZ;AACD;;AACD,WAAKY,QAAL,CAAc;AAAEd,QAAAA,QAAQ,EAAE,KAAZ;AAAmBC,QAAAA,SAAS,EAAE;AAA9B,OAAd;AACA,WAAKO,UAAL;AACD,KA3CkC;;AAAA,SA6CnCiB,YA7CmC,GA6CpB,MAAOZ,EAAP,IAAc;AAC3B,YAAMpB,SAAS,CAACC,GAAG,CAACL,EAAD,EAAK,cAAL,EAAqBwB,EAArB,CAAJ,CAAf;AACA,WAAKL,UAAL;AACD,KAhDkC;;AAAA,SAkDrCkB,UAlDqC,GAkDxB,MAAM;AACjB,YAAM;AAAExB,QAAAA;AAAF,UAAe,KAAKJ,KAA1B;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,KAAK,EAAE;AAAE6B,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,SAAS,EAAE,MAAtB;AAA8BC,UAAAA,OAAO,EAAE;AAAvC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,QAAQ,EAAE,KAAKR,YAA7C;AAA2D,QAAA,YAAY,EAAC,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,QAAA,SAAS,EAAC,8BADZ;AAEE,QAAA,KAAK,EAAEnB,QAAQ,CAACC,IAFlB;AAGE,QAAA,QAAQ,EAAEmB,CAAC,IAAI,KAAKL,YAAL,CAAkB,MAAlB,EAA0BK,CAAC,CAACQ,MAAF,CAASX,KAAnC,CAHjB;AAIE,QAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,eAUE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,QAAA,SAAS,EAAC,8BADZ;AAEE,QAAA,KAAK,EAAEjB,QAAQ,CAACE,IAFlB;AAGE,QAAA,QAAQ,EAAEkB,CAAC,IAAI,KAAKL,YAAL,CAAkB,MAAlB,EAA0BK,CAAC,CAACQ,MAAF,CAASX,KAAnC,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGvB,YAAY,CAACgB,GAAb,CAAiBmB,GAAG,iBAAI;AAAQ,QAAA,GAAG,EAAEA,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBA,GAAnB,CAAxB,CALH,CAFF,CAVF,EAsBG7B,QAAQ,CAACE,IAAT,KAAkB,MAAlB,iBACC;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,8BAFZ;AAGE,QAAA,KAAK,EAAEF,QAAQ,CAACI,IAHlB;AAIE,QAAA,QAAQ,EAAEgB,CAAC,IAAI,KAAKL,YAAL,CAAkB,MAAlB,EAA0BK,CAAC,CAACQ,MAAF,CAASX,KAAnC,CAJjB;AAKE,QAAA,WAAW,EAAC,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAvBJ,EAmCGjB,QAAQ,CAACE,IAAT,KAAkB,OAAlB,iBACC;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,GAAG,EAAC,GAFN;AAGE,QAAA,GAAG,EAAC,IAHN;AAIE,QAAA,SAAS,EAAC,8BAJZ;AAKE,QAAA,KAAK,EAAEF,QAAQ,CAACK,QALlB;AAME,QAAA,QAAQ,EAAEe,CAAC,IAAI,KAAKL,YAAL,CAAkB,UAAlB,EAA8BK,CAAC,CAACQ,MAAF,CAASX,KAAvC,CANjB;AAOE,QAAA,WAAW,EAAC,SAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CApCJ,eAkDE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AACE,QAAA,SAAS,EAAC,8BADZ;AAEE,QAAA,KAAK,EAAEjB,QAAQ,CAACG,WAFlB;AAGE,QAAA,QAAQ,EAAEiB,CAAC,IAAI,KAAKL,YAAL,CAAkB,aAAlB,EAAiCK,CAAC,CAACQ,MAAF,CAASX,KAA1C,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAlDF,CADF,eA6DE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,wBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,0BAFZ;AAGE,QAAA,OAAO,EAAE,MAAM,KAAKL,QAAL,CAAc;AAAEd,UAAAA,QAAQ,EAAE;AAAZ,SAAd,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CA7DF,CAFF,CADF,CADF;AA+ED,KAnIoC;;AAAA,SAsInCgC,WAtImC,GAsIrB,mBACZ;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,wDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAQ,MAAA,SAAS,EAAC,wBAAlB;AAA2C,MAAA,OAAO,EAAE,MAAM,KAAKjB,UAAL,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,CADF,eAKE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAO,MAAA,SAAS,EAAC,+BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,CADF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKjB,KAAL,CAAWC,KAAX,CAAiBa,GAAjB,CAAqB,CAACqB,CAAD,EAAIC,CAAJ,kBACpB;AAAI,MAAA,GAAG,EAAED,CAAC,CAACpB,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAqC,MAAA,OAAO,EAAE,MAAM,KAAKE,UAAL,CAAgBkB,CAAhB,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyEA,CAAC,CAAC9B,IAA3E,CAAJ,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK8B,CAAC,CAAC7B,IAAP,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK6B,CAAC,CAAC5B,WAAP,CAHF,CADD,CADH,EAQG,KAAKP,KAAL,CAAWC,KAAX,CAAiBoC,MAAjB,KAA4B,CAA5B,iBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAI,MAAA,OAAO,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAJ,CARpC,CARF,CADA,CALF,CADF,CAvIiC;AAAA;;AAQnCC,EAAAA,iBAAiB,GAAG;AAClB,SAAK5B,UAAL;AACD;;AA4JD6B,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,KAAKvC,KAAL,CAAWE,QAAX,GAAsB,KAAK0B,UAAL,EAAtB,GAA0C,KAAKM,WAAL,EAA5E,CAAP;AACD;;AAxKkC;;AA2KrC,eAAenC,YAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { db } from '../../../firebase';import { collection, addDoc, getDocs, deleteDoc, doc, setDoc } from 'firebase/firestore';\r\nimport '../../../assets/styles/components/_custom-table.scss';\r\n\r\nconst TYPE_OPTIONS = ['Immediate', 'Days', 'Month'];\r\n\r\nclass PaymentTerms extends Component {\r\n  state = {\r\n    terms: [],\r\n    showForm: false,\r\n    editingId: null,\r\n    formData: { name: '', type: 'Immediate', description: '',days:'',monthDay:'' }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchTerms();\r\n  }\r\n\r\n  fetchTerms = async () => {\r\n    const snap = await getDocs(collection(db, 'paymentTerms'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ terms: data });\r\n  };\r\n\r\n  toggleForm = (edit = null) => {\r\n    if (edit) {\r\n      this.setState({ showForm: true, editingId: edit.id, formData: { ...edit } });\r\n    } else {\r\n      this.setState({ showForm: true, editingId: null, formData: { name: '', type: 'Immediate', description: '' } });\r\n    }\r\n  };\r\n\r\n  handleChange = (field, value) => {\r\n    this.setState(prev => ({\r\n      formData: { ...prev.formData, [field]: value }\r\n    }));\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { editingId, formData } = this.state;\r\n    if (!formData.name) return alert('Enter name');\r\n    if (editingId) {\r\n      await setDoc(doc(db, 'paymentTerms', editingId), formData);\r\n    } else {\r\n      await addDoc(collection(db, 'paymentTerms'), formData);\r\n    }\r\n    this.setState({ showForm: false, editingId: null });\r\n    this.fetchTerms();\r\n  };\r\n\r\n  handleDelete = async (id) => {\r\n    await deleteDoc(doc(db, 'paymentTerms', id));\r\n    this.fetchTerms();\r\n  };\r\n\r\nrenderForm = () => {\r\n  const { formData } = this.state;\r\n  return (\r\n    <div className=\"card full-height\">\r\n      <div style={{ flex: 1, overflowY: 'auto', padding: '24px' }}>\r\n        <h4 className=\"mb-3\">Payment Terms</h4>\r\n        <form className=\"form-sample\" onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-3\">\r\n              <label>Name</label>\r\n              <input\r\n                className=\"form-control form-control-sm\"\r\n                value={formData.name}\r\n                onChange={e => this.handleChange('name', e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group col-md-3\">\r\n              <label>Type</label>\r\n              <select\r\n                className=\"form-control form-control-sm\"\r\n                value={formData.type}\r\n                onChange={e => this.handleChange('type', e.target.value)}\r\n              >\r\n                {TYPE_OPTIONS.map(opt => <option key={opt}>{opt}</option>)}\r\n              </select>\r\n            </div>\r\n\r\n            {/* Conditionally render fields */}\r\n            {formData.type === 'Days' && (\r\n              <div className=\"form-group col-md-3\">\r\n                <label>No. of Days</label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control form-control-sm\"\r\n                  value={formData.days}\r\n                  onChange={e => this.handleChange('days', e.target.value)}\r\n                  placeholder=\"e.g., 30\"\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {formData.type === 'Month' && (\r\n              <div className=\"form-group col-md-3\">\r\n                <label>Day of Month</label>\r\n                <input\r\n                  type=\"number\"\r\n                  min=\"1\"\r\n                  max=\"31\"\r\n                  className=\"form-control form-control-sm\"\r\n                  value={formData.monthDay}\r\n                  onChange={e => this.handleChange('monthDay', e.target.value)}\r\n                  placeholder=\"e.g., 5\"\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"form-group col-md-3\">\r\n              <label>Description</label>\r\n              <input\r\n                className=\"form-control form-control-sm\"\r\n                value={formData.description}\r\n                onChange={e => this.handleChange('description', e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"fixed-card-footer\">\r\n            <button type=\"submit\" className=\"btn btn-success btn-sm\">Save</button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary btn-sm\"\r\n              onClick={() => this.setState({ showForm: false })}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n  renderTable = () => (\r\n    <div className=\"card mt-4 full-height\">\r\n      <div className=\"card-body\">\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n          <h4 className=\"card-title\">Payment Terms</h4>\r\n          <button className=\"btn btn-primary btn-sm\" onClick={() => this.toggleForm()}>+ Add Payment Term</button>\r\n        </div>\r\n        <div className=\"custom-table-responsive\">\r\n        <table className=\"table table-bordered table-sm\">\r\n          <thead className='thead-light'>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Type</th>\r\n              <th>Description</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.terms.map((t, i) => (\r\n              <tr key={t.id}>\r\n                <td><button className='btn btn-link p-0' onClick={() => this.toggleForm(t)}>{t.name}</button></td>\r\n                <td>{t.type}</td>\r\n                <td>{t.description}</td>\r\n              </tr>\r\n            ))}\r\n            {this.state.terms.length === 0 && <tr><td colSpan=\"4\" className=\"text-center\">No records found</td></tr>}\r\n          </tbody>\r\n        </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  render() {\r\n    return <div className=\"container-fluid\">{this.state.showForm ? this.renderForm() : this.renderTable()}</div>;\r\n  }\r\n}\r\n\r\nexport default PaymentTerms;"]},"metadata":{},"sourceType":"module"}