{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\sales\\\\salestransactions\\\\invoice\\\\BillingAmendment.js\";\n// BillingAmendment.js\nimport React, { Component } from 'react';\nimport { db } from '../../../../firebase';\nimport { collection, getDocs, updateDoc, doc } from 'firebase/firestore';\nimport { serverTimestamp } from 'firebase/firestore';\n\nclass BillingAmendment extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cobilling: [],\n      selected: null,\n      editingLineItems: [],\n      loading: false\n    };\n\n    this.fetchApproved = async () => {\n      const snap = await getDocs(collection(db, 'cobilling'));\n      const data = snap.docs.map(d => ({\n        id: d.id,\n        ...d.data()\n      }));\n      const approved = data.filter(c => c.status === 'Approved' || c.status === 'Amended');\n      this.setState({\n        cobilling: approved\n      });\n    };\n\n    this.selectCob = cob => {\n      // Clone line items to an editable copy\n      this.setState({\n        selected: cob,\n        editingLineItems: (cob.lineItems || []).map(li => ({ ...li\n        }))\n      });\n    };\n\n    this.changeQty = (idx, val) => {\n      const items = [...this.state.editingLineItems];\n      items[idx].qty = val;\n      this.setState({\n        editingLineItems: items\n      });\n    };\n\n    this.applyAmendment = async () => {\n      const {\n        selected,\n        editingLineItems\n      } = this.state;\n      if (!selected) return;\n      if (!window.confirm(`Apply amendment to ${selected.cobillingNo}? This will adjust order recv quantities.`)) return;\n      this.setState({\n        loading: true\n      });\n\n      try {\n        // compute delta per line (new - prevApproved)\n        const prevApproved = selected.approvedLineItems || selected.lineItems || [];\n        const deltas = editingLineItems.map(newLi => {\n          const prev = prevApproved.find(p => p.itemCode === newLi.itemCode) || {};\n          const prevQty = parseFloat(prev.qty || 0) || 0;\n          const newQty = parseFloat(newLi.qty || 0) || 0;\n          return {\n            itemCode: newLi.itemCode,\n            delta: newQty - prevQty\n          };\n        }); // 1) update order (if any)\n\n        if (selected.customerOrderId) {\n          const ordersSnap = await getDocs(collection(db, 'orders'));\n          const orderDoc = ordersSnap.docs.find(d => (d.data().orderNo || '') === (selected.customerOrderId || ''));\n\n          if (orderDoc) {\n            const orderId = orderDoc.id;\n            const orderData = orderDoc.data();\n            const updatedLineItems = (orderData.lineItems || []).map(oli => {\n              const match = deltas.find(d => d.itemCode === oli.itemCode);\n\n              if (match) {\n                const prevRecv = parseFloat(oli.recvQty || 0) || 0;\n                const newRecv = Math.max(0, prevRecv + parseFloat(match.delta || 0));\n                oli.recvQty = newRecv;\n                oli.remainingQty = Math.max(0, parseFloat(oli.qty || oli.orderQty || 0) - newRecv);\n              }\n\n              return oli;\n            });\n            let anyRecv = updatedLineItems.some(li => parseFloat(li.recvQty || 0) > 0);\n            let allDone = updatedLineItems.every(li => parseFloat(li.qty || li.orderQty || 0) <= parseFloat(li.recvQty || 0));\n            const newOrderStatus = allDone ? 'Completed' : anyRecv ? 'Partial' : orderData.status || 'Entered';\n            await updateDoc(doc(db, 'orders', orderId), {\n              lineItems: updatedLineItems,\n              status: newOrderStatus,\n              updatedAt: serverTimestamp()\n            });\n          }\n        } // 2) update COB doc: put new lineItems, set status Amended and update approvedLineItems snapshot\n\n\n        await updateDoc(doc(db, 'cobilling', selected.id), {\n          lineItems: editingLineItems,\n          status: 'Amended',\n          approvedLineItems: editingLineItems,\n          amendedAt: serverTimestamp(),\n          updatedAt: serverTimestamp()\n        });\n        alert('Amendment applied.');\n        this.setState({\n          selected: null,\n          editingLineItems: []\n        });\n        this.fetchApproved();\n      } catch (err) {\n        console.error(err);\n        alert(err.message);\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.fetchApproved();\n  }\n\n  render() {\n    const {\n      cobilling,\n      selected,\n      editingLineItems\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, \"Billing Amendment\"), !selected && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-sm table-bordered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 26\n      }\n    }, \"Bill No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 42\n      }\n    }, \"Order\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 56\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 73\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 86\n      }\n    }, \"Value\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 100\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, cobilling.map(c => /*#__PURE__*/React.createElement(\"tr\", {\n      key: c.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, c.cobillingNo), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, c.customerOrderId), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, c.customer), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, c.cobillingDate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, c.billValue), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary\",\n      onClick: () => this.selectCob(c),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, \"Edit / Apply\")))), cobilling.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 44\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"6\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 48\n      }\n    }, \"No approved bills\"))))), selected && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, \"Amend: \", selected.cobillingNo, \" \\u2014 Order: \", selected.customerOrderId), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-sm table-bordered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 26\n      }\n    }, \"Item\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 39\n      }\n    }, \"OrderQty\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 56\n      }\n    }, \"PrevApprovedQty\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 80\n      }\n    }, \"New Qty\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, (editingLineItems || []).map((li, i) => {\n      const prev = (selected.approvedLineItems || []).find(p => p.itemCode === li.itemCode) || {};\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 23\n        }\n      }, li.itemCode, \" - \", li.itemDescription), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 23\n        }\n      }, li.orderQty || li.qty || '-'), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 23\n        }\n      }, prev.qty || '-'), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: li.qty || '',\n        onChange: e => this.changeQty(i, e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }\n      })));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-secondary mr-2\",\n      onClick: () => this.setState({\n        selected: null,\n        editingLineItems: []\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: this.applyAmendment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, \"Apply Amendment\"))));\n  }\n\n}\n\nexport default BillingAmendment;","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/sales/salestransactions/invoice/BillingAmendment.js"],"names":["React","Component","db","collection","getDocs","updateDoc","doc","serverTimestamp","BillingAmendment","state","cobilling","selected","editingLineItems","loading","fetchApproved","snap","data","docs","map","d","id","approved","filter","c","status","setState","selectCob","cob","lineItems","li","changeQty","idx","val","items","qty","applyAmendment","window","confirm","cobillingNo","prevApproved","approvedLineItems","deltas","newLi","prev","find","p","itemCode","prevQty","parseFloat","newQty","delta","customerOrderId","ordersSnap","orderDoc","orderNo","orderId","orderData","updatedLineItems","oli","match","prevRecv","recvQty","newRecv","Math","max","remainingQty","orderQty","anyRecv","some","allDone","every","newOrderStatus","updatedAt","amendedAt","alert","err","console","error","message","componentDidMount","render","customer","cobillingDate","billValue","length","i","itemDescription","e","target","value"],"mappings":"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","sourcesContent":["// BillingAmendment.js\r\nimport React, { Component } from 'react';\r\nimport { db } from '../../../../firebase';\r\nimport { collection, getDocs, updateDoc, doc } from 'firebase/firestore';\r\nimport { serverTimestamp } from 'firebase/firestore';\r\n\r\nclass BillingAmendment extends Component {\r\n  state = { cobilling: [], selected: null, editingLineItems: [], loading: false };\r\n\r\n  componentDidMount() { this.fetchApproved(); }\r\n\r\n  fetchApproved = async () => {\r\n    const snap = await getDocs(collection(db, 'cobilling'));\r\n    const data = snap.docs.map(d => ({ id: d.id, ...d.data() }));\r\n    const approved = data.filter(c => c.status === 'Approved' || c.status === 'Amended');\r\n    this.setState({ cobilling: approved });\r\n  };\r\n\r\n  selectCob = (cob) => {\r\n    // Clone line items to an editable copy\r\n    this.setState({ selected: cob, editingLineItems: (cob.lineItems || []).map(li => ({ ...li })) });\r\n  };\r\n\r\n  changeQty = (idx, val) => {\r\n    const items = [...this.state.editingLineItems];\r\n    items[idx].qty = val;\r\n    this.setState({ editingLineItems: items });\r\n  };\r\n\r\n  applyAmendment = async () => {\r\n    const { selected, editingLineItems } = this.state;\r\n    if (!selected) return;\r\n    if (!window.confirm(`Apply amendment to ${selected.cobillingNo}? This will adjust order recv quantities.`)) return;\r\n    this.setState({ loading: true });\r\n    try {\r\n      // compute delta per line (new - prevApproved)\r\n      const prevApproved = selected.approvedLineItems || selected.lineItems || [];\r\n      const deltas = editingLineItems.map(newLi => {\r\n        const prev = prevApproved.find(p => p.itemCode === newLi.itemCode) || {};\r\n        const prevQty = parseFloat(prev.qty || 0) || 0;\r\n        const newQty = parseFloat(newLi.qty || 0) || 0;\r\n        return { itemCode: newLi.itemCode, delta: (newQty - prevQty) };\r\n      });\r\n\r\n      // 1) update order (if any)\r\n      if (selected.customerOrderId) {\r\n        const ordersSnap = await getDocs(collection(db, 'orders'));\r\n        const orderDoc = ordersSnap.docs.find(d => (d.data().orderNo || '') === (selected.customerOrderId || ''));\r\n        if (orderDoc) {\r\n          const orderId = orderDoc.id;\r\n          const orderData = orderDoc.data();\r\n          const updatedLineItems = (orderData.lineItems || []).map(oli => {\r\n            const match = deltas.find(d => d.itemCode === oli.itemCode);\r\n            if (match) {\r\n              const prevRecv = parseFloat(oli.recvQty || 0) || 0;\r\n              const newRecv = Math.max(0, prevRecv + parseFloat(match.delta || 0));\r\n              oli.recvQty = newRecv;\r\n              oli.remainingQty = Math.max(0, (parseFloat(oli.qty || oli.orderQty || 0) - newRecv));\r\n            }\r\n            return oli;\r\n          });\r\n          let anyRecv = updatedLineItems.some(li => (parseFloat(li.recvQty || 0) > 0));\r\n          let allDone = updatedLineItems.every(li => (parseFloat(li.qty || li.orderQty || 0) <= (parseFloat(li.recvQty || 0))));\r\n          const newOrderStatus = allDone ? 'Completed' : (anyRecv ? 'Partial' : orderData.status || 'Entered');\r\n\r\n          await updateDoc(doc(db, 'orders', orderId), {\r\n            lineItems: updatedLineItems,\r\n            status: newOrderStatus,\r\n            updatedAt: serverTimestamp()\r\n          });\r\n        }\r\n      }\r\n\r\n      // 2) update COB doc: put new lineItems, set status Amended and update approvedLineItems snapshot\r\n      await updateDoc(doc(db, 'cobilling', selected.id), {\r\n        lineItems: editingLineItems,\r\n        status: 'Amended',\r\n        approvedLineItems: editingLineItems,\r\n        amendedAt: serverTimestamp(),\r\n        updatedAt: serverTimestamp()\r\n      });\r\n\r\n      alert('Amendment applied.');\r\n      this.setState({ selected: null, editingLineItems: [] });\r\n      this.fetchApproved();\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(err.message);\r\n    } finally { this.setState({ loading: false }); }\r\n  };\r\n\r\n  render() {\r\n    const { cobilling, selected, editingLineItems } = this.state;\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <h4>Billing Amendment</h4>\r\n        {!selected && (\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-sm table-bordered\">\r\n              <thead><tr><th>Bill No</th><th>Order</th><th>Customer</th><th>Date</th><th>Value</th><th>Action</th></tr></thead>\r\n              <tbody>\r\n                {cobilling.map(c => (\r\n                  <tr key={c.id}>\r\n                    <td>{c.cobillingNo}</td>\r\n                    <td>{c.customerOrderId}</td>\r\n                    <td>{c.customer}</td>\r\n                    <td>{c.cobillingDate}</td>\r\n                    <td>{c.billValue}</td>\r\n                    <td><button className=\"btn btn-sm btn-primary\" onClick={() => this.selectCob(c)}>Edit / Apply</button></td>\r\n                  </tr>\r\n                ))}\r\n                {cobilling.length === 0 && <tr><td colSpan=\"6\" className=\"text-center\">No approved bills</td></tr>}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n\r\n        {selected && (\r\n          <div className=\"card p-3\">\r\n            <h5>Amend: {selected.cobillingNo} — Order: {selected.customerOrderId}</h5>\r\n            <table className=\"table table-sm table-bordered\">\r\n              <thead><tr><th>Item</th><th>OrderQty</th><th>PrevApprovedQty</th><th>New Qty</th></tr></thead>\r\n              <tbody>\r\n                {(editingLineItems || []).map((li, i) => {\r\n                  const prev = (selected.approvedLineItems || []).find(p => p.itemCode === li.itemCode) || {};\r\n                  return (\r\n                    <tr key={i}>\r\n                      <td>{li.itemCode} - {li.itemDescription}</td>\r\n                      <td>{li.orderQty || li.qty || '-'}</td>\r\n                      <td>{prev.qty || '-'}</td>\r\n                      <td>\r\n                        <input type=\"number\" className=\"form-control form-control-sm\" value={li.qty || ''} onChange={e => this.changeQty(i, e.target.value)} />\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n            <div className=\"text-right\">\r\n              <button className=\"btn btn-secondary mr-2\" onClick={() => this.setState({ selected: null, editingLineItems: [] })}>Cancel</button>\r\n              <button className=\"btn btn-warning\" onClick={this.applyAmendment}>Apply Amendment</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BillingAmendment;\r\n"]},"metadata":{},"sourceType":"module"}