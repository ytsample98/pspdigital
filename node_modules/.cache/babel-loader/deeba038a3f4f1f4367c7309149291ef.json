{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\crm\\\\Datalist.js\";\nimport React, { Component } from \"react\";\nimport { db } from \"../../firebase\";\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc } from \"firebase/firestore\";\nimport { Country, State, City } from \"country-state-city\";\nimport { Dropdown } from \"react-bootstrap\";\nimport * as XLSX from \"xlsx\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nlet accountCounter = 100;\n\nfunction generateAccountNo() {\n  accountCounter++;\n  return `AC${accountCounter}`;\n}\n\nclass Datalist extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      accounts: [],\n      industryType: [],\n      industrySearch: \"\",\n      industryDropdownSize: 8,\n      showForm: false,\n      showPreview: false,\n      editingId: null,\n      previewTab: \"showAll\",\n      search: \"\",\n      comments: [],\n      contactLine: {\n        name: \"\",\n        designation: \"\",\n        phone: \"\",\n        mail: \"\",\n        linkedin: \"\"\n      },\n      formData: {\n        acno: \"\",\n        acname: \"\",\n        acshortname: \"\",\n        industryType: \"\",\n        contact: \"\",\n        email: \"\",\n        website: \"\",\n        phone: \"\",\n        comlinkedin: \"\",\n        country: \"\",\n        state: \"\",\n        city: \"\",\n        contactPersons: [],\n        editIndex: null\n      }\n    };\n\n    this.loadIndustryTypes = async () => {\n      try {\n        const response = await fetch(\"/industry_types.xlsx\");\n        const arrayBuffer = await response.arrayBuffer();\n        const workbook = XLSX.read(arrayBuffer, {\n          type: \"array\"\n        });\n        const sheetName = workbook.SheetNames[0];\n        const sheet = workbook.Sheets[sheetName];\n        const data = XLSX.utils.sheet_to_json(sheet, {\n          header: 1\n        }); // Flatten and filter empty rows\n\n        const types = data.flat().filter(t => t && typeof t === \"string\");\n        this.setState({\n          industryTypes: types\n        });\n      } catch (err) {\n        // fallback: hardcoded example\n        this.setState({\n          industryTypes: [\"Automotive\", \"Banking\", \"Construction\", \"Education\", \"Energy\", \"Healthcare\", \"IT\", \"Manufacturing\", \"Pharmaceutical\", \"Retail\", \"Telecom\", \"Transport\", \"Utilities\"]\n        });\n      }\n    };\n\n    this.fetchAccounts = async () => {\n      const snap = await getDocs(collection(db, \"accounts\"));\n      const accounts = snap.docs.map(d => ({\n        id: d.id,\n        ...d.data()\n      }));\n      this.setState({\n        accounts\n      });\n    };\n\n    this.fetchRemarksForAccount = async acname => {\n      const snap = await getDocs(collection(db, \"activities\"));\n      const allActs = snap.docs.map(d => d.data());\n      const related = allActs.filter(a => a.acname === acname).sort((a, b) => new Date(b.date) - new Date(a.date)); // newest first\n\n      this.setState({\n        remarks: related\n      });\n    };\n\n    this.toggleForm = (edit = null) => {\n      if (edit) {\n        this.setState({\n          showForm: true,\n          editingId: edit.id,\n          formData: { ...edit,\n            editIndex: null\n          },\n          showPreview: false\n        });\n      } else {\n        this.setState({\n          showForm: true,\n          editingId: null,\n          showPreview: false,\n          formData: {\n            acno: generateAccountNo(),\n            acname: \"\",\n            acshortname: \"\",\n            contact: \"\",\n            email: \"\",\n            website: \"\",\n            phone: \"\",\n            comlinkedin: \"\",\n            country: \"\",\n            state: \"\",\n            city: \"\",\n            contactPersons: [],\n            editIndex: null\n          }\n        });\n      }\n    };\n\n    this.togglePreview = acc => {\n      this.setState({\n        formData: { ...acc\n        },\n        showPreview: true,\n        showForm: false\n      });\n      this.fetchRemarksForAccount(acc.acname);\n    };\n\n    this.handleChange = (field, value) => {\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          [field]: value\n        }\n      }));\n    };\n\n    this.handleContactLineChange = (field, value) => {\n      this.setState(prev => ({\n        contactLine: { ...prev.contactLine,\n          [field]: value\n        }\n      }));\n    };\n\n    this.addOrUpdateContact = () => {\n      const {\n        contactLine,\n        formData\n      } = this.state;\n      if (!contactLine.name) return alert(\"Name required\");\n      const isAllEmpty = Object.values(contactLine).every(val => !val.trim());\n      if (isAllEmpty) return;\n      let list = [...formData.contactPersons];\n\n      if (formData.editIndex !== null) {\n        list[formData.editIndex] = contactLine;\n      } else {\n        list.push(contactLine);\n      }\n\n      this.setState({\n        formData: { ...formData,\n          contactPersons: list,\n          editIndex: null\n        },\n        contactLine: {\n          name: \"\",\n          designation: \"\",\n          phone: \"\",\n          mail: \"\",\n          linkedin: \"\"\n        }\n      });\n    };\n\n    this.editContact = idx => {\n      const cp = this.state.formData.contactPersons[idx];\n      this.setState({\n        contactLine: { ...cp\n        },\n        formData: { ...this.state.formData,\n          editIndex: idx\n        }\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        editingId,\n        formData\n      } = this.state;\n      if (!formData.acname) return alert(\"Account Name required\");\n\n      if (editingId) {\n        await updateDoc(doc(db, \"accounts\", editingId), formData);\n      } else {\n        await addDoc(collection(db, \"accounts\"), formData);\n      }\n\n      this.setState({\n        showForm: false,\n        editingId: null\n      });\n      this.fetchAccounts();\n    };\n\n    this.handleDelete = async id => {\n      await deleteDoc(doc(db, \"accounts\", id));\n      this.fetchAccounts();\n    };\n\n    this.renderForm = () => {\n      const {\n        formData,\n        contactLine,\n        industryTypes,\n        industrySearch,\n        industryDropdownSize\n      } = this.state;\n      const countryOptions = Country.getAllCountries();\n      const stateOptions = formData.country ? State.getStatesOfCountry(formData.country) : [];\n      const cityOptions = formData.state ? City.getCitiesOfState(formData.country, formData.state) : [];\n      const filteredIndustryTypes = industryTypes.filter(t => t.toLowerCase().includes((industrySearch || \"\").toLowerCase()));\n      const visibleIndustryTypes = filteredIndustryTypes.slice(0, industryDropdownSize);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card full-height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: \"auto\",\n          padding: \"24px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }\n      }, \"Account Creation/Update\"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 17\n        }\n      }, \"Account No\"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control form-control-sm\",\n        value: formData.acno,\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }\n      }, \"Account Name \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 32\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control form-control-sm\",\n        value: formData.acname,\n        type: \"text\",\n        onChange: e => this.handleChange(\"acname\", e.target.value),\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }\n      }, \"Short Name \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 30\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control form-control-sm\",\n        value: formData.acshortname,\n        type: \"text\",\n        onChange: e => this.handleChange(\"acshortname\", e.target.value),\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }\n      }, \"Contact \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 32\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control form-control-sm\",\n        type: \"text\",\n        value: formData.contact,\n        onChange: e => this.handleChange(\"contact\", e.target.value),\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }\n      }, \"Industry Type \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 36\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Typeahead, {\n        id: \"industry-type\",\n        options: filteredIndustryTypes,\n        placeholder: \"Search or select industry...\",\n        selected: formData.industryType ? [formData.industryType] : [],\n        onChange: selected => {\n          this.handleChange(\"industryType\", selected[0] || \"\");\n        },\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 17\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control form-control-sm\",\n        type: \"email\",\n        value: formData.email,\n        onChange: e => this.handleChange(\"email\", e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 17\n        }\n      }, \"Phone \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control form-control-sm\",\n        type: \"number\",\n        value: formData.phone,\n        onChange: e => this.handleChange(\"phone\", e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 17\n        }\n      }, \"Website \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 27\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control form-control-sm\",\n        type: \"website\",\n        value: formData.website,\n        onChange: e => this.handleChange(\"website\", e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 17\n        }\n      }, \"LinkedIn \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 28\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control form-control-sm\",\n        type: \"website\",\n        value: formData.comlinkedin,\n        onChange: e => this.handleChange(\"comlinkedin\", e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 17\n        }\n      }, \"Country \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 32\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.country,\n        onChange: e => this.handleChange(\"country\", e.target.value),\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 19\n        }\n      }, \"Select Country\"), countryOptions.map(c => /*#__PURE__*/React.createElement(\"option\", {\n        key: c.isoCode,\n        value: c.isoCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }\n      }, c.name)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 17\n        }\n      }, \"State\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.state,\n        onChange: e => this.handleChange(\"state\", e.target.value),\n        disabled: !formData.country,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 19\n        }\n      }, \"Select State\"), stateOptions.map(s => /*#__PURE__*/React.createElement(\"option\", {\n        key: s.isoCode,\n        value: s.isoCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }\n      }, s.name)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 17\n        }\n      }, \"City\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.city,\n        onChange: e => this.handleChange(\"city\", e.target.value),\n        disabled: !formData.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 19\n        }\n      }, \"Select City\"), cityOptions.map(ct => /*#__PURE__*/React.createElement(\"option\", {\n        key: ct.name,\n        value: ct.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }\n      }, ct.name))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }\n      }, \"Contact Persons\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control col-md-2 mr-2\",\n        placeholder: \"Name\",\n        value: contactLine.name,\n        onChange: e => this.handleContactLineChange(\"name\", e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control col-md-2 mr-2\",\n        placeholder: \"Designation\",\n        value: contactLine.designation,\n        onChange: e => this.handleContactLineChange(\"designation\", e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control col-md-2 mr-2\",\n        placeholder: \"Phone\",\n        value: contactLine.phone,\n        onChange: e => this.handleContactLineChange(\"phone\", e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control col-md-2 mr-2\",\n        placeholder: \"Mail\",\n        value: contactLine.mail,\n        onChange: e => this.handleContactLineChange(\"mail\", e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control col-md-2 mr-2\",\n        placeholder: \"LinkedIn\",\n        value: contactLine.linkedin,\n        onChange: e => this.handleContactLineChange(\"linkedin\", e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-sm\",\n        onClick: this.addOrUpdateContact,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 15\n        }\n      }, formData.editIndex !== null ? \"Update\" : \"Add\")), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 19\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 19\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 19\n        }\n      }, \"Designation\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 19\n        }\n      }, \"Phone\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 19\n        }\n      }, \"Mail\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 19\n        }\n      }, \"LinkedIn\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 15\n        }\n      }, formData.contactPersons.map((cp, idx) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"editCp\",\n        onChange: () => this.editContact(idx),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }\n      }, cp.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 21\n        }\n      }, cp.designation), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }\n      }, cp.phone), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 21\n        }\n      }, cp.mail), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 21\n        }\n      }, cp.linkedin))), formData.contactPersons.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"6\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }\n      }, \"No contacts added\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fixed-card-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary btn-sm mr-2\",\n        onClick: () => this.setState({\n          showForm: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 15\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success btn-sm \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 17\n        }\n      }, \"Save\")))));\n    };\n\n    this.renderPreview = () => {\n      const {\n        formData,\n        previewTab\n      } = this.state;\n\n      const renderRow = (label, val) => /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          width: \"30%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }\n      }, label)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 9\n        }\n      }, val || \"-\"));\n\n      const renderContacts = () => /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 5\n        }\n      }, formData.contactPersons.map((c, i) => /*#__PURE__*/React.createElement(React.Fragment, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 29\n        }\n      }, \"Person \", i + 1))), renderRow(\"Name\", c.name), renderRow(\"Designation\", c.designation), renderRow(\"Phone\", c.phone), renderRow(\"Mail\", c.mail), renderRow(\"LinkedIn\", c.linkedin)))));\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card p-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }\n      }, \"Account Preview\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-primary btn-sm mr-2\",\n        onClick: () => this.toggleForm(formData),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        onClick: () => this.setState({\n          showPreview: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 13\n        }\n      }, \"Back\"))), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }\n      }, renderRow(\"Account No\", formData.acno), renderRow(\"Account Name\", formData.acname), renderRow(\"Short Name\", formData.acshortname), renderRow(\"Email\", formData.email), renderRow(\"Website\", formData.website), renderRow(\"Phone\", formData.phone), renderRow(\"LinkedIn\", formData.comlinkedin))), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"nav nav-tabs mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 9\n        }\n      }, [\"showAll\", \"remarks\", \"contacts\", \"comments\"].map(k => /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        key: k,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: `nav-link ${previewTab === k ? \"active\" : \"\"}`,\n        onClick: () => this.setState({\n          previewTab: k\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 15\n        }\n      }, k === \"showAll\" ? \"Show All\" : k.charAt(0).toUpperCase() + k.slice(1))))), previewTab === \"contacts\" && renderContacts(), previewTab === \"remarks\" && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }\n      }, this.state.remarks.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 15\n        }\n      }, \"No remarks available.\") : /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"list-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 15\n        }\n      }, this.state.remarks.map((r, i) => /*#__PURE__*/React.createElement(\"li\", {\n        key: i,\n        className: \"list-group-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 21\n        }\n      }, r.date, \":\"), \" \", r.contact, \", \", r.source, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 21\n        }\n      }), r.remarks)))), previewTab === \"comments\" && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control mb-2\",\n        placeholder: \"Add comment\",\n        onChange: e => this.setState({\n          newComment: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary btn-sm\",\n        onClick: () => this.setState(prev => ({\n          comments: [...prev.comments, prev.newComment],\n          newComment: \"\"\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }\n      }, \"Add Comment\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 13\n        }\n      }, this.state.comments.map((c, i) => /*#__PURE__*/React.createElement(\"li\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 17\n        }\n      }, c)))), previewTab === \"showAll\" && /*#__PURE__*/React.createElement(React.Fragment, null, renderContacts(), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }\n      }, \"Remarks Placeholder\"), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }\n      }, \"Comments: \", this.state.comments.join(\", \"))));\n    };\n\n    this.renderTable = () => {\n      const {\n        accounts,\n        search\n      } = this.state;\n      const filtered = accounts.filter(a => a.acname.toLowerCase().includes(search.toLowerCase()));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card mt-4 full-height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 13\n        }\n      }, \"Accounts\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary btn-sm\",\n        onClick: () => this.toggleForm(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 13\n        }\n      }, \"+ Add Account\")), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control mb-2\",\n        placeholder: \"Search account name...\",\n        value: search,\n        onChange: e => this.setState({\n          search: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 17\n        }\n      }, \"A/c No\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 17\n        }\n      }, \"Account Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 17\n        }\n      }, \"Contact\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 17\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 17\n        }\n      }, \"Phone\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 17\n        }\n      }, \"Country\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 17\n        }\n      }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 13\n        }\n      }, filtered.map(acc => {\n        var _Country$getCountryBy;\n\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: acc.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-link p-0\",\n          onClick: () => this.togglePreview(acc),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 21\n          }\n        }, acc.acno)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 19\n          }\n        }, acc.acname), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 19\n          }\n        }, acc.contact), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 19\n          }\n        }, acc.email), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 19\n          }\n        }, acc.phone), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 19\n          }\n        }, ((_Country$getCountryBy = Country.getCountryByCode(acc.country)) === null || _Country$getCountryBy === void 0 ? void 0 : _Country$getCountryBy.name) || \"\"), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Dropdown, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n          variant: \"outline-primary\",\n          size: \"sm\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 23\n          }\n        }, \"Actions\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n          onClick: () => this.toggleForm(acc),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 25\n          }\n        }, \"Edit\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          onClick: () => this.toggleForm(acc),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 25\n          }\n        }, \"Add Contact\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          onClick: () => this.handleDelete(acc.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 25\n          }\n        }, \"Delete\")))));\n      }), filtered.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"7\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 19\n        }\n      }, \"No records found\"))))));\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAccounts();\n    this.loadIndustryTypes();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 7\n      }\n    }, this.state.showForm ? this.renderForm() : this.state.showPreview ? this.renderPreview() : this.renderTable());\n  }\n\n}\n\nexport default Datalist;","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/crm/Datalist.js"],"names":["React","Component","db","collection","getDocs","addDoc","updateDoc","deleteDoc","doc","Country","State","City","Dropdown","XLSX","Typeahead","accountCounter","generateAccountNo","Datalist","state","accounts","industryType","industrySearch","industryDropdownSize","showForm","showPreview","editingId","previewTab","search","comments","contactLine","name","designation","phone","mail","linkedin","formData","acno","acname","acshortname","contact","email","website","comlinkedin","country","city","contactPersons","editIndex","loadIndustryTypes","response","fetch","arrayBuffer","workbook","read","type","sheetName","SheetNames","sheet","Sheets","data","utils","sheet_to_json","header","types","flat","filter","t","setState","industryTypes","err","fetchAccounts","snap","docs","map","d","id","fetchRemarksForAccount","allActs","related","a","sort","b","Date","date","remarks","toggleForm","edit","togglePreview","acc","handleChange","field","value","prev","handleContactLineChange","addOrUpdateContact","alert","isAllEmpty","Object","values","every","val","trim","list","push","editContact","idx","cp","handleSubmit","e","preventDefault","handleDelete","renderForm","countryOptions","getAllCountries","stateOptions","getStatesOfCountry","cityOptions","getCitiesOfState","filteredIndustryTypes","toLowerCase","includes","visibleIndustryTypes","slice","flex","overflowY","padding","color","target","selected","c","isoCode","s","ct","length","renderPreview","renderRow","label","width","renderContacts","i","k","charAt","toUpperCase","r","source","newComment","join","renderTable","filtered","getCountryByCode","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { db } from \"../../firebase\";\r\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc } from \"firebase/firestore\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\r\n\r\n\r\n\r\nlet accountCounter = 100;\r\nfunction generateAccountNo() {\r\n  accountCounter++;\r\n  return `AC${accountCounter}`;\r\n}\r\n\r\nclass Datalist extends Component {\r\n  state = {\r\n    accounts: [],\r\n    industryType:[],\r\n    industrySearch:\"\",\r\n    industryDropdownSize:8,\r\n    showForm: false,\r\n    showPreview: false,\r\n    editingId: null,\r\n    previewTab: \"showAll\",\r\n    search: \"\",\r\n    comments: [],\r\n    contactLine: {\r\n      name: \"\",\r\n      designation: \"\",\r\n      phone: \"\",\r\n      mail: \"\",\r\n      linkedin: \"\"\r\n    },\r\n    formData: {\r\n      acno: \"\",\r\n      acname: \"\",\r\n      acshortname:\"\",\r\n      industryType:\"\",\r\n      contact: \"\",\r\n      email: \"\",\r\n      website: \"\",\r\n      phone: \"\",\r\n      comlinkedin: \"\",\r\n      country: \"\",\r\n      state: \"\",\r\n      city: \"\",\r\n      contactPersons: [],\r\n      editIndex: null\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchAccounts();\r\n    this.loadIndustryTypes();\r\n  }\r\n  loadIndustryTypes=async()=>{\r\n    try {\r\n      const response = await fetch(\"/industry_types.xlsx\");\r\n      const arrayBuffer = await response.arrayBuffer();\r\n      const workbook = XLSX.read(arrayBuffer, { type: \"array\" });\r\n      const sheetName = workbook.SheetNames[0];\r\n      const sheet = workbook.Sheets[sheetName];\r\n      const data = XLSX.utils.sheet_to_json(sheet, { header: 1 });\r\n      // Flatten and filter empty rows\r\n      const types = data.flat().filter((t) => t && typeof t === \"string\");\r\n      this.setState({ industryTypes: types });\r\n    } catch (err) {\r\n      // fallback: hardcoded example\r\n      this.setState({\r\n        industryTypes: [\r\n          \"Automotive\", \"Banking\", \"Construction\", \"Education\", \"Energy\", \"Healthcare\", \"IT\", \"Manufacturing\",\r\n          \"Pharmaceutical\", \"Retail\", \"Telecom\", \"Transport\", \"Utilities\"\r\n        ]\r\n      });\r\n    }\r\n  }\r\n\r\n  fetchAccounts = async () => {\r\n    const snap = await getDocs(collection(db, \"accounts\"));\r\n    const accounts = snap.docs.map((d) => ({ id: d.id, ...d.data() }));\r\n    this.setState({ accounts });\r\n  };\r\n  fetchRemarksForAccount = async (acname) => {\r\n  const snap = await getDocs(collection(db, \"activities\"));\r\n  const allActs = snap.docs.map((d) => d.data());\r\n  const related = allActs\r\n    .filter((a) => a.acname === acname)\r\n    .sort((a, b) => new Date(b.date) - new Date(a.date)); // newest first\r\n  this.setState({ remarks: related });\r\n};\r\n\r\n\r\n  toggleForm = (edit = null) => {\r\n    if (edit) {\r\n      this.setState({\r\n        showForm: true,\r\n        editingId: edit.id,\r\n        formData: { ...edit, editIndex: null },\r\n        showPreview: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showForm: true,\r\n        editingId: null,\r\n        showPreview: false,\r\n        formData: {\r\n          acno: generateAccountNo(),\r\n          acname: \"\",\r\n          acshortname:\"\",\r\n          contact: \"\",\r\n          email: \"\",\r\n          website: \"\",\r\n          phone: \"\",\r\n          comlinkedin:\"\",\r\n          country: \"\",\r\n          state: \"\",\r\n          city: \"\",\r\n          contactPersons: [],\r\n          editIndex: null\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  togglePreview = (acc) => {\r\n    this.setState({\r\n      formData: { ...acc },\r\n      showPreview: true,\r\n      showForm: false\r\n    });\r\n    this.fetchRemarksForAccount(acc.acname);\r\n  };\r\n\r\n  handleChange = (field, value) => {\r\n    this.setState((prev) => ({ formData: { ...prev.formData, [field]: value } }));\r\n  };\r\n\r\n  handleContactLineChange = (field, value) => {\r\n    this.setState((prev) => ({ contactLine: { ...prev.contactLine, [field]: value } }));\r\n  };\r\n\r\n  addOrUpdateContact = () => {\r\n    const { contactLine, formData } = this.state;\r\n    if (!contactLine.name) return alert(\"Name required\");\r\n    const isAllEmpty = Object.values(contactLine).every(val => !val.trim());\r\n    if (isAllEmpty) return;\r\n\r\n    let list = [...formData.contactPersons];\r\n    if (formData.editIndex !== null) {\r\n      list[formData.editIndex] = contactLine;\r\n    } else {\r\n      list.push(contactLine);\r\n    }\r\n    this.setState({\r\n      formData: { ...formData, contactPersons: list, editIndex: null },\r\n      contactLine: { name: \"\", designation: \"\", phone: \"\", mail: \"\", linkedin: \"\" }\r\n    });\r\n  };\r\n\r\n  editContact = (idx) => {\r\n    const cp = this.state.formData.contactPersons[idx];\r\n    this.setState({ contactLine: { ...cp }, formData: { ...this.state.formData, editIndex: idx } });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { editingId, formData } = this.state;\r\n    if (!formData.acname) return alert(\"Account Name required\");\r\n    if (editingId) {\r\n      await updateDoc(doc(db, \"accounts\", editingId), formData);\r\n    } else {\r\n      await addDoc(collection(db, \"accounts\"), formData);\r\n    }\r\n    this.setState({ showForm: false, editingId: null });\r\n    this.fetchAccounts();\r\n  };\r\n\r\n  handleDelete = async (id) => {\r\n    await deleteDoc(doc(db, \"accounts\", id));\r\n    this.fetchAccounts();\r\n  };\r\n\r\n  renderForm = () => {\r\n    const { formData, contactLine, industryTypes, industrySearch, industryDropdownSize } = this.state;\r\n    const countryOptions = Country.getAllCountries();\r\n    const stateOptions = formData.country ? State.getStatesOfCountry(formData.country) : [];\r\n    const cityOptions = formData.state ? City.getCitiesOfState(formData.country, formData.state) : [];\r\n    const filteredIndustryTypes = industryTypes.filter((t) =>\r\n      t.toLowerCase().includes((industrySearch || \"\").toLowerCase())\r\n    );\r\n    const visibleIndustryTypes = filteredIndustryTypes.slice(0, industryDropdownSize);\r\n    return (\r\n      <div className=\"card full-height\">\r\n        <div style={{ flex: 1, overflowY: \"auto\", padding: \"24px\" }}>\r\n          <h4>Account Creation/Update</h4>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-3\">\r\n                <label>Account No</label>\r\n                <input className=\"form-control form-control-sm\" value={formData.acno} readOnly />\r\n              </div>\r\n              <div className=\"form-group col-md-3\">\r\n                <label>\r\n                  Account Name <span style={{ color: \"red\" }}>*</span>\r\n                </label>\r\n                <input\r\n                  className=\"form-control form-control-sm\"\r\n                  value={formData.acname}\r\n                  type=\"text\"\r\n                  onChange={(e) => this.handleChange(\"acname\", e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n               <div className=\"form-group col-md-3\">\r\n                <label>\r\n                  Short Name <span style={{ color: \"red\" }}>*</span>\r\n                </label>\r\n                <input\r\n                  className=\"form-control form-control-sm\"\r\n                  value={formData.acshortname}\r\n                  type=\"text\"\r\n                  onChange={(e) => this.handleChange(\"acshortname\", e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group col-md-3\">\r\n                <label>Contact <span style={{ color: \"red\" }}>*</span></label>\r\n                <input className=\"form-control form-control-sm\" type=\"text\" value={formData.contact} onChange={(e) => this.handleChange(\"contact\", e.target.value)} required />\r\n              </div>\r\n              <div className=\"form-group col-md-3\">\r\n              <label>Industry Type <span style={{ color: \"red\" }}>*</span></label>\r\n              <Typeahead\r\n                id=\"industry-type\"\r\n                options={filteredIndustryTypes}  \r\n                placeholder=\"Search or select industry...\"\r\n                selected={formData.industryType ? [formData.industryType] : []}\r\n                onChange={(selected) => {\r\n                  this.handleChange(\"industryType\", selected[0] || \"\");\r\n                }}\r\n                required\r\n              />\r\n            </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-3\">\r\n                <label>Email</label>\r\n                <input className=\"form-control form-control-sm\" type=\"email\" value={formData.email} onChange={(e) => this.handleChange(\"email\", e.target.value)} />\r\n              </div>\r\n              <div className=\"form-group col-md-3\">\r\n                <label>\r\n                  Phone <span style={{ color: \"red\" }}>*</span>\r\n                </label>\r\n                <input className=\"form-control form-control-sm\" type=\"number\" value={formData.phone} onChange={(e) => this.handleChange(\"phone\", e.target.value)} />\r\n              </div>\r\n              <div className=\"form-group col-md-3\">\r\n                <label>\r\n                  Website <span style={{ color: \"red\" }}>*</span>\r\n                </label>\r\n                <input className=\"form-control form-control-sm\" type=\"website\" value={formData.website} onChange={(e) => this.handleChange(\"website\", e.target.value)} />\r\n              </div>\r\n              <div className=\"form-group col-md-3\">\r\n                <label>\r\n                  LinkedIn <span style={{ color: \"red\" }}>*</span>\r\n                </label>\r\n                <input className=\"form-control form-control-sm\" type=\"website\" value={formData.comlinkedin} onChange={(e) => this.handleChange(\"comlinkedin\", e.target.value)} />\r\n              </div>\r\n              \r\n\r\n            </div>\r\n             <div className=\"form-row\">\r\n              <div className=\"form-group col-md-3\">\r\n                <label>Country <span style={{ color: \"red\" }}>*</span></label>\r\n                <select\r\n                  className=\"form-control form-control-sm\"\r\n                  value={formData.country}\r\n                  onChange={(e) => this.handleChange(\"country\", e.target.value)}\r\n                  required\r\n                >\r\n                  <option value=\"\">Select Country</option>\r\n                  {countryOptions.map((c) => (\r\n                    <option key={c.isoCode} value={c.isoCode}>{c.name}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group col-md-3\">\r\n                <label>State</label>\r\n                <select\r\n                  className=\"form-control form-control-sm\"\r\n                  value={formData.state}\r\n                  onChange={(e) => this.handleChange(\"state\", e.target.value)}\r\n                  disabled={!formData.country}\r\n                >\r\n                  <option value=\"\">Select State</option>\r\n                  {stateOptions.map((s) => (\r\n                    <option key={s.isoCode} value={s.isoCode}>{s.name}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group col-md-3\">\r\n                <label>City</label>\r\n                <select\r\n                  className=\"form-control form-control-sm\"\r\n                  value={formData.city}\r\n                  onChange={(e) => this.handleChange(\"city\", e.target.value)}\r\n                  disabled={!formData.state}\r\n                >\r\n                  <option value=\"\">Select City</option>\r\n                  {cityOptions.map((ct) => (\r\n                    <option key={ct.name} value={ct.name}>{ct.name}</option>\r\n                  ))}\r\n                </select>\r\n                 </div>\r\n              {/* Industry Type Dropdown */}\r\n             \r\n              </div>\r\n\r\n            {/* Contact Line Item Table */}\r\n            <h5>Contact Persons</h5>\r\n            <div className=\"form-row\">\r\n              <input className=\"form-control col-md-2 mr-2\" placeholder=\"Name\" value={contactLine.name} onChange={(e) => this.handleContactLineChange(\"name\", e.target.value)} />\r\n              <input className=\"form-control col-md-2 mr-2\" placeholder=\"Designation\" value={contactLine.designation} onChange={(e) => this.handleContactLineChange(\"designation\", e.target.value)} />\r\n              <input className=\"form-control col-md-2 mr-2\" placeholder=\"Phone\" value={contactLine.phone} onChange={(e) => this.handleContactLineChange(\"phone\", e.target.value)} />\r\n              <input className=\"form-control col-md-2 mr-2\" placeholder=\"Mail\" value={contactLine.mail} onChange={(e) => this.handleContactLineChange(\"mail\", e.target.value)} />\r\n              <input className=\"form-control col-md-2 mr-2\" placeholder=\"LinkedIn\" value={contactLine.linkedin} onChange={(e) => this.handleContactLineChange(\"linkedin\", e.target.value)} />\r\n              <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={this.addOrUpdateContact}>\r\n                {formData.editIndex !== null ? \"Update\" : \"Add\"}\r\n              </button>\r\n            </div>\r\n\r\n            <table className=\"table table-bordered table-sm mt-2\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Edit</th>\r\n                  <th>Name</th>\r\n                  <th>Designation</th>\r\n                  <th>Phone</th>\r\n                  <th>Mail</th>\r\n                  <th>LinkedIn</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {formData.contactPersons.map((cp, idx) => (\r\n                  <tr key={idx}>\r\n                    <td>\r\n                      <input type=\"radio\" name=\"editCp\" onChange={() => this.editContact(idx)} />\r\n                    </td>\r\n                    <td>{cp.name}</td>\r\n                    <td>{cp.designation}</td>\r\n                    <td>{cp.phone}</td>\r\n                    <td>{cp.mail}</td>\r\n                    <td>{cp.linkedin}</td>\r\n                  </tr>\r\n                ))}\r\n                {formData.contactPersons.length === 0 && (\r\n                  <tr>\r\n                    <td colSpan=\"6\" className=\"text-center\">\r\n                      No contacts added\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n\r\n            <div className=\"fixed-card-footer\">\r\n            \r\n              <button type=\"button\" className=\"btn btn-secondary btn-sm mr-2\" onClick={() => this.setState({ showForm: false })}>\r\n                Cancel\r\n              </button>\r\n                <button type=\"submit\" className=\"btn btn-success btn-sm \">\r\n                Save\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderPreview = () => {\r\n    const { formData, previewTab } = this.state;\r\n    const renderRow = (label, val) => (\r\n      <tr>\r\n        <td style={{ width: \"30%\" }}>\r\n          <b>{label}</b>\r\n        </td>\r\n        <td>{val || \"-\"}</td>\r\n      </tr>\r\n    );\r\n    const renderContacts = () => (\r\n  <table className=\"table table-bordered table-sm\">\r\n    <tbody>\r\n      {formData.contactPersons.map((c, i) => (\r\n        <React.Fragment key={i}>\r\n          <tr>\r\n            <td colSpan=\"2\"><b>Person {i + 1}</b></td>\r\n          </tr>\r\n          {renderRow(\"Name\", c.name)}\r\n          {renderRow(\"Designation\", c.designation)}\r\n          {renderRow(\"Phone\", c.phone)}\r\n          {renderRow(\"Mail\", c.mail)}\r\n          {renderRow(\"LinkedIn\", c.linkedin)}\r\n        </React.Fragment>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\n    return (\r\n      <div className=\"card p-4\">\r\n        <div className=\"d-flex justify-content-between mb-3\">\r\n          <h4>Account Preview</h4>\r\n          <div>\r\n            <button className=\"btn btn-outline-primary btn-sm mr-2\" onClick={() => this.toggleForm(formData)}>\r\n              Edit\r\n            </button>\r\n            <button className=\"btn btn-outline-secondary btn-sm\" onClick={() => this.setState({ showPreview: false })}>\r\n              Back\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"table table-bordered table-sm mb-3\">\r\n          <tbody>\r\n            {renderRow(\"Account No\", formData.acno)}\r\n            {renderRow(\"Account Name\", formData.acname)}\r\n            {renderRow(\"Short Name\", formData.acshortname)}\r\n            {renderRow(\"Email\", formData.email)}\r\n            {renderRow(\"Website\", formData.website)}\r\n            {renderRow(\"Phone\", formData.phone)}\r\n            {renderRow(\"LinkedIn\", formData.comlinkedin)}\r\n          </tbody>\r\n        </table>\r\n\r\n        <ul className=\"nav nav-tabs mb-3\">\r\n          {[\"showAll\", \"remarks\", \"contacts\", \"comments\"].map((k) => (\r\n            <li className=\"nav-item\" key={k}>\r\n              <button className={`nav-link ${previewTab === k ? \"active\" : \"\"}`} onClick={() => this.setState({ previewTab: k })}>\r\n                {k === \"showAll\" ? \"Show All\" : k.charAt(0).toUpperCase() + k.slice(1)}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        {previewTab === \"contacts\" && renderContacts()}\r\n        {previewTab === \"remarks\" && (\r\n          <div>\r\n            {this.state.remarks.length === 0 ? (\r\n              <p>No remarks available.</p>\r\n            ) : (\r\n              <ul className=\"list-group\">\r\n                {this.state.remarks.map((r, i) => (\r\n                  <li key={i} className=\"list-group-item\">\r\n                    <strong>{r.date}:</strong> {r.contact}, {r.source}\r\n                    <br />\r\n                    {r.remarks}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {previewTab === \"comments\" && (\r\n          <div>\r\n            <textarea className=\"form-control mb-2\" placeholder=\"Add comment\" onChange={(e) => this.setState({ newComment: e.target.value })}></textarea>\r\n            <button\r\n              className=\"btn btn-primary btn-sm\"\r\n              onClick={() =>\r\n                this.setState((prev) => ({ comments: [...prev.comments, prev.newComment], newComment: \"\" }))\r\n              }\r\n            >\r\n              Add Comment\r\n            </button>\r\n            <ul className=\"mt-2\">\r\n              {this.state.comments.map((c, i) => (\r\n                <li key={i}>{c}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n        {previewTab === \"showAll\" && (\r\n          <>\r\n            {renderContacts()}\r\n            <hr />\r\n            <div>Remarks Placeholder</div>\r\n            <hr />\r\n            <div>Comments: {this.state.comments.join(\", \")}</div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderTable = () => {\r\n    const { accounts, search } = this.state;\r\n    const filtered = accounts.filter((a) => a.acname.toLowerCase().includes(search.toLowerCase()));\r\n    return (\r\n      <div className=\"card mt-4 full-height\">\r\n        <div className=\"card-body\">\r\n          <div className=\"d-flex justify-content-between mb-3\">\r\n            <h4>Accounts</h4>\r\n            <button className=\"btn btn-primary btn-sm\" onClick={() => this.toggleForm()}>\r\n              + Add Account\r\n            </button>\r\n          </div>\r\n          <input className=\"form-control mb-2\" placeholder=\"Search account name...\" value={search} onChange={(e) => this.setState({ search: e.target.value })} />\r\n          <table className=\"table table-bordered table-sm\">\r\n            <thead className=\"thead-light\">\r\n              <tr>\r\n                <th>A/c No</th>\r\n                <th>Account Name</th>\r\n                <th>Contact</th>\r\n                <th>Email</th>\r\n                <th>Phone</th>\r\n                <th>Country</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filtered.map((acc) => (\r\n                <tr key={acc.id}>\r\n                  <td>\r\n                    <button className=\"btn btn-link p-0\" onClick={() => this.togglePreview(acc)}>\r\n                      {acc.acno}\r\n                    </button>\r\n                  </td>\r\n                  <td>{acc.acname}</td>\r\n                  <td>{acc.contact}</td>\r\n                  <td>{acc.email}</td>\r\n                  <td>{acc.phone}</td>\r\n                  <td>{Country.getCountryByCode(acc.country)?.name || \"\"}</td>\r\n                  <td>\r\n                    <Dropdown>\r\n                      <Dropdown.Toggle variant=\"outline-primary\" size=\"sm\">Actions</Dropdown.Toggle>\r\n                      <Dropdown.Menu>\r\n                        <Dropdown.Item onClick={() => this.toggleForm(acc)}>Edit</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => this.toggleForm(acc)}>Add Contact</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => this.handleDelete(acc.id)}>Delete</Dropdown.Item>\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n              {filtered.length === 0 && (\r\n                <tr>\r\n                  <td colSpan=\"7\" className=\"text-center\">\r\n                    No records found\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        {this.state.showForm ? this.renderForm() : this.state.showPreview ? this.renderPreview() : this.renderTable()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Datalist;\r\n"]},"metadata":{},"sourceType":"module"}