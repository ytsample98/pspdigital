{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\sales\\\\salestransactions\\\\invoice\\\\DirectBilling.js\";\nimport React, { Component } from 'react';\nimport { db } from '../../../firebase';\nimport { collection, getDocs, addDoc, doc, updateDoc, serverTimestamp } from 'firebase/firestore';\n\nclass DirectBilling extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      invoices: [],\n      customers: [],\n      showForm: false,\n      editingId: null,\n      formData: {\n        invoiceNo: '',\n        invoiceDate: new Date().toISOString().split('T')[0],\n        customer: '',\n        status: 'Entered',\n        invoiceValue: '',\n        lineItems: [] // ...other invoice fields...\n\n      }\n    };\n\n    this.fetchInvoices = async () => {\n      const snap = await getDocs(collection(db, 'invoices'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        invoices: data.reverse()\n      });\n    };\n\n    this.fetchCustomers = async () => {\n      const snap = await getDocs(collection(db, 'customers'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        customers: data\n      });\n    };\n\n    this.handleInputChange = (field, value) => {\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          [field]: value\n        }\n      }));\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        editingId,\n        formData,\n        invoices\n      } = this.state;\n      if (!formData.customer) return alert(\"Customer is required\");\n      if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\n\n      if (editingId) {\n        const {\n          id,\n          ...formDataWithoutId\n        } = formData;\n        await updateDoc(doc(db, \"invoices\", editingId), { ...formDataWithoutId,\n          status: \"Entered\",\n          updatedAt: serverTimestamp()\n        });\n      } else {\n        formData.invoiceNo = `INV${1000 + invoices.length}`;\n        await addDoc(collection(db, \"invoices\"), { ...formData,\n          status: \"Entered\",\n          createdAt: serverTimestamp()\n        });\n      }\n\n      this.setState({\n        showForm: false,\n        editingId: null,\n        formData: this.getEmptyInvoiceForm()\n      });\n      this.fetchInvoices();\n    };\n\n    this.getEmptyInvoiceForm = () => ({\n      invoiceNo: '',\n      invoiceDate: new Date().toISOString().split('T')[0],\n      customer: '',\n      status: 'Entered',\n      invoiceValue: '',\n      lineItems: [] // ...other invoice fields...\n\n    });\n\n    this.renderTable = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-4 full-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"Direct Billing\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.setState({\n        showForm: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, \"+ Add Invoice\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"Invoice No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, \"Invoice Value\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, \"Status\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, this.state.invoices.map((inv, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }\n    }, inv.invoiceNo), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }, inv.customer), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }, inv.invoiceDate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    }, inv.invoiceValue), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }, inv.status))), this.state.invoices.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"5\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, \"No invoices found.\")))))));\n\n    this.renderForm = () => {\n      const {\n        formData\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card full-height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: 'auto',\n          padding: '24px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }, \"Add Direct Invoice\"), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"form-sample\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }, \"Invoice No\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.invoiceNo,\n        onChange: e => this.handleInputChange('invoiceNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, \"Invoice Date\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"date\",\n        className: \"form-control form-control-sm\",\n        value: formData.invoiceDate,\n        onChange: e => this.handleInputChange('invoiceDate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, \"Customer\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.customer,\n        onChange: e => this.handleInputChange('customer', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }\n      }, \"Invoice Value\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.invoiceValue,\n        onChange: e => this.handleInputChange('invoiceValue', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-responsive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }\n      }, \"Qty\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }\n      }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }\n      }, \"Total\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }\n      }, (formData.lineItems || []).map((item, idx) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 23\n        }\n      }, item.itemCode), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 23\n        }\n      }, item.itemDescription), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 23\n        }\n      }, item.qty), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 23\n        }\n      }, item.unitPrice), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 23\n        }\n      }, item.total))), (!formData.lineItems || formData.lineItems.length === 0) && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"5\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 23\n        }\n      }, \"No items\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }\n      }, \"Save Invoice\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary ml-2\",\n        onClick: () => this.setState({\n          showForm: false,\n          editingId: null\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }\n      }, \"Cancel\")))));\n    };\n  }\n\n  componentDidMount() {\n    this.fetchInvoices();\n    this.fetchCustomers();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }\n    }, this.state.showForm ? this.renderForm() : this.renderTable());\n  }\n\n}\n\nexport default DirectBilling;","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/sales/salestransactions/invoice/DirectBilling.js"],"names":["React","Component","db","collection","getDocs","addDoc","doc","updateDoc","serverTimestamp","DirectBilling","state","invoices","customers","showForm","editingId","formData","invoiceNo","invoiceDate","Date","toISOString","split","customer","status","invoiceValue","lineItems","fetchInvoices","snap","data","docs","map","id","setState","reverse","fetchCustomers","handleInputChange","field","value","prev","handleSubmit","e","preventDefault","alert","length","formDataWithoutId","updatedAt","createdAt","getEmptyInvoiceForm","renderTable","inv","i","renderForm","flex","overflowY","padding","target","item","idx","itemCode","itemDescription","qty","unitPrice","total","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { db } from '../../../firebase';\r\nimport { collection, getDocs, addDoc, doc, updateDoc, serverTimestamp } from 'firebase/firestore';\r\n\r\nclass DirectBilling extends Component {\r\n  state = {\r\n    invoices: [],\r\n    customers: [],\r\n    showForm: false,\r\n    editingId: null,\r\n    formData: {\r\n      invoiceNo: '',\r\n      invoiceDate: new Date().toISOString().split('T')[0],\r\n      customer: '',\r\n      status: 'Entered',\r\n      invoiceValue: '',\r\n      lineItems: [],\r\n      // ...other invoice fields...\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchInvoices();\r\n    this.fetchCustomers();\r\n  }\r\n\r\n  fetchInvoices = async () => {\r\n    const snap = await getDocs(collection(db, 'invoices'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ invoices: data.reverse() });\r\n  };\r\n\r\n  fetchCustomers = async () => {\r\n    const snap = await getDocs(collection(db, 'customers'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ customers: data });\r\n  };\r\n\r\n  handleInputChange = (field, value) => {\r\n    this.setState(prev => ({\r\n      formData: { ...prev.formData, [field]: value }\r\n    }));\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { editingId, formData, invoices } = this.state;\r\n    if (!formData.customer) return alert(\"Customer is required\");\r\n    if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\r\n\r\n    if (editingId) {\r\n      const { id, ...formDataWithoutId } = formData;\r\n      await updateDoc(doc(db, \"invoices\", editingId), {\r\n        ...formDataWithoutId,\r\n        status: \"Entered\",\r\n        updatedAt: serverTimestamp()\r\n      });\r\n    } else {\r\n      formData.invoiceNo = `INV${1000 + invoices.length}`;\r\n      await addDoc(collection(db, \"invoices\"), {\r\n        ...formData,\r\n        status: \"Entered\",\r\n        createdAt: serverTimestamp()\r\n      });\r\n    }\r\n\r\n    this.setState({ showForm: false, editingId: null, formData: this.getEmptyInvoiceForm() });\r\n    this.fetchInvoices();\r\n  };\r\n\r\n  getEmptyInvoiceForm = () => ({\r\n    invoiceNo: '',\r\n    invoiceDate: new Date().toISOString().split('T')[0],\r\n    customer: '',\r\n    status: 'Entered',\r\n    invoiceValue: '',\r\n    lineItems: [],\r\n    // ...other invoice fields...\r\n  });\r\n\r\n  renderTable = () => (\r\n    <div className=\"card mt-4 full-height\">\r\n      <div className=\"card-body\">\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n          <h4 className=\"card-title\">Direct Billing</h4>\r\n          <button className=\"btn btn-primary\" onClick={() => this.setState({ showForm: true })}>+ Add Invoice</button>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-bordered table-hover\">\r\n            <thead className=\"thead-light\">\r\n              <tr>\r\n                <th>Invoice No</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Invoice Value</th>\r\n                <th>Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.invoices.map((inv, i) => (\r\n                <tr key={i}>\r\n                  <td>{inv.invoiceNo}</td>\r\n                  <td>{inv.customer}</td>\r\n                  <td>{inv.invoiceDate}</td>\r\n                  <td>{inv.invoiceValue}</td>\r\n                  <td>{inv.status}</td>\r\n                </tr>\r\n              ))}\r\n              {this.state.invoices.length === 0 && (\r\n                <tr><td colSpan=\"5\" className=\"text-center\">No invoices found.</td></tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  renderForm = () => {\r\n    const { formData } = this.state;\r\n    return (\r\n      <div className=\"card full-height\">\r\n        <div style={{ flex: 1, overflowY: 'auto', padding: '24px' }}>\r\n          <h4 className=\"mb-3\">Add Direct Invoice</h4>\r\n          <form className=\"form-sample\" onSubmit={this.handleSubmit}>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-3\">\r\n                <label>Invoice No</label>\r\n                <input type=\"text\" className=\"form-control form-control-sm\" value={formData.invoiceNo} onChange={e => this.handleInputChange('invoiceNo', e.target.value)} />\r\n              </div>\r\n              <div className=\"form-group col-md-3\">\r\n                <label>Invoice Date</label>\r\n                <input type=\"date\" className=\"form-control form-control-sm\" value={formData.invoiceDate} onChange={e => this.handleInputChange('invoiceDate', e.target.value)} />\r\n              </div>\r\n              <div className=\"form-group col-md-3\">\r\n                <label>Customer</label>\r\n                <input type=\"text\" className=\"form-control form-control-sm\" value={formData.customer} onChange={e => this.handleInputChange('customer', e.target.value)} />\r\n              </div>\r\n              <div className=\"form-group col-md-3\">\r\n                <label>Invoice Value</label>\r\n                <input type=\"number\" className=\"form-control form-control-sm\" value={formData.invoiceValue} onChange={e => this.handleInputChange('invoiceValue', e.target.value)} />\r\n              </div>\r\n            </div>\r\n            {/* Line items table */}\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Item Code</th>\r\n                    <th>Description</th>\r\n                    <th>Qty</th>\r\n                    <th>Unit Price</th>\r\n                    <th>Total</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {(formData.lineItems || []).map((item, idx) => (\r\n                    <tr key={idx}>\r\n                      <td>{item.itemCode}</td>\r\n                      <td>{item.itemDescription}</td>\r\n                      <td>{item.qty}</td>\r\n                      <td>{item.unitPrice}</td>\r\n                      <td>{item.total}</td>\r\n                    </tr>\r\n                  ))}\r\n                  {(!formData.lineItems || formData.lineItems.length === 0) && (\r\n                    <tr>\r\n                      <td colSpan=\"5\" className=\"text-center\">No items</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div className=\"text-right mt-3\">\r\n              <button type=\"submit\" className=\"btn btn-success\">Save Invoice</button>\r\n              <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => this.setState({ showForm: false, editingId: null })}>Cancel</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        {this.state.showForm ? this.renderForm() : this.renderTable()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DirectBilling;"]},"metadata":{},"sourceType":"module"}