{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\crm\\\\Activity.js\";\nimport React, { Component } from \"react\";\nimport { Table, Button, Form, Card, InputGroup } from \"react-bootstrap\";\nimport { db } from \"../../firebase\";\nimport { collection, getDocs, addDoc, deleteDoc, doc } from \"firebase/firestore\";\n\nclass Activity extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activities: [],\n      accounts: [],\n      addingRow: false,\n      newRow: {\n        acname: \"\",\n        contact: \"\",\n        phone: \"\",\n        email: \"\",\n        source: \"\",\n        remarks: \"\",\n        date: new Date().toISOString().split(\"T\")[0] // yyyy-mm-dd\n\n      },\n      contactOptions: [],\n      // pagination + search\n      searchQuery: \"\",\n      currentPage: 1,\n      pageSize: 10\n    };\n\n    this.fetchActivities = async () => {\n      const snap = await getDocs(collection(db, \"activities\"));\n      const activities = snap.docs.map((doc, idx) => ({\n        id: doc.id,\n        no: idx + 1,\n        ...doc.data()\n      }));\n      this.setState({\n        activities\n      });\n    };\n\n    this.fetchAccounts = async () => {\n      const snap = await getDocs(collection(db, \"accounts\"));\n      const accounts = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        accounts\n      });\n    };\n\n    this.handleNewRowChange = (field, value) => {\n      let updated = { ...this.state.newRow,\n        [field]: value\n      };\n\n      if (field === \"acname\") {\n        const acc = this.state.accounts.find(a => a.acname === value);\n        let contactOptions = [];\n\n        if (acc) {\n          if (acc.contact) {\n            contactOptions.push({\n              name: acc.contact,\n              designation: \"Main\",\n              phone: acc.phone || \"\",\n              email: acc.email || \"\"\n            });\n          }\n\n          if (acc.contactPersons && acc.contactPersons.length > 0) {\n            contactOptions = contactOptions.concat(acc.contactPersons);\n          }\n        }\n\n        updated.contact = \"\";\n        updated.phone = \"\";\n        updated.email = \"\";\n        this.setState({\n          contactOptions\n        });\n      }\n\n      if (field === \"contact\") {\n        const cp = this.state.contactOptions.find(c => c.name === value);\n\n        if (cp) {\n          updated.phone = cp.phone || \"\";\n          updated.email = cp.email || \"\";\n        }\n      }\n\n      if (field === \"remarks\" && value.length > 500) {\n        return; // max 500 chars\n      }\n\n      this.setState({\n        newRow: updated\n      });\n    };\n\n    this.saveNewRow = async () => {\n      const {\n        newRow\n      } = this.state;\n      await addDoc(collection(db, \"activities\"), newRow);\n      this.setState({\n        addingRow: false,\n        newRow: {\n          acname: \"\",\n          contact: \"\",\n          phone: \"\",\n          email: \"\",\n          source: \"\",\n          remarks: \"\",\n          date: new Date().toISOString().split(\"T\")[0]\n        }\n      });\n      this.fetchActivities();\n    };\n\n    this.deleteRow = async id => {\n      await deleteDoc(doc(db, \"activities\", id));\n      this.fetchActivities();\n    };\n\n    this.handleSearch = e => {\n      this.setState({\n        searchQuery: e.target.value,\n        currentPage: 1\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchActivities();\n    this.fetchAccounts();\n  } // fetch activity logs\n\n\n  render() {\n    const {\n      activities,\n      accounts,\n      addingRow,\n      newRow,\n      contactOptions,\n      searchQuery,\n      currentPage,\n      pageSize\n    } = this.state; // --- Filter activities ---\n\n    const filtered = activities.filter(a => {\n      var _a$acname, _a$contact, _a$remarks;\n\n      return ((_a$acname = a.acname) === null || _a$acname === void 0 ? void 0 : _a$acname.toLowerCase().includes(searchQuery.toLowerCase())) || ((_a$contact = a.contact) === null || _a$contact === void 0 ? void 0 : _a$contact.toLowerCase().includes(searchQuery.toLowerCase())) || ((_a$remarks = a.remarks) === null || _a$remarks === void 0 ? void 0 : _a$remarks.toLowerCase().includes(searchQuery.toLowerCase()));\n    }); // --- Pagination logic ---\n\n    const startIndex = (currentPage - 1) * pageSize;\n    const paginated = filtered.slice(startIndex, startIndex + pageSize);\n    const totalPages = Math.ceil(filtered.length / pageSize);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"p-3 shadow-sm bg-white border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, \"Activities\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex gap-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Search by account, contact, remarks...\",\n      value: searchQuery,\n      onChange: this.handleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    })), !addingRow && /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.setState({\n        addingRow: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, \"+ Add\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      bordered: true,\n      hover: true,\n      className: \"w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 19\n      }\n    }, \"Created Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }\n    }, \"Account Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 19\n      }\n    }, \"Contact Person\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 19\n      }\n    }, \"Phone\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }\n    }, \"Mail\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 19\n      }\n    }, \"Source\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 19\n      }\n    }, \"Remarks\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 19\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }\n    }, paginated.map(act => /*#__PURE__*/React.createElement(\"tr\", {\n      key: act.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }, act.date), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }, act.acname), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    }, act.contact), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }, act.phone), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }, act.email), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, act.source), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        maxWidth: \"300px\",\n        whiteSpace: \"pre-wrap\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, act.remarks), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      size: \"sm\",\n      onClick: () => this.deleteRow(act.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"mdi mdi-delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }\n    }))))), addingRow && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      value: newRow.date,\n      onChange: e => this.handleNewRowChange(\"date\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      value: newRow.acname,\n      onChange: e => this.handleNewRowChange(\"acname\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 25\n      }\n    }, \"Select Account\"), accounts.map(acc => /*#__PURE__*/React.createElement(\"option\", {\n      key: acc.id,\n      value: acc.acname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 27\n      }\n    }, acc.acname)))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      value: newRow.contact,\n      onChange: e => this.handleNewRowChange(\"contact\", e.target.value),\n      disabled: !newRow.acname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 25\n      }\n    }, \"Select Contact\"), contactOptions.map((cp, i) => /*#__PURE__*/React.createElement(\"option\", {\n      key: i,\n      value: cp.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 27\n      }\n    }, cp.name, cp.designation ? ` (${cp.designation})` : \"\")))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      value: newRow.phone,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      value: newRow.email,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      value: newRow.source,\n      onChange: e => this.handleNewRowChange(\"source\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 25\n      }\n    }, \"Select Source\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Call\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 25\n      }\n    }, \"Call\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Meeting\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 25\n      }\n    }, \"Meeting\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Demo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 25\n      }\n    }, \"Demo\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Mail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 25\n      }\n    }, \"Mail\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Whatsapp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 25\n      }\n    }, \"Whatsapp\"))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: 2,\n      value: newRow.remarks,\n      onChange: e => this.handleNewRowChange(\"remarks\", e.target.value),\n      placeholder: \"Remarks (max 500 chars)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 23\n      }\n    }, newRow.remarks.length, \"/500\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      size: \"sm\",\n      onClick: this.saveNewRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 23\n      }\n    }, \"Save\"), \" \", /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      size: \"sm\",\n      onClick: () => this.setState({\n        addingRow: false,\n        newRow: {\n          acname: \"\",\n          contact: \"\",\n          phone: \"\",\n          email: \"\",\n          source: \"\",\n          remarks: \"\",\n          date: new Date().toISOString().split(\"T\")[0]\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 23\n      }\n    }, \"Cancel\")))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 13\n      }\n    }, \"Showing \", startIndex + 1, \"\\u2013\", Math.min(startIndex + pageSize, filtered.length), \" of\", \" \", filtered.length), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-secondary\",\n      size: \"xs\",\n      disabled: currentPage === 1,\n      onClick: () => this.handlePageChange(currentPage - 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 15\n      }\n    }, \"<<\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 15\n      }\n    }, \"Page \", currentPage, \" of \", totalPages), \" \", /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-secondary\",\n      size: \"xs\",\n      disabled: currentPage === totalPages,\n      onClick: () => this.handlePageChange(currentPage + 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 15\n      }\n    }, \">>\")))));\n  }\n\n}\n\nexport default Activity;","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/crm/Activity.js"],"names":["React","Component","Table","Button","Form","Card","InputGroup","db","collection","getDocs","addDoc","deleteDoc","doc","Activity","state","activities","accounts","addingRow","newRow","acname","contact","phone","email","source","remarks","date","Date","toISOString","split","contactOptions","searchQuery","currentPage","pageSize","fetchActivities","snap","docs","map","idx","id","no","data","setState","fetchAccounts","handleNewRowChange","field","value","updated","acc","find","a","push","name","designation","contactPersons","length","concat","cp","c","saveNewRow","deleteRow","handleSearch","e","target","handlePageChange","page","componentDidMount","render","filtered","filter","toLowerCase","includes","startIndex","paginated","slice","totalPages","Math","ceil","act","maxWidth","whiteSpace","i","min"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Table, Button, Form, Card, InputGroup } from \"react-bootstrap\";\r\nimport { db } from \"../../firebase\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  addDoc,\r\n  deleteDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\n\r\nclass Activity extends Component {\r\n  state = {\r\n    activities: [],\r\n    accounts: [],\r\n    addingRow: false,\r\n    newRow: {\r\n      acname: \"\",\r\n      contact: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      source: \"\",\r\n      remarks: \"\",\r\n      date: new Date().toISOString().split(\"T\")[0], // yyyy-mm-dd\r\n    },\r\n    contactOptions: [],\r\n    // pagination + search\r\n    searchQuery: \"\",\r\n    currentPage: 1,\r\n    pageSize: 10,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchActivities();\r\n    this.fetchAccounts();\r\n  }\r\n\r\n  // fetch activity logs\r\n  fetchActivities = async () => {\r\n    const snap = await getDocs(collection(db, \"activities\"));\r\n    const activities = snap.docs.map((doc, idx) => ({\r\n      id: doc.id,\r\n      no: idx + 1,\r\n      ...doc.data(),\r\n    }));\r\n    this.setState({ activities });\r\n  };\r\n\r\n  // fetch accounts + contacts from datalist\r\n  fetchAccounts = async () => {\r\n    const snap = await getDocs(collection(db, \"accounts\"));\r\n    const accounts = snap.docs.map((doc) => ({\r\n      id: doc.id,\r\n      ...doc.data(),\r\n    }));\r\n    this.setState({ accounts });\r\n  };\r\n\r\n  handleNewRowChange = (field, value) => {\r\n    let updated = { ...this.state.newRow, [field]: value };\r\n\r\n    if (field === \"acname\") {\r\n      const acc = this.state.accounts.find((a) => a.acname === value);\r\n      let contactOptions = [];\r\n\r\n      if (acc) {\r\n        if (acc.contact) {\r\n          contactOptions.push({\r\n            name: acc.contact,\r\n            designation: \"Main\",\r\n            phone: acc.phone || \"\",\r\n            email: acc.email || \"\",\r\n          });\r\n        }\r\n        if (acc.contactPersons && acc.contactPersons.length > 0) {\r\n          contactOptions = contactOptions.concat(acc.contactPersons);\r\n        }\r\n      }\r\n\r\n      updated.contact = \"\";\r\n      updated.phone = \"\";\r\n      updated.email = \"\";\r\n      this.setState({ contactOptions });\r\n    }\r\n\r\n    if (field === \"contact\") {\r\n      const cp = this.state.contactOptions.find((c) => c.name === value);\r\n      if (cp) {\r\n        updated.phone = cp.phone || \"\";\r\n        updated.email = cp.email || \"\";\r\n      }\r\n    }\r\n\r\n    if (field === \"remarks\" && value.length > 500) {\r\n      return; // max 500 chars\r\n    }\r\n\r\n    this.setState({ newRow: updated });\r\n  };\r\n\r\n  saveNewRow = async () => {\r\n    const { newRow } = this.state;\r\n    await addDoc(collection(db, \"activities\"), newRow);\r\n\r\n    this.setState({\r\n      addingRow: false,\r\n      newRow: {\r\n        acname: \"\",\r\n        contact: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        source: \"\",\r\n        remarks: \"\",\r\n        date: new Date().toISOString().split(\"T\")[0],\r\n      },\r\n    });\r\n    this.fetchActivities();\r\n  };\r\n\r\n  deleteRow = async (id) => {\r\n    await deleteDoc(doc(db, \"activities\", id));\r\n    this.fetchActivities();\r\n  };\r\n\r\n  // Search filter\r\n  handleSearch = (e) => {\r\n    this.setState({ searchQuery: e.target.value, currentPage: 1 });\r\n  };\r\n\r\n  // Pagination controls\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      activities,\r\n      accounts,\r\n      addingRow,\r\n      newRow,\r\n      contactOptions,\r\n      searchQuery,\r\n      currentPage,\r\n      pageSize,\r\n    } = this.state;\r\n\r\n    // --- Filter activities ---\r\n    const filtered = activities.filter(\r\n      (a) =>\r\n        a.acname?.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        a.contact?.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        a.remarks?.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n\r\n    // --- Pagination logic ---\r\n    const startIndex = (currentPage - 1) * pageSize;\r\n    const paginated = filtered.slice(startIndex, startIndex + pageSize);\r\n    const totalPages = Math.ceil(filtered.length / pageSize);\r\n\r\n    return (\r\n      <div className=\"container-fluid mt-4\">\r\n        <Card className=\"p-3 shadow-sm bg-white border-0\">\r\n          <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n            <h4>Activities</h4>\r\n            <div className=\"d-flex gap-2\">\r\n              {/* Search box */}\r\n              <InputGroup>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Search by account, contact, remarks...\"\r\n                  value={searchQuery}\r\n                  onChange={this.handleSearch}\r\n                />\r\n              </InputGroup>\r\n\r\n              {!addingRow && (\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={() => this.setState({ addingRow: true })}\r\n                >\r\n                  + Add\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"table-responsive\">\r\n            <Table bordered hover className=\"w-100\">\r\n              <thead className=\"thead-light\">\r\n                <tr>\r\n                  <th>Created Date</th>\r\n                  <th>Account Name</th>\r\n                  <th>Contact Person</th>\r\n                  <th>Phone</th>\r\n                  <th>Mail</th>\r\n                  <th>Source</th>\r\n                  <th>Remarks</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {paginated.map((act) => (\r\n                  <tr key={act.id}>\r\n                    <td>{act.date}</td>\r\n                    <td>{act.acname}</td>\r\n                    <td>{act.contact}</td>\r\n                    <td>{act.phone}</td>\r\n                    <td>{act.email}</td>\r\n                    <td>{act.source}</td>\r\n                    <td style={{ maxWidth: \"300px\", whiteSpace: \"pre-wrap\" }}>\r\n                      {act.remarks}\r\n                    </td>\r\n                    <td>\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        size=\"sm\"\r\n                        onClick={() => this.deleteRow(act.id)}\r\n                      >\r\n                        <i className=\"mdi mdi-delete\"></i>\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n\r\n                {addingRow && (\r\n                  <tr>\r\n                    {/* created date */}\r\n                    <td>\r\n                      <Form.Control\r\n                        type=\"date\"\r\n                        value={newRow.date}\r\n                        onChange={(e) =>\r\n                          this.handleNewRowChange(\"date\", e.target.value)\r\n                        }\r\n                      />\r\n                    </td>\r\n\r\n                    {/* account name */}\r\n                    <td>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        value={newRow.acname}\r\n                        onChange={(e) =>\r\n                          this.handleNewRowChange(\"acname\", e.target.value)\r\n                        }\r\n                      >\r\n                        <option value=\"\">Select Account</option>\r\n                        {accounts.map((acc) => (\r\n                          <option key={acc.id} value={acc.acname}>\r\n                            {acc.acname}\r\n                          </option>\r\n                        ))}\r\n                      </Form.Control>\r\n                    </td>\r\n\r\n                    {/* contact */}\r\n                    <td>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        value={newRow.contact}\r\n                        onChange={(e) =>\r\n                          this.handleNewRowChange(\"contact\", e.target.value)\r\n                        }\r\n                        disabled={!newRow.acname}\r\n                      >\r\n                        <option value=\"\">Select Contact</option>\r\n                        {contactOptions.map((cp, i) => (\r\n                          <option key={i} value={cp.name}>\r\n                            {cp.name}\r\n                            {cp.designation ? ` (${cp.designation})` : \"\"}\r\n                          </option>\r\n                        ))}\r\n                      </Form.Control>\r\n                    </td>\r\n\r\n                    {/* phone */}\r\n                    <td>\r\n                      <Form.Control type=\"text\" value={newRow.phone} disabled />\r\n                    </td>\r\n\r\n                    {/* mail */}\r\n                    <td>\r\n                      <Form.Control type=\"text\" value={newRow.email} disabled />\r\n                    </td>\r\n\r\n                    {/* source */}\r\n                    <td>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        value={newRow.source}\r\n                        onChange={(e) =>\r\n                          this.handleNewRowChange(\"source\", e.target.value)\r\n                        }\r\n                      >\r\n                        <option value=\"\">Select Source</option>\r\n                        <option value=\"Call\">Call</option>\r\n                        <option value=\"Meeting\">Meeting</option>\r\n                        <option value=\"Demo\">Demo</option>\r\n                        <option value=\"Mail\">Mail</option>\r\n                        <option value=\"Whatsapp\">Whatsapp</option>\r\n                      </Form.Control>\r\n                    </td>\r\n\r\n                    {/* remarks */}\r\n                    <td>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={2}\r\n                        value={newRow.remarks}\r\n                        onChange={(e) =>\r\n                          this.handleNewRowChange(\"remarks\", e.target.value)\r\n                        }\r\n                        placeholder=\"Remarks (max 500 chars)\"\r\n                      />\r\n                      <small>{newRow.remarks.length}/500</small>\r\n                    </td>\r\n\r\n                    {/* action */}\r\n                    <td>\r\n                      <Button\r\n                        variant=\"success\"\r\n                        size=\"sm\"\r\n                        onClick={this.saveNewRow}\r\n                      >\r\n                        Save\r\n                      </Button>{\" \"}\r\n                      <Button\r\n                        variant=\"secondary\"\r\n                        size=\"sm\"\r\n                        onClick={() =>\r\n                          this.setState({\r\n                            addingRow: false,\r\n                            newRow: {\r\n                              acname: \"\",\r\n                              contact: \"\",\r\n                              phone: \"\",\r\n                              email: \"\",\r\n                              source: \"\",\r\n                              remarks: \"\",\r\n                              date: new Date().toISOString().split(\"T\")[0],\r\n                            },\r\n                          })\r\n                        }\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n\r\n          {/* Pagination controls */}\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <div>\r\n              Showing {startIndex + 1}–\r\n              {Math.min(startIndex + pageSize, filtered.length)} of{\" \"}\r\n              {filtered.length}\r\n            </div>\r\n            <div>\r\n              <Button\r\n                variant=\"outline-secondary\"\r\n                size=\"xs\"\r\n                disabled={currentPage === 1}\r\n                onClick={() => this.handlePageChange(currentPage - 1)}\r\n              >\r\n                &lt;&lt;\r\n              </Button>{\" \"}\r\n              <span>\r\n                Page {currentPage} of {totalPages}\r\n              </span>{\" \"}\r\n              <Button\r\n                variant=\"outline-secondary\"\r\n                size=\"xs\"\r\n                disabled={currentPage === totalPages}\r\n                onClick={() => this.handlePageChange(currentPage + 1)}\r\n              >\r\n                &gt;&gt;\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Activity;\r\n"]},"metadata":{},"sourceType":"module"}