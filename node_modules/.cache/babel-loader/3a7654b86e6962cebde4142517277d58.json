{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\panelone\\\\Order.js\";\nimport React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport { db } from '../../firebase';\nimport { collection, getDocs, addDoc, doc, updateDoc, serverTimestamp } from 'firebase/firestore';\nimport html2canvas from 'html2canvas';\nimport { jsPDF } from 'jspdf';\nimport { withRouter } from 'react-router-dom';\nimport { recalculateTotals, getTaxDetailsFromGroup } from './calculation';\n\nconst numberToWords = num => {\n  const a = ['', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine', 'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];\n  const b = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\n  if (num === 0) return 'Zero';\n  if (num < 20) return a[num];\n  if (num < 100) return b[Math.floor(num / 10)] + ' ' + a[num % 10];\n  if (num < 1000) return a[Math.floor(num / 100)] + ' Hundred ' + numberToWords(num % 100);\n  if (num < 100000) return numberToWords(Math.floor(num / 1000)) + ' Thousand ' + numberToWords(num % 1000);\n  return 'Amount too large';\n};\n\nclass Order extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: 'co',\n      breakdownItems: [],\n      orders: [],\n      customers: [],\n      products: [],\n      despatchModes: [],\n      paymentTerms: [],\n      showForm: false,\n      editingId: null,\n      overlayType: '',\n      overlaySearch: '',\n      productOverlayVisible: false,\n      productOverlaySearch: '',\n      selectedProductIds: [],\n      taxGroups: [],\n      showTaxOverlay: false,\n      currentTaxIdx: null,\n      breakdownType: 'Amount',\n      formData: {\n        orderNo: '',\n        orderDate: new Date().toISOString().split('T')[0],\n        orderType: 'Standard',\n        customer: '',\n        status: 'Entered',\n        // Static 'Entered'\n        choose: 'Service',\n        qrefNo: '',\n        impExp: 'None',\n        currency: '',\n        conversionRate: '',\n        taxAmount: '',\n        orderValue: '',\n        discountPercent: 0,\n        discountAmount: 0,\n        afterDiscount: 0,\n        billTo: '',\n        shipTo: '',\n        despatchMode: 'By Air',\n        paymentTerms: '',\n        freightCharges: '',\n        freighttaxAmount: '',\n        taxPercent: '',\n        packingCharges: '',\n        lineItems: []\n      }\n    };\n    this.customerInputRef = React.createRef();\n\n    this.formatAddress = addr => {\n      if (!addr) return '';\n      if (typeof addr === 'string') return addr;\n      return [addr.address, [addr.city, addr.state, addr.country].filter(Boolean).join(', '), addr.zip].filter(Boolean).join('\\n');\n    };\n\n    this.calculateOrderTotals = () => {\n      const {\n        impExp,\n        freightCharges,\n        taxPercent,\n        packingCharges,\n        lineItems\n      } = this.state.formData;\n      let freight = parseFloat(freightCharges) || 0;\n      let packing = parseFloat(packingCharges) || 0;\n      let taxOnFreight = 0;\n\n      if (['None', 'CIF'].includes(impExp)) {\n        taxOnFreight = freight * (parseFloat(taxPercent) || 0) / 100;\n      }\n\n      let lineTotal = 0;\n      let itemTaxTotal = 0;\n      const updatedLineItems = lineItems.map(item => {\n        var _item$taxGroupNames;\n\n        const qty = parseFloat(item.qty || 1);\n        const unitPrice = parseFloat(item.unitPrice || 0);\n        const baseTotal = unitPrice * qty;\n        const groupNames = ((_item$taxGroupNames = item.taxGroupNames) === null || _item$taxGroupNames === void 0 ? void 0 : _item$taxGroupNames.length) ? item.taxGroupNames : [item.taxGroup || ''];\n        let percent = 0;\n        let amount = 0;\n        groupNames.forEach(groupName => {\n          const group = this.state.taxGroups.find(t => t.groupName === groupName);\n\n          if (group && Array.isArray(group.lineItems)) {\n            group.lineItems.forEach(comp => {\n              const val = parseFloat(comp.percentOrAmt || 0);\n              if (comp.type === 'Percentage') percent += val;\n              if (comp.type === 'Amount') amount += val;\n            });\n          }\n        });\n        const taxAmt = baseTotal * percent / 100 + amount;\n        const total = baseTotal + taxAmt;\n        item.taxAmt = taxAmt.toFixed(2);\n        item.total = total.toFixed(2);\n        return item;\n      });\n      const totalTaxAmount = itemTaxTotal + taxOnFreight;\n      const orderValue = lineTotal + freight + packing + itemTaxTotal;\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          taxAmount: totalTaxAmount.toFixed(2),\n          // âœ… Top-level field\n          orderValue: orderValue.toFixed(2),\n          lineItems: updatedLineItems\n        }\n      }));\n    };\n\n    this.handleDiscountChange = (field, value) => {\n      let {\n        formData\n      } = this.state;\n      formData[field] = value;\n      const quoteValue = parseFloat(formData.quoteValue || 0);\n      const discountPercent = parseFloat(formData.discountPercent || 0);\n      const discountAmount = quoteValue * discountPercent / 100;\n      const afterDiscountValue = quoteValue - discountAmount;\n      formData.discountAmount = discountAmount;\n      formData.afterDiscountValue = afterDiscountValue;\n      this.setState({\n        formData\n      });\n    };\n\n    this.handleConvertToInvoice = () => {\n      const {\n        formData\n      } = this.state;\n      const invoiceData = {\n        customer: formData.customer,\n        qrefNo: formData.qrefNo,\n        impExp: formData.impExp,\n        billTo: formData.billTo,\n        shipTo: formData.shipTo,\n        currency: formData.currency,\n        conversionRate: formData.conversionRate,\n        despatchMode: formData.despatchMode,\n        paymentTerms: formData.paymentTerms,\n        freightCharges: formData.freightCharges,\n        packingCharges: formData.packingCharges,\n        taxPercent: formData.taxPercent,\n        lineItems: formData.lineItems,\n        orderDate: formData.orderDate,\n        orderNo: formData.orderNo,\n        InvoiceDate: new Date().toISOString().split('T')[0]\n      };\n      sessionStorage.setItem('invoiceDataFromOrder', JSON.stringify(invoiceData));\n      this.props.history.push({\n        pathname: '/panelone/Invoice',\n        state: {\n          invoiceDataFromOrder: invoiceData\n        } // <- add this line\n\n      });\n    };\n\n    this.fetchTaxGroups = async () => {\n      const snap = await getDocs(collection(db, 'taxGroups'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        taxGroups: data\n      });\n    };\n\n    this.fetchorders = async () => {\n      const snap = await getDocs(collection(db, 'orders'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        orders: data.reverse()\n      });\n    };\n\n    this.fetchCustomers = async () => {\n      const snap = await getDocs(collection(db, 'customers'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        customers: data\n      });\n    };\n\n    this.fetchProducts = async () => {\n      const snap = await getDocs(collection(db, 'products'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        products: data\n      });\n    };\n\n    this.fetchDespatchModes = async () => {\n      const snap = await getDocs(collection(db, 'modes'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        despatchModes: data\n      });\n    };\n\n    this.fetchPaymentTerms = async () => {\n      const snap = await getDocs(collection(db, 'paymentTerms'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        paymentTerms: data\n      });\n    };\n\n    this.handleInputChange = (field, value) => {\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          [field]: value\n        }\n      }));\n    };\n\n    this.handleBreakdownChange = (idx, field, value) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        items[idx][field] = value;\n        return {\n          breakdownItems: items\n        };\n      });\n    };\n\n    this.handleBreakdownTypeChange = val => {\n      this.setState({\n        breakdownType: val\n      });\n    };\n\n    this.handleAddInlineSubProduct = (breakdownIdx, initial = null) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        const item = items[breakdownIdx] ? { ...items[breakdownIdx]\n        } : null;\n        if (!item) return {};\n        const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\n        const defaultSP = {\n          name: '',\n          value: ''\n        };\n        subProducts.push(initial ? { ...defaultSP,\n          ...initial\n        } : defaultSP);\n        item.subProducts = subProducts;\n        items[breakdownIdx] = item;\n        return {\n          breakdownItems: items\n        };\n      });\n    };\n\n    this.handleRemoveSubProduct = (biIdx, spIdx) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        if (!items[biIdx]) return {};\n        const item = { ...items[biIdx]\n        };\n        const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\n        subProducts.splice(spIdx, 1);\n        item.subProducts = subProducts;\n        items[biIdx] = item;\n        return {\n          breakdownItems: items\n        };\n      });\n    };\n\n    this.handleSubProductChange = (biIdx, spIdx, field, value) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        if (!items[biIdx]) return {};\n        const item = { ...items[biIdx]\n        };\n        const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\n        const sp = { ...subProducts[spIdx],\n          [field]: value\n        };\n        subProducts[spIdx] = sp;\n        item.subProducts = subProducts;\n        items[biIdx] = item;\n        return {\n          breakdownItems: items\n        };\n      });\n    };\n\n    this.getSubProductsSum = bi => {\n      const {\n        breakdownType,\n        formData\n      } = this.state;\n      const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\n        acc[li.itemCode] = parseFloat(li.total || 0) || 0;\n        return acc;\n      }, {});\n      const mainTotal = itemTotals[bi.productId] || 0;\n      const subs = Array.isArray(bi.subProducts) ? bi.subProducts : [];\n      return subs.reduce((s, sp) => {\n        const val = parseFloat(sp.value || 0) || 0;\n\n        if (breakdownType === 'Percentage') {\n          return s + mainTotal * val / 100;\n        }\n\n        return s + val;\n      }, 0);\n    };\n\n    this.isBreakdownValid = () => {\n      const {\n        breakdownItems,\n        formData\n      } = this.state;\n      const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\n        acc[li.itemCode] = parseFloat(li.total || 0) || 0;\n        return acc;\n      }, {});\n      const TOL = 0.01;\n\n      for (let bi of breakdownItems) {\n        const mainTotal = itemTotals[bi.productId] || 0;\n\n        if (mainTotal > 0) {\n          const subSum = this.getSubProductsSum(bi);\n          if (Math.abs(subSum - mainTotal) > TOL) return false;\n        }\n      }\n\n      return true;\n    };\n\n    this.handleLineItemChange = (idx, field, value) => {\n      const updatedItems = [...this.state.formData.lineItems];\n      updatedItems[idx] = { ...updatedItems[idx],\n        [field]: value\n      };\n      const {\n        updatedLineItems,\n        freighttaxAmount,\n        taxAmount,\n        quoteValue\n      } = recalculateTotals({\n        lineItems: updatedItems,\n        freightCharges: this.state.formData.freightCharges,\n        packingCharges: this.state.formData.packingCharges,\n        taxPercent: this.state.formData.taxPercent,\n        taxGroups: this.state.taxGroups\n      });\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          lineItems: updatedLineItems,\n          freighttaxAmount,\n          taxAmount,\n          quoteValue\n        }\n      }));\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        editingId,\n        formData,\n        orders,\n        breakdownItems\n      } = this.state;\n      if (!formData.customer) return alert(\"Customer is required\");\n      if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\n      formData.breakdownItems = breakdownItems;\n\n      if (editingId) {\n        // Update existing order\n        await updateDoc(doc(db, \"orders\", editingId), { ...formData,\n          status: \"Entered\",\n          // stays Entered until approval\n          updatedAt: serverTimestamp()\n        });\n      } else {\n        // Create new order\n        formData.orderNo = `CO${1000 + orders.length}`;\n        await addDoc(collection(db, \"orders\"), { ...formData,\n          status: \"Entered\",\n          // new order starts as Entered\n          createdAt: serverTimestamp()\n        });\n      }\n\n      this.setState({\n        showForm: false,\n        editingId: null\n      });\n      this.fetchorders();\n    };\n\n    this.loadOrderPreview = order => {\n      this.setState({\n        selectedOrder: order,\n        previewOrderMode: true\n      });\n    };\n\n    this.loadorderForEdit = order => {\n      this.setState({\n        formData: { ...order,\n          lineItems: Array.isArray(order.lineItems) ? order.lineItems : [] // Ensure array\n\n        },\n        breakdownItems: Array.isArray(order.breakdownItems) ? order.breakdownItems : [],\n        // âœ… Load it here\n        editingId: order.id,\n        showForm: true,\n        activeTab: 'co'\n      }, () => {\n        if (this.customerInputRef.current) {\n          this.customerInputRef.current.value = order.customer;\n        }\n      });\n    };\n\n    this.toggleTaxGroupSelection = (groupName, lineIdx, isChecked) => {\n      const formData = { ...this.state.formData\n      };\n      const item = formData.lineItems[lineIdx];\n      if (!item.taxGroupNames) item.taxGroupNames = [];\n\n      if (isChecked) {\n        if (!item.taxGroupNames.includes(groupName)) {\n          item.taxGroupNames.push(groupName);\n        }\n      } else {\n        item.taxGroupNames = item.taxGroupNames.filter(g => g !== groupName);\n      }\n\n      this.setState({\n        formData\n      }, () => this.calculateOrderTotals());\n    };\n\n    this.showOverlay = type => this.setState({\n      overlayType: type,\n      overlaySearch: ''\n    });\n\n    this.hideOverlay = () => this.setState({\n      overlayType: '',\n      overlaySearch: ''\n    });\n\n    this.selectOverlayValue = value => {\n      if (this.state.overlayType === 'customer') {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            customer: value.custname || value.custcode || '',\n            // Use custname or custcode\n            billTo: this.formatAddress(value.billTo),\n            shipTo: this.formatAddress(value.shipTo),\n            currency: value.currency || '' // despatchMode: value.despatchMode || '', // No auto-fill for despatch mode\n            // paymentTerms: value.paymentTerms || '' // No auto-fill for payment terms\n\n          },\n          overlayType: '',\n          overlaySearch: ''\n        }), () => {\n          if (this.customerInputRef.current) {\n            this.customerInputRef.current.value = value.custname || value.custcode || '';\n          }\n        });\n      }\n    };\n\n    this.renderOverlay = () => {\n      const {\n        overlayType,\n        overlaySearch,\n        customers,\n        despatchModes,\n        paymentTerms\n      } = this.state;\n\n      const getFilteredRows = (list, nameKey = 'name', codeKey = 'shortName') => list.filter(item => (item[nameKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()) || (item[codeKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()));\n\n      const handleSelect = item => {\n        if (overlayType === 'customer') {\n          this.selectOverlayValue(item);\n        } else if (overlayType === 'despatchMode') {\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              despatchMode: item.name\n            },\n            overlayType: '',\n            overlaySearch: ''\n          }));\n        } else if (overlayType === 'paymentTerms') {\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              paymentTerms: item.name\n            },\n            overlayType: '',\n            overlaySearch: ''\n          }));\n        }\n      };\n\n      let title = '';\n      let headers = [];\n      let rows = [];\n\n      if (overlayType === 'customer') {\n        title = 'Select Customer';\n        headers = ['Name', 'Code', 'Short Name'];\n        rows = getFilteredRows(customers, 'custname', 'custcode');\n      } else if (overlayType === 'despatchMode') {\n        title = 'Select Despatch Mode';\n        headers = ['Name'];\n        rows = getFilteredRows(despatchModes);\n      } else if (overlayType === 'paymentTerms') {\n        title = 'Select Payment Terms';\n        headers = ['Name'];\n        rows = getFilteredRows(paymentTerms);\n      } else {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 9\n        }\n      }, title), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: `Search ${overlayType}...`,\n        value: overlaySearch,\n        onChange: e => this.setState({\n          overlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 15\n        }\n      }, headers.map((h, i) => /*#__PURE__*/React.createElement(\"th\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 40\n        }\n      }, h)))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 13\n        }\n      }, rows.map((item, i) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id || i,\n        onClick: () => handleSelect(item),\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 17\n        }\n      }, headers.map((h, j) => /*#__PURE__*/React.createElement(\"td\", {\n        key: j,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 21\n        }\n      }, overlayType === 'customer' ? h === 'Name' ? item.custname : h === 'Code' ? item.custcode : item.custshortName : h === 'Name' ? item.name : item.shortName)))), rows.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: headers.length,\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 19\n        }\n      }, \"No records found\"))))), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm mt-2\",\n        onClick: this.hideOverlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 9\n        }\n      }, \"Cancel\")));\n    };\n\n    this.renderTaxOverlay = () => {\n      const {\n        taxGroups,\n        currentTaxIdx,\n        formData\n      } = this.state;\n      if (currentTaxIdx === null) return null;\n      const item = formData.lineItems[currentTaxIdx];\n      const selected = new Set(item.taxGroupNames || []);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'fixed',\n          zIndex: 1000,\n          top: '10%',\n          left: '15%',\n          background: '#fff',\n          border: '1px solid #ccc',\n          padding: '20px',\n          boxShadow: '0 0 10px rgba(0,0,0,0.3)',\n          width: '70%',\n          maxHeight: '70vh',\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 7\n        }\n      }, \"Select Tax Groups\"), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-sm table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 24\n        }\n      }, \"Group\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 38\n        }\n      }, \"Components\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 57\n        }\n      }, \"%\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 9\n        }\n      }, taxGroups.map(tg => /*#__PURE__*/React.createElement(\"tr\", {\n        key: tg.groupName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: selected.has(tg.groupName),\n        onChange: e => this.toggleTaxGroupSelection(tg.groupName, currentTaxIdx, e.target.checked),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 15\n        }\n      }, tg.groupName), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 15\n        }\n      }, tg.lineItems.map(li => li.component).join(', ')), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 15\n        }\n      }, tg.lineItems.map(li => li.percentOrAmt).join(', ')))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-success\",\n        onClick: () => this.setState({\n          showTaxOverlay: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 9\n        }\n      }, \"Done\")));\n    };\n\n    this.renderOrderPreview = () => {\n      var _o$lineItems;\n\n      const o = this.state.selectedOrder;\n      if (!o) return null;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card mt-4 full-height p-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 9\n        }\n      }, \"Order Preview - \", o.orderNo), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-info mr-2\",\n        onClick: () => this.loadorderForEdit(o),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-success\",\n        onClick: this.handleConvertToInvoice,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 11\n        }\n      }, \"Convert to Invoice\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 35\n        }\n      }, \"Customer:\"), \" \", o.customer), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 35\n        }\n      }, \"Date:\"), \" \", o.orderDate), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 35\n        }\n      }, \"Status:\"), \" \", o.status)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 35\n        }\n      }, \"Bill To:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 50\n        }\n      }), o.billTo), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 35\n        }\n      }, \"Ship To:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 50\n        }\n      }), o.shipTo)), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 7\n        }\n      }, \"Line Items\"), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 20\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 38\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 58\n        }\n      }, \"Qty\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 70\n        }\n      }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 89\n        }\n      }, \"Total\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 9\n        }\n      }, (_o$lineItems = o.lineItems) === null || _o$lineItems === void 0 ? void 0 : _o$lineItems.map((item, i) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 15\n        }\n      }, item.itemCode), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 15\n        }\n      }, item.itemDescription), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 15\n        }\n      }, item.qty), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 15\n        }\n      }, item.unitPrice), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 15\n        }\n      }, item.total))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 35\n        }\n      }, \"Total:\"), \" \", o.orderValue), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary mt-3\",\n        onClick: () => this.setState({\n          previewOrderMode: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 7\n        }\n      }, \"Back to List\"));\n    };\n\n    this.renderProductOverlay = () => {\n      const {\n        products,\n        productOverlaySearch,\n        selectedProductIds\n      } = this.state;\n      const filtered = products.filter(p => (p.ptshortName || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) || (p.ptdescription || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) || (p.itemCode || '').toLowerCase().includes(productOverlaySearch.toLowerCase()));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 13\n        }\n      }, \"Select Products\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-success btn-sm\",\n        onClick: () => {\n          const selectedProducts = products.filter(p => this.state.selectedProductIds.includes(p.id));\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              lineItems: [...prev.formData.lineItems, ...selectedProducts.filter(p => !prev.formData.lineItems.some(item => item.id === p.id)).map(p => ({\n                id: p.id,\n                itemCode: p.productId || '',\n                itemDescription: p.ptdescription || '',\n                itemType: p.itemType || '',\n                materialType: p.materialType || '',\n                onHand: p.onHand || 0,\n                taxGroup: p.taxGroup || '',\n                custPartNo: p.custPartNo || '',\n                // Assuming this is cust part table\n                hsnNo: p.hsnNo || '',\n                // Assuming HSN No.\n                unitPrice: p.unitPrice || 0,\n                qty: 1,\n                total: (p.unitPrice || 0).toFixed(2)\n              }))]\n            },\n            productOverlayVisible: false,\n            selectedProductIds: []\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 13\n        }\n      }, \"Add Selected\")), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: \"Search products...\",\n        value: productOverlaySearch,\n        onChange: e => this.setState({\n          productOverlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 19\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 19\n        }\n      }, \"Item Desc\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 19\n        }\n      }, \"Item Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 19\n        }\n      }, \"Material Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 816,\n          columnNumber: 19\n        }\n      }, \"On Hand\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 817,\n          columnNumber: 19\n        }\n      }, \"Tax Grp\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 19\n        }\n      }, \"Cust Part No\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 15\n        }\n      }, filtered.map(p => /*#__PURE__*/React.createElement(\"tr\", {\n        key: p.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: selectedProductIds.includes(p.id),\n        onChange: e => {\n          const checked = e.target.checked;\n          this.setState(prev => ({\n            selectedProductIds: checked ? [...prev.selectedProductIds, p.id] : prev.selectedProductIds.filter(id => id !== p.id)\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 21\n        }\n      }, p.productId), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 21\n        }\n      }, p.ptdescription || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 21\n        }\n      }, p.itemType || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 21\n        }\n      }, p.materialType || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 21\n        }\n      }, p.onHand || 0), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 21\n        }\n      }, p.taxGroup || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 21\n        }\n      }, p.custPartNo || ''))), filtered.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"8\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 849,\n          columnNumber: 21\n        }\n      }, \"No products found\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 13\n        }\n      }, \"Page 1 of 1\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        onClick: () => this.setState({\n          productOverlayVisible: false,\n          selectedProductIds: []\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 13\n        }\n      }, \"Cancel\"))));\n    };\n\n    this.renderorderTable = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-4 full-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 866,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 867,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 868,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 869,\n        columnNumber: 11\n      }\n    }, \"Orders\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.setState({\n        showForm: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870,\n        columnNumber: 11\n      }\n    }, \"+ Add Order\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 872,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 873,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 874,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 17\n      }\n    }, \"Order No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 17\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 17\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 17\n      }\n    }, \"Order Value\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 880,\n        columnNumber: 17\n      }\n    }, \"After Discount\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 881,\n        columnNumber: 17\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 882,\n        columnNumber: 17\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 13\n      }\n    }, this.state.orders.map((q, i) => {\n      let statusClass = \"badge-secondary\";\n      if (q.status === \"Entered\") statusClass = \"badge-warning\";else if (q.status === \"Submitted\") statusClass = \"badge-info\";else if (q.status === \"Approved\") statusClass = \"badge-success\";else if (q.status === \"Rejected\") statusClass = \"badge-danger\";\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        style: {\n          fontSize: '14px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 894,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-link p-0\",\n        onClick: () => this.loadOrderPreview(q),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 896,\n          columnNumber: 21\n        }\n      }, q.orderNo)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 19\n        }\n      }, q.customer), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 19\n        }\n      }, q.orderDate), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 905,\n          columnNumber: 19\n        }\n      }, q.orderValue), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 19\n        }\n      }, q.afterDiscount), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 907,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: `badge ${statusClass}`,\n        style: {\n          fontSize: '14px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 908,\n          columnNumber: 21\n        }\n      }, q.status)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-primary btn-sm\",\n        onClick: this.handleConvertToInvoice,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 911,\n          columnNumber: 21\n        }\n      }, \"Convert to Invoice\")));\n    }), this.state.orders.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"6\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 21\n      }\n    }, \"No orders found.\")))))));\n\n    this.renderorderForm = () => {\n      const {\n        formData,\n        overlayType,\n        productOverlayVisible,\n        breakdownItems,\n        breakdownType\n      } = this.state;\n      const isFOB = formData.impExp === 'FOB';\n      const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\n        acc[li.itemCode] = parseFloat(li.total || 0) || 0;\n        return acc;\n      }, {});\n      const sumOfItemTotals = Object.values(itemTotals).reduce((sum, val) => sum + val, 0);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card full-height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 939,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: 'auto',\n          padding: '24px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 940,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 941,\n          columnNumber: 13\n        }\n      }, \"Order Form\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"nav nav-tabs\",\n        role: \"tablist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 942,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'co' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'co'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 17\n        }\n      }, \"CO Details\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 946,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'commercial'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 947,\n          columnNumber: 17\n        }\n      }, \"Commercial Terms\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 949,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'breakdown' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'breakdown'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 15\n        }\n      }, \"Breakdown\"))), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"form-sample\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 953,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tab-content pt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 954,\n          columnNumber: 15\n        }\n      }, this.state.activeTab === 'co' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 957,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 958,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 959,\n          columnNumber: 25\n        }\n      }, \"Order No\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.orderNo,\n        onChange: e => this.handleInputChange('orderNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 960,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 962,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 963,\n          columnNumber: 25\n        }\n      }, \"Order Date\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"date\",\n        className: \"form-control form-control-sm\",\n        value: formData.orderDate,\n        onChange: e => this.handleInputChange('orderDate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 964,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 966,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 967,\n          columnNumber: 25\n        }\n      }, \"Order Type\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.orderType,\n        onChange: e => this.handleInputChange('orderType', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 969,\n          columnNumber: 27\n        }\n      }, \"Standard\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 970,\n          columnNumber: 27\n        }\n      }, \"Manual\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 973,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 974,\n          columnNumber: 25\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.status,\n        style: {\n          backgroundColor: '#fff'\n        },\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 975,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 979,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 980,\n          columnNumber: 25\n        }\n      }, \"Customer\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 981,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Choose Customer\",\n        ref: this.customerInputRef,\n        value: formData.customer,\n        readOnly: true,\n        onClick: () => this.showOverlay('customer'),\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 982,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 992,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        onClick: () => this.showOverlay('customer'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 993,\n          columnNumber: 29\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 997,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 998,\n          columnNumber: 25\n        }\n      }, \"IMP/EXP\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.impExp,\n        onChange: e => this.handleInputChange('impExp', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 999,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 27\n        }\n      }, \"None\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1005,\n          columnNumber: 27\n        }\n      }, \"COB\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1006,\n          columnNumber: 27\n        }\n      }, \"FOB\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1007,\n          columnNumber: 27\n        }\n      }, \"CIF\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1010,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1011,\n          columnNumber: 25\n        }\n      }, \"Ref No.\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.qrefNo,\n        onChange: e => this.handleInputChange('qrefNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1012,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1019,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1020,\n          columnNumber: 25\n        }\n      }, \"Choose\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1021,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check mr-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        className: \"form-check-input\",\n        name: \"choose\",\n        id: \"chooseService\",\n        value: \"Service\",\n        checked: formData.choose === 'Service',\n        onChange: e => this.handleInputChange('choose', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1023,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"chooseService\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1024,\n          columnNumber: 29\n        }\n      }, \"Service\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1026,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        className: \"form-check-input\",\n        name: \"choose\",\n        id: \"chooseProduct\",\n        value: \"Product\",\n        checked: formData.choose === 'Product',\n        onChange: e => this.handleInputChange('choose', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1027,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"chooseProduct\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1028,\n          columnNumber: 29\n        }\n      }, \"Product\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1033,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1035,\n          columnNumber: 25\n        }\n      }, \"Currency\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.currency,\n        style: {\n          backgroundColor: '#fff'\n        },\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1036,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1044,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1045,\n          columnNumber: 25\n        }\n      }, \"Conversion Rate\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.conversionRate,\n        onChange: e => this.handleInputChange('conversionRate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1046,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1053,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1054,\n          columnNumber: 25\n        }\n      }, \"Tax Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxAmount,\n        onChange: e => this.handleInputChange('taxAmount', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1055,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1063,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1064,\n          columnNumber: 25\n        }\n      }, \"Order Value\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.orderValue,\n        onChange: e => this.handleInputChange('orderValue', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1065,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1074,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1075,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1076,\n          columnNumber: 23\n        }\n      }, \"Discount %\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        value: this.state.formData.discountPercent,\n        onChange: e => this.handleDiscountChange(\"discountPercent\", e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1077,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1084,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1085,\n          columnNumber: 21\n        }\n      }, \"Discount Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        value: this.state.formData.discountAmount,\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1086,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1093,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1094,\n          columnNumber: 23\n        }\n      }, \"After Discount - Quote Value\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        value: this.state.formData.afterDiscount,\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1095,\n          columnNumber: 23\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1103,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1104,\n          columnNumber: 29\n        }\n      }, \"Line Item\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-sm\",\n        onClick: () => this.setState({\n          productOverlayVisible: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1105,\n          columnNumber: 29\n        }\n      }, \"+ Add Product\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-responsive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1109,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1110,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1111,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1112,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1113,\n          columnNumber: 35\n        }\n      }, \" Item Code \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1114,\n          columnNumber: 35\n        }\n      }, \" Item Desc \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1115,\n          columnNumber: 35\n        }\n      }, \" Cust Part No \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1116,\n          columnNumber: 35\n        }\n      }, \" HSN No \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1117,\n          columnNumber: 35\n        }\n      }, \" On Hand \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1118,\n          columnNumber: 35\n        }\n      }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1119,\n          columnNumber: 35\n        }\n      }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1120,\n          columnNumber: 35\n        }\n      }, \"Tax Id\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1121,\n          columnNumber: 35\n        }\n      }, \"Item Total\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1122,\n          columnNumber: 35\n        }\n      }, \"Tax Amt\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1125,\n          columnNumber: 31\n        }\n      }, formData.lineItems.map((item, idx) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id || idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1127,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1128,\n          columnNumber: 37\n        }\n      }, item.itemCode), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1129,\n          columnNumber: 37\n        }\n      }, item.itemDescription), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1130,\n          columnNumber: 37\n        }\n      }, item.custPartNo), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1131,\n          columnNumber: 37\n        }\n      }, item.hsnNo), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1132,\n          columnNumber: 37\n        }\n      }, item.onHand), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1133,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        value: item.unitPrice,\n        onChange: e => this.handleLineItemChange(idx, 'unitPrice', e.target.value),\n        style: {\n          width: 80\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1134,\n          columnNumber: 39\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1141,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        min: \"1\",\n        value: item.qty,\n        onChange: e => this.handleLineItemChange(idx, 'qty', e.target.value),\n        style: {\n          width: 60\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1142,\n          columnNumber: 39\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          verticalAlign: 'middle'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1150,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-sm btn-outline-primary\",\n        onClick: () => this.setState({\n          showTaxOverlay: true,\n          currentTaxIdx: idx\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1151,\n          columnNumber: 39\n        }\n      }, \"Select Tax\"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          fontSize: '10px',\n          marginTop: '4px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1158,\n          columnNumber: 39\n        }\n      }, (item.taxGroupNames || []).join(', ') || '-')), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1162,\n          columnNumber: 39\n        }\n      }, item.taxAmount || '0.00'), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1163,\n          columnNumber: 39\n        }\n      }, item.total || '0.00'))), formData.lineItems.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1167,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"9\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1168,\n          columnNumber: 37\n        }\n      }, \"No items\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1175,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1176,\n          columnNumber: 29\n        }\n      }, \"Page 1 of 1\"))), this.state.activeTab === 'commercial' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1183,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1184,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1185,\n          columnNumber: 25\n        }\n      }, \"Bill To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"3\",\n        value: formData.billTo,\n        onChange: e => this.handleInputChange('billTo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1186,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1193,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1194,\n          columnNumber: 25\n        }\n      }, \"Ship To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"3\",\n        value: formData.shipTo,\n        onChange: e => this.handleInputChange('shipTo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1195,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1203,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1204,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1205,\n          columnNumber: 3\n        }\n      }, \"Despatch Mode\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1206,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: formData.despatchMode,\n        readOnly: true,\n        onClick: () => !isFOB && this.showOverlay('despatchMode'),\n        style: {\n          cursor: isFOB ? 'not-allowed' : 'pointer',\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1207,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1215,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        disabled: isFOB,\n        onClick: () => this.showOverlay('despatchMode'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1216,\n          columnNumber: 7\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1228,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1229,\n          columnNumber: 3\n        }\n      }, \"Payment Terms\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1230,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: formData.paymentTerms,\n        readOnly: true,\n        onClick: () => !isFOB && this.showOverlay('paymentTerms'),\n        style: {\n          cursor: isFOB ? 'not-allowed' : 'pointer',\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1231,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1239,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        disabled: isFOB,\n        onClick: () => this.showOverlay('paymentTerms'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1240,\n          columnNumber: 7\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1252,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1253,\n          columnNumber: 25\n        }\n      }, \"Freight Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.freightCharges,\n        onChange: e => this.handleInputChange('freightCharges', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1254,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1263,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1264,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1265,\n          columnNumber: 25\n        }\n      }, \"Tax %\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxPercent,\n        onChange: e => this.handleInputChange('taxPercent', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1266,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1274,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1275,\n          columnNumber: 25\n        }\n      }, \"Freight Tax Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxAmount,\n        onChange: e => this.handleInputChange('freighttaxAmount', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1276,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1284,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1285,\n          columnNumber: 25\n        }\n      }, \"Packing Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.packingCharges,\n        onChange: e => this.handleInputChange('packingCharges', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1286,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1295,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1296,\n          columnNumber: 23\n        }\n      }, \"Save All Details\"))), this.state.activeTab === 'breakdown' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1302,\n          columnNumber: 21\n        }\n      }, \"Milestone Breakdown\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1304,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1305,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1305,\n          columnNumber: 44\n        }\n      }, \"Quote Value:\"), \" \", formData.quoteValue), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1306,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1306,\n          columnNumber: 44\n        }\n      }, \"Tax Amount:\"), \" \", formData.taxAmount), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1307,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1307,\n          columnNumber: 44\n        }\n      }, \"Sum of Item Totals:\"), \" \", sumOfItemTotals.toFixed(2))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1310,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1311,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1312,\n          columnNumber: 25\n        }\n      }, \"Subproduct Mode\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: breakdownType,\n        onChange: e => this.handleBreakdownTypeChange(e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1313,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Amount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1318,\n          columnNumber: 27\n        }\n      }, \"Amount\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Percentage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1319,\n          columnNumber: 27\n        }\n      }, \"Percentage\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-9 text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1323,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-sm\",\n        onClick: () => {\n          // Add breakdown item for each product automatically if none exist (convenience)\n          if ((formData.lineItems || []).length > 0) {\n            this.setState(prev => {\n              const bi = [...prev.breakdownItems]; // create breakdown entries from lineItems if not present\n\n              formData.lineItems.forEach((li, i) => {\n                const exists = bi.some(b => b.productId === li.itemCode);\n\n                if (!exists) {\n                  bi.push({\n                    sno: bi.length + 1,\n                    productId: li.itemCode,\n                    desc: li.itemDescription || '',\n                    subProducts: []\n                  });\n                }\n              });\n              return {\n                breakdownItems: bi\n              };\n            });\n          } else {\n            this.setState(prev => ({\n              breakdownItems: [...prev.breakdownItems, {\n                sno: prev.breakdownItems.length + 1,\n                productId: '',\n                desc: '',\n                subProducts: []\n              }]\n            }));\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1324,\n          columnNumber: 25\n        }\n      }, \"+ Add Breakdown\"))), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1345,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1346,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1347,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1348,\n          columnNumber: 27\n        }\n      }, \"S.No\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1349,\n          columnNumber: 27\n        }\n      }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1350,\n          columnNumber: 27\n        }\n      }, \"Desc / Subproduct name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1351,\n          columnNumber: 27\n        }\n      }, \"SubProduct value (\", breakdownType === 'Percentage' ? '%' : 'â‚¹', \")\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1352,\n          columnNumber: 27\n        }\n      }, \"Total (\\u20B9)\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1353,\n          columnNumber: 27\n        }\n      }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1356,\n          columnNumber: 23\n        }\n      }, breakdownItems.map((item, idx) => {\n        const mainItemTotal = itemTotals[item.productId] || 0;\n        const subSum = this.getSubProductsSum(item);\n        const remaining = mainItemTotal - subSum;\n        const subs = Array.isArray(item.subProducts) ? item.subProducts : [];\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          key: idx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1364,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"tr\", {\n          style: {\n            background: '#eef4ff'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1366,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1367,\n            columnNumber: 33\n          }\n        }, item.sno), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1368,\n            columnNumber: 33\n          }\n        }, item.productId), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1369,\n            columnNumber: 33\n          }\n        }, item.desc), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1372,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1373,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1374,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"small\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1374,\n            columnNumber: 42\n          }\n        }, \"Subproducts sum: \", /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1374,\n            columnNumber: 66\n          }\n        }, subSum.toFixed(2)))), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1375,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"small\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1375,\n            columnNumber: 42\n          }\n        }, \"Remaining: \", /*#__PURE__*/React.createElement(\"b\", {\n          style: {\n            color: remaining > 0.01 ? 'red' : 'green'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1375,\n            columnNumber: 60\n          }\n        }, remaining.toFixed(2)))))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1380,\n            columnNumber: 33\n          }\n        }, mainItemTotal.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1383,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1384,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm btn-outline-primary mr-2\",\n          onClick: () => this.handleAddInlineSubProduct(idx),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1385,\n            columnNumber: 37\n          }\n        }, \"+ Add\"), /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm btn-outline-secondary\",\n          onClick: () => {\n            if (remaining <= 0) return;\n            this.handleAddInlineSubProduct(idx, {\n              name: 'Remainder',\n              value: breakdownType === 'Percentage' ? (remaining * 100 / (mainItemTotal || 1)).toFixed(2) : remaining.toFixed(2)\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1391,\n            columnNumber: 37\n          }\n        }, \"Auto-fill\")))), subs.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n          key: `notice-${idx}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1410,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          colSpan: \"6\",\n          className: \"text-center text-muted\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1411,\n            columnNumber: 35\n          }\n        }, \"No subproducts added for this item.\")), subs.map((sp, spIdx) => {\n          const spId = `${item.productId}_${spIdx + 1}`;\n          const rawVal = parseFloat(sp.value || 0) || 0;\n          const spTotal = breakdownType === 'Percentage' ? mainItemTotal * rawVal / 100 : rawVal;\n          return /*#__PURE__*/React.createElement(\"tr\", {\n            key: spId,\n            style: {\n              background: '#f9f9f9'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1423,\n              columnNumber: 35\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            className: \"text-muted\",\n            \"aria-disabled\": \"true\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1425,\n              columnNumber: 37\n            }\n          }, \"\\u2014\"), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1428,\n              columnNumber: 37\n            }\n          }, spId), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1431,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            type: \"text\",\n            className: \"form-control form-control-sm\",\n            value: sp.name || '',\n            onChange: e => this.handleSubProductChange(idx, spIdx, 'name', e.target.value),\n            placeholder: \"Enter name\",\n            style: {\n              paddingLeft: '18px'\n            } // indentation\n            ,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1432,\n              columnNumber: 39\n            }\n          })), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1443,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            type: \"number\",\n            step: \"any\",\n            min: \"0\",\n            className: \"form-control form-control-sm\",\n            value: sp.value || '',\n            onChange: e => this.handleSubProductChange(idx, spIdx, 'value', e.target.value),\n            style: {\n              width: '120px'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1444,\n              columnNumber: 39\n            }\n          })), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1456,\n              columnNumber: 37\n            }\n          }, spTotal.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1459,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            className: \"btn btn-sm btn-danger\",\n            onClick: () => this.handleRemoveSubProduct(idx, spIdx),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1460,\n              columnNumber: 39\n            }\n          }, \"-\")));\n        }));\n      }))), !this.isBreakdownValid() && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1476,\n          columnNumber: 23\n        }\n      }, \"Breakdown incomplete \\u2014 for each product the sum of subproduct totals must equal the product total. Save disabled until fixed.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fixed-card-footer text-right p-3 border-top bg-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1484,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success mr-2\",\n        disabled: !this.isBreakdownValid(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1485,\n          columnNumber: 17\n        }\n      }, \"Save All Details\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: () => this.setState({\n          showForm: false,\n          editingId: null\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1486,\n          columnNumber: 17\n        }\n      }, \"Cancel\"))), overlayType && this.renderOverlay(), productOverlayVisible && this.renderProductOverlay(), this.state.showTaxOverlay && this.renderTaxOverlay())));\n    };\n  }\n\n  getTaxDetailsFromGroup(groupName) {\n    if (!groupName || groupName === 'nill' || groupName === 'more') return {\n      totalPercent: 0,\n      totalAmount: 0\n    };\n    const group = this.state.taxGroups.find(tg => tg.groupName === groupName);\n    if (!group || !Array.isArray(group.lineItems)) return {\n      totalPercent: 0,\n      totalAmount: 0\n    };\n    let totalPercent = 0;\n    let totalAmount = 0;\n    group.lineItems.forEach(item => {\n      if (item.type === 'Percentage') {\n        totalPercent += parseFloat(item.percentOrAmt || 0);\n      } else if (item.type === 'Amount') {\n        totalAmount += parseFloat(item.percentOrAmt || 0);\n      }\n    });\n    return {\n      totalPercent,\n      totalAmount\n    };\n  }\n\n  componentDidMount() {\n    var _this$props$location, _this$props$location$;\n\n    bsCustomFileInput.init();\n    this.fetchorders();\n    this.fetchCustomers();\n    this.fetchProducts();\n    this.fetchDespatchModes();\n    this.fetchPaymentTerms();\n    this.calculateOrderTotals();\n    this.fetchTaxGroups();\n    const quoteFromSession = sessionStorage.getItem('quoteToConvert');\n\n    if (quoteFromSession && !this.state.showForm) {\n      const quote = JSON.parse(quoteFromSession);\n      sessionStorage.removeItem('quoteToConvert');\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          ...quote,\n          // auto-generate an order number (existing logic)\n          orderNo: `CO${1000 + prev.orders.length}`,\n          orderDate: new Date().toISOString().split('T')[0],\n          status: 'Entered',\n          orderType: 'Standard',\n          orderValue: quote.quoteValue || '',\n          quoteNo: quote.quoteNo || '',\n          qrefNo: quote.quoteNo || '' // <-- auto place the quote number into Ref No\n\n        },\n        // ensure the breakdown from quote is loaded to order screen\n        breakdownItems: Array.isArray(quote.breakdownItems) ? quote.breakdownItems : [],\n        showForm: true\n      }));\n    }\n\n    const invoiceData = (_this$props$location = this.props.location) === null || _this$props$location === void 0 ? void 0 : (_this$props$location$ = _this$props$location.state) === null || _this$props$location$ === void 0 ? void 0 : _this$props$location$.invoiceDataFromOrder;\n\n    if (invoiceData) {\n      this.setState({\n        formData: invoiceData\n      }, () => this.calculateInvoiceTotals());\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // Customer details auto-fill\n    if (this.state.showForm && this.state.customers.length > 0 && this.state.formData.customer && (prevState.formData.customer !== this.state.formData.customer || !this.state.formData.billTo && !this.state.formData.shipTo)) {\n      const customerObj = this.state.customers.find(c => c.custname === this.state.formData.customer || c.custcode === this.state.formData.customer);\n\n      if (customerObj) {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            billTo: this.formatAddress(customerObj.billTo),\n            shipTo: this.formatAddress(customerObj.shipTo),\n            currency: customerObj.currency || '' // paymentTerms: customerObj.paymentTerms || '', // No auto-fill for payment terms\n            // despatchMode: customerObj.despatchMode || '' // No auto-fill for despatch mode\n\n          }\n        }));\n      }\n    } // Freight and Tax calculation based on impExp\n\n\n    const {\n      impExp,\n      freightCharges,\n      taxPercent,\n      packingCharges,\n      lineItems\n    } = this.state.formData;\n\n    if (['None', 'CIF'].includes(impExp)) {\n      const freight = parseFloat(freightCharges) || 0;\n      const tax = parseFloat(taxPercent) || 0;\n      const packing = parseFloat(packingCharges) || 0;\n      const taxAmount = freight * tax / 100;\n      const lineTotal = lineItems.reduce((sum, item) => {\n        const total = parseFloat(item.total) || 0;\n        return sum + total;\n      }, 0);\n      const orderValue = lineTotal + freight + taxAmount + packing;\n\n      if (this.state.formData.taxAmount !== taxAmount.toFixed(2) || this.state.formData.orderValue !== orderValue.toFixed(2)) {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            taxAmount: taxAmount.toFixed(2),\n            orderValue: orderValue.toFixed(2)\n          }\n        }));\n      }\n    } else if (impExp === 'FOB') {\n      if (this.state.formData.freightCharges !== '' || this.state.formData.taxPercent !== '' || this.state.formData.taxAmount !== '' || this.state.formData.packingCharges !== '') {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            freightCharges: '',\n            taxPercent: '',\n            taxAmount: '',\n            packingCharges: '',\n            orderValue: ''\n          }\n        }));\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1507,\n        columnNumber: 7\n      }\n    }, this.state.previewOrderMode ? this.renderOrderPreview() : this.state.showForm ? this.renderorderForm() : this.renderorderTable());\n  }\n\n}\n\nexport default withRouter(Order);","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/panelone/Order.js"],"names":["React","Component","Form","bsCustomFileInput","db","collection","getDocs","addDoc","doc","updateDoc","serverTimestamp","html2canvas","jsPDF","withRouter","recalculateTotals","getTaxDetailsFromGroup","numberToWords","num","a","b","Math","floor","Order","state","activeTab","breakdownItems","orders","customers","products","despatchModes","paymentTerms","showForm","editingId","overlayType","overlaySearch","productOverlayVisible","productOverlaySearch","selectedProductIds","taxGroups","showTaxOverlay","currentTaxIdx","breakdownType","formData","orderNo","orderDate","Date","toISOString","split","orderType","customer","status","choose","qrefNo","impExp","currency","conversionRate","taxAmount","orderValue","discountPercent","discountAmount","afterDiscount","billTo","shipTo","despatchMode","freightCharges","freighttaxAmount","taxPercent","packingCharges","lineItems","customerInputRef","createRef","formatAddress","addr","address","city","country","filter","Boolean","join","zip","calculateOrderTotals","freight","parseFloat","packing","taxOnFreight","includes","lineTotal","itemTaxTotal","updatedLineItems","map","item","qty","unitPrice","baseTotal","groupNames","taxGroupNames","length","taxGroup","percent","amount","forEach","groupName","group","find","t","Array","isArray","comp","val","percentOrAmt","type","taxAmt","total","toFixed","totalTaxAmount","setState","prev","handleDiscountChange","field","value","quoteValue","afterDiscountValue","handleConvertToInvoice","invoiceData","InvoiceDate","sessionStorage","setItem","JSON","stringify","props","history","push","pathname","invoiceDataFromOrder","fetchTaxGroups","snap","data","docs","id","fetchorders","reverse","fetchCustomers","fetchProducts","fetchDespatchModes","fetchPaymentTerms","handleInputChange","handleBreakdownChange","idx","items","handleBreakdownTypeChange","handleAddInlineSubProduct","breakdownIdx","initial","subProducts","defaultSP","name","handleRemoveSubProduct","biIdx","spIdx","splice","handleSubProductChange","sp","getSubProductsSum","bi","itemTotals","reduce","acc","li","itemCode","mainTotal","productId","subs","s","isBreakdownValid","TOL","subSum","abs","handleLineItemChange","updatedItems","handleSubmit","e","preventDefault","alert","updatedAt","createdAt","loadOrderPreview","order","selectedOrder","previewOrderMode","loadorderForEdit","current","toggleTaxGroupSelection","lineIdx","isChecked","g","showOverlay","hideOverlay","selectOverlayValue","custname","custcode","renderOverlay","getFilteredRows","list","nameKey","codeKey","toLowerCase","handleSelect","title","headers","rows","target","maxHeight","overflowY","h","i","cursor","j","custshortName","shortName","renderTaxOverlay","selected","Set","position","zIndex","top","left","background","border","padding","boxShadow","width","tg","has","checked","component","renderOrderPreview","o","itemDescription","renderProductOverlay","filtered","p","ptshortName","ptdescription","selectedProducts","some","itemType","materialType","onHand","custPartNo","hsnNo","renderorderTable","fontSize","q","statusClass","renderorderForm","isFOB","sumOfItemTotals","Object","values","sum","flex","backgroundColor","verticalAlign","marginTop","exists","sno","desc","mainItemTotal","remaining","color","spId","rawVal","spTotal","paddingLeft","totalPercent","totalAmount","componentDidMount","init","quoteFromSession","getItem","quote","parse","removeItem","quoteNo","location","calculateInvoiceTotals","componentDidUpdate","prevProps","prevState","customerObj","c","tax","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport bsCustomFileInput from 'bs-custom-file-input';\r\nimport { db } from '../../firebase';\r\nimport { collection, getDocs, addDoc, doc, updateDoc ,serverTimestamp} from 'firebase/firestore';\r\nimport html2canvas from 'html2canvas';\r\nimport { jsPDF } from 'jspdf'; \r\nimport { withRouter } from 'react-router-dom';\r\nimport { recalculateTotals,getTaxDetailsFromGroup } from './calculation';\r\nconst numberToWords = (num) => {\r\n  const a = ['', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine',\r\n    'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen',\r\n    'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];\r\n  const b = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\r\n\r\n  if (num === 0) return 'Zero';\r\n  if (num < 20) return a[num];\r\n  if (num < 100) return b[Math.floor(num / 10)] + ' ' + a[num % 10];\r\n  if (num < 1000)\r\n    return a[Math.floor(num / 100)] + ' Hundred ' + numberToWords(num % 100);\r\n  if (num < 100000)\r\n    return numberToWords(Math.floor(num / 1000)) + ' Thousand ' + numberToWords(num % 1000);\r\n  return 'Amount too large';\r\n};\r\n\r\nclass Order extends Component {\r\n  state = {\r\n    activeTab: 'co',\r\n    breakdownItems: [],\r\n    orders: [],\r\n    customers: [],\r\n    products: [],\r\n    despatchModes: [],\r\n    paymentTerms: [],\r\n    showForm: false,\r\n    editingId: null,\r\n    overlayType: '',\r\n    overlaySearch: '',\r\n    productOverlayVisible: false,\r\n    productOverlaySearch: '',\r\n    selectedProductIds: [],\r\n    taxGroups: [],\r\n    showTaxOverlay: false,\r\n    currentTaxIdx: null,\r\n     breakdownType: 'Amount', \r\n    formData: {\r\n      orderNo: '',\r\n      orderDate: new Date().toISOString().split('T')[0],\r\n      orderType: 'Standard',\r\n      customer: '',\r\n      status: 'Entered', // Static 'Entered'\r\n      choose: 'Service',\r\n      qrefNo: '',\r\n      impExp: 'None',\r\n      currency: '',\r\n      conversionRate: '',\r\n      taxAmount: '',\r\n      orderValue: '',\r\n      discountPercent: 0,\r\n      discountAmount: 0,\r\n      afterDiscount: 0,\r\n      billTo: '',\r\n      shipTo: '',\r\n      despatchMode: 'By Air',\r\n      paymentTerms: '',\r\n      freightCharges: '',\r\n      freighttaxAmount: '',\r\n      taxPercent: '',\r\n      packingCharges: '',\r\n      lineItems: [],\r\n    }\r\n  };\r\n  customerInputRef = React.createRef();\r\n\r\n  formatAddress = (addr) => {\r\n    if (!addr) return '';\r\n    if (typeof addr === 'string') return addr;\r\n    return [\r\n      addr.address,\r\n      [addr.city, addr.state, addr.country].filter(Boolean).join(', '),\r\n      addr.zip\r\n    ].filter(Boolean).join('\\n');\r\n  };\r\n\r\n  \r\n   getTaxDetailsFromGroup(groupName) {\r\n    if (!groupName || groupName === 'nill' || groupName === 'more') return { totalPercent: 0, totalAmount: 0 };\r\n\r\n    const group = this.state.taxGroups.find(tg => tg.groupName === groupName);\r\n    if (!group || !Array.isArray(group.lineItems)) return { totalPercent: 0, totalAmount: 0 };\r\n\r\n    let totalPercent = 0;\r\n    let totalAmount = 0;\r\n\r\n    group.lineItems.forEach(item => {\r\n      if (item.type === 'Percentage') {\r\n        totalPercent += parseFloat(item.percentOrAmt || 0);\r\n      } else if (item.type === 'Amount') {\r\n        totalAmount += parseFloat(item.percentOrAmt || 0);\r\n      }\r\n    });\r\n\r\n    return { totalPercent, totalAmount };\r\n  }\r\n\r\n calculateOrderTotals = () => {\r\n    const { impExp, freightCharges, taxPercent, packingCharges, lineItems } = this.state.formData;\r\n    let freight = parseFloat(freightCharges) || 0;\r\n    let packing = parseFloat(packingCharges) || 0;\r\n    let taxOnFreight = 0;\r\n    if (['None', 'CIF'].includes(impExp)) {\r\n      taxOnFreight = (freight * (parseFloat(taxPercent) || 0)) / 100;\r\n    }\r\n\r\n    let lineTotal = 0;\r\n    let itemTaxTotal = 0;\r\n\r\n   const updatedLineItems = lineItems.map(item => {\r\n      const qty = parseFloat(item.qty || 1);\r\n      const unitPrice = parseFloat(item.unitPrice || 0);\r\n      const baseTotal = unitPrice * qty;\r\n\r\n      const groupNames = item.taxGroupNames?.length ? item.taxGroupNames : [item.taxGroup || ''];\r\n\r\n      let percent = 0;\r\n      let amount = 0;\r\n      groupNames.forEach(groupName => {\r\n        const group = this.state.taxGroups.find(t => t.groupName === groupName);\r\n        if (group && Array.isArray(group.lineItems)) {\r\n          group.lineItems.forEach(comp => {\r\n            const val = parseFloat(comp.percentOrAmt || 0);\r\n            if (comp.type === 'Percentage') percent += val;\r\n            if (comp.type === 'Amount') amount += val;\r\n          });\r\n        }\r\n      });\r\n\r\n const taxAmt = (baseTotal * percent) / 100 + amount;\r\n      const total = baseTotal + taxAmt;\r\n      item.taxAmt = taxAmt.toFixed(2);\r\n      item.total = total.toFixed(2);\r\n      return item;\r\n    });\r\n\r\n\r\n    const totalTaxAmount = itemTaxTotal + taxOnFreight;\r\n    const orderValue = lineTotal + freight + packing + itemTaxTotal;\r\n\r\n    this.setState(prev => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        taxAmount: totalTaxAmount.toFixed(2),  // âœ… Top-level field\r\n        orderValue: orderValue.toFixed(2),\r\n        lineItems: updatedLineItems\r\n      }\r\n    }));\r\n  };\r\nhandleDiscountChange = (field, value) => {\r\n  let { formData } = this.state;\r\n  formData[field] = value;\r\n\r\n  const quoteValue = parseFloat(formData.quoteValue || 0);\r\n  const discountPercent = parseFloat(formData.discountPercent || 0);\r\n  const discountAmount = (quoteValue * discountPercent) / 100;\r\n  const afterDiscountValue = quoteValue - discountAmount;\r\n\r\n  formData.discountAmount = discountAmount;\r\n  formData.afterDiscountValue = afterDiscountValue;\r\n\r\n  this.setState({ formData });\r\n};\r\n\r\nhandleConvertToInvoice = () => {\r\n    const { formData } = this.state;\r\n    \r\n    const invoiceData = {\r\n      customer: formData.customer,\r\n      qrefNo: formData.qrefNo,\r\n      impExp: formData.impExp,\r\n      billTo: formData.billTo,\r\n      shipTo: formData.shipTo,\r\n      currency: formData.currency,\r\n      conversionRate: formData.conversionRate,\r\n      despatchMode: formData.despatchMode,\r\n      paymentTerms: formData.paymentTerms,\r\n      freightCharges: formData.freightCharges,\r\n      packingCharges: formData.packingCharges,\r\n      taxPercent: formData.taxPercent,\r\n      lineItems: formData.lineItems,\r\n      orderDate: formData.orderDate,\r\n      orderNo: formData.orderNo,\r\n      InvoiceDate: new Date().toISOString().split('T')[0]\r\n    };\r\n sessionStorage.setItem('invoiceDataFromOrder', JSON.stringify(invoiceData));\r\n    this.props.history.push({\r\n      pathname: '/panelone/Invoice',\r\n      state: { invoiceDataFromOrder: invoiceData } // <- add this line\r\n    });\r\n  };\r\n\r\n\r\ncomponentDidMount() {\r\n    bsCustomFileInput.init();\r\n    this.fetchorders();\r\n    this.fetchCustomers();\r\n    this.fetchProducts();\r\n    this.fetchDespatchModes();\r\n    this.fetchPaymentTerms();\r\n    this.calculateOrderTotals();\r\n    this.fetchTaxGroups();\r\n\r\n\r\n    const quoteFromSession = sessionStorage.getItem('quoteToConvert');\r\nif (quoteFromSession && !this.state.showForm) {\r\n  const quote = JSON.parse(quoteFromSession);\r\n  sessionStorage.removeItem('quoteToConvert');\r\n\r\n  this.setState(prev => ({\r\n    formData: {\r\n      ...prev.formData,\r\n      ...quote,\r\n      // auto-generate an order number (existing logic)\r\n      orderNo: `CO${1000 + prev.orders.length}`,\r\n      orderDate: new Date().toISOString().split('T')[0],\r\n      status: 'Entered',\r\n      orderType: 'Standard',\r\n      orderValue: quote.quoteValue || '',\r\n      quoteNo: quote.quoteNo || '',\r\n      qrefNo: quote.quoteNo || ''  // <-- auto place the quote number into Ref No\r\n    },\r\n    // ensure the breakdown from quote is loaded to order screen\r\n    breakdownItems: Array.isArray(quote.breakdownItems) ? quote.breakdownItems : [],\r\n    showForm: true\r\n  }));\r\n}\r\n\r\n  const invoiceData = this.props.location?.state?.invoiceDataFromOrder;\r\n  if (invoiceData) {\r\n    this.setState({ formData: invoiceData }, () => this.calculateInvoiceTotals());\r\n  }\r\n\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // Customer details auto-fill\r\n    if (\r\n      this.state.showForm &&\r\n      this.state.customers.length > 0 &&\r\n      this.state.formData.customer &&\r\n      (prevState.formData.customer !== this.state.formData.customer ||\r\n       (!this.state.formData.billTo && !this.state.formData.shipTo))\r\n    ) {\r\n      const customerObj = this.state.customers.find(\r\n        c => c.custname === this.state.formData.customer || c.custcode === this.state.formData.customer\r\n      );\r\n      if (customerObj) {\r\n        this.setState(prev => ({\r\n          formData: {\r\n            ...prev.formData,\r\n            billTo: this.formatAddress(customerObj.billTo),\r\n            shipTo: this.formatAddress(customerObj.shipTo),\r\n            currency: customerObj.currency || '',\r\n            // paymentTerms: customerObj.paymentTerms || '', // No auto-fill for payment terms\r\n            // despatchMode: customerObj.despatchMode || '' // No auto-fill for despatch mode\r\n          }\r\n        }));\r\n      }\r\n    }\r\n\r\n    // Freight and Tax calculation based on impExp\r\n    const { impExp, freightCharges, taxPercent,packingCharges, lineItems } = this.state.formData;\r\n    if (['None', 'CIF'].includes(impExp)) {\r\n      const freight = parseFloat(freightCharges) || 0;\r\n      const tax = parseFloat(taxPercent) || 0;\r\n      const packing = parseFloat(packingCharges) || 0;\r\n\r\n      const taxAmount = (freight * tax) / 100;\r\n\r\n      const lineTotal = lineItems.reduce((sum, item) => {\r\n        const total = parseFloat(item.total) || 0;\r\n        return sum + total;\r\n      }, 0);\r\n\r\n      const orderValue = lineTotal + freight + taxAmount + packing;\r\n\r\n      if (\r\n    this.state.formData.taxAmount !== taxAmount.toFixed(2) ||\r\n    this.state.formData.orderValue !== orderValue.toFixed(2)\r\n  ) {\r\n    this.setState(prev => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        taxAmount: taxAmount.toFixed(2),\r\n        orderValue: orderValue.toFixed(2)\r\n      }\r\n    }));\r\n  }\r\n} else if (impExp === 'FOB') {\r\n  if (\r\n    this.state.formData.freightCharges !== '' ||\r\n    this.state.formData.taxPercent !== '' ||\r\n    this.state.formData.taxAmount !== '' ||\r\n    this.state.formData.packingCharges !== ''\r\n  ) {\r\n    this.setState(prev => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        freightCharges: '',\r\n        taxPercent: '',\r\n        taxAmount: '',\r\n        packingCharges: '',\r\n        orderValue: ''\r\n      }\r\n    }));\r\n  }\r\n\r\n    }\r\n  }\r\nfetchTaxGroups = async () => {\r\n  const snap = await getDocs(collection(db, 'taxGroups'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ taxGroups: data });\r\n};\r\n\r\n  fetchorders = async () => {\r\n    const snap = await getDocs(collection(db, 'orders'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ orders: data.reverse() });\r\n  };\r\n\r\n  fetchCustomers = async () => {\r\n    const snap = await getDocs(collection(db, 'customers'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ customers: data });\r\n  };\r\n\r\n  fetchProducts = async () => {\r\n    const snap = await getDocs(collection(db, 'products'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ products: data });\r\n  };\r\n  fetchDespatchModes = async () => {\r\n  const snap = await getDocs(collection(db, 'modes'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ despatchModes: data });\r\n};\r\n\r\nfetchPaymentTerms = async () => {\r\n  const snap = await getDocs(collection(db, 'paymentTerms'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ paymentTerms: data });\r\n};\r\n\r\n\r\n  handleInputChange = (field, value) => {\r\n    this.setState(prev => ({\r\n      formData: { ...prev.formData, [field]: value }\r\n    }));\r\n  };\r\n  handleBreakdownChange = (idx, field, value) => {\r\n  this.setState(prev => {\r\n    const items = [...prev.breakdownItems];\r\n    items[idx][field] = value;\r\n    return { breakdownItems: items };\r\n  });\r\n};\r\n\r\n handleBreakdownTypeChange = (val) => {\r\n    this.setState({ breakdownType: val });\r\n  };\r\n\r\n  handleAddInlineSubProduct = (breakdownIdx, initial = null) => {\r\n    this.setState(prev => {\r\n      const items = [...prev.breakdownItems];\r\n      const item = items[breakdownIdx] ? { ...items[breakdownIdx] } : null;\r\n      if (!item) return {};\r\n      const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\r\n      const defaultSP = { name: '', value: '' };\r\n      subProducts.push(initial ? { ...defaultSP, ...initial } : defaultSP);\r\n      item.subProducts = subProducts;\r\n      items[breakdownIdx] = item;\r\n      return { breakdownItems: items };\r\n    });\r\n  };\r\n    handleRemoveSubProduct = (biIdx, spIdx) => {\r\n    this.setState(prev => {\r\n      const items = [...prev.breakdownItems];\r\n      if (!items[biIdx]) return {};\r\n      const item = { ...items[biIdx] };\r\n      const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\r\n      subProducts.splice(spIdx, 1);\r\n      item.subProducts = subProducts;\r\n      items[biIdx] = item;\r\n      return { breakdownItems: items };\r\n    });\r\n  };\r\n  handleSubProductChange = (biIdx, spIdx, field, value) => {\r\n    this.setState(prev => {\r\n      const items = [...prev.breakdownItems];\r\n      if (!items[biIdx]) return {};\r\n      const item = { ...items[biIdx] };\r\n      const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\r\n      const sp = { ...subProducts[spIdx], [field]: value };\r\n      subProducts[spIdx] = sp;\r\n      item.subProducts = subProducts;\r\n      items[biIdx] = item;\r\n      return { breakdownItems: items };\r\n    });\r\n  };\r\n  getSubProductsSum = (bi) => {\r\n    const { breakdownType, formData } = this.state;\r\n    const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\r\n      acc[li.itemCode] = parseFloat(li.total || 0) || 0;\r\n      return acc;\r\n    }, {});\r\n    const mainTotal = itemTotals[bi.productId] || 0;\r\n    const subs = Array.isArray(bi.subProducts) ? bi.subProducts : [];\r\n    return subs.reduce((s, sp) => {\r\n      const val = parseFloat(sp.value || 0) || 0;\r\n      if (breakdownType === 'Percentage') {\r\n        return s + (mainTotal * val / 100);\r\n      }\r\n      return s + val;\r\n    }, 0);\r\n  };\r\n   isBreakdownValid = () => {\r\n    const { breakdownItems, formData } = this.state;\r\n    const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\r\n      acc[li.itemCode] = parseFloat(li.total || 0) || 0;\r\n      return acc;\r\n    }, {});\r\n    const TOL = 0.01;\r\n    for (let bi of breakdownItems) {\r\n      const mainTotal = itemTotals[bi.productId] || 0;\r\n      if (mainTotal > 0) {\r\n        const subSum = this.getSubProductsSum(bi);\r\n        if (Math.abs(subSum - mainTotal) > TOL) return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  \r\nhandleLineItemChange = (idx, field, value) => {\r\n  const updatedItems = [...this.state.formData.lineItems];\r\n  updatedItems[idx] = { ...updatedItems[idx], [field]: value };\r\n  const { updatedLineItems, freighttaxAmount, taxAmount, quoteValue } = recalculateTotals({\r\n    lineItems: updatedItems,\r\n    freightCharges: this.state.formData.freightCharges,\r\n    packingCharges: this.state.formData.packingCharges,\r\n    taxPercent: this.state.formData.taxPercent,\r\n    taxGroups: this.state.taxGroups\r\n  });\r\n  this.setState(prev => ({\r\n    formData: {\r\n      ...prev.formData,\r\n      lineItems: updatedLineItems,\r\n      freighttaxAmount,\r\n      taxAmount,\r\n      quoteValue\r\n    }\r\n  }));\r\n};\r\n\r\n\r\n handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  const { editingId, formData, orders, breakdownItems } = this.state;\r\n  if (!formData.customer) return alert(\"Customer is required\");\r\n  if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\r\n\r\n  formData.breakdownItems = breakdownItems;\r\n\r\n  if (editingId) {\r\n    // Update existing order\r\n    await updateDoc(doc(db, \"orders\", editingId), {\r\n      ...formData,\r\n      status: \"Entered\",   // stays Entered until approval\r\n      updatedAt: serverTimestamp()\r\n    });\r\n  } else {\r\n    // Create new order\r\n    formData.orderNo = `CO${1000 + orders.length}`;\r\n    await addDoc(collection(db, \"orders\"), {\r\n      ...formData,\r\n      status: \"Entered\",   // new order starts as Entered\r\n      createdAt: serverTimestamp()\r\n    });\r\n  }\r\n\r\n  this.setState({ showForm: false, editingId: null });\r\n  this.fetchorders();\r\n};\r\nloadOrderPreview = (order) => {\r\n  this.setState({\r\n    selectedOrder: order,\r\n    previewOrderMode: true\r\n  });\r\n};\r\n\r\n\r\n\r\n  loadorderForEdit = (order) => {\r\n  this.setState({\r\n    formData: {\r\n      ...order,\r\n      lineItems: Array.isArray(order.lineItems) ? order.lineItems : [] // Ensure array\r\n    },\r\n    breakdownItems: Array.isArray(order.breakdownItems) ? order.breakdownItems : [], // âœ… Load it here\r\n    editingId: order.id,\r\n    showForm: true,\r\n    activeTab: 'co'\r\n  }, () => {\r\n    if (this.customerInputRef.current) {\r\n      this.customerInputRef.current.value = order.customer;\r\n    }\r\n  });\r\n};\r\ntoggleTaxGroupSelection = (groupName, lineIdx, isChecked) => {\r\n  const formData = { ...this.state.formData };\r\n  const item = formData.lineItems[lineIdx];\r\n\r\n  if (!item.taxGroupNames) item.taxGroupNames = [];\r\n\r\n  if (isChecked) {\r\n    if (!item.taxGroupNames.includes(groupName)) {\r\n      item.taxGroupNames.push(groupName);\r\n    }\r\n  } else {\r\n    item.taxGroupNames = item.taxGroupNames.filter(g => g !== groupName);\r\n  }\r\n\r\n  this.setState({ formData }, () => this.calculateOrderTotals());\r\n};\r\n\r\n  showOverlay = (type) => this.setState({ overlayType: type, overlaySearch: '' });\r\n  hideOverlay = () => this.setState({ overlayType: '', overlaySearch: '' });\r\n\r\n  selectOverlayValue = (value) => {\r\n    if (this.state.overlayType === 'customer') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          customer: value.custname || value.custcode || '', // Use custname or custcode\r\n          billTo: this.formatAddress(value.billTo),\r\n          shipTo: this.formatAddress(value.shipTo),\r\n          currency: value.currency || '',\r\n          // despatchMode: value.despatchMode || '', // No auto-fill for despatch mode\r\n          // paymentTerms: value.paymentTerms || '' // No auto-fill for payment terms\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }), () => {\r\n        if (this.customerInputRef.current) {\r\n          this.customerInputRef.current.value = value.custname || value.custcode || '';\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n renderOverlay = () => {\r\n  const { overlayType, overlaySearch, customers, despatchModes, paymentTerms } = this.state;\r\n\r\n  const getFilteredRows = (list, nameKey = 'name', codeKey = 'shortName') =>\r\n    list.filter(item =>\r\n      (item[nameKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()) ||\r\n      (item[codeKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase())\r\n    );\r\n\r\n  const handleSelect = (item) => {\r\n    if (overlayType === 'customer') {\r\n      this.selectOverlayValue(item);\r\n    } else if (overlayType === 'despatchMode') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          despatchMode: item.name\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }));\r\n    } else if (overlayType === 'paymentTerms') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          paymentTerms: item.name\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  let title = '';\r\n  let headers = [];\r\n  let rows = [];\r\n\r\n  if (overlayType === 'customer') {\r\n    title = 'Select Customer';\r\n    headers = ['Name', 'Code', 'Short Name'];\r\n    rows = getFilteredRows(customers, 'custname', 'custcode');\r\n  } else if (overlayType === 'despatchMode') {\r\n    title = 'Select Despatch Mode';\r\n    headers = ['Name'];\r\n    rows = getFilteredRows(despatchModes);\r\n  } else if (overlayType === 'paymentTerms') {\r\n    title = 'Select Payment Terms';\r\n    headers = ['Name'];\r\n    rows = getFilteredRows(paymentTerms);\r\n  } else {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"custom-overlay\">\r\n      <div className=\"custom-overlay-content\">\r\n        <div className=\"custom-overlay-title\">{title}</div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control mb-2\"\r\n          placeholder={`Search ${overlayType}...`}\r\n          value={overlaySearch}\r\n          onChange={e => this.setState({ overlaySearch: e.target.value })}\r\n        />\r\n        <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n          <table className=\"table table-bordered table-sm\">\r\n            <thead>\r\n              <tr>\r\n                {headers.map((h, i) => <th key={i}>{h}</th>)}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {rows.map((item, i) => (\r\n                <tr key={item.id || i} onClick={() => handleSelect(item)} style={{ cursor: 'pointer' }}>\r\n                  {headers.map((h, j) => (\r\n                    <td key={j}>\r\n                      {overlayType === 'customer'\r\n                        ? h === 'Name' ? item.custname\r\n                          : h === 'Code' ? item.custcode\r\n                          : item.custshortName\r\n                        : h === 'Name' ? item.name\r\n                          : item.shortName}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n              {rows.length === 0 && (\r\n                <tr>\r\n                  <td colSpan={headers.length} className=\"text-center\">No records found</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <button className=\"btn btn-secondary btn-sm mt-2\" onClick={this.hideOverlay}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nrenderTaxOverlay = () => {\r\n  const { taxGroups, currentTaxIdx, formData } = this.state;\r\n  if (currentTaxIdx === null) return null;\r\n\r\n  const item = formData.lineItems[currentTaxIdx];\r\n  const selected = new Set(item.taxGroupNames || []);\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed', zIndex: 1000, top: '10%', left: '15%',\r\n      background: '#fff', border: '1px solid #ccc', padding: '20px',\r\n      boxShadow: '0 0 10px rgba(0,0,0,0.3)', width: '70%',\r\n      maxHeight: '70vh', overflowY: 'auto'\r\n    }}>\r\n      <h5>Select Tax Groups</h5>\r\n      <table className=\"table table-sm table-bordered\">\r\n        <thead>\r\n          <tr><th></th><th>Group</th><th>Components</th><th>%</th></tr>\r\n        </thead>\r\n        <tbody>\r\n          {taxGroups.map(tg => (\r\n            <tr key={tg.groupName}>\r\n              <td>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selected.has(tg.groupName)}\r\n                  onChange={e =>\r\n                    this.toggleTaxGroupSelection(tg.groupName, currentTaxIdx, e.target.checked)\r\n                  }\r\n                />\r\n              </td>\r\n              <td>{tg.groupName}</td>\r\n              <td>{tg.lineItems.map(li => li.component).join(', ')}</td>\r\n              <td>{tg.lineItems.map(li => li.percentOrAmt).join(', ')}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"text-right mt-3\">\r\n        <button className=\"btn btn-sm btn-success\" onClick={() => this.setState({ showTaxOverlay: false })}>\r\n          Done\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nrenderOrderPreview = () => {\r\n  const o = this.state.selectedOrder;\r\n  if (!o) return null;\r\n\r\n  return (\r\n    <div className=\"card mt-4 full-height p-4\">\r\n      <div className=\"d-flex justify-content-between mb-3\">\r\n        <h4 className=\"card-title\">Order Preview - {o.orderNo}</h4>\r\n        <div>\r\n          <button className=\"btn btn-sm btn-info mr-2\" onClick={() => this.loadorderForEdit(o)}>Edit</button>\r\n          <button className=\"btn btn-sm btn-success\" onClick={this.handleConvertToInvoice}>Convert to Invoice</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\"><b>Customer:</b> {o.customer}</div>\r\n        <div className=\"col-md-4\"><b>Date:</b> {o.orderDate}</div>\r\n        <div className=\"col-md-4\"><b>Status:</b> {o.status}</div>\r\n      </div>\r\n\r\n      <div className=\"row mt-2\">\r\n        <div className=\"col-md-6\"><b>Bill To:</b><br />{o.billTo}</div>\r\n        <div className=\"col-md-6\"><b>Ship To:</b><br />{o.shipTo}</div>\r\n      </div>\r\n\r\n      <h5 className=\"mt-4\">Line Items</h5>\r\n      <table className=\"table table-bordered\">\r\n        <thead><tr><th>Item Code</th><th>Description</th><th>Qty</th><th>Unit Price</th><th>Total</th></tr></thead>\r\n        <tbody>\r\n          {o.lineItems?.map((item, i) => (\r\n            <tr key={i}>\r\n              <td>{item.itemCode}</td>\r\n              <td>{item.itemDescription}</td>\r\n              <td>{item.qty}</td>\r\n              <td>{item.unitPrice}</td>\r\n              <td>{item.total}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <div className=\"text-right\"><b>Total:</b> {o.orderValue}</div>\r\n      <button className=\"btn btn-secondary mt-3\" onClick={() => this.setState({ previewOrderMode: false })}>Back to List</button>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n  renderProductOverlay = () => {\r\n    const { products, productOverlaySearch, selectedProductIds } = this.state;\r\n    const filtered = products.filter(p =>\r\n      (p.ptshortName || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) ||\r\n      (p.ptdescription || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) ||\r\n      (p.itemCode || '').toLowerCase().includes(productOverlaySearch.toLowerCase())\r\n    );\r\n    return (\r\n      <div className=\"custom-overlay\">\r\n        <div className=\"custom-overlay-content\">\r\n          <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n            <div className=\"custom-overlay-title\">Select Products</div>\r\n            <button\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => {\r\n                const selectedProducts = products.filter(p => this.state.selectedProductIds.includes(p.id));\r\n                this.setState(prev => ({\r\n                  formData: {\r\n                    ...prev.formData,\r\n                    lineItems: [\r\n                      ...prev.formData.lineItems,\r\n                      ...selectedProducts\r\n                        .filter(p => !prev.formData.lineItems.some(item => item.id === p.id))\r\n                        .map(p => ({\r\n                          id: p.id,\r\n                          itemCode: p.productId || '',\r\n                          itemDescription: p.ptdescription || '',\r\n                          itemType: p.itemType || '',\r\n                          materialType: p.materialType || '',\r\n                          onHand: p.onHand || 0,\r\n                          taxGroup: p.taxGroup || '',\r\n                          custPartNo: p.custPartNo || '', // Assuming this is cust part table\r\n                          hsnNo: p.hsnNo || '', // Assuming HSN No.\r\n                          unitPrice: p.unitPrice || 0,\r\n                          qty: 1,\r\n                          total: (p.unitPrice || 0).toFixed(2)\r\n                        }))\r\n                    ]\r\n                  },\r\n                  productOverlayVisible: false,\r\n                  selectedProductIds: []\r\n                }));\r\n              }}\r\n            >Add Selected</button>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Search products...\"\r\n            value={productOverlaySearch}\r\n            onChange={e => this.setState({ productOverlaySearch: e.target.value })}\r\n          />\r\n          <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n            <table className=\"table table-bordered table-sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th></th>\r\n                  <th>Item Code</th>\r\n                  <th>Item Desc</th>\r\n                  <th>Item Type</th>\r\n                  <th>Material Type</th>\r\n                  <th>On Hand</th>\r\n                  <th>Tax Grp</th>\r\n                  <th>Cust Part No</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filtered.map(p => (\r\n                  <tr key={p.id}>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedProductIds.includes(p.id)}\r\n                        onChange={e => {\r\n                          const checked = e.target.checked;\r\n                          this.setState(prev => ({\r\n                            selectedProductIds: checked\r\n                              ? [...prev.selectedProductIds, p.id]\r\n                              : prev.selectedProductIds.filter(id => id !== p.id)\r\n                          }));\r\n                        }}\r\n                      />\r\n                    </td>\r\n                    <td>{p.productId}</td>\r\n                    <td>{p.ptdescription || ''}</td>\r\n                    <td>{p.itemType || ''}</td>\r\n                    <td>{p.materialType || ''}</td>\r\n                    <td>{p.onHand || 0}</td>\r\n                    <td>{p.taxGroup || ''}</td>\r\n                    <td>{p.custPartNo || ''}</td>\r\n                  </tr>\r\n                ))}\r\n                {filtered.length === 0 && (\r\n                  <tr>\r\n                    <td colSpan=\"8\" className=\"text-center\">No products found</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          {/* Add pagination here if needed, for now, it's just a placeholder */}\r\n          <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n            <span>Page 1 of 1</span>\r\n            <button className=\"btn btn-secondary btn-sm\" onClick={() => this.setState({ productOverlayVisible: false, selectedProductIds: [] })}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderorderTable = () => (\r\n    <div className=\"card mt-4 full-height\">\r\n      <div className=\"card-body\">\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n          <h4 className=\"card-title\">Orders</h4>\r\n          <button className=\"btn btn-primary\" onClick={() => this.setState({ showForm: true })}>+ Add Order</button>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-bordered table-hover\">\r\n            <thead className=\"thead-light\">\r\n              <tr style={{ fontSize: '14px' }}>\r\n                <th>Order No</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Order Value</th>\r\n                <th>After Discount</th>\r\n                <th>Status</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.orders.map((q, i) => {\r\n                let statusClass = \"badge-secondary\";\r\n                if( q.status === \"Entered\") statusClass=\"badge-warning\";\r\n                else if(q.status === \"Submitted\") statusClass=\"badge-info\";\r\n                else if(q.status === \"Approved\") statusClass=\"badge-success\";\r\n                else if(q.status === \"Rejected\") statusClass=\"badge-danger\";\r\n\r\n                return(\r\n                  <tr key={i} style={{ fontSize: '14px' }}>\r\n                  <td>\r\n                    <button\r\n                     className=\"btn btn-link p-0\" \r\n                     onClick={() => this.loadOrderPreview(q)}>\r\n                    {q.orderNo}\r\n                  </button>\r\n\r\n                  </td>\r\n                  <td>{q.customer}</td>\r\n                  <td>{q.orderDate}</td>\r\n                  <td>{q.orderValue}</td>\r\n                  <td>{q.afterDiscount}</td>\r\n                  <td>\r\n                    <label className={`badge ${statusClass}`}\r\n                    style={{fontSize: '14px'}}>{q.status}</label></td>\r\n                  <td>\r\n                    <button className=\"btn btn-outline-primary btn-sm\" onClick={this.handleConvertToInvoice}>\r\n                      Convert to Invoice\r\n                    </button></td>\r\n                </tr>\r\n                );\r\n              })}\r\n                    {this.state.orders.length === 0 && (\r\n                <tr><td colSpan=\"6\" className=\"text-center\">No orders found.</td></tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  renderorderForm = () => {\r\n    const { formData, overlayType, productOverlayVisible,breakdownItems,breakdownType } = this.state;\r\n    const isFOB = formData.impExp === 'FOB';\r\n      const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\r\n      acc[li.itemCode] = parseFloat(li.total || 0) || 0;\r\n      return acc;\r\n    }, {});\r\n    const sumOfItemTotals = Object.values(itemTotals).reduce((sum, val) => sum + val, 0);\r\n\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"card full-height\">\r\n          <div style={{ flex: 1, overflowY: 'auto', padding: '24px' }}>\r\n            <h4 className=\"mb-3\">Order Form</h4>\r\n            <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n              <li className=\"nav-item\">\r\n                <button type=\"button\" className={`nav-link ${this.state.activeTab === 'co' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'co' })}>CO Details</button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <button type=\"button\" className={`nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'commercial' })}>Commercial Terms</button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n              <button type=\"button\" className={`nav-link ${this.state.activeTab === 'breakdown' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'breakdown' })}>Breakdown</button>\r\n            </li>\r\n            </ul>\r\n            <form className=\"form-sample\" onSubmit={this.handleSubmit}>\r\n              <div className=\"tab-content pt-3\">\r\n                {this.state.activeTab === 'co' && (\r\n                  <>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Order No</label>\r\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={formData.orderNo} onChange={(e) => this.handleInputChange('orderNo', e.target.value)} />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Order Date</label>\r\n                        <input type=\"date\" className=\"form-control form-control-sm\" value={formData.orderDate} onChange={(e) => this.handleInputChange('orderDate', e.target.value)} />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Order Type</label>\r\n                        <select className=\"form-control form-control-sm\" value={formData.orderType} onChange={(e) => this.handleInputChange('orderType', e.target.value)}>\r\n                          <option>Standard</option>\r\n                          <option>Manual</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Status</label>\r\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={formData.status}   style={{ backgroundColor: '#fff' }} readOnly />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Customer</label>\r\n                        <div className=\"input-group input-group-sm\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Choose Customer\"\r\n                            ref={this.customerInputRef}\r\n                            value={formData.customer}\r\n                            readOnly\r\n                            onClick={() => this.showOverlay('customer')}\r\n                            style={{ cursor: 'pointer' }}\r\n                          />\r\n                          <div className=\"input-group-append\">\r\n                            <button className=\"btn btn-outline-secondary btn-sm\" type=\"button\" onClick={() => this.showOverlay('customer')}>Select</button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>IMP/EXP</label>\r\n                        <select\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.impExp}\r\n                          onChange={(e) => this.handleInputChange('impExp', e.target.value)}\r\n                        >\r\n                          <option>None</option>\r\n                          <option>COB</option>\r\n                          <option>FOB</option>\r\n                          <option>CIF</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group col-md-2\">\r\n                        <label>Ref No.</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.qrefNo}\r\n                          onChange={(e) => this.handleInputChange('qrefNo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Choose</label>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"form-check mr-4\">\r\n                            <input type=\"radio\" className=\"form-check-input\" name=\"choose\" id=\"chooseService\" value=\"Service\" checked={formData.choose === 'Service'} onChange={(e) => this.handleInputChange('choose', e.target.value)} />\r\n                            <label className=\"form-check-label\" htmlFor=\"chooseService\">Service</label>\r\n                          </div>\r\n                          <div className=\"form-check\">\r\n                            <input type=\"radio\" className=\"form-check-input\" name=\"choose\" id=\"chooseProduct\" value=\"Product\" checked={formData.choose === 'Product'} onChange={(e) => this.handleInputChange('choose', e.target.value)} />\r\n                            <label className=\"form-check-label\" htmlFor=\"chooseProduct\">Product</label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Currency</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.currency}\r\n                          style={{ backgroundColor: '#fff' }}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Conversion Rate</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.conversionRate}\r\n                          onChange={(e) => this.handleInputChange('conversionRate', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Tax Amount</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxAmount}\r\n                          onChange={(e) => this.handleInputChange('taxAmount', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Order Value</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.orderValue}\r\n                          onChange={(e) => this.handleInputChange('orderValue', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                      <label>Discount %</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={this.state.formData.discountPercent}\r\n                        onChange={e => this.handleDiscountChange(\"discountPercent\", e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                    <label>Discount Amount</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-control\"\r\n                      value={this.state.formData.discountAmount}\r\n                      readOnly\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group col-md-4\">\r\n                      <label>After Discount - Quote Value</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={this.state.formData.afterDiscount}\r\n                        readOnly\r\n                      />\r\n                    </div>\r\n                </div>\r\n                          <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                            <h4 className=\"card-title\">Line Item</h4>\r\n                            <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={() => this.setState({ productOverlayVisible: true })}>\r\n                              + Add Product\r\n                            </button>\r\n                          </div>\r\n                          <div className=\"table-responsive\">\r\n                            <table className=\"table table-bordered\">\r\n                              <thead className=\"thead-light\">\r\n                                <tr >\r\n                                  <th> Item Code </th>\r\n                                  <th> Item Desc </th>\r\n                                  <th> Cust Part No </th>\r\n                                  <th> HSN No </th>\r\n                                  <th> On Hand </th> \r\n                                  <th>Unit Price</th>\r\n                                  <th>Quantity</th>\r\n                                  <th>Tax Id</th>\r\n                                  <th>Item Total</th>\r\n                                  <th>Tax Amt</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {formData.lineItems.map((item, idx) => (\r\n                                  <tr key={item.id || idx}>\r\n                                    <td>{item.itemCode}</td>\r\n                                    <td>{item.itemDescription}</td>\r\n                                    <td>{item.custPartNo}</td>\r\n                                    <td>{item.hsnNo}</td>\r\n                                    <td>{item.onHand}</td>\r\n                                    <td>\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        value={item.unitPrice}\r\n                                        onChange={e => this.handleLineItemChange(idx, 'unitPrice', e.target.value)}\r\n                                        style={{ width: 80 }}\r\n                                      />\r\n                                    </td>\r\n                                    <td>\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        min=\"1\"\r\n                                        value={item.qty}\r\n                                        onChange={e => this.handleLineItemChange(idx, 'qty', e.target.value)}\r\n                                        style={{ width: 60 }}\r\n                                      />\r\n                                    </td>\r\n                                    <td style={{ verticalAlign: 'middle' }}>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-sm btn-outline-primary\"\r\n                                        onClick={() => this.setState({ showTaxOverlay: true, currentTaxIdx: idx })}\r\n                                      >\r\n                                        Select Tax\r\n                                      </button>\r\n                                      <div style={{ fontSize: '10px', marginTop: '4px' }}>\r\n                                        {(item.taxGroupNames || []).join(', ') || '-'}\r\n                                      </div>\r\n                                    </td>\r\n                                      <td>{item.taxAmount || '0.00'}</td>\r\n                                      <td>{item.total || '0.00'}</td>\r\n                                  </tr>\r\n                                ))}\r\n                                {formData.lineItems.length === 0 && (\r\n                                  <tr>\r\n                                    <td colSpan=\"9\" className=\"text-center\">No items</td>\r\n                                  </tr>\r\n                                )}\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                          {/* Add pagination for line items here if needed */}\r\n                          <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n                            <span>Page 1 of 1</span>\r\n                          </div>\r\n                      \r\n                  </>\r\n                )}\r\n                {this.state.activeTab === 'commercial' && (\r\n                  <>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-6\">\r\n                        <label>Bill To</label>\r\n                        <textarea\r\n                          className=\"form-control form-control-sm\"\r\n                          rows=\"3\"\r\n                          value={formData.billTo}\r\n                          onChange={(e) => this.handleInputChange('billTo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-6\">\r\n                        <label>Ship To</label>\r\n                        <textarea\r\n                          className=\"form-control form-control-sm\"\r\n                          rows=\"3\"\r\n                          value={formData.shipTo}\r\n                          onChange={(e) => this.handleInputChange('shipTo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-4\">\r\n  <label>Despatch Mode</label>\r\n  <div className=\"input-group input-group-sm\">\r\n    <input\r\n      type=\"text\"\r\n      className=\"form-control\"\r\n      value={formData.despatchMode}\r\n      readOnly\r\n      onClick={() => !isFOB && this.showOverlay('despatchMode')}\r\n      style={{ cursor: isFOB ? 'not-allowed' : 'pointer', backgroundColor: '#fff' }}\r\n    />\r\n    <div className=\"input-group-append\">\r\n      <button\r\n        className=\"btn btn-outline-secondary btn-sm\"\r\n        type=\"button\"\r\n        disabled={isFOB}\r\n        onClick={() => this.showOverlay('despatchMode')}\r\n      >\r\n        Select\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div className=\"form-group col-md-4\">\r\n  <label>Payment Terms</label>\r\n  <div className=\"input-group input-group-sm\">\r\n    <input\r\n      type=\"text\"\r\n      className=\"form-control\"\r\n      value={formData.paymentTerms}\r\n      readOnly\r\n      onClick={() => !isFOB && this.showOverlay('paymentTerms')}\r\n      style={{ cursor: isFOB ? 'not-allowed' : 'pointer', backgroundColor: '#fff' }}\r\n    />\r\n    <div className=\"input-group-append\">\r\n      <button\r\n        className=\"btn btn-outline-secondary btn-sm\"\r\n        type=\"button\"\r\n        disabled={isFOB}\r\n        onClick={() => this.showOverlay('paymentTerms')}\r\n      >\r\n        Select\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Freight Charges</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.freightCharges}\r\n                          onChange={(e) => this.handleInputChange('freightCharges', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Tax %</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxPercent}\r\n                          onChange={(e) => this.handleInputChange('taxPercent', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Freight Tax Amount</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxAmount}\r\n                          onChange={(e) => this.handleInputChange('freighttaxAmount', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Packing Charges</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.packingCharges}\r\n                          onChange={(e) => this.handleInputChange('packingCharges', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-right mt-3\">\r\n                      <button type=\"submit\" className=\"btn btn-success\">Save All Details</button>\r\n                    </div>\r\n                  </>\r\n                )}\r\n                 {this.state.activeTab === 'breakdown' && (\r\n                  <>\r\n                    <h5>Milestone Breakdown</h5>\r\n\r\n                    <div className=\"row mb-2\">\r\n                      <div className=\"col\"><b>Quote Value:</b> {formData.quoteValue}</div>\r\n                      <div className=\"col\"><b>Tax Amount:</b> {formData.taxAmount}</div>\r\n                      <div className=\"col\"><b>Sum of Item Totals:</b> {sumOfItemTotals.toFixed(2)}</div>\r\n                    </div>\r\n\r\n                    <div className=\"row mb-2\">\r\n                      <div className=\"col-md-3\">\r\n                        <label>Subproduct Mode</label>\r\n                        <select\r\n                          className=\"form-control form-control-sm\"\r\n                          value={breakdownType}\r\n                          onChange={e => this.handleBreakdownTypeChange(e.target.value)}\r\n                        >\r\n                          <option value=\"Amount\">Amount</option>\r\n                          <option value=\"Percentage\">Percentage</option>\r\n                        </select>\r\n                      </div>\r\n\r\n                      <div className=\"col-md-9 text-right\">\r\n                        <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={() => {\r\n                          // Add breakdown item for each product automatically if none exist (convenience)\r\n                          if ((formData.lineItems || []).length > 0) {\r\n                            this.setState(prev => {\r\n                              const bi = [...prev.breakdownItems];\r\n                              // create breakdown entries from lineItems if not present\r\n                              formData.lineItems.forEach((li, i) => {\r\n                                const exists = bi.some(b => b.productId === li.itemCode);\r\n                                if (!exists) {\r\n                                  bi.push({ sno: bi.length + 1, productId: li.itemCode, desc: li.itemDescription || '', subProducts: [] });\r\n                                }\r\n                              });\r\n                              return { breakdownItems: bi };\r\n                            });\r\n                          } else {\r\n                            this.setState(prev => ({ breakdownItems: [...prev.breakdownItems, { sno: prev.breakdownItems.length + 1, productId: '', desc: '', subProducts: [] }] }));\r\n                          }\r\n                        }}>+ Add Breakdown</button>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <table className=\"table table-bordered\">\r\n                      <thead className=\"thead-light\">\r\n                        <tr>\r\n                          <th>S.No</th>\r\n                          <th>ID</th>\r\n                          <th>Desc / Subproduct name</th>\r\n                          <th>SubProduct value ({breakdownType === 'Percentage' ? '%' : 'â‚¹'})</th>\r\n                          <th>Total (â‚¹)</th>\r\n                          <th>Action</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {breakdownItems.map((item, idx) => {\r\n                          const mainItemTotal = itemTotals[item.productId] || 0;\r\n                          const subSum = this.getSubProductsSum(item);\r\n                          const remaining = (mainItemTotal - subSum);\r\n                          const subs = Array.isArray(item.subProducts) ? item.subProducts : [];\r\n\r\n                          return (\r\n                            <React.Fragment key={idx}>\r\n                              {/* parent product row */}\r\n                              <tr style={{ background: '#eef4ff' }}>\r\n                                <td>{item.sno}</td>\r\n                                <td>{item.productId}</td>\r\n                                <td>{item.desc}</td>\r\n\r\n                                {/* SubProduct value column now shows subproducts sum & remaining */}\r\n                                <td>\r\n                                  <div>\r\n                                    <div><small>Subproducts sum: <b>{subSum.toFixed(2)}</b></small></div>\r\n                                    <div><small>Remaining: <b style={{ color: remaining > 0.01 ? 'red' : 'green' }}>{remaining.toFixed(2)}</b></small></div>\r\n                                  </div>\r\n                                </td>\r\n\r\n                                {/* Total column: main item total */}\r\n                                <td>{mainItemTotal.toFixed(2)}</td>\r\n\r\n                                {/* Action column: add / autofill buttons */}\r\n                                <td>\r\n                                  <div className=\"d-flex\">\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-sm btn-outline-primary mr-2\"\r\n                                      onClick={() => this.handleAddInlineSubProduct(idx)}\r\n                                    >+ Add</button>\r\n\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-sm btn-outline-secondary\"\r\n                                      onClick={() => {\r\n                                        if (remaining <= 0) return;\r\n                                        this.handleAddInlineSubProduct(idx, {\r\n                                          name: 'Remainder',\r\n                                          value: breakdownType === 'Percentage'\r\n                                            ? ( (remaining * 100) / (mainItemTotal || 1) ).toFixed(2)\r\n                                            : remaining.toFixed(2)\r\n                                        });\r\n                                      }}\r\n                                    >Auto-fill</button>\r\n                                  </div>\r\n                                </td>\r\n                              </tr>\r\n\r\n                              {/* subproduct rows (inline editable) */}\r\n                              {subs.length === 0 && (\r\n                                <tr key={`notice-${idx}`}>\r\n                                  <td colSpan=\"6\" className=\"text-center text-muted\">No subproducts added for this item.</td>\r\n                                </tr>\r\n                              )}\r\n\r\n                              {subs.map((sp, spIdx) => {\r\n                                const spId = `${item.productId}_${spIdx + 1}`;\r\n                                const rawVal = parseFloat(sp.value || 0) || 0;\r\n                                const spTotal = breakdownType === 'Percentage'\r\n                                  ? (mainItemTotal * rawVal / 100)\r\n                                  : rawVal;\r\n\r\n                                return (\r\n                                  <tr key={spId} style={{ background: '#f9f9f9' }}>\r\n                                    {/* Disabled / greyed SNo cell for sub-rows */}\r\n                                    <td className=\"text-muted\" aria-disabled=\"true\">â€”</td>\r\n\r\n                                    {/* ID column */}\r\n                                    <td>{spId}</td>\r\n\r\n                                    {/* Desc / Subproduct name with indentation to show hierarchy */}\r\n                                    <td>\r\n                                      <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control form-control-sm\"\r\n                                        value={sp.name || ''}\r\n                                        onChange={(e) => this.handleSubProductChange(idx, spIdx, 'name', e.target.value)}\r\n                                        placeholder=\"Enter name\"\r\n                                        style={{ paddingLeft: '18px' }} // indentation\r\n                                      />\r\n                                    </td>\r\n\r\n                                    {/* SubProduct value (amount or percent input) */}\r\n                                    <td>\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        step=\"any\"\r\n                                        min=\"0\"\r\n                                        className=\"form-control form-control-sm\"\r\n                                        value={sp.value || ''}\r\n                                        onChange={(e) => this.handleSubProductChange(idx, spIdx, 'value', e.target.value)}\r\n                                        style={{ width: '120px' }}\r\n                                      />\r\n                                    </td>\r\n\r\n                                    {/* Total computed from value */}\r\n                                    <td>{spTotal.toFixed(2)}</td>\r\n\r\n                                    {/* Remove button */}\r\n                                    <td>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-sm btn-danger\"\r\n                                        onClick={() => this.handleRemoveSubProduct(idx, spIdx)}\r\n                                      >-</button>\r\n                                    </td>\r\n                                  </tr>\r\n                                );\r\n                              })}\r\n                            </React.Fragment>\r\n                          );\r\n                        })}\r\n                      </tbody>\r\n                    </table>\r\n\r\n                    {!this.isBreakdownValid() && (\r\n                      <div className=\"alert alert-danger\">\r\n                        Breakdown incomplete â€” for each product the sum of subproduct totals must equal the product total. Save disabled until fixed.\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n\r\n             <div className=\"fixed-card-footer text-right p-3 border-top bg-white\">\r\n                <button type=\"submit\" className=\"btn btn-success mr-2\" disabled={!this.isBreakdownValid()}>Save All Details</button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => this.setState({ showForm: false, editingId: null })}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n            {overlayType && this.renderOverlay()}\r\n            {productOverlayVisible && this.renderProductOverlay()}\r\n            {this.state.showTaxOverlay && this.renderTaxOverlay()}\r\n          </div>\r\n           \r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        {this.state.previewOrderMode ? this.renderOrderPreview() : (this.state.showForm ? this.renderorderForm() : this.renderorderTable())}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Order);\r\n"]},"metadata":{},"sourceType":"module"}