{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\panelone\\\\Quote.js\";\nimport React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport { db } from '../../firebase';\nimport { collection, getDocs, addDoc, doc, updateDoc } from 'firebase/firestore';\n\nclass Quote extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: 'co',\n      quotes: [],\n      customers: [],\n      products: [],\n      showForm: false,\n      editingId: null,\n      overlayType: '',\n      overlaySearch: '',\n      productOverlayVisible: false,\n      productOverlaySearch: '',\n      selectedProductIds: [],\n      formData: {\n        quoteNo: '',\n        quoteDate: new Date().toISOString().split('T')[0],\n        quoteType: 'Standard',\n        customer: '',\n        status: 'Entered',\n        choose: 'Service',\n        refNo: '',\n        impExp: 'None',\n        currency: '',\n        conversionRate: '',\n        taxAmount: '',\n        quoteValue: '',\n        billTo: '',\n        shipTo: '',\n        despatchMode: 'By Air',\n        paymentTerms: '',\n        freightCharges: '',\n        taxPercent: '',\n        packingCharges: '',\n        lineItems: []\n      }\n    };\n    this.customerInputRef = React.createRef();\n\n    this.formatAddress = addr => {\n      if (!addr) return '';\n      if (typeof addr === 'string') return addr;\n      return [addr.address, [addr.city, addr.state, addr.country].filter(Boolean).join(', '), addr.zip].filter(Boolean).join('\\n');\n    };\n\n    this.fetchQuotes = async () => {\n      const snap = await getDocs(collection(db, 'quotes'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        quotes: data.reverse()\n      });\n    };\n\n    this.fetchCustomers = async () => {\n      const snap = await getDocs(collection(db, 'customers'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        customers: data\n      });\n    };\n\n    this.fetchProducts = async () => {\n      const snap = await getDocs(collection(db, 'products'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        products: data\n      });\n    };\n\n    this.handleInputChange = (field, value) => {\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          [field]: value\n        }\n      }));\n    };\n\n    this.handleLineItemChange = (idx, field, value) => {\n      this.setState(prev => {\n        const lineItems = [...prev.formData.lineItems];\n        lineItems[idx][field] = value;\n\n        if (field === 'qty' || field === 'unitPrice') {\n          const qty = parseFloat(lineItems[idx].qty) || 1;\n          const unitPrice = parseFloat(lineItems[idx].unitPrice) || 0;\n          lineItems[idx].amount = qty * unitPrice;\n        }\n\n        return {\n          formData: { ...prev.formData,\n            lineItems\n          }\n        };\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        editingId,\n        formData,\n        quotes\n      } = this.state;\n      if (!formData.customer) return alert(\"Customer is required\");\n      if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\n\n      if (editingId) {\n        await updateDoc(doc(db, 'quotes', editingId), formData);\n      } else {\n        formData.quoteNo = `QT${1000 + quotes.length}`;\n        await addDoc(collection(db, 'quotes'), formData);\n      }\n\n      this.setState({\n        showForm: false,\n        editingId: null\n      });\n      this.fetchQuotes();\n    };\n\n    this.loadQuoteForEdit = quote => {\n      this.setState({\n        formData: { ...quote,\n          lineItems: Array.isArray(quote.lineItems) ? quote.lineItems : [] // Ensure array\n\n        },\n        editingId: quote.id,\n        showForm: true,\n        activeTab: 'co'\n      }, () => {\n        if (this.customerInputRef.current) {\n          this.customerInputRef.current.value = quote.customer;\n        }\n      });\n    };\n\n    this.showOverlay = type => this.setState({\n      overlayType: type,\n      overlaySearch: ''\n    });\n\n    this.hideOverlay = () => this.setState({\n      overlayType: '',\n      overlaySearch: ''\n    });\n\n    this.selectOverlayValue = value => {\n      if (this.state.overlayType === 'customer') {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            customer: value.name || value.company || '',\n            billTo: this.formatAddress(value.billTo),\n            shipTo: this.formatAddress(value.shipTo)\n          },\n          overlayType: '',\n          overlaySearch: ''\n        }), () => {\n          if (this.customerInputRef.current) {\n            this.customerInputRef.current.value = value.name || value.company || '';\n          }\n        });\n      }\n    };\n\n    this.renderOverlay = () => {\n      const {\n        overlayType,\n        overlaySearch,\n        customers\n      } = this.state;\n\n      if (overlayType === 'customer') {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"custom-overlay\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"custom-overlay-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"custom-overlay-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }\n        }, \"Select Customer\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          className: \"form-control mb-2\",\n          placeholder: \"Search customer...\",\n          value: overlaySearch,\n          onChange: e => this.setState({\n            overlaySearch: e.target.value\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            maxHeight: 300,\n            overflowY: 'auto'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"table\", {\n          className: \"table table-bordered table-sm\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"thead\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 21\n          }\n        }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 21\n          }\n        }, \"Code\"), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 21\n          }\n        }, \"Short Name\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }\n        }, customers.filter(c => (c.name || '').toLowerCase().includes((overlaySearch || '').toLowerCase())).map((c, i) => /*#__PURE__*/React.createElement(\"tr\", {\n          key: c.id || i,\n          onClick: () => this.selectOverlayValue(c),\n          style: {\n            cursor: 'pointer'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }\n        }, c.name), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }\n        }, c.code), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }\n        }, c.shortName))), customers.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          colSpan: \"3\",\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 23\n          }\n        }, \"No records found\"))))), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-secondary btn-sm mt-2\",\n          onClick: this.hideOverlay,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }\n        }, \"Cancel\")));\n      }\n\n      return null;\n    };\n\n    this.renderProductOverlay = () => {\n      const {\n        products,\n        productOverlaySearch,\n        selectedProductIds\n      } = this.state;\n      const filtered = products.filter(p => (p.name || '').toLowerCase().includes(productOverlaySearch.toLowerCase()));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }\n      }, \"Select Products\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: \"Search products...\",\n        value: productOverlaySearch,\n        onChange: e => this.setState({\n          productOverlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 19\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 19\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 19\n        }\n      }, \"UOM\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 19\n        }\n      }, \"Unit Price\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 15\n        }\n      }, filtered.map(p => /*#__PURE__*/React.createElement(\"tr\", {\n        key: p.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: selectedProductIds.includes(p.id),\n        onChange: e => {\n          const checked = e.target.checked;\n          this.setState(prev => ({\n            selectedProductIds: checked ? [...prev.selectedProductIds, p.id] : prev.selectedProductIds.filter(id => id !== p.id)\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }\n      }, p.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }\n      }, p.description || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }\n      }, p.uom), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }\n      }, p.unitPrice)))))), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-success btn-sm mt-2\",\n        onClick: () => {\n          const selectedProducts = products.filter(p => this.state.selectedProductIds.includes(p.id));\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              lineItems: [...prev.formData.lineItems, ...selectedProducts.filter(p => !prev.formData.lineItems.some(item => item.id === p.id)).map(p => ({\n                id: p.id,\n                name: p.name,\n                description: p.description || '',\n                uom: p.uom,\n                qty: 1,\n                unitPrice: p.unitPrice,\n                taxPercent: 0,\n                amount: p.unitPrice\n              }))]\n            },\n            productOverlayVisible: false,\n            selectedProductIds: []\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }\n      }, \"Add Selected\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm mt-2 ml-2\",\n        onClick: () => this.setState({\n          productOverlayVisible: false,\n          selectedProductIds: []\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }\n      }, \"Cancel\")));\n    };\n\n    this.showQuotePDF = quote => {\n      const subtotal = (quote.lineItems || []).reduce((sum, i) => sum + (parseFloat(i.amount) || 0), 0);\n      const tax = parseFloat(quote.taxAmount) || 0;\n      const total = parseFloat(quote.quoteValue) || subtotal + tax;\n      const win = window.open('', '_blank');\n      win.document.write(`\n      <html>\n      <head>\n        <title>Quote Preview</title>\n        <style>\n          body { font-family: Arial; padding: 24px; }\n          .header { background: #2ecc40; color: #fff; padding: 10px 20px; font-size: 20px; font-weight: bold; }\n          .quote-title { float: right; font-size: 18px; font-weight: bold; }\n          .section { margin-top: 20px; }\n          .flex { display: flex; justify-content: space-between; }\n          .box { width: 45%; }\n          table { border-collapse: collapse; width: 100%; margin-top: 16px; }\n          th, td { border: 1px solid #ccc; padding: 8px; text-align: left; }\n          th { background: #f8f8f8; }\n          .total-row td { font-weight: bold; }\n          .right { text-align: right; }\n        </style>\n      </head>\n      <body>\n        <div class=\"header\">\n          Your Company Name\n          <span class=\"quote-title\">QUOTE</span>\n        </div>\n        <div class=\"section flex\">\n          <div class=\"box\">\n            <b>Bill To</b><br/>\n            ${quote.billTo ? quote.billTo.replace(/\\n/g, '<br/>') : ''}\n          </div>\n          <div class=\"box\">\n            <b>Ship To</b><br/>\n            ${quote.shipTo ? quote.shipTo.replace(/\\n/g, '<br/>') : ''}\n          </div>\n        </div>\n        <div class=\"section flex\">\n          <div class=\"box\">\n            <b>Quote #:</b> ${quote.quoteNo || ''}<br/>\n            <b>Quote Date:</b> ${quote.quoteDate || ''}<br/>\n            <b>P.O.#:</b> ${quote.refNo || ''}\n          </div>\n        </div>\n        <div class=\"section\">\n          <table>\n            <thead>\n              <tr>\n                <th>UNIT PRICE</th>\n                <th>AMOUNT</th>\n              </tr>\n            </thead>\n            <tbody>\n              ${(quote.lineItems || []).map((item, idx) => `\n                <tr>\n                  \n                  <td class=\"right\">${item.unitPrice}</td>\n                  <td class=\"right\">${item.amount}</td>\n                </tr>\n              `).join('')}\n              <tr>\n                <td colspan=\"3\" class=\"right\">Subtotal</td>\n                <td class=\"right\">${subtotal.toFixed(2)}</td>\n              </tr>\n              <tr>\n                <td colspan=\"3\" class=\"right\">Sales Tax</td>\n                <td class=\"right\">${tax.toFixed(2)}</td>\n              </tr>\n              <tr class=\"total-row\">\n                <td colspan=\"3\" class=\"right\">TOTAL</td>\n                <td class=\"right\">${total.toFixed(2)}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"section\">\n          <b>Terms & Conditions</b><br/>\n          Payment is due within 15 days.<br/>\n          Please make checks payable to: Your Company Name.\n        </div>\n      </body>\n      </html>\n    `);\n      win.document.close();\n    };\n\n    this.renderQuoteTable = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-4 full-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 11\n      }\n    }, \"Quotes\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.setState({\n        showForm: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }\n    }, \"+ Add Quote\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 17\n      }\n    }, \"Quote No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 17\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 17\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 17\n      }\n    }, \"Quote Value\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 17\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 17\n      }\n    }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 13\n      }\n    }, this.state.quotes.map((q, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-link p-0\",\n      onClick: () => this.loadQuoteForEdit(q),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 21\n      }\n    }, q.quoteNo)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 19\n      }\n    }, q.customer), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 19\n      }\n    }, q.quoteDate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 19\n      }\n    }, q.quoteValue), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"badge badge-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 23\n      }\n    }, q.status)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-outline-info\",\n      onClick: () => this.showQuotePDF(q),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 21\n      }\n    }, \"Show PDF\")))), this.state.quotes.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"6\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 21\n      }\n    }, \"No quotes found.\")))))));\n\n    this.renderQuoteForm = () => {\n      const {\n        formData,\n        overlayType,\n        productOverlayVisible\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12 grid-margin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 15\n        }\n      }, \"Quote Form\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"nav nav-tabs\",\n        role: \"tablist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'co' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'co'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 19\n        }\n      }, \"CO Details\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'commercial'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 19\n        }\n      }, \"Commercial Terms\"))), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"form-sample\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tab-content pt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 17\n        }\n      }, this.state.activeTab === 'co' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 25\n        }\n      }, \"Quote No\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.quoteNo,\n        onChange: e => this.handleInputChange('quoteNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 25\n        }\n      }, \"Quote Date\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"date\",\n        className: \"form-control form-control-sm\",\n        value: formData.quoteDate,\n        onChange: e => this.handleInputChange('quoteDate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 25\n        }\n      }, \"Quote Type\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.quoteType,\n        onChange: e => this.handleInputChange('quoteType', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 27\n        }\n      }, \"Standard\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 27\n        }\n      }, \"Manual\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 25\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.status,\n        onChange: e => this.handleInputChange('status', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 27\n        }\n      }, \"Entered\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 27\n        }\n      }, \"On Process\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 27\n        }\n      }, \"Closed\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 25\n        }\n      }, \"Customer\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Choose Customer\",\n        ref: this.customerInputRef,\n        value: formData.customer,\n        readOnly: true,\n        onClick: () => this.showOverlay('customer'),\n        style: {\n          background: '#f8f9fa',\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        onClick: () => this.showOverlay('customer'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 29\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 25\n        }\n      }, \"Choose\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check mr-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        className: \"form-check-input\",\n        name: \"choose\",\n        id: \"chooseService\",\n        value: \"Service\",\n        checked: formData.choose === 'Service',\n        onChange: e => this.handleInputChange('choose', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"chooseService\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 29\n        }\n      }, \"Service\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        className: \"form-check-input\",\n        name: \"choose\",\n        id: \"chooseProduct\",\n        value: \"Product\",\n        checked: formData.choose === 'Product',\n        onChange: e => this.handleInputChange('choose', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"chooseProduct\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 29\n        }\n      }, \"Product\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 25\n        }\n      }, \"IMP/EXP\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.impExp,\n        onChange: e => this.handleInputChange('impExp', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 27\n        }\n      }, \"None\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 27\n        }\n      }, \"COB\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 27\n        }\n      }, \"FIP\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 25\n        }\n      }, \"Ref No.\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.refNo,\n        onChange: e => this.handleInputChange('refNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 25\n        }\n      }, \"IMP/EXP\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.impExp,\n        onChange: e => this.handleInputChange('impExp', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 27\n        }\n      }, \"None\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 27\n        }\n      }, \"COB\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 27\n        }\n      }, \"FIP\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 25\n        }\n      }, \"Currency\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.currency,\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 25\n        }\n      }, \"Conversion Rate\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.conversionRate,\n        onChange: e => this.handleInputChange('conversionRate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 25\n        }\n      }, \"Tax Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxAmount,\n        onChange: e => this.handleInputChange('taxAmount', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 25\n        }\n      }, \"Quote Value\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.quoteValue,\n        onChange: e => this.handleInputChange('quoteValue', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-12 grid-margin stretch-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card shadow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 29\n        }\n      }, \"Line Item \"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-sm mb-2\",\n        onClick: () => this.setState({\n          productOverlayVisible: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 29\n        }\n      }, \"+ Add Product\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-responsive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 37\n        }\n      }, \" ID \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 37\n        }\n      }, \" Name \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 37\n        }\n      }, \" Description \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 37\n        }\n      }, \" UOM \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 37\n        }\n      }, \" Qty\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 37\n        }\n      }, \" Unit Price \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 37\n        }\n      }, \" Tax% \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 37\n        }\n      }, \"Amount \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 37\n        }\n      }, \" Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 33\n        }\n      }, formData.lineItems.map((item, idx) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 39\n        }\n      }, item.id), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 39\n        }\n      }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 39\n        }\n      }, item.description), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 39\n        }\n      }, item.uom), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        min: \"1\",\n        value: item.qty,\n        onChange: e => this.handleLineItemChange(idx, 'qty', e.target.value),\n        style: {\n          width: 60\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        value: item.unitPrice,\n        onChange: e => this.handleLineItemChange(idx, 'unitPrice', e.target.value),\n        style: {\n          width: 80\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        value: item.taxPercent,\n        onChange: e => this.handleLineItemChange(idx, 'taxPercent', e.target.value),\n        style: {\n          width: 60\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 39\n        }\n      }, item.amount), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger btn-sm\",\n        onClick: () => {\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              lineItems: prev.formData.lineItems.filter((_, i) => i !== idx)\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 41\n        }\n      }, \"Remove\")))), formData.lineItems.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"9\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 39\n        }\n      }, \"No items\"))))))))), this.state.activeTab === 'commercial' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 25\n        }\n      }, \"Bill To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"3\",\n        value: formData.billTo,\n        onChange: e => this.handleInputChange('billTo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 25\n        }\n      }, \"Ship To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"3\",\n        value: formData.shipTo,\n        onChange: e => this.handleInputChange('shipTo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 25\n        }\n      }, \"Despatch Mode\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.despatchMode,\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 25\n        }\n      }, \"Payment Terms\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.paymentTerms,\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 25\n        }\n      }, \"Freight Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.freightCharges,\n        onChange: e => this.handleInputChange('freightCharges', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 25\n        }\n      }, \"Tax %\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxPercent,\n        onChange: e => this.handleInputChange('taxPercent', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 25\n        }\n      }, \"Tax Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxAmount,\n        onChange: e => this.handleInputChange('taxAmount', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 25\n        }\n      }, \"Packing Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.packingCharges,\n        onChange: e => this.handleInputChange('packingCharges', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 23\n        }\n      }, \"Save All Details\"))))), overlayType && this.renderOverlay(), productOverlayVisible && this.renderProductOverlay()))));\n    };\n  }\n\n  componentDidMount() {\n    bsCustomFileInput.init();\n    this.fetchQuotes();\n    this.fetchCustomers();\n    this.fetchProducts();\n    const params = new URLSearchParams(window.location.search);\n    const org = params.get('org');\n    const prospect = params.get('prospect');\n\n    if (org || prospect) {\n      this.setState(prev => ({\n        showForm: true,\n        formData: { ...prev.formData,\n          customer: org || prev.formData.customer,\n          refNo: prospect || prev.formData.refNo\n        }\n      }), () => {\n        if (this.customerInputRef.current) {\n          this.customerInputRef.current.value = org || '';\n        }\n      });\n    }\n  } // After customers are loaded, if formData.customer is set but billTo/shipTo are empty, autofill them\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.showForm && this.state.customers.length > 0 && this.state.formData.customer && !this.state.formData.billTo && !this.state.formData.shipTo) {\n      const customerObj = this.state.customers.find(c => c.name === this.state.formData.customer || c.code === this.state.formData.customer);\n\n      if (customerObj) {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            billTo: this.formatAddress(customerObj.billTo),\n            shipTo: this.formatAddress(customerObj.shipTo),\n            currency: customerObj.currency || '',\n            paymentTerms: customerObj.paymentTerms || '',\n            despatchMode: customerObj.despatchMode || ''\n          }\n        }));\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 7\n      }\n    }, this.state.showForm ? this.renderQuoteForm() : this.renderQuoteTable());\n  }\n\n}\n\nexport default Quote;","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/panelone/Quote.js"],"names":["React","Component","Form","bsCustomFileInput","db","collection","getDocs","addDoc","doc","updateDoc","Quote","state","activeTab","quotes","customers","products","showForm","editingId","overlayType","overlaySearch","productOverlayVisible","productOverlaySearch","selectedProductIds","formData","quoteNo","quoteDate","Date","toISOString","split","quoteType","customer","status","choose","refNo","impExp","currency","conversionRate","taxAmount","quoteValue","billTo","shipTo","despatchMode","paymentTerms","freightCharges","taxPercent","packingCharges","lineItems","customerInputRef","createRef","formatAddress","addr","address","city","country","filter","Boolean","join","zip","fetchQuotes","snap","data","docs","map","id","setState","reverse","fetchCustomers","fetchProducts","handleInputChange","field","value","prev","handleLineItemChange","idx","qty","parseFloat","unitPrice","amount","handleSubmit","e","preventDefault","alert","length","loadQuoteForEdit","quote","Array","isArray","current","showOverlay","type","hideOverlay","selectOverlayValue","name","company","renderOverlay","target","maxHeight","overflowY","c","toLowerCase","includes","i","cursor","code","shortName","renderProductOverlay","filtered","p","checked","description","uom","selectedProducts","some","item","showQuotePDF","subtotal","reduce","sum","tax","total","win","window","open","document","write","replace","toFixed","close","renderQuoteTable","fontSize","q","renderQuoteForm","background","width","_","componentDidMount","init","params","URLSearchParams","location","search","org","get","prospect","componentDidUpdate","prevProps","prevState","customerObj","find","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport bsCustomFileInput from 'bs-custom-file-input';\r\nimport { db } from '../../firebase';\r\nimport { collection, getDocs, addDoc, doc, updateDoc } from 'firebase/firestore';\r\n\r\nclass Quote extends Component {\r\n  state = {\r\n    activeTab: 'co',\r\n    quotes: [],\r\n    customers: [],\r\n    products: [],\r\n    showForm: false,\r\n    editingId: null,\r\n    overlayType: '',\r\n    overlaySearch: '',\r\n    productOverlayVisible: false,\r\n    productOverlaySearch: '',\r\n    selectedProductIds: [],\r\n    formData: {\r\n      quoteNo: '',\r\n      quoteDate: new Date().toISOString().split('T')[0],\r\n      quoteType: 'Standard',\r\n      customer: '',\r\n      status: 'Entered',\r\n      choose: 'Service',\r\n      refNo: '',\r\n      impExp: 'None',\r\n      currency: '',\r\n      conversionRate: '',\r\n      taxAmount: '',\r\n      quoteValue: '',\r\n      billTo: '',\r\n      shipTo: '',\r\n      despatchMode: 'By Air',\r\n      paymentTerms: '',\r\n      freightCharges: '',\r\n      taxPercent: '',\r\n      packingCharges: '',\r\n      lineItems: [],\r\n    }\r\n  };\r\n  customerInputRef = React.createRef();\r\n\r\n  // Helper to format address for Bill To / Ship To\r\n  formatAddress = (addr) => {\r\n    if (!addr) return '';\r\n    if (typeof addr === 'string') return addr;\r\n    return [\r\n      addr.address,\r\n      [addr.city, addr.state, addr.country].filter(Boolean).join(', '),\r\n      addr.zip\r\n    ].filter(Boolean).join('\\n');\r\n  };\r\ncomponentDidMount() {\r\n  bsCustomFileInput.init();\r\n  this.fetchQuotes();\r\n  this.fetchCustomers();\r\n  this.fetchProducts();\r\n\r\n  const params = new URLSearchParams(window.location.search);\r\n  const org = params.get('org');\r\n  const prospect = params.get('prospect');\r\n\r\n  if (org || prospect) {\r\n    this.setState(prev => ({\r\n      showForm: true,\r\n      formData: {\r\n        ...prev.formData,\r\n        customer: org || prev.formData.customer,\r\n        refNo: prospect || prev.formData.refNo\r\n      }\r\n    }), () => {\r\n      if (this.customerInputRef.current) {\r\n        this.customerInputRef.current.value = org || '';\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\n  // After customers are loaded, if formData.customer is set but billTo/shipTo are empty, autofill them\r\n componentDidUpdate(prevProps, prevState) {\r\n  if (\r\n    this.state.showForm &&\r\n    this.state.customers.length > 0 &&\r\n    this.state.formData.customer &&\r\n    (!this.state.formData.billTo && !this.state.formData.shipTo)\r\n  ) {\r\n    const customerObj = this.state.customers.find(\r\n      c => c.name === this.state.formData.customer || c.code === this.state.formData.customer\r\n    );\r\n    if (customerObj) {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          billTo: this.formatAddress(customerObj.billTo),\r\n          shipTo: this.formatAddress(customerObj.shipTo),\r\n          currency: customerObj.currency || '',\r\n          paymentTerms: customerObj.paymentTerms || '',\r\n          despatchMode: customerObj.despatchMode || ''\r\n        }\r\n      }));\r\n    }\r\n  }\r\n}\r\n\r\n\r\n  fetchQuotes = async () => {\r\n    const snap = await getDocs(collection(db, 'quotes'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ quotes: data.reverse() });\r\n  };\r\n\r\n  fetchCustomers = async () => {\r\n    const snap = await getDocs(collection(db, 'customers'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ customers: data });\r\n  };\r\n\r\n  fetchProducts = async () => {\r\n    const snap = await getDocs(collection(db, 'products'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ products: data });\r\n  };\r\n\r\n  handleInputChange = (field, value) => {\r\n    this.setState(prev => ({\r\n      formData: { ...prev.formData, [field]: value }\r\n    }));\r\n  };\r\n\r\n  handleLineItemChange = (idx, field, value) => {\r\n    this.setState(prev => {\r\n      const lineItems = [...prev.formData.lineItems];\r\n      lineItems[idx][field] = value;\r\n      if (field === 'qty' || field === 'unitPrice') {\r\n        const qty = parseFloat(lineItems[idx].qty) || 1;\r\n        const unitPrice = parseFloat(lineItems[idx].unitPrice) || 0;\r\n        lineItems[idx].amount = qty * unitPrice;\r\n      }\r\n      return { formData: { ...prev.formData, lineItems } };\r\n    });\r\n  };\r\n\r\n handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  const { editingId, formData, quotes } = this.state;\r\n  if (!formData.customer) return alert(\"Customer is required\");\r\n  if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\r\n\r\n  if (editingId) {\r\n  await updateDoc(doc(db, 'quotes', editingId), formData);\r\n}\r\nelse {\r\n    formData.quoteNo = `QT${1000 + quotes.length}`;\r\n    await addDoc(collection(db, 'quotes'), formData);\r\n  }\r\n  this.setState({ showForm: false, editingId: null });\r\n  this.fetchQuotes();\r\n};\r\n\r\n  loadQuoteForEdit = (quote) => {\r\n  this.setState({\r\n    formData: { \r\n      ...quote, \r\n      lineItems: Array.isArray(quote.lineItems) ? quote.lineItems : [] // Ensure array\r\n    },\r\n    editingId: quote.id,\r\n    showForm: true,\r\n    activeTab: 'co'\r\n  }, () => {\r\n    if (this.customerInputRef.current) {\r\n      this.customerInputRef.current.value = quote.customer;\r\n    }\r\n  });\r\n};\r\n\r\n  showOverlay = (type) => this.setState({ overlayType: type, overlaySearch: '' });\r\n  hideOverlay = () => this.setState({ overlayType: '', overlaySearch: '' });\r\n\r\n  selectOverlayValue = (value) => {\r\n    if (this.state.overlayType === 'customer') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          customer: value.name || value.company || '',\r\n          billTo: this.formatAddress(value.billTo),\r\n          shipTo: this.formatAddress(value.shipTo)\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }), () => {\r\n        if (this.customerInputRef.current) {\r\n          this.customerInputRef.current.value = value.name || value.company || '';\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  renderOverlay = () => {\r\n    const { overlayType, overlaySearch, customers } = this.state;\r\n    if (overlayType === 'customer') {\r\n      return (\r\n        <div className=\"custom-overlay\">\r\n          <div className=\"custom-overlay-content\">\r\n            <div className=\"custom-overlay-title\">Select Customer</div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control mb-2\"\r\n              placeholder=\"Search customer...\"\r\n              value={overlaySearch}\r\n              onChange={e => this.setState({ overlaySearch: e.target.value })}\r\n            />\r\n            <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n              <table className=\"table table-bordered table-sm\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Name</th>\r\n                    <th>Code</th>\r\n                    <th>Short Name</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {customers\r\n                    .filter(c =>\r\n                      (c.name || '').toLowerCase().includes((overlaySearch || '').toLowerCase())\r\n                    )\r\n                    .map((c, i) => (\r\n                      <tr key={c.id || i} onClick={() => this.selectOverlayValue(c)} style={{ cursor: 'pointer' }}>\r\n                        <td>{c.name}</td>\r\n                        <td>{c.code}</td>\r\n                        <td>{c.shortName}</td>\r\n                      </tr>\r\n                    ))}\r\n                  {customers.length === 0 && (\r\n                    <tr>\r\n                      <td colSpan=\"3\" className=\"text-center\">No records found</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <button className=\"btn btn-secondary btn-sm mt-2\" onClick={this.hideOverlay}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  renderProductOverlay = () => {\r\n    const { products, productOverlaySearch, selectedProductIds } = this.state;\r\n    const filtered = products.filter(p =>\r\n      (p.name || '').toLowerCase().includes(productOverlaySearch.toLowerCase())\r\n    );\r\n    return (\r\n      <div className=\"custom-overlay\">\r\n        <div className=\"custom-overlay-content\">\r\n          <div className=\"custom-overlay-title\">Select Products</div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Search products...\"\r\n            value={productOverlaySearch}\r\n            onChange={e => this.setState({ productOverlaySearch: e.target.value })}\r\n          />\r\n          <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n            <table className=\"table table-bordered table-sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th></th>\r\n                  <th>Name</th>\r\n                  <th>Description</th>\r\n                  <th>UOM</th>\r\n                  <th>Unit Price</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filtered.map(p => (\r\n                  <tr key={p.id}>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedProductIds.includes(p.id)}\r\n                        onChange={e => {\r\n                          const checked = e.target.checked;\r\n                          this.setState(prev => ({\r\n                            selectedProductIds: checked\r\n                              ? [...prev.selectedProductIds, p.id]\r\n                              : prev.selectedProductIds.filter(id => id !== p.id)\r\n                          }));\r\n                        }}\r\n                      />\r\n                    </td>\r\n                    <td>{p.name}</td>\r\n                    <td>{p.description || ''}</td>\r\n                    <td>{p.uom}</td>\r\n                    <td>{p.unitPrice}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <button\r\n            className=\"btn btn-success btn-sm mt-2\"\r\n            onClick={() => {\r\n              const selectedProducts = products.filter(p => this.state.selectedProductIds.includes(p.id));\r\n              this.setState(prev => ({\r\n                formData: {\r\n                  ...prev.formData,\r\n                  lineItems: [\r\n                    ...prev.formData.lineItems,\r\n                    ...selectedProducts\r\n                      .filter(p => !prev.formData.lineItems.some(item => item.id === p.id))\r\n                      .map(p => ({\r\n                        id: p.id,\r\n                        name: p.name,\r\n                        description: p.description || '',\r\n                        uom: p.uom,\r\n                        qty: 1,\r\n                        unitPrice: p.unitPrice,\r\n                        taxPercent: 0,\r\n                        amount: p.unitPrice\r\n                      }))\r\n                  ]\r\n                },\r\n                productOverlayVisible: false,\r\n                selectedProductIds: []\r\n              }));\r\n            }}\r\n          >Add Selected</button>\r\n          <button className=\"btn btn-secondary btn-sm mt-2 ml-2\" onClick={() => this.setState({ productOverlayVisible: false, selectedProductIds: [] })}>Cancel</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  showQuotePDF = (quote) => {\r\n    const subtotal = (quote.lineItems || []).reduce((sum, i) => sum + (parseFloat(i.amount) || 0), 0);\r\n    const tax = parseFloat(quote.taxAmount) || 0;\r\n    const total = parseFloat(quote.quoteValue) || (subtotal + tax);\r\n    const win = window.open('', '_blank');\r\n    win.document.write(`\r\n      <html>\r\n      <head>\r\n        <title>Quote Preview</title>\r\n        <style>\r\n          body { font-family: Arial; padding: 24px; }\r\n          .header { background: #2ecc40; color: #fff; padding: 10px 20px; font-size: 20px; font-weight: bold; }\r\n          .quote-title { float: right; font-size: 18px; font-weight: bold; }\r\n          .section { margin-top: 20px; }\r\n          .flex { display: flex; justify-content: space-between; }\r\n          .box { width: 45%; }\r\n          table { border-collapse: collapse; width: 100%; margin-top: 16px; }\r\n          th, td { border: 1px solid #ccc; padding: 8px; text-align: left; }\r\n          th { background: #f8f8f8; }\r\n          .total-row td { font-weight: bold; }\r\n          .right { text-align: right; }\r\n        </style>\r\n      </head>\r\n      <body>\r\n        <div class=\"header\">\r\n          Your Company Name\r\n          <span class=\"quote-title\">QUOTE</span>\r\n        </div>\r\n        <div class=\"section flex\">\r\n          <div class=\"box\">\r\n            <b>Bill To</b><br/>\r\n            ${quote.billTo ? quote.billTo.replace(/\\n/g, '<br/>') : ''}\r\n          </div>\r\n          <div class=\"box\">\r\n            <b>Ship To</b><br/>\r\n            ${quote.shipTo ? quote.shipTo.replace(/\\n/g, '<br/>') : ''}\r\n          </div>\r\n        </div>\r\n        <div class=\"section flex\">\r\n          <div class=\"box\">\r\n            <b>Quote #:</b> ${quote.quoteNo || ''}<br/>\r\n            <b>Quote Date:</b> ${quote.quoteDate || ''}<br/>\r\n            <b>P.O.#:</b> ${quote.refNo || ''}\r\n          </div>\r\n        </div>\r\n        <div class=\"section\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>UNIT PRICE</th>\r\n                <th>AMOUNT</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              ${(quote.lineItems || []).map((item, idx) => `\r\n                <tr>\r\n                  \r\n                  <td class=\"right\">${item.unitPrice}</td>\r\n                  <td class=\"right\">${item.amount}</td>\r\n                </tr>\r\n              `).join('')}\r\n              <tr>\r\n                <td colspan=\"3\" class=\"right\">Subtotal</td>\r\n                <td class=\"right\">${subtotal.toFixed(2)}</td>\r\n              </tr>\r\n              <tr>\r\n                <td colspan=\"3\" class=\"right\">Sales Tax</td>\r\n                <td class=\"right\">${tax.toFixed(2)}</td>\r\n              </tr>\r\n              <tr class=\"total-row\">\r\n                <td colspan=\"3\" class=\"right\">TOTAL</td>\r\n                <td class=\"right\">${total.toFixed(2)}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"section\">\r\n          <b>Terms & Conditions</b><br/>\r\n          Payment is due within 15 days.<br/>\r\n          Please make checks payable to: Your Company Name.\r\n        </div>\r\n      </body>\r\n      </html>\r\n    `);\r\n    win.document.close();\r\n  };\r\n\r\n  renderQuoteTable = () => (\r\n    <div className=\"card mt-4 full-height\">\r\n      <div className=\"card-body\">\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n          <h4 className=\"card-title\">Quotes</h4>\r\n          <button className=\"btn btn-primary\" onClick={() => this.setState({ showForm: true })}>+ Add Quote</button>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-bordered table-hover\">\r\n            <thead className=\"thead-light\">\r\n              <tr style={{ fontSize: '14px' }}>\r\n                <th>Quote No</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Quote Value</th>\r\n                <th>Status</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.quotes.map((q, i) => (\r\n                <tr key={i} style={{ fontSize: '14px' }}>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-link p-0\"\r\n                      onClick={() => this.loadQuoteForEdit(q)}\r\n                    >\r\n                      {q.quoteNo}\r\n                    </button>\r\n                  </td>\r\n                  <td>{q.customer}</td>\r\n                  <td>{q.quoteDate}</td>\r\n                  <td>{q.quoteValue}</td>\r\n                  <td><label className=\"badge badge-info\">{q.status}</label></td>\r\n                  <td>\r\n                    <button className=\"btn btn-sm btn-outline-info\" onClick={() => this.showQuotePDF(q)}>Show PDF</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n              {this.state.quotes.length === 0 && (\r\n                <tr><td colSpan=\"6\" className=\"text-center\">No quotes found.</td></tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  renderQuoteForm = () => {\r\n    const { formData, overlayType, productOverlayVisible } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"col-12 grid-margin\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">Quote Form</h4>\r\n              <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n                <li className=\"nav-item\">\r\n                  <button type=\"button\" className={`nav-link ${this.state.activeTab === 'co' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'co' })}>CO Details</button>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <button type=\"button\" className={`nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'commercial' })}>Commercial Terms</button>\r\n                </li>\r\n              </ul>\r\n              <form className=\"form-sample\" onSubmit={this.handleSubmit}>\r\n                <div className=\"tab-content pt-3\">\r\n                  {this.state.activeTab === 'co' && (\r\n                    <>\r\n                       <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Quote No</label>\r\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={formData.quoteNo} onChange={(e) => this.handleInputChange('quoteNo', e.target.value)} />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Quote Date</label>\r\n                        <input type=\"date\" className=\"form-control form-control-sm\" value={formData.quoteDate} onChange={(e) => this.handleInputChange('quoteDate', e.target.value)} />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Quote Type</label>\r\n                        <select className=\"form-control form-control-sm\" value={formData.quoteType} onChange={(e) => this.handleInputChange('quoteType', e.target.value)}>\r\n                          <option>Standard</option>\r\n                          <option>Manual</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Status</label>\r\n                        <select className=\"form-control form-control-sm\" value={formData.status} onChange={(e) => this.handleInputChange('status', e.target.value)}>\r\n                          <option>Entered</option>\r\n                          <option>On Process</option>\r\n                          <option>Closed</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Customer</label>\r\n                        <div className=\"input-group input-group-sm\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Choose Customer\"\r\n                            ref={this.customerInputRef}\r\n                            value={formData.customer}\r\n                            readOnly\r\n                            onClick={() => this.showOverlay('customer')}\r\n                            style={{ background: '#f8f9fa', cursor: 'pointer' }}\r\n                          />\r\n                          <div className=\"input-group-append\">\r\n                            <button className=\"btn btn-outline-secondary btn-sm\" type=\"button\" onClick={() => this.showOverlay('customer')}>Select</button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Choose</label>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"form-check mr-4\">\r\n                            <input type=\"radio\" className=\"form-check-input\" name=\"choose\" id=\"chooseService\" value=\"Service\" checked={formData.choose === 'Service'} onChange={(e) => this.handleInputChange('choose', e.target.value)} />\r\n                            <label className=\"form-check-label\" htmlFor=\"chooseService\">Service</label>\r\n                          </div>\r\n                          <div className=\"form-check\">\r\n                            <input type=\"radio\" className=\"form-check-input\" name=\"choose\" id=\"chooseProduct\" value=\"Product\" checked={formData.choose === 'Product'} onChange={(e) => this.handleInputChange('choose', e.target.value)} />\r\n                            <label className=\"form-check-label\" htmlFor=\"chooseProduct\">Product</label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>IMP/EXP</label>\r\n                        <select\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.impExp}\r\n                          onChange={(e) => this.handleInputChange('impExp', e.target.value)}\r\n                        >\r\n                          <option>None</option>\r\n                          <option>COB</option>\r\n                          <option>FIP</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Ref No.</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.refNo}\r\n                          onChange={(e) => this.handleInputChange('refNo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>IMP/EXP</label>\r\n                        <select\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.impExp}\r\n                          onChange={(e) => this.handleInputChange('impExp', e.target.value)}\r\n                        >\r\n                          <option>None</option>\r\n                          <option>COB</option>\r\n                          <option>FIP</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Currency</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.currency}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Conversion Rate</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.conversionRate}\r\n                          onChange={(e) => this.handleInputChange('conversionRate', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Tax Amount</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxAmount}\r\n                          onChange={(e) => this.handleInputChange('taxAmount', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Quote Value</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.quoteValue}\r\n                          onChange={(e) => this.handleInputChange('quoteValue', e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                      <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                        <div className=\"card shadow\">\r\n                          <div className=\"card-body\">\r\n                            <h4 className=\"card-title\">Line Item </h4>\r\n                            <button type=\"button\" className=\"btn btn-primary btn-sm mb-2\" onClick={() => this.setState({ productOverlayVisible: true })}>\r\n                              + Add Product\r\n                            </button>\r\n                            <div className=\"table-responsive\">\r\n                              <table className=\"table table-bordered\">\r\n                                <thead>\r\n                                  <tr>\r\n                                    <th> ID </th>\r\n                                    <th> Name </th>\r\n                                    <th> Description </th>\r\n                                    <th> UOM </th>\r\n                                    <th> Qty</th>\r\n                                    <th> Unit Price </th>\r\n                                    <th> Tax% </th>\r\n                                    <th>Amount </th>\r\n                                    <th> Actions</th>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {formData.lineItems.map((item, idx) => (\r\n                                    <tr key={item.id}>\r\n                                      <td>{item.id}</td>\r\n                                      <td>{item.name}</td>\r\n                                      <td>{item.description}</td>\r\n                                      <td>{item.uom}</td>\r\n                                      <td>\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          min=\"1\"\r\n                                          value={item.qty}\r\n                                          onChange={e => this.handleLineItemChange(idx, 'qty', e.target.value)}\r\n                                          style={{ width: 60 }}\r\n                                        />\r\n                                      </td>\r\n                                      <td>\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          value={item.unitPrice}\r\n                                          onChange={e => this.handleLineItemChange(idx, 'unitPrice', e.target.value)}\r\n                                          style={{ width: 80 }}\r\n                                        />\r\n                                      </td>\r\n                                      <td>\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          value={item.taxPercent}\r\n                                          onChange={e => this.handleLineItemChange(idx, 'taxPercent', e.target.value)}\r\n                                          style={{ width: 60 }}\r\n                                        />\r\n                                      </td>\r\n                                      <td>{item.amount}</td>\r\n                                      <td>\r\n                                        <button\r\n                                          type=\"button\"\r\n                                          className=\"btn btn-danger btn-sm\"\r\n                                          onClick={() => {\r\n                                            this.setState(prev => ({\r\n                                              formData: {\r\n                                                ...prev.formData,\r\n                                                lineItems: prev.formData.lineItems.filter((_, i) => i !== idx)\r\n                                              }\r\n                                            }));\r\n                                          }}\r\n                                        >Remove</button>\r\n                                      </td>\r\n                                    </tr>\r\n                                  ))}\r\n                                  {formData.lineItems.length === 0 && (\r\n                                    <tr>\r\n                                      <td colSpan=\"9\" className=\"text-center\">No items</td>\r\n                                    </tr>\r\n                                  )}\r\n                                </tbody>\r\n                              </table>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                  {this.state.activeTab === 'commercial' && (\r\n                  <>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-6\">\r\n                        <label>Bill To</label>\r\n                        <textarea\r\n                          className=\"form-control form-control-sm\"\r\n                          rows=\"3\"\r\n                          value={formData.billTo}\r\n                          onChange={(e) => this.handleInputChange('billTo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-6\">\r\n                        <label>Ship To</label>\r\n                        <textarea\r\n                          className=\"form-control form-control-sm\"\r\n                          rows=\"3\"\r\n                          value={formData.shipTo}\r\n                          onChange={(e) => this.handleInputChange('shipTo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Despatch Mode</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.despatchMode}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Payment Terms</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.paymentTerms}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Freight Charges</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.freightCharges}\r\n                          onChange={(e) => this.handleInputChange('freightCharges', e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Tax %</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxPercent}\r\n                          onChange={(e) => this.handleInputChange('taxPercent', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Tax Amount</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxAmount}\r\n                          onChange={(e) => this.handleInputChange('taxAmount', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Packing Charges</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.packingCharges}\r\n                          onChange={(e) => this.handleInputChange('packingCharges', e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-right mt-3\">\r\n                      <button type=\"submit\" className=\"btn btn-success\">Save All Details</button>\r\n                    </div>\r\n                  </>\r\n                )}\r\n                </div>\r\n              </form>\r\n              {overlayType && this.renderOverlay()}\r\n              {productOverlayVisible && this.renderProductOverlay()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        {this.state.showForm ? this.renderQuoteForm() : this.renderQuoteTable()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quote;"]},"metadata":{},"sourceType":"module"}