{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\crm\\\\Activity.js\";\nimport React, { Component } from \"react\";\nimport { Table, Button, Form, Card } from \"react-bootstrap\";\nimport { db } from \"../../firebase\";\nimport { collection, getDocs, addDoc, deleteDoc, doc } from \"firebase/firestore\";\n\nclass Activity extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activities: [],\n      accounts: [],\n      addingRow: false,\n      newRow: {\n        acname: \"\",\n        contact: \"\",\n        act: \"\",\n        date: new Date().toISOString().split(\"T\")[0] // yyyy-mm-dd\n\n      },\n      contactOptions: []\n    };\n\n    this.fetchActivities = async () => {\n      const snap = await getDocs(collection(db, \"activities\"));\n      const activities = snap.docs.map((doc, idx) => ({\n        id: doc.id,\n        no: idx + 1,\n        ...doc.data()\n      }));\n      this.setState({\n        activities\n      });\n    };\n\n    this.fetchAccounts = async () => {\n      const snap = await getDocs(collection(db, \"accounts\"));\n      const accounts = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        accounts\n      });\n    };\n\n    this.handleNewRowChange = (field, value) => {\n      let updated = { ...this.state.newRow,\n        [field]: value\n      }; // if account is changed, reset contact + populate contacts\n\n      if (field === \"acname\") {\n        const acc = this.state.accounts.find(a => a.acname === value);\n        let contactOptions = [];\n\n        if (acc) {\n          // include main contact + all contact persons\n          if (acc.contact) contactOptions.push({\n            name: acc.contact,\n            designation: \"Main\"\n          });\n\n          if (acc.contactPersons && acc.contactPersons.length > 0) {\n            contactOptions = contactOptions.concat(acc.contactPersons);\n          }\n        }\n\n        updated.contact = \"\";\n        this.setState({\n          contactOptions\n        });\n      }\n\n      this.setState({\n        newRow: updated\n      });\n    };\n\n    this.saveNewRow = async () => {\n      const {\n        newRow\n      } = this.state; // save to firebase\n\n      await addDoc(collection(db, \"activities\"), newRow);\n      this.setState({\n        addingRow: false,\n        newRow: {\n          acname: \"\",\n          contact: \"\",\n          act: \"\",\n          date: new Date().toISOString().split(\"T\")[0]\n        }\n      });\n      this.fetchActivities();\n    };\n\n    this.deleteRow = async id => {\n      await deleteDoc(doc(db, \"activities\", id));\n      this.fetchActivities();\n    };\n  }\n\n  componentDidMount() {\n    this.fetchActivities();\n    this.fetchAccounts();\n  } // fetch activity logs\n\n\n  render() {\n    const {\n      activities,\n      accounts,\n      addingRow,\n      newRow,\n      contactOptions\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"p-3 shadow-sm bg-white border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, \"Activities\"), !addingRow && /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.setState({\n        addingRow: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, \"+ Add Activity\")), /*#__PURE__*/React.createElement(Table, {\n      bordered: true,\n      hover: true,\n      responsive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, \"No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, \"Account Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, \"Contact\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, \"Activity\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, activities.map((act, idx) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: act.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, idx + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }\n    }, act.acname), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, act.contact), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    }, act.act), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }, act.date), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      size: \"sm\",\n      onClick: () => this.deleteRow(act.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, \"\\u2715\")))), addingRow && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }, activities.length + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      value: newRow.acname,\n      onChange: e => this.handleNewRowChange(\"acname\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 23\n      }\n    }, \"Select Account\"), accounts.map(acc => /*#__PURE__*/React.createElement(\"option\", {\n      key: acc.id,\n      value: acc.acname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }, acc.acname)))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      value: newRow.contact,\n      onChange: e => this.handleNewRowChange(\"contact\", e.target.value),\n      disabled: !newRow.acname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 23\n      }\n    }, \"Select Contact\"), contactOptions.map((cp, i) => /*#__PURE__*/React.createElement(\"option\", {\n      key: i,\n      value: cp.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }, cp.name, cp.designation ? ` (${cp.designation})` : \"\")))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      value: newRow.act,\n      onChange: e => this.handleNewRowChange(\"act\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 23\n      }\n    }, \"Select Activity\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Call\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 23\n      }\n    }, \"Call\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Meeting\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 23\n      }\n    }, \"Meeting\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Demo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 23\n      }\n    }, \"Demo\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Mail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 23\n      }\n    }, \"Mail\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Whatsapp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 23\n      }\n    }, \"Whatsapp\"))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      value: newRow.date,\n      onChange: e => this.handleNewRowChange(\"date\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      size: \"sm\",\n      onClick: this.saveNewRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }\n    }, \"\\u2713\"), \" \", /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      size: \"sm\",\n      onClick: () => this.setState({\n        addingRow: false,\n        newRow: {\n          acname: \"\",\n          contact: \"\",\n          act: \"\",\n          date: new Date().toISOString().split(\"T\")[0]\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    }, \"\\u2715\")))))));\n  }\n\n}\n\nexport default Activity;","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/crm/Activity.js"],"names":["React","Component","Table","Button","Form","Card","db","collection","getDocs","addDoc","deleteDoc","doc","Activity","state","activities","accounts","addingRow","newRow","acname","contact","act","date","Date","toISOString","split","contactOptions","fetchActivities","snap","docs","map","idx","id","no","data","setState","fetchAccounts","handleNewRowChange","field","value","updated","acc","find","a","push","name","designation","contactPersons","length","concat","saveNewRow","deleteRow","componentDidMount","render","e","target","cp","i"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Table, Button, Form, Card } from \"react-bootstrap\";\r\nimport { db } from \"../../firebase\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  addDoc,\r\n  deleteDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\n\r\nclass Activity extends Component {\r\n  state = {\r\n    activities: [],\r\n    accounts: [],\r\n    addingRow: false,\r\n    newRow: {\r\n      acname: \"\",\r\n      contact: \"\",\r\n      act: \"\",\r\n      date: new Date().toISOString().split(\"T\")[0], // yyyy-mm-dd\r\n    },\r\n    contactOptions: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchActivities();\r\n    this.fetchAccounts();\r\n  }\r\n\r\n  // fetch activity logs\r\n  fetchActivities = async () => {\r\n    const snap = await getDocs(collection(db, \"activities\"));\r\n    const activities = snap.docs.map((doc, idx) => ({\r\n      id: doc.id,\r\n      no: idx + 1,\r\n      ...doc.data(),\r\n    }));\r\n    this.setState({ activities });\r\n  };\r\n\r\n  // fetch accounts + contacts from datalist\r\n  fetchAccounts = async () => {\r\n    const snap = await getDocs(collection(db, \"accounts\"));\r\n    const accounts = snap.docs.map((doc) => ({\r\n      id: doc.id,\r\n      ...doc.data(),\r\n    }));\r\n    this.setState({ accounts });\r\n  };\r\n\r\n  handleNewRowChange = (field, value) => {\r\n    let updated = { ...this.state.newRow, [field]: value };\r\n\r\n    // if account is changed, reset contact + populate contacts\r\n    if (field === \"acname\") {\r\n      const acc = this.state.accounts.find((a) => a.acname === value);\r\n      let contactOptions = [];\r\n\r\n      if (acc) {\r\n        // include main contact + all contact persons\r\n        if (acc.contact) contactOptions.push({ name: acc.contact, designation: \"Main\" });\r\n        if (acc.contactPersons && acc.contactPersons.length > 0) {\r\n          contactOptions = contactOptions.concat(acc.contactPersons);\r\n        }\r\n      }\r\n\r\n      updated.contact = \"\";\r\n      this.setState({ contactOptions });\r\n    }\r\n\r\n    this.setState({ newRow: updated });\r\n  };\r\n\r\n  saveNewRow = async () => {\r\n    const { newRow } = this.state;\r\n\r\n    // save to firebase\r\n    await addDoc(collection(db, \"activities\"), newRow);\r\n\r\n    this.setState({\r\n      addingRow: false,\r\n      newRow: {\r\n        acname: \"\",\r\n        contact: \"\",\r\n        act: \"\",\r\n        date: new Date().toISOString().split(\"T\")[0],\r\n      },\r\n    });\r\n    this.fetchActivities();\r\n  };\r\n\r\n  deleteRow = async (id) => {\r\n    await deleteDoc(doc(db, \"activities\", id));\r\n    this.fetchActivities();\r\n  };\r\n\r\n  render() {\r\n    const { activities, accounts, addingRow, newRow, contactOptions } = this.state;\r\n\r\n    return (\r\n      <div className=\"container mt-4\">\r\n        <Card className=\"p-3 shadow-sm bg-white border-0\">\r\n          <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n            <h3 className=\"mb-0\">Activities</h3>\r\n            {!addingRow && (\r\n              <Button\r\n                variant=\"primary\"\r\n                onClick={() => this.setState({ addingRow: true })}\r\n              >\r\n                + Add Activity\r\n              </Button>\r\n            )}\r\n          </div>\r\n\r\n          <Table bordered hover responsive>\r\n            <thead className=\"thead-light\">\r\n              <tr>\r\n                <th>No</th>\r\n                <th>Account Name</th>\r\n                <th>Contact</th>\r\n                <th>Activity</th>\r\n                <th>Date</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {activities.map((act, idx) => (\r\n                <tr key={act.id}>\r\n                  <td>{idx + 1}</td>\r\n                  <td>{act.acname}</td>\r\n                  <td>{act.contact}</td>\r\n                  <td>{act.act}</td>\r\n                  <td>{act.date}</td>\r\n                  <td>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      size=\"sm\"\r\n                      onClick={() => this.deleteRow(act.id)}\r\n                    >\r\n                      ✕\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n\r\n              {addingRow && (\r\n                <tr>\r\n                  <td>{activities.length + 1}</td>\r\n\r\n                  {/* account name dropdown */}\r\n                  <td>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={newRow.acname}\r\n                      onChange={(e) =>\r\n                        this.handleNewRowChange(\"acname\", e.target.value)\r\n                      }\r\n                    >\r\n                      <option value=\"\">Select Account</option>\r\n                      {accounts.map((acc) => (\r\n                        <option key={acc.id} value={acc.acname}>\r\n                          {acc.acname}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </td>\r\n\r\n                  {/* contact dropdown filtered */}\r\n                  <td>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={newRow.contact}\r\n                      onChange={(e) =>\r\n                        this.handleNewRowChange(\"contact\", e.target.value)\r\n                      }\r\n                      disabled={!newRow.acname}\r\n                    >\r\n                      <option value=\"\">Select Contact</option>\r\n                      {contactOptions.map((cp, i) => (\r\n                        <option key={i} value={cp.name}>\r\n                          {cp.name}\r\n                          {cp.designation ? ` (${cp.designation})` : \"\"}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </td>\r\n\r\n                  {/* Activity dropdown */}\r\n                  <td>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={newRow.act}\r\n                      onChange={(e) =>\r\n                        this.handleNewRowChange(\"act\", e.target.value)\r\n                      }\r\n                    >\r\n                      <option value=\"\">Select Activity</option>\r\n                      <option value=\"Call\">Call</option>\r\n                      <option value=\"Meeting\">Meeting</option>\r\n                      <option value=\"Demo\">Demo</option>\r\n                      <option value=\"Mail\">Mail</option>\r\n                      <option value=\"Whatsapp\">Whatsapp</option>\r\n                    </Form.Control>\r\n                  </td>\r\n\r\n                  {/* date input */}\r\n                  <td>\r\n                    <Form.Control\r\n                      type=\"date\"\r\n                      value={newRow.date}\r\n                      onChange={(e) =>\r\n                        this.handleNewRowChange(\"date\", e.target.value)\r\n                      }\r\n                    />\r\n                  </td>\r\n\r\n                  {/* action buttons */}\r\n                  <td>\r\n                    <Button\r\n                      variant=\"success\"\r\n                      size=\"sm\"\r\n                      onClick={this.saveNewRow}\r\n                    >\r\n                      ✓\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                      variant=\"secondary\"\r\n                      size=\"sm\"\r\n                      onClick={() =>\r\n                        this.setState({\r\n                          addingRow: false,\r\n                          newRow: {\r\n                            acname: \"\",\r\n                            contact: \"\",\r\n                            act: \"\",\r\n                            date: new Date().toISOString().split(\"T\")[0],\r\n                          },\r\n                        })\r\n                      }\r\n                    >\r\n                      ✕\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Activity;\r\n"]},"metadata":{},"sourceType":"module"}