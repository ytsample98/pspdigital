{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\sales\\\\salestransactions\\\\order\\\\Order.js\";\nimport React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport { db } from '../../../../firebase';\nimport { collection, getDocs, addDoc, doc, updateDoc, serverTimestamp } from 'firebase/firestore';\nimport html2canvas from 'html2canvas';\nimport { jsPDF } from 'jspdf';\nimport { toWords } from \"number-to-words\";\nimport { withRouter } from 'react-router-dom';\n\nconst numberToWords = num => {\n  const a = ['', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine', 'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];\n  const b = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\n  if (num === 0) return 'Zero';\n  if (num < 20) return a[num];\n  if (num < 100) return b[Math.floor(num / 10)] + ' ' + a[num % 10];\n  if (num < 1000) return a[Math.floor(num / 100)] + ' Hundred ' + numberToWords(num % 100);\n  if (num < 100000) return numberToWords(Math.floor(num / 1000)) + ' Thousand ' + numberToWords(num % 1000);\n  return 'Amount too large';\n};\n\nclass Order extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: 'co',\n      breakdownItems: [],\n      orders: [],\n      customers: [],\n      products: [],\n      despatchModes: [],\n      paymentTerms: [],\n      showForm: false,\n      editingId: null,\n      overlayType: '',\n      overlaySearch: '',\n      productOverlayVisible: false,\n      productOverlaySearch: '',\n      selectedProductIds: [],\n      taxGroups: [],\n      showTaxOverlay: false,\n      currentTaxIdx: null,\n      breakdownType: 'Amount',\n      formData: {\n        orderNo: '',\n        orderDate: new Date().toISOString().split('T')[0],\n        orderType: 'Standard',\n        customer: '',\n        status: 'Entered',\n        choose: 'Service',\n        qrefNo: '',\n        impExp: 'None',\n        currency: '',\n        conversionRate: '',\n        taxAmount: '',\n        orderValue: '',\n        discountPercent: 0,\n        discountAmount: 0,\n        afterDiscountValue: 0,\n        billTo: '',\n        shipTo: '',\n        despatchMode: 'By Air',\n        paymentTerms: '',\n        freightCharges: '',\n        freighttaxAmount: '',\n        taxPercent: '',\n        packingCharges: '',\n        lineItems: []\n      }\n    };\n    this.customerInputRef = React.createRef();\n\n    this.formatAddress = addr => {\n      if (!addr) return '';\n      if (typeof addr === 'string') return addr;\n      return [addr.address, [addr.city, addr.state, addr.country].filter(Boolean).join(', '), addr.zip].filter(Boolean).join('\\n');\n    };\n\n    this.calculateOrderTotals = () => {\n      const {\n        impExp,\n        freightCharges,\n        taxPercent,\n        packingCharges,\n        lineItems\n      } = this.state.formData;\n      const freight = parseFloat(freightCharges) || 0;\n      const packing = parseFloat(packingCharges) || 0;\n      let taxOnFreight = 0;\n\n      if (['None', 'CIF'].includes(impExp)) {\n        taxOnFreight = freight * (parseFloat(taxPercent) || 0) / 100;\n      }\n\n      let lineTotal = 0; // sum of base totals (without tax)\n\n      let itemTaxTotal = 0; // sum of line taxes\n\n      const updatedLineItems = (lineItems || []).map(item => {\n        const qty = parseFloat(item.qty || 0);\n        const unitPrice = parseFloat(item.unitPrice || 0);\n        const baseTotal = qty * unitPrice; // tax group(s)\n\n        const groupNames = item.taxGroupNames && item.taxGroupNames.length ? item.taxGroupNames : item.taxGroup ? [item.taxGroup] : [];\n        let percent = 0;\n        let amount = 0;\n        groupNames.forEach(groupName => {\n          const group = this.state.taxGroups.find(t => t.groupName === groupName);\n\n          if (group && Array.isArray(group.lineItems)) {\n            group.lineItems.forEach(comp => {\n              const val = parseFloat(comp.percentOrAmt || 0);\n              if (comp.type === 'Percentage') percent += val;\n              if (comp.type === 'Amount') amount += val;\n            });\n          }\n        });\n        const taxAmt = baseTotal * percent / 100 + amount;\n        const itemTotalWithTax = baseTotal + taxAmt; // accumulate totals\n\n        lineTotal += baseTotal;\n        itemTaxTotal += taxAmt;\n        return { ...item,\n          qty,\n          unitPrice,\n          baseTotal: baseTotal.toFixed(2),\n          taxAmt: taxAmt.toFixed(2),\n          itemTotal: itemTotalWithTax.toFixed(2)\n        };\n      });\n      const totalTaxAmount = itemTaxTotal + taxOnFreight;\n      const orderValue = lineTotal + itemTaxTotal + freight + packing + taxOnFreight;\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          lineItems: updatedLineItems,\n          totalTaxAmount: totalTaxAmount.toFixed(2),\n          orderValue: orderValue.toFixed(2)\n        }\n      }));\n    };\n\n    this.showOrderPDFWithOrg = async order => {\n      var _orgSnap$docs$, _order$billTo, _order$shipTo;\n\n      if (!order || !Array.isArray(order.lineItems) || order.lineItems.length === 0) {\n        alert(\"Order data is incomplete.\");\n        return;\n      } // 1. Fetch org and customer data\n\n\n      const orgSnap = await getDocs(collection(db, 'businessGroups'));\n      const org = ((_orgSnap$docs$ = orgSnap.docs[0]) === null || _orgSnap$docs$ === void 0 ? void 0 : _orgSnap$docs$.data()) || {};\n      const customer = this.state.customers.find(c => c.custshortName === order.customer || c.custname === order.customer) || {}; // GST State Map for Place of Supply\n\n      const gstStateMap = {\n        \"01\": \"Jammu & Kashmir\",\n        \"02\": \"Himachal Pradesh\",\n        \"03\": \"Punjab\",\n        \"04\": \"Chandigarh\",\n        \"05\": \"Uttarakhand\",\n        \"06\": \"Haryana\",\n        \"07\": \"Delhi\",\n        \"08\": \"Rajasthan\",\n        \"09\": \"Uttar Pradesh\",\n        \"10\": \"Bihar\",\n        \"11\": \"Sikkim\",\n        \"12\": \"Arunachal Pradesh\",\n        \"13\": \"Nagaland\",\n        \"14\": \"Manipur\",\n        \"15\": \"Mizoram\",\n        \"16\": \"Tripura\",\n        \"17\": \"Meghalaya\",\n        \"18\": \"Assam\",\n        \"19\": \"West Bengal\",\n        \"20\": \"Jharkhand\",\n        \"21\": \"Odisha\",\n        \"22\": \"Chhattisgarh\",\n        \"23\": \"Madhya Pradesh\",\n        \"24\": \"Gujarat\",\n        \"25\": \"Daman and Diu\",\n        \"26\": \"Dadra and Nagar Haveli\",\n        \"27\": \"Maharashtra\",\n        \"28\": \"Andhra Pradesh (Old)\",\n        \"29\": \"Karnataka\",\n        \"30\": \"Goa\",\n        \"31\": \"Lakshadweep\",\n        \"32\": \"Kerala\",\n        \"33\": \"Tamil Nadu\",\n        \"34\": \"Puducherry\",\n        \"35\": \"Andaman and Nicobar Islands\",\n        \"36\": \"Telangana\",\n        \"37\": \"Andhra Pradesh\",\n        \"97\": \"Other Territory\"\n      };\n\n      const getPlaceOfSupply = gstin => {\n        if (!gstin || gstin.length < 2) return '';\n        const code = gstin.substring(0, 2);\n        const state = gstStateMap[code];\n        return state ? `${code} - ${state}` : '';\n      }; // 2. Enrich line items\n\n\n      const enrichedItems = order.lineItems.map(item => {\n        const product = this.state.products.find(p => p.productId === item.itemCode) || {};\n        return { ...item,\n          ptshortName: product.ptshortName || '',\n          hsnCode: product.hsnCode || '',\n          uom: product.stockingUOM || '',\n          cgst: item.cgst || 0,\n          sgst: item.sgst || 0,\n          igst: item.igst || 0,\n          taxGroupNames: item.taxGroupNames || (item.taxGroupName ? item.taxGroupName.split(',').map(s => s.trim()) : [])\n        };\n      }); // 3. Subtotal (without tax)\n\n      const subtotal = enrichedItems.reduce((sum, item) => sum + (parseFloat(item.unitPrice) || 0) * (parseFloat(item.qty) || 0), 0);\n      const freightCharges = parseFloat(order.freightCharges || 0);\n      const freightTax = parseFloat(order.freighttaxAmount || 0);\n      const totalTaxAmount = parseFloat(order.taxAmount || 0);\n      const grandTotal = parseFloat(order.orderValue || subtotal + totalTaxAmount);\n      const amountWords = `INR ${toWords(Math.floor(grandTotal))} Only`; // 4. Tax breakdown by group\n\n      let taxBreakdown = {};\n      let taxGroupDetails = [];\n      let sno = 1;\n      enrichedItems.forEach(item => {\n        const qty = parseFloat(item.qty || 0);\n        const unitPrice = parseFloat(item.unitPrice || 0);\n        const base = qty * unitPrice;\n        (item.taxGroupNames || []).forEach(tgName => {\n          const group = (this.state.taxGroups || []).find(g => g.groupName === tgName);\n\n          if (group) {\n            group.lineItems.forEach(li => {\n              const key = `${tgName} - ${li.component} (${li.percentOrAmt}${li.type === 'Amount' ? '' : '%'})`;\n              let taxAmt = 0;\n              if (li.type === 'Amount') taxAmt = parseFloat(li.percentOrAmt || 0);else taxAmt = base * parseFloat(li.percentOrAmt || 0) / 100;\n              taxBreakdown[key] = (taxBreakdown[key] || 0) + taxAmt;\n              taxGroupDetails.push({\n                sno: sno++,\n                group: tgName,\n                peramt: `${li.percentOrAmt}${li.type === 'Amount' ? '' : '%'}`,\n                taxAmt: taxAmt.toFixed(2)\n              });\n            });\n          }\n        }); // Legacy support for cgst/sgst/igst\n\n        if (item.cgst) {\n          const key = `CGST ${item.cgst}%`;\n          const taxAmt = base * item.cgst / 100;\n          taxBreakdown[key] = (taxBreakdown[key] || 0) + taxAmt;\n          taxGroupDetails.push({\n            sno: sno++,\n            group: key,\n            peramt: `${item.cgst}%`,\n            taxAmt: taxAmt.toFixed(2)\n          });\n        }\n\n        if (item.sgst) {\n          const key = `SGST ${item.sgst}%`;\n          const taxAmt = base * item.sgst / 100;\n          taxBreakdown[key] = (taxBreakdown[key] || 0) + taxAmt;\n          taxGroupDetails.push({\n            sno: sno++,\n            group: key,\n            peramt: `${item.sgst}%`,\n            taxAmt: taxAmt.toFixed(2)\n          });\n        }\n\n        if (item.igst) {\n          const key = `IGST ${item.igst}%`;\n          const taxAmt = base * item.igst / 100;\n          taxBreakdown[key] = (taxBreakdown[key] || 0) + taxAmt;\n          taxGroupDetails.push({\n            sno: sno++,\n            group: key,\n            peramt: `${item.igst}%`,\n            taxAmt: taxAmt.toFixed(2)\n          });\n        }\n      });\n\n      if (freightTax > 0) {\n        taxBreakdown[\"Freight Tax\"] = freightTax;\n        taxGroupDetails.push({\n          sno: sno++,\n          group: \"Freight Tax\",\n          peramt: \"-\",\n          taxAmt: freightTax.toFixed(2)\n        });\n      } // 5. Build HTML for PDF\n\n\n      const container = document.createElement('div');\n      container.id = 'pdf-preview-container';\n      container.style.width = '794px';\n      container.style.padding = '40px';\n      container.style.fontFamily = 'Arial';\n      container.innerHTML = `\n      <div style=\"display:flex; justify-content:space-between; align-items:center;\">\n        <img src=\"${org.logoUrl || ''}\" style=\"height:50px;\" />\n        <div style=\"font-size:18px; font-weight:bold;\">CUSTOMER ORDER</div>\n      </div>\n      <hr/>\n      <div style=\"display:flex; justify-content:space-between; font-size:11px;\">\n        <div style=\"line-height:1.5; width:50%;\">\n          <b>${org.bgName || ''}</b><br/>\n          ${org.address || ''}<br/>\n          <b>Email:</b> ${org.email || ''}<br/>\n          <b>Website:</b> ${org.website || ''}<br/>\n          <b>GSTIN:</b> ${org.gstin || ''}<br/>\n          <b>Mobile:</b> ${org.mobile || ''}<br/>\n          <b>CIN:</b> ${org.cin || ''}\n        </div>\n        <table style=\"font-size:11px; text-align:left;\">\n          <tr><td><b>Order No</b></td><td>: ${order.orderNo}</td></tr>\n          <tr><td><b>Order Date</b></td><td>: ${order.orderDate}</td></tr>\n          <tr><td><b>Currency</b></td><td>: ${order.currency || 'INR'}</td></tr>\n          <tr><td><b>Despatch</b></td><td>: ${order.despatchMode || ''}</td></tr>\n        </table>\n      </div>\n\n      <div style=\"margin-top:15px; display:flex; justify-content:space-between; font-size:11px;\">\n        <div style=\"width:48%;\">\n          <b style=\"background:#011b56; color:#fff; display:block; padding:4px;\">Bill To</b>\n          <div style=\"border:1px solid #ccc; padding:6px;\">\n           <b>${order.customer || ''}</b><br/>\n            ${((_order$billTo = order.billTo) === null || _order$billTo === void 0 ? void 0 : _order$billTo.replace(/\\n/g, '<br/>')) || ''}\n          </div>\n          <div style=\"font-size:10px; margin-top:6px;\">\n              <b>GSTIN:</b> ${customer.gstin || ''}<br/>\n              <b>Email:</b> ${customer.email || ''}<br/>\n              <b>Contact:</b> ${customer.contactPerson || ''}<br/>\n              <b>Phone:</b> ${customer.phone || ''}\n          </div>\n        </div>\n        <div style=\"width:48%;\">\n          <b style=\"background:#011b56; color:#fff; display:block; padding:4px;\">Ship To</b>\n          <div style=\"border:1px solid #ccc; padding:6px;\">\n           <b>${order.customer || ''}</b><br/>\n            ${((_order$shipTo = order.shipTo) === null || _order$shipTo === void 0 ? void 0 : _order$shipTo.replace(/\\n/g, '<br/>')) || ''}\n          </div>\n          <div style=\"font-size:10px; margin-top:6px;\">\n            <b>Place of Supply:</b> ${getPlaceOfSupply(customer.gstin || '')}\n          </div>\n        </div>\n      </div>\n\n      <table style=\"width:100%; border-collapse:collapse; margin-top:20px; font-size:10px;\">\n        <thead>\n          <tr style=\"background:#f4f6fa;\">\n            <th style=\"border:1px solid #011b56;\">Item Code</th>\n            <th style=\"border:1px solid #011b56;\">Description</th>\n            <th style=\"border:1px solid #011b56;\">HSN</th>\n            <th style=\"border:1px solid #011b56;\">UOM</th>\n            <th style=\"border:1px solid #011b56;\">Qty</th>\n            <th style=\"border:1px solid #011b56;\">Unit Price</th>\n            <th style=\"border:1px solid #011b56;\">GST%</th>\n            <th style=\"border:1px solid #011b56;\">Item Total</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${enrichedItems.map(item => {\n        const gstLabel = item.taxGroupNames && item.taxGroupNames.length ? item.taxGroupNames.join(', ') : item.taxGroupName || item.taxId || '-';\n        return `\n              <tr>\n                <td style=\"border:1px solid #011b56;\">${item.itemCode}</td>\n                <td style=\"border:1px solid #011b56;\">${item.itemDescription}</td>\n                <td style=\"border:1px solid #011b56;\">${item.hsnCode}</td>\n                <td style=\"border:1px solid #011b56;\">${item.uom}</td>\n                <td style=\"border:1px solid #011b56;\">${item.qty}</td>\n                <td style=\"border:1px solid #011b56;\">${item.unitPrice}</td>\n                <td style=\"border:1px solid #011b56;\">${gstLabel}</td>\n                <td style=\"border:1px solid #011b56;\">${item.total}</td>\n              </tr>`;\n      }).join('')}\n          <tr>\n            <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>Subtotal</b></td>\n            <td style=\"border:1px solid #011b56;\"><b>${subtotal.toFixed(2)}</b></td>\n        </tr>\n          <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>Total Tax Amount</b></td>\n          <td style=\"border:1px solid #011b56;\"><b>${totalTaxAmount.toFixed(2)}</b></td>\n        </tr>\n        <tr>\n          <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>Grand Total</b></td>\n          <td style=\"border:1px solid #011b56;\"><b>${grandTotal.toFixed(2)}</b></td>\n        </tr>\n        </tbody>\n      </table>\n      <div style=\"margin-top:8px; font-size:11px;\"><b>Amount in Words:</b> ${amountWords}</div>\n      <div style=\"margin-top:20px; text-align:right; font-size:10px;\">Printed on ${new Date().toLocaleString()}</div>\n    `;\n      document.body.appendChild(container);\n      const canvas = await html2canvas(container, {\n        scale: 2,\n        useCORS: true\n      });\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'pt', 'a4');\n      const width = 595.28;\n      const height = canvas.height * width / canvas.width;\n      pdf.addImage(imgData, 'PNG', 0, 0, width, height);\n      document.body.removeChild(container);\n      pdf.setFontSize(11);\n      pdf.text(`For ${org.bgName || ''}`, width - 200, 780);\n      pdf.text('Authorized Signatory', width - 200, 800);\n      const blob = pdf.output('blob');\n      const url = URL.createObjectURL(blob);\n      const newWin = window.open();\n      newWin.document.write(`\n      <html><head><title>Order PDF Preview</title></head>\n      <body style=\"margin:0;\">\n        <iframe width=\"100%\" height=\"100%\" style=\"border:none;\" src=\"${url}\"></iframe>\n      </body></html>\n    `);\n      newWin.document.close();\n    };\n\n    this.handleDiscountChange = (field, value) => {\n      let {\n        formData\n      } = this.state;\n      formData[field] = value;\n      const quoteValue = parseFloat(formData.quoteValue || 0);\n      const discountPercent = parseFloat(formData.discountPercent || 0);\n      const discountAmount = quoteValue * discountPercent / 100;\n      const afterDiscountValue = quoteValue - discountAmount;\n      formData.discountAmount = discountAmount;\n      formData.afterDiscountValue = afterDiscountValue;\n      this.setState({\n        formData\n      });\n    };\n\n    this.handleChooseChange = value => {\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          choose: value\n        }\n      }), this.filterProductsByCategory);\n    };\n\n    this.filterProductsByCategory = () => {\n      const {\n        choose\n      } = this.state.formData;\n      let filteredProducts = [];\n\n      if (choose === \"Service\") {\n        filteredProducts = this.state.products.filter(p => p.category === \"Service\");\n      } else if (choose === \"Product\") {\n        filteredProducts = this.state.products.filter(p => p.category === \"Product\");\n      } else if (choose === \"Bundle\") {\n        filteredProducts = this.state.products; // All products\n      }\n\n      this.setState({\n        filteredProducts\n      });\n    };\n\n    this.fetchTaxGroups = async () => {\n      const snap = await getDocs(collection(db, 'taxGroups'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        taxGroups: data\n      });\n    };\n\n    this.fetchorders = async () => {\n      const snap = await getDocs(collection(db, 'orders'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        orders: data.reverse()\n      });\n    };\n\n    this.fetchCustomers = async () => {\n      const snap = await getDocs(collection(db, 'customers'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        customers: data\n      });\n    };\n\n    this.fetchProducts = async () => {\n      const snap = await getDocs(collection(db, 'products'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        products: data,\n        filteredProducts: data\n      }, this.filterProductsByCategory);\n    };\n\n    this.fetchDespatchModes = async () => {\n      const snap = await getDocs(collection(db, 'modes'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        despatchModes: data\n      });\n    };\n\n    this.fetchPaymentTerms = async () => {\n      const snap = await getDocs(collection(db, 'paymentTerms'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        paymentTerms: data\n      });\n    };\n\n    this.handleInputChange = (field, value) => {\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          [field]: value\n        }\n      }), () => {\n        if (field === 'discountPercent') this.calculateOrderTotals();\n      });\n    };\n\n    this.handleBreakdownChange = (idx, field, value) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        items[idx][field] = value;\n        return {\n          breakdownItems: items\n        };\n      });\n    };\n\n    this.handleBreakdownTypeChange = val => {\n      this.setState({\n        breakdownType: val\n      });\n    };\n\n    this.handleAddInlineSubProduct = (breakdownIdx, initial = null) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        const item = items[breakdownIdx] ? { ...items[breakdownIdx]\n        } : null;\n        if (!item) return {};\n        const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\n        const defaultSP = {\n          name: '',\n          value: ''\n        };\n        subProducts.push(initial ? { ...defaultSP,\n          ...initial\n        } : defaultSP);\n        item.subProducts = subProducts;\n        items[breakdownIdx] = item;\n        return {\n          breakdownItems: items\n        };\n      });\n    };\n\n    this.handleRemoveSubProduct = (biIdx, spIdx) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        if (!items[biIdx]) return {};\n        const item = { ...items[biIdx]\n        };\n        const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\n        subProducts.splice(spIdx, 1);\n        item.subProducts = subProducts;\n        items[biIdx] = item;\n        return {\n          breakdownItems: items\n        };\n      });\n    };\n\n    this.handleSubProductChange = (biIdx, spIdx, field, value) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        if (!items[biIdx]) return {};\n        const item = { ...items[biIdx]\n        };\n        const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\n        const sp = { ...subProducts[spIdx],\n          [field]: value\n        };\n        subProducts[spIdx] = sp;\n        item.subProducts = subProducts;\n        items[biIdx] = item;\n        return {\n          breakdownItems: items\n        };\n      });\n    };\n\n    this.getSubProductsSum = bi => {\n      const {\n        breakdownType,\n        formData\n      } = this.state;\n      const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\n        acc[li.itemCode] = parseFloat(li.total || 0) || 0;\n        return acc;\n      }, {});\n      const mainTotal = itemTotals[bi.productId] || 0;\n      const subs = Array.isArray(bi.subProducts) ? bi.subProducts : [];\n      return subs.reduce((s, sp) => {\n        const val = parseFloat(sp.value || 0) || 0;\n\n        if (breakdownType === 'Percentage') {\n          return s + mainTotal * val / 100;\n        }\n\n        return s + val;\n      }, 0);\n    };\n\n    this.isBreakdownValid = () => {\n      const {\n        breakdownItems,\n        formData\n      } = this.state;\n      const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\n        acc[li.itemCode] = parseFloat(li.total || 0) || 0;\n        return acc;\n      }, {});\n      const TOL = 0.01;\n\n      for (let bi of breakdownItems) {\n        const mainTotal = itemTotals[bi.productId] || 0;\n\n        if (mainTotal > 0) {\n          const subSum = this.getSubProductsSum(bi);\n          if (Math.abs(subSum - mainTotal) > TOL) return false;\n        }\n      }\n\n      return true;\n    };\n\n    this.handleLineItemChange = (idx, field, value) => {\n      const updatedItems = [...this.state.formData.lineItems];\n      updatedItems[idx] = { ...updatedItems[idx],\n        [field]: value\n      }; // recalc tax & totals for this line\n\n      const qty = parseFloat(updatedItems[idx].qty || 0);\n      const unitPrice = parseFloat(updatedItems[idx].unitPrice || 0);\n      const baseTotal = qty * unitPrice;\n      let percent = 0;\n      let amount = 0;\n      (updatedItems[idx].taxGroupNames || []).forEach(groupName => {\n        const group = this.state.taxGroups.find(t => t.groupName === groupName);\n\n        if (group && Array.isArray(group.lineItems)) {\n          group.lineItems.forEach(comp => {\n            const val = parseFloat(comp.percentOrAmt || 0);\n            if (comp.type === 'Percentage') percent += val;\n            if (comp.type === 'Amount') amount += val;\n          });\n        }\n      });\n      const taxAmt = baseTotal * percent / 100 + amount;\n      updatedItems[idx].taxAmt = taxAmt.toFixed(2);\n      updatedItems[idx].itemTotal = (baseTotal + taxAmt).toFixed(2); // update state + recalc full totals\n\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          lineItems: updatedItems\n        }\n      }), this.calculateOrderTotals);\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        editingId,\n        formData,\n        orders,\n        breakdownItems\n      } = this.state;\n      if (!formData.customer) return alert(\"Customer is required\");\n      if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\n      formData.breakdownItems = breakdownItems;\n      const payload = { ...formData,\n        status: \"Awaiting for Approval\",\n        // Always set to Awaiting for Approval on save\n        breakdownItems: this.state.breakdownItems || []\n      };\n      let orderDocId = editingId;\n\n      if (editingId) {\n        const {\n          id,\n          ...formDataWithoutId\n        } = formData;\n        await updateDoc(doc(db, \"orders\", editingId), { ...formDataWithoutId,\n          status: \"Awaiting for Approval\",\n          updatedAt: serverTimestamp()\n        });\n        orderDocId = editingId;\n      } else {\n        formData.orderNo = `CO${1000 + orders.length}`;\n        const docRef = await addDoc(collection(db, \"orders\"), { ...formData,\n          status: \"Awaiting for Approval\",\n          createdAt: serverTimestamp()\n        });\n        orderDocId = docRef.id;\n      } // If this order was created from a quote, update quote status now\n\n\n      if (formData.quoteNo) {\n        const quoteSnap = await getDocs(collection(db, \"quotes\"));\n        const quoteDoc = quoteSnap.docs.find(q => q.data().quoteNo === formData.quoteNo);\n\n        if (quoteDoc) {\n          await updateDoc(doc(db, \"quotes\", quoteDoc.id), {\n            status: \"ConvertedToOrder\"\n          });\n        }\n      }\n\n      this.setState({\n        showForm: false,\n        editingId: null,\n        previewOrderMode: false,\n        formData: this.getEmptyOrderForm()\n      });\n      this.fetchorders();\n    };\n\n    this.getEmptyOrderForm = () => ({\n      orderNo: '',\n      orderDate: new Date().toISOString().split('T')[0],\n      orderType: 'Standard',\n      customer: '',\n      status: 'Entered',\n      choose: 'Service',\n      qrefNo: '',\n      impExp: 'None',\n      currency: '',\n      conversionRate: '',\n      taxAmount: '',\n      orderValue: '',\n      discountPercent: 0,\n      discountAmount: 0,\n      afterDiscountValue: 0,\n      billTo: '',\n      shipTo: '',\n      despatchMode: 'By Air',\n      paymentTerms: '',\n      freightCharges: '',\n      freighttaxAmount: '',\n      taxPercent: '',\n      packingCharges: '',\n      lineItems: []\n    });\n\n    this.loadOrderPreview = order => {\n      this.setState({\n        selectedOrder: order,\n        previewOrderMode: true\n      });\n    };\n\n    this.loadorderForEdit = order => {\n      this.setState({\n        formData: { ...order,\n          lineItems: Array.isArray(order.lineItems) ? order.lineItems : []\n        },\n        breakdownItems: Array.isArray(order.breakdownItems) ? order.breakdownItems : [],\n        editingId: order.id,\n        showForm: true,\n        previewOrderMode: false,\n        // <-- Ensure preview mode is off\n        activeTab: 'co'\n      }, () => {\n        if (this.customerInputRef.current) {\n          this.customerInputRef.current.value = order.customer;\n        }\n      });\n    };\n\n    this.toggleOrderForm = () => {\n      this.setState(prev => ({\n        showForm: !prev.showForm,\n        formData: { ...this.initialFormData,\n          // however you reset it\n          orderNo: `CO${1000 + prev.orders.length}`,\n          orderDate: new Date().toISOString().split('T')[0],\n          status: 'Entered',\n          lineItems: []\n        }\n      }), this.calculateOrderTotals);\n    };\n\n    this.toggleTaxGroupSelection = (groupName, lineIdx, isChecked) => {\n      const formData = { ...this.state.formData\n      };\n      const item = formData.lineItems[lineIdx];\n      if (!item.taxGroupNames) item.taxGroupNames = [];\n\n      if (isChecked) {\n        if (!item.taxGroupNames.includes(groupName)) {\n          item.taxGroupNames.push(groupName);\n        }\n      } else {\n        item.taxGroupNames = item.taxGroupNames.filter(g => g !== groupName);\n      }\n\n      this.setState({\n        formData\n      }, () => this.calculateOrderTotals());\n    };\n\n    this.showOverlay = type => this.setState({\n      overlayType: type,\n      overlaySearch: ''\n    });\n\n    this.hideOverlay = () => this.setState({\n      overlayType: '',\n      overlaySearch: ''\n    });\n\n    this.selectOverlayValue = value => {\n      if (this.state.overlayType === 'customer') {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            customer: value.custname || value.custcode || '',\n            // Use custname or custcode\n            billTo: this.formatAddress(value.billTo),\n            shipTo: this.formatAddress(value.shipTo),\n            currency: value.currency || '' // despatchMode: value.despatchMode || '', // No auto-fill for despatch mode\n            // paymentTerms: value.paymentTerms || '' // No auto-fill for payment terms\n\n          },\n          overlayType: '',\n          overlaySearch: ''\n        }), () => {\n          if (this.customerInputRef.current) {\n            this.customerInputRef.current.value = value.custname || value.custcode || '';\n          }\n        });\n      }\n    };\n\n    this.renderOverlay = () => {\n      const {\n        overlayType,\n        overlaySearch,\n        customers,\n        despatchModes,\n        paymentTerms\n      } = this.state;\n\n      const getFilteredRows = (list, nameKey = 'name', codeKey = 'shortName') => list.filter(item => (item[nameKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()) || (item[codeKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()));\n\n      const handleSelect = item => {\n        if (overlayType === 'customer') {\n          this.selectOverlayValue(item);\n        } else if (overlayType === 'despatchMode') {\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              despatchMode: item.name\n            },\n            overlayType: '',\n            overlaySearch: ''\n          }));\n        } else if (overlayType === 'paymentTerms') {\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              paymentTerms: item.name\n            },\n            overlayType: '',\n            overlaySearch: ''\n          }));\n        }\n      };\n\n      let title = '';\n      let headers = [];\n      let rows = [];\n\n      if (overlayType === 'customer') {\n        title = 'Select Customer';\n        headers = ['Name', 'Code', 'Short Name'];\n        rows = getFilteredRows(customers, 'custname', 'custcode');\n      } else if (overlayType === 'despatchMode') {\n        title = 'Select Despatch Mode';\n        headers = ['Name'];\n        rows = getFilteredRows(despatchModes);\n      } else if (overlayType === 'paymentTerms') {\n        title = 'Select Payment Terms';\n        headers = ['Name'];\n        rows = getFilteredRows(paymentTerms);\n      } else {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1014,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1015,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 9\n        }\n      }, title), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: `Search ${overlayType}...`,\n        value: overlaySearch,\n        onChange: e => this.setState({\n          overlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1017,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1024,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1025,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1026,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1027,\n          columnNumber: 15\n        }\n      }, headers.map((h, i) => /*#__PURE__*/React.createElement(\"th\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1028,\n          columnNumber: 40\n        }\n      }, h)))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1031,\n          columnNumber: 13\n        }\n      }, rows.map((item, i) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id || i,\n        onClick: () => handleSelect(item),\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1033,\n          columnNumber: 17\n        }\n      }, headers.map((h, j) => /*#__PURE__*/React.createElement(\"td\", {\n        key: j,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1035,\n          columnNumber: 21\n        }\n      }, overlayType === 'customer' ? h === 'Name' ? item.custname : h === 'Code' ? item.custcode : item.custshortName : h === 'Name' ? item.name : item.shortName)))), rows.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1047,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: headers.length,\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1048,\n          columnNumber: 19\n        }\n      }, \"No records found\"))))), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm mt-2\",\n        onClick: this.hideOverlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1054,\n          columnNumber: 9\n        }\n      }, \"Cancel\")));\n    };\n\n    this.renderTaxOverlay = () => {\n      const {\n        taxGroups,\n        currentTaxIdx,\n        formData\n      } = this.state;\n      if (currentTaxIdx === null) return null;\n      const item = formData.lineItems[currentTaxIdx];\n      const selected = new Set(item.taxGroupNames || []);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'fixed',\n          zIndex: 1000,\n          top: '10%',\n          left: '15%',\n          background: '#fff',\n          border: '1px solid #ccc',\n          padding: '20px',\n          boxShadow: '0 0 10px rgba(0,0,0,0.3)',\n          width: '70%',\n          maxHeight: '70vh',\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1068,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1074,\n          columnNumber: 7\n        }\n      }, \"Select Tax Groups\"), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-sm table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1075,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1076,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1077,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1077,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1077,\n          columnNumber: 24\n        }\n      }, \"Group\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1077,\n          columnNumber: 38\n        }\n      }, \"Components\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1077,\n          columnNumber: 57\n        }\n      }, \"%\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1079,\n          columnNumber: 9\n        }\n      }, taxGroups.map(tg => /*#__PURE__*/React.createElement(\"tr\", {\n        key: tg.groupName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1081,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1082,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: selected.has(tg.groupName),\n        onChange: e => this.toggleTaxGroupSelection(tg.groupName, currentTaxIdx, e.target.checked),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1083,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1091,\n          columnNumber: 15\n        }\n      }, tg.groupName), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1092,\n          columnNumber: 15\n        }\n      }, tg.lineItems.map(li => li.component).join(', ')), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1093,\n          columnNumber: 15\n        }\n      }, tg.lineItems.map(li => li.percentOrAmt).join(', ')))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1098,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-success\",\n        onClick: () => this.setState({\n          showTaxOverlay: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1099,\n          columnNumber: 9\n        }\n      }, \"Done\")));\n    };\n\n    this.renderOrderPreview = () => {\n      var _o$lineItems, _o$lineItems2;\n\n      const o = this.state.selectedOrder;\n      if (!o) return null;\n      const subtotal = ((_o$lineItems = o.lineItems) === null || _o$lineItems === void 0 ? void 0 : _o$lineItems.reduce((sum, item) => sum + (parseFloat(item.total) || 0), 0)) || 0;\n      const freightCharges = parseFloat(o.freightCharges || 0);\n      const taxAmount = parseFloat(o.taxAmount || 0);\n      const grandTotal = parseFloat(o.orderValue || subtotal + freightCharges + taxAmount);\n      const amountWords = `INR ${window.toWords ? window.toWords(Math.floor(grandTotal)) : grandTotal} Only`; // Find customer record for extra details\n\n      const customer = this.state.customers.find(c => c.custshortName === o.customer || c.custname === o.customer) || {};\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card mt-4 p-4 shadow-sm full-height d-flex flex-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1130,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1131,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1132,\n          columnNumber: 9\n        }\n      }, \"Order Preview - \", o.orderNo), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex items-center gap-x-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1133,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-primary\",\n        onClick: () => this.loadorderForEdit(o),\n        disabled: o.status !== \"Entered\" && o.status !== \"Awaiting for Approval\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1134,\n          columnNumber: 11\n        }\n      }, \"Edit\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1144,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1145,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1145,\n          columnNumber: 35\n        }\n      }, \"Customer:\"), \" \", o.customer), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1146,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1146,\n          columnNumber: 35\n        }\n      }, \"Date:\"), \" \", o.orderDate), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1147,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1147,\n          columnNumber: 35\n        }\n      }, \"Status:\"), \" \", o.status)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1149,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1150,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1151,\n          columnNumber: 11\n        }\n      }, \"Bill To:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1151,\n          columnNumber: 26\n        }\n      }), o.billTo || \"-\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mt-2\",\n        style: {\n          fontSize: \"0.9em\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1153,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1154,\n          columnNumber: 13\n        }\n      }, \"GSTIN:\"), \" \", customer.gstin || \"-\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1154,\n          columnNumber: 50\n        }\n      }), /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1155,\n          columnNumber: 13\n        }\n      }, \"Email:\"), \" \", customer.email || \"-\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1155,\n          columnNumber: 50\n        }\n      }), /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1156,\n          columnNumber: 13\n        }\n      }, \"Phone:\"), \" \", customer.phone || \"-\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1159,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1160,\n          columnNumber: 11\n        }\n      }, \"Ship To:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1160,\n          columnNumber: 26\n        }\n      }), o.shipTo || \"-\")), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1164,\n          columnNumber: 7\n        }\n      }, \"Line Items\"), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1165,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1166,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1167,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1168,\n          columnNumber: 13\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1169,\n          columnNumber: 13\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1170,\n          columnNumber: 13\n        }\n      }, \"Qty\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1171,\n          columnNumber: 13\n        }\n      }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1172,\n          columnNumber: 13\n        }\n      }, \"Total\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1175,\n          columnNumber: 9\n        }\n      }, (_o$lineItems2 = o.lineItems) === null || _o$lineItems2 === void 0 ? void 0 : _o$lineItems2.map((item, i) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1177,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1178,\n          columnNumber: 15\n        }\n      }, item.itemCode), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1179,\n          columnNumber: 15\n        }\n      }, item.itemDescription), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1180,\n          columnNumber: 15\n        }\n      }, item.qty), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1181,\n          columnNumber: 15\n        }\n      }, item.unitPrice), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1182,\n          columnNumber: 15\n        }\n      }, item.total))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1187,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1188,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1188,\n          columnNumber: 12\n        }\n      }, \"Subtotal:\"), \" \", subtotal.toFixed(2)), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1189,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1189,\n          columnNumber: 12\n        }\n      }, \"Freight Charges:\"), \" \", freightCharges.toFixed(2)), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1190,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1190,\n          columnNumber: 12\n        }\n      }, \"Tax Amount:\"), \" \", taxAmount.toFixed(2)), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1191,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1191,\n          columnNumber: 27\n        }\n      }, \"Grand Total:\"), \" \", grandTotal.toFixed(2)), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1192,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1192,\n          columnNumber: 27\n        }\n      }, \"Amount in Words:\"), \" \", amountWords)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mt-auto pt-3 text-right \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1194,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: () => this.setState({\n          previewOrderMode: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1195,\n          columnNumber: 9\n        }\n      }, \"Back to List\")));\n    };\n\n    this.renderBreakdownTab = () => {\n      const {\n        breakdownItems,\n        breakdownType,\n        formData\n      } = this.state; // map item totals from lineItems (main product totals)\n\n      const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\n        acc[li.itemCode] = parseFloat(li.total || 0) || 0;\n        return acc;\n      }, {});\n      const sumOfItemTotals = Object.values(itemTotals).reduce((s, v) => s + v, 0); // compute subproducts sum\n\n      const getSubProductsSum = bi => {\n        const mainTotal = itemTotals[bi.productId] || 0;\n        const subs = Array.isArray(bi.subProducts) ? bi.subProducts : [];\n        return subs.reduce((s, sp) => {\n          const val = parseFloat(sp.value || 0) || 0;\n          return s + (breakdownType === \"Percentage\" ? mainTotal * val / 100 : val);\n        }, 0);\n      };\n\n      const canSave = this.isBreakdownValid();\n      const isConverted = (formData === null || formData === void 0 ? void 0 : formData.status) === \"ConvertedToOrder\"; // 🔑 single flag\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1229,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1230,\n          columnNumber: 7\n        }\n      }, \"Milestone Breakdown\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1232,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1233,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1233,\n          columnNumber: 30\n        }\n      }, \"Quote Value:\"), \" \", formData.quoteValue), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1234,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1234,\n          columnNumber: 30\n        }\n      }, \"After Discount Quote Value:\"), \" \", formData.afterDiscountValue), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1235,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1235,\n          columnNumber: 30\n        }\n      }, \"Tax Amount:\"), \" \", formData.taxAmount), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1236,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1236,\n          columnNumber: 30\n        }\n      }, \"Sum of Item Totals:\"), \" \", sumOfItemTotals.toFixed(2))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1240,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1241,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1242,\n          columnNumber: 11\n        }\n      }, \"Subproduct Mode\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: breakdownType,\n        onChange: e => this.handleBreakdownTypeChange(e.target.value),\n        disabled: isConverted // disable if converted\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1243,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Amount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1249,\n          columnNumber: 13\n        }\n      }, \"Amount\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Percentage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1250,\n          columnNumber: 13\n        }\n      }, \"Percentage\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-9 text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1253,\n          columnNumber: 9\n        }\n      }, !isConverted && /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-sm\",\n        onClick: this.addBreakdownFromLineItems,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1255,\n          columnNumber: 13\n        }\n      }, \"+ Add Breakdown\"))), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1267,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1268,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1269,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1270,\n          columnNumber: 13\n        }\n      }, \"S.No\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1271,\n          columnNumber: 13\n        }\n      }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1272,\n          columnNumber: 13\n        }\n      }, \"Desc / Subproduct name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1273,\n          columnNumber: 13\n        }\n      }, \"SubProduct value (\", breakdownType === \"Percentage\" ? \"%\" : \"₹\", \")\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1274,\n          columnNumber: 13\n        }\n      }, \"Total (\\u20B9)\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1275,\n          columnNumber: 13\n        }\n      }, \"Due Date\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1276,\n          columnNumber: 13\n        }\n      }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1279,\n          columnNumber: 9\n        }\n      }, breakdownItems.map((item, idx) => {\n        const mainItemTotal = itemTotals[item.productId] || 0;\n        const subSum = getSubProductsSum(item);\n        const remaining = mainItemTotal - subSum;\n        const subs = Array.isArray(item.subProducts) ? item.subProducts : [];\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          key: idx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1287,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"tr\", {\n          style: {\n            background: \"#eef4ff\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1289,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1290,\n            columnNumber: 19\n          }\n        }, item.sno), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1291,\n            columnNumber: 19\n          }\n        }, item.productId), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1292,\n            columnNumber: 19\n          }\n        }, item.desc), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1293,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1294,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1295,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"small\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1295,\n            columnNumber: 28\n          }\n        }, \"Subproducts sum: \", /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1295,\n            columnNumber: 52\n          }\n        }, subSum.toFixed(2)))), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1296,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"small\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1297,\n            columnNumber: 25\n          }\n        }, \"Remaining:\", \" \", /*#__PURE__*/React.createElement(\"b\", {\n          style: {\n            color: remaining > 0.01 ? \"red\" : \"green\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1299,\n            columnNumber: 27\n          }\n        }, remaining.toFixed(2)))))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1306,\n            columnNumber: 19\n          }\n        }, mainItemTotal.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1307,\n            columnNumber: 19\n          }\n        }), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1308,\n            columnNumber: 19\n          }\n        }, !isConverted && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1310,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm btn-outline-primary mr-2\",\n          onClick: () => this.handleAddInlineSubProduct(idx),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1311,\n            columnNumber: 23\n          }\n        }, \"+ Add\"), /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm btn-outline-secondary\",\n          onClick: () => {\n            if (remaining <= 0) return;\n            this.handleAddInlineSubProduct(idx, {\n              name: \"New Product\",\n              value: breakdownType === \"Percentage\" ? (remaining * 100 / (mainItemTotal || 1)).toFixed(2) : remaining.toFixed(2)\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1316,\n            columnNumber: 23\n          }\n        }, \"Auto-fill\")))), subs.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n          key: `notice-${idx}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1337,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          colSpan: \"6\",\n          className: \"text-center text-muted\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1338,\n            columnNumber: 21\n          }\n        }, \"No subproducts added for this item.\")), subs.map((sp, spIdx) => {\n          const spId = `${item.productId}_${spIdx + 1}`;\n          const rawVal = parseFloat(sp.value || 0) || 0;\n          const spTotal = breakdownType === \"Percentage\" ? mainItemTotal * rawVal / 100 : rawVal;\n          return /*#__PURE__*/React.createElement(\"tr\", {\n            key: spId,\n            style: {\n              background: \"#f9f9f9\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1352,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            className: \"text-muted\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1353,\n              columnNumber: 23\n            }\n          }, \"\\u2014\"), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1354,\n              columnNumber: 23\n            }\n          }, spId), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1355,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            type: \"text\",\n            className: \"form-control form-control-sm\",\n            value: sp.name || \"\",\n            onChange: e => this.handleSubProductChange(idx, spIdx, \"name\", e.target.value),\n            placeholder: \"Enter name\",\n            disabled: isConverted,\n            style: {\n              paddingLeft: \"18px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1356,\n              columnNumber: 25\n            }\n          })), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1366,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            type: \"number\",\n            step: \"any\",\n            className: \"form-control form-control-sm\",\n            value: sp.value || \"\",\n            onChange: e => this.handleSubProductChange(idx, spIdx, \"value\", e.target.value),\n            disabled: isConverted,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1367,\n              columnNumber: 25\n            }\n          })), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1376,\n              columnNumber: 23\n            }\n          }, spTotal.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1377,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            type: \"date\",\n            className: \"form-control form-control-sm\",\n            value: sp.dueDate || \"\",\n            onChange: e => this.handleSubProductChange(idx, spIdx, \"dueDate\", e.target.value),\n            disabled: isConverted,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1378,\n              columnNumber: 23\n            }\n          })), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1389,\n              columnNumber: 23\n            }\n          }, !isConverted && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            className: \"btn btn-sm btn-danger\",\n            onClick: () => this.handleRemoveSubProduct(idx, spIdx),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1392,\n              columnNumber: 27\n            }\n          }, \"-\"))));\n        }));\n      }))), !canSave && !isConverted && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1410,\n          columnNumber: 9\n        }\n      }, \"Breakdown incomplete \\u2014 for each product the sum of subproduct totals must equal the product total. Save disabled until fixed.\"));\n    };\n\n    this.renderProductOverlay = () => {\n      const {\n        filteredProducts,\n        productOverlaySearch,\n        selectedProductIds\n      } = this.state;\n      const filtered = filteredProducts.filter(p => (p.ptshortName || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) || (p.ptdescription || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) || (p.itemCode || '').toLowerCase().includes(productOverlaySearch.toLowerCase()));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1426,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1427,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1428,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1429,\n          columnNumber: 13\n        }\n      }, \"Select Products\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-success btn-sm\",\n        onClick: () => {\n          const selectedProducts = filteredProducts.filter(p => this.state.selectedProductIds.includes(p.id));\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              lineItems: [...prev.formData.lineItems, ...selectedProducts.filter(p => !prev.formData.lineItems.some(item => item.id === p.id)).map(p => ({\n                id: p.id,\n                itemCode: p.productId || '',\n                itemDescription: p.ptdescription || '',\n                itemType: p.itemType || '',\n                materialType: p.materialType || '',\n                onHand: p.onHand || 0,\n                taxGroup: p.taxGroup || '',\n                custPartNo: p.custPartNo || '',\n                // Assuming this is cust part table\n                hsnCode: p.hsnCode || '',\n                // Assuming HSN No.\n                unitPrice: p.unitPrice || 0,\n                qty: 1,\n                total: (p.unitPrice || 0).toFixed(2)\n              }))]\n            },\n            productOverlayVisible: false,\n            selectedProductIds: []\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1430,\n          columnNumber: 13\n        }\n      }, \"Add Selected\")), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: \"Search products...\",\n        value: productOverlaySearch,\n        onChange: e => this.setState({\n          productOverlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1463,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1470,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1471,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1472,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1473,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1474,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1475,\n          columnNumber: 19\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1476,\n          columnNumber: 19\n        }\n      }, \"Item Desc\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1477,\n          columnNumber: 19\n        }\n      }, \"Item Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1478,\n          columnNumber: 19\n        }\n      }, \"Material Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1479,\n          columnNumber: 19\n        }\n      }, \"On Hand\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1480,\n          columnNumber: 19\n        }\n      }, \"Tax Grp\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1481,\n          columnNumber: 19\n        }\n      }, \"Cust Part No\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1484,\n          columnNumber: 15\n        }\n      }, filtered.map(p => /*#__PURE__*/React.createElement(\"tr\", {\n        key: p.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1486,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1487,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: selectedProductIds.includes(p.id),\n        onChange: e => {\n          const checked = e.target.checked;\n          this.setState(prev => ({\n            selectedProductIds: checked ? [...prev.selectedProductIds, p.id] : prev.selectedProductIds.filter(id => id !== p.id)\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1488,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1501,\n          columnNumber: 21\n        }\n      }, p.productId), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1502,\n          columnNumber: 21\n        }\n      }, p.ptdescription || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1503,\n          columnNumber: 21\n        }\n      }, p.itemType || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1504,\n          columnNumber: 21\n        }\n      }, p.materialType || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1505,\n          columnNumber: 21\n        }\n      }, p.onHand || 0), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1506,\n          columnNumber: 21\n        }\n      }, p.taxGroup || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1507,\n          columnNumber: 21\n        }\n      }, p.custPartNo || ''))), filtered.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1511,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"8\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1512,\n          columnNumber: 21\n        }\n      }, \"No products found\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1519,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1520,\n          columnNumber: 13\n        }\n      }, \"Page 1 of 1\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        onClick: () => this.setState({\n          productOverlayVisible: false,\n          selectedProductIds: []\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1521,\n          columnNumber: 13\n        }\n      }, \"Cancel\"))));\n    };\n\n    this.renderorderTable = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-4 full-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1529,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1530,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1531,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1532,\n        columnNumber: 11\n      }\n    }, \"Orders\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.setState({\n        showForm: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1533,\n        columnNumber: 11\n      }\n    }, \"+ Add Order\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1535,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1536,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1537,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1538,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1539,\n        columnNumber: 17\n      }\n    }, \"Order No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1540,\n        columnNumber: 17\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1541,\n        columnNumber: 17\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1542,\n        columnNumber: 17\n      }\n    }, \"Order Value\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1543,\n        columnNumber: 17\n      }\n    }, \"After Discount\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1544,\n        columnNumber: 17\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1545,\n        columnNumber: 17\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1548,\n        columnNumber: 13\n      }\n    }, this.state.orders.map((q, i) => {\n      let statusClass = \"badge-secondary\";\n      if (q.status === \"Awaiting for Approval\") statusClass = \"badge-warning\";else if (q.status === \"ConvertedToOrder\") statusClass = \"badge-info\";else if (q.status === \"COCreated\") statusClass = \"badge-secondary\";else if (q.status === \"Approved\") statusClass = \"badge-success\";else if (q.status === \"Rejected\") statusClass = \"badge-danger\";\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        style: {\n          fontSize: '14px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1558,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1559,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-link p-0\",\n        onClick: () => this.loadOrderPreview(q),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1560,\n          columnNumber: 21\n        }\n      }, q.orderNo)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1567,\n          columnNumber: 19\n        }\n      }, q.customer), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1568,\n          columnNumber: 19\n        }\n      }, q.orderDate), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1569,\n          columnNumber: 19\n        }\n      }, q.orderValue), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1570,\n          columnNumber: 19\n        }\n      }, q.afterDiscountValue), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1571,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: `badge ${statusClass}`,\n        style: {\n          fontSize: '14px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1572,\n          columnNumber: 21\n        }\n      }, q.status)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1574,\n          columnNumber: 21\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n        className: \"mdi mdi-printer menu-icon\",\n        onClick: () => this.showOrderPDFWithOrg(q),\n        style: {\n          fontSize: '24px',\n          color: '#2196F3',\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1574,\n          columnNumber: 26\n        }\n      })));\n    }), this.state.orders.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1584,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"6\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1584,\n        columnNumber: 21\n      }\n    }, \"No orders found.\")))))));\n\n    this.renderorderForm = () => {\n      const {\n        formData,\n        overlayType,\n        productOverlayVisible,\n        breakdownItems,\n        breakdownType\n      } = this.state;\n      const isFOB = formData.impExp === 'FOB';\n      const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\n        acc[li.itemCode] = parseFloat(li.total || 0) || 0;\n        return acc;\n      }, {});\n      const sumOfItemTotals = Object.values(itemTotals).reduce((sum, val) => sum + val, 0);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1604,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card full-height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1605,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: 'auto',\n          padding: '24px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1606,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1607,\n          columnNumber: 13\n        }\n      }, \"Order Form\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"nav nav-tabs\",\n        role: \"tablist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1608,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1609,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'co' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'co'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1610,\n          columnNumber: 17\n        }\n      }, \"CO Details\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1612,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'commercial'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1613,\n          columnNumber: 17\n        }\n      }, \"Commercial Terms\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1615,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'breakdown' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'breakdown'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1616,\n          columnNumber: 15\n        }\n      }, \"Breakdown\"))), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"form-sample\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1619,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tab-content pt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1620,\n          columnNumber: 15\n        }\n      }, this.state.activeTab === 'co' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1623,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1624,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1625,\n          columnNumber: 25\n        }\n      }, \"Order No\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.orderNo,\n        onChange: e => this.handleInputChange('orderNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1626,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1628,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1629,\n          columnNumber: 25\n        }\n      }, \"Order Date\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"date\",\n        className: \"form-control form-control-sm\",\n        value: formData.orderDate,\n        onChange: e => this.handleInputChange('orderDate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1630,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1632,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1633,\n          columnNumber: 25\n        }\n      }, \"Order Type\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.orderType,\n        onChange: e => this.handleInputChange('orderType', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1634,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1635,\n          columnNumber: 27\n        }\n      }, \"Standard\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1636,\n          columnNumber: 27\n        }\n      }, \"Manual\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1639,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1640,\n          columnNumber: 25\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.status,\n        style: {\n          backgroundColor: '#fff'\n        },\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1641,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1644,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1645,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1646,\n          columnNumber: 25\n        }\n      }, \"Customer\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1647,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Choose Customer\",\n        ref: this.customerInputRef,\n        value: formData.customer,\n        readOnly: true,\n        onClick: () => this.showOverlay('customer'),\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1648,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1658,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        onClick: () => this.showOverlay('customer'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1659,\n          columnNumber: 29\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1663,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1664,\n          columnNumber: 25\n        }\n      }, \"IMP/EXP\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.impExp,\n        onChange: e => this.handleInputChange('impExp', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1665,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1670,\n          columnNumber: 27\n        }\n      }, \"None\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1671,\n          columnNumber: 27\n        }\n      }, \"COB\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1672,\n          columnNumber: 27\n        }\n      }, \"FOB\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1673,\n          columnNumber: 27\n        }\n      }, \"CIF\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1676,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1677,\n          columnNumber: 25\n        }\n      }, \"Ref No.\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.qrefNo,\n        onChange: e => this.handleInputChange('qrefNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1678,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1685,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1686,\n          columnNumber: 21\n        }\n      }, \"Choose\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1687,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check mr-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1688,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        className: \"form-check-input\",\n        name: \"choose\",\n        id: \"chooseService\",\n        value: \"Service\",\n        checked: formData.choose === 'Service',\n        onChange: e => this.handleChooseChange(e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1689,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"chooseService\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1693,\n          columnNumber: 25\n        }\n      }, \"Service\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check mr-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1695,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        className: \"form-check-input\",\n        name: \"choose\",\n        id: \"chooseProduct\",\n        value: \"Product\",\n        checked: formData.choose === 'Product',\n        onChange: e => this.handleChooseChange(e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1696,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"chooseProduct\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1700,\n          columnNumber: 25\n        }\n      }, \"Product\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1702,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        className: \"form-check-input\",\n        name: \"choose\",\n        id: \"chooseBundle\",\n        value: \"Bundle\",\n        checked: formData.choose === 'Bundle',\n        onChange: e => this.handleChooseChange(e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1703,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"chooseBundle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1707,\n          columnNumber: 25\n        }\n      }, \"Bundle (Service+Product)\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1712,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1713,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1714,\n          columnNumber: 25\n        }\n      }, \"Currency\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.currency,\n        style: {\n          backgroundColor: '#fff'\n        },\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1715,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1723,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1724,\n          columnNumber: 25\n        }\n      }, \"Conversion Rate\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.conversionRate,\n        onChange: e => this.handleInputChange('conversionRate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1725,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1732,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1733,\n          columnNumber: 25\n        }\n      }, \"Tax Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.totalTaxAmount,\n        onChange: e => this.handleInputChange('totalTaxAmount', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1734,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1742,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1743,\n          columnNumber: 25\n        }\n      }, \"Order Value\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.orderValue,\n        onChange: e => this.handleInputChange('orderValue', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1744,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1753,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1754,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1755,\n          columnNumber: 23\n        }\n      }, \"Discount %\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        value: formData.discountPercent,\n        onChange: e => {\n          this.handleInputChange('discountPercent', e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1756,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1765,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1766,\n          columnNumber: 21\n        }\n      }, \"Discount Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        value: this.state.formData.discountAmount,\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1767,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1774,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1775,\n          columnNumber: 23\n        }\n      }, \"After Discount - Quote Value\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        value: this.state.formData.afterDiscountValue,\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1776,\n          columnNumber: 23\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1784,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1785,\n          columnNumber: 29\n        }\n      }, \"Line Item\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-sm\",\n        onClick: () => this.setState({\n          productOverlayVisible: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1786,\n          columnNumber: 29\n        }\n      }, \"+ Add Product\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-responsive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1790,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1791,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1792,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1793,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1794,\n          columnNumber: 35\n        }\n      }, \" Item Code \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1795,\n          columnNumber: 35\n        }\n      }, \" Item Desc \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1796,\n          columnNumber: 35\n        }\n      }, \" Cust Part No \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1797,\n          columnNumber: 35\n        }\n      }, \" HSN No \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1798,\n          columnNumber: 35\n        }\n      }, \" On Hand \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1799,\n          columnNumber: 35\n        }\n      }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1800,\n          columnNumber: 35\n        }\n      }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1801,\n          columnNumber: 35\n        }\n      }, \"Tax Id\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1802,\n          columnNumber: 35\n        }\n      }, \"Item Total\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1803,\n          columnNumber: 35\n        }\n      }, \"Tax amount\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1804,\n          columnNumber: 35\n        }\n      }, \"Grand Total\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1807,\n          columnNumber: 31\n        }\n      }, formData.lineItems.map((item, idx) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id || idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1809,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1810,\n          columnNumber: 37\n        }\n      }, item.itemCode), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1811,\n          columnNumber: 37\n        }\n      }, item.itemDescription), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1812,\n          columnNumber: 37\n        }\n      }, item.custPartNo), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1813,\n          columnNumber: 37\n        }\n      }, item.hsnCode), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1814,\n          columnNumber: 37\n        }\n      }, item.onHand), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1815,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        value: item.unitPrice,\n        onChange: e => this.handleLineItemChange(idx, 'unitPrice', e.target.value),\n        style: {\n          width: 80\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1816,\n          columnNumber: 39\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1823,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        min: \"1\",\n        value: item.qty,\n        onChange: e => this.handleLineItemChange(idx, 'qty', e.target.value),\n        style: {\n          width: 60\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1824,\n          columnNumber: 39\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          verticalAlign: 'middle'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1832,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-sm btn-outline-primary\",\n        onClick: () => this.setState({\n          showTaxOverlay: true,\n          currentTaxIdx: idx\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1833,\n          columnNumber: 39\n        }\n      }, \"Select Tax\"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          fontSize: '10px',\n          marginTop: '4px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1840,\n          columnNumber: 39\n        }\n      }, (item.taxGroupNames || []).join(', ') || '-')), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1844,\n          columnNumber: 37\n        }\n      }, item.baseTotal || '0.00'), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1845,\n          columnNumber: 39\n        }\n      }, item.taxAmt || '0.00'), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1846,\n          columnNumber: 39\n        }\n      }, item.itemTotal || '0.00'))), formData.lineItems.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1852,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"9\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1853,\n          columnNumber: 37\n        }\n      }, \"No items\")))))), this.state.activeTab === 'commercial' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1864,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1865,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1866,\n          columnNumber: 25\n        }\n      }, \"Bill To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"3\",\n        value: formData.billTo,\n        onChange: e => this.handleInputChange('billTo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1867,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1874,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1875,\n          columnNumber: 25\n        }\n      }, \"Ship To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"3\",\n        value: formData.shipTo,\n        onChange: e => this.handleInputChange('shipTo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1876,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1884,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1885,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1886,\n          columnNumber: 3\n        }\n      }, \"Despatch Mode\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1887,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: formData.despatchMode,\n        readOnly: true,\n        onClick: () => !isFOB && this.showOverlay('despatchMode'),\n        style: {\n          cursor: isFOB ? 'not-allowed' : 'pointer',\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1888,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1896,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        disabled: isFOB,\n        onClick: () => this.showOverlay('despatchMode'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1897,\n          columnNumber: 7\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1909,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1910,\n          columnNumber: 3\n        }\n      }, \"Payment Terms\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1911,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: formData.paymentTerms,\n        readOnly: true,\n        onClick: () => !isFOB && this.showOverlay('paymentTerms'),\n        style: {\n          cursor: isFOB ? 'not-allowed' : 'pointer',\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1912,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1920,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        disabled: isFOB,\n        onClick: () => this.showOverlay('paymentTerms'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1921,\n          columnNumber: 7\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1933,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1934,\n          columnNumber: 25\n        }\n      }, \"Freight Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.freightCharges,\n        onChange: e => this.handleInputChange('freightCharges', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1935,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1944,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1945,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1946,\n          columnNumber: 25\n        }\n      }, \"Tax %\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxPercent,\n        onChange: e => this.handleInputChange('taxPercent', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1947,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1955,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1956,\n          columnNumber: 25\n        }\n      }, \"Freight Tax Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxAmount,\n        onChange: e => this.handleInputChange('freighttaxAmount', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1957,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1965,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1966,\n          columnNumber: 25\n        }\n      }, \"Packing Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.packingCharges,\n        onChange: e => this.handleInputChange('packingCharges', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1967,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1976,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1977,\n          columnNumber: 23\n        }\n      }, \"Save All Details\"))), this.state.activeTab === 'breakdown' && this.renderBreakdownTab()), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fixed-card-footer text-right p-3 border-top bg-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1984,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success mr-2\",\n        disabled: !this.isBreakdownValid(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1985,\n          columnNumber: 17\n        }\n      }, \"Save All Details\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: () => this.setState({\n          showForm: false,\n          editingId: null\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1986,\n          columnNumber: 17\n        }\n      }, \"Cancel\"))), overlayType && this.renderOverlay(), productOverlayVisible && this.renderProductOverlay(), this.state.showTaxOverlay && this.renderTaxOverlay())));\n    };\n  }\n\n  getTaxDetailsFromGroup(groupName) {\n    if (!groupName || groupName === 'nill' || groupName === 'more') return {\n      totalPercent: 0,\n      totalAmount: 0\n    };\n    const group = this.state.taxGroups.find(tg => tg.groupName === groupName);\n    if (!group || !Array.isArray(group.lineItems)) return {\n      totalPercent: 0,\n      totalAmount: 0\n    };\n    let totalPercent = 0;\n    let totalAmount = 0;\n    group.lineItems.forEach(item => {\n      if (item.type === 'Percentage') {\n        totalPercent += parseFloat(item.percentOrAmt || 0);\n      } else if (item.type === 'Amount') {\n        totalAmount += parseFloat(item.percentOrAmt || 0);\n      }\n    });\n    return {\n      totalPercent,\n      totalAmount\n    };\n  }\n\n  componentDidMount() {\n    bsCustomFileInput.init();\n    this.fetchorders();\n    this.fetchCustomers();\n    this.fetchProducts().then(() => this.filterProductsByCategory());\n    this.fetchDespatchModes();\n    this.fetchPaymentTerms();\n    this.fetchTaxGroups(); // If navigated with route state (history.push with state), open form\n\n    const navState = this.props.location && this.props.location.state || {};\n    const openFormFromNav = navState.openForm === true;\n\n    if (navState.openForm && navState.editId) {\n      const orderToEdit = this.state.orders.find(o => o.id === navState.editId);\n\n      if (orderToEdit) {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            ...orderToEdit,\n            editingId: orderToEdit.id\n          },\n          showForm: true\n        }), this.calculateOrderTotals);\n      }\n    }\n\n    const quoteFromSession = sessionStorage.getItem('quoteToConvert');\n\n    if (quoteFromSession && !this.state.showForm) {\n      const quote = JSON.parse(quoteFromSession);\n      sessionStorage.removeItem('quoteToConvert');\n      const lineItems = (quote.lineItems || []).map(item => {\n        const qty = parseFloat(item.qty || 1);\n        const unitPrice = parseFloat(item.unitPrice || 0);\n        const baseTotal = qty * unitPrice;\n        let percent = 0;\n        let amount = 0;\n        (item.taxGroupNames || item.taxGroup ? item.taxGroupNames || [item.taxGroup] : []).forEach(groupName => {\n          const group = (this.state.taxGroups || []).find(t => t.groupName === groupName);\n\n          if (group && Array.isArray(group.lineItems)) {\n            group.lineItems.forEach(comp => {\n              const val = parseFloat(comp.percentOrAmt || 0);\n              if (comp.type === 'Percentage') percent += val;\n              if (comp.type === 'Amount') amount += val;\n            });\n          }\n        });\n        const taxAmt = baseTotal * percent / 100 + amount;\n        const itemTotal = baseTotal + taxAmt;\n        return { ...item,\n          qty,\n          unitPrice,\n          taxAmt: taxAmt.toFixed(2),\n          itemTotal: itemTotal.toFixed(2)\n        };\n      }); // discount calculations\n\n      const quoteValue = parseFloat(quote.quoteValue || 0) || lineItems.reduce((s, li) => s + parseFloat(li.itemTotal || 0), 0);\n      const discountPercent = parseFloat(quote.discountPercent || 0) || 0;\n      const discountAmount = quoteValue * discountPercent / 100;\n      const afterDiscountValue = quoteValue - discountAmount; // Set form state and open form\n\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          ...quote,\n          showForm: true,\n          editingId: null,\n          previewOrderMode: false,\n          orderNo: `CO${1000 + prev.orders.length}`,\n          orderDate: new Date().toISOString().split('T')[0],\n          status: 'Entered',\n          orderType: 'Standard',\n          orderValue: lineItems.reduce((s, li) => s + parseFloat(li.itemTotal || 0), 0).toFixed(2),\n          discountPercent,\n          discountAmount: discountAmount.toFixed(2),\n          afterDiscountValue: afterDiscountValue.toFixed(2),\n          lineItems,\n          quoteNo: quote.quoteNo || '',\n          qrefNo: quote.quoteNo || ''\n        },\n        breakdownItems: Array.isArray(quote.breakdownItems) ? quote.breakdownItems : [],\n        showForm: true\n      }), () => {\n        this.calculateOrderTotals();\n      });\n      return;\n    } // if nav state requested open form (without session)\n\n\n    if (openFormFromNav && !this.state.showForm) {\n      // toggle an empty order form ready to be filled\n      this.toggleOrderForm(); // ensure totals initialized\n\n      this.calculateOrderTotals();\n    }\n\n    if (navState.openForm && !navState.editId && !quoteFromSession) {\n      this.toggleOrderForm();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // Customer details auto-fill\n    if (this.state.showForm && this.state.customers.length > 0 && this.state.formData.customer && (prevState.formData.customer !== this.state.formData.customer || !this.state.formData.billTo && !this.state.formData.shipTo)) {\n      const customerObj = this.state.customers.find(c => c.custname === this.state.formData.customer || c.custcode === this.state.formData.customer);\n\n      if (customerObj) {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            billTo: this.formatAddress(customerObj.billTo),\n            shipTo: this.formatAddress(customerObj.shipTo),\n            currency: customerObj.currency || '' // paymentTerms: customerObj.paymentTerms || '', // No auto-fill for payment terms\n            // despatchMode: customerObj.despatchMode || '' // No auto-fill for despatch mode\n\n          }\n        }));\n      }\n    } // Freight and Tax calculation based on impExp\n\n\n    const {\n      impExp,\n      freightCharges,\n      taxPercent,\n      packingCharges,\n      lineItems\n    } = this.state.formData;\n\n    if (['None', 'CIF'].includes(impExp)) {\n      const freight = parseFloat(freightCharges) || 0;\n      const tax = parseFloat(taxPercent) || 0;\n      const packing = parseFloat(packingCharges) || 0;\n      const taxAmount = freight * tax / 100;\n      const lineTotal = lineItems.reduce((sum, item) => {\n        const total = parseFloat(item.itemTotal) || 0;\n        return sum + total;\n      }, 0);\n      const orderValue = lineTotal + freight + packing;\n\n      if (this.state.formData.taxAmount !== taxAmount.toFixed(2) || this.state.formData.orderValue !== orderValue.toFixed(2)) {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            taxAmount: taxAmount.toFixed(2),\n            orderValue: orderValue.toFixed(2)\n          }\n        }));\n      }\n    } else if (impExp === 'FOB') {\n      if (this.state.formData.freightCharges !== '' || this.state.formData.taxPercent !== '' || this.state.formData.taxAmount !== '' || this.state.formData.packingCharges !== '') {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            freightCharges: '',\n            taxPercent: '',\n            taxAmount: '',\n            packingCharges: '',\n            orderValue: ''\n          }\n        }));\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2007,\n        columnNumber: 7\n      }\n    }, this.state.previewOrderMode ? this.renderOrderPreview() : this.state.showForm ? this.renderorderForm() : this.renderorderTable());\n  }\n\n}\n\nexport default withRouter(Order);","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/sales/salestransactions/order/Order.js"],"names":["React","Component","Form","bsCustomFileInput","db","collection","getDocs","addDoc","doc","updateDoc","serverTimestamp","html2canvas","jsPDF","toWords","withRouter","numberToWords","num","a","b","Math","floor","Order","state","activeTab","breakdownItems","orders","customers","products","despatchModes","paymentTerms","showForm","editingId","overlayType","overlaySearch","productOverlayVisible","productOverlaySearch","selectedProductIds","taxGroups","showTaxOverlay","currentTaxIdx","breakdownType","formData","orderNo","orderDate","Date","toISOString","split","orderType","customer","status","choose","qrefNo","impExp","currency","conversionRate","taxAmount","orderValue","discountPercent","discountAmount","afterDiscountValue","billTo","shipTo","despatchMode","freightCharges","freighttaxAmount","taxPercent","packingCharges","lineItems","customerInputRef","createRef","formatAddress","addr","address","city","country","filter","Boolean","join","zip","calculateOrderTotals","freight","parseFloat","packing","taxOnFreight","includes","lineTotal","itemTaxTotal","updatedLineItems","map","item","qty","unitPrice","baseTotal","groupNames","taxGroupNames","length","taxGroup","percent","amount","forEach","groupName","group","find","t","Array","isArray","comp","val","percentOrAmt","type","taxAmt","itemTotalWithTax","toFixed","itemTotal","totalTaxAmount","setState","prev","showOrderPDFWithOrg","order","alert","orgSnap","org","docs","data","c","custshortName","custname","gstStateMap","getPlaceOfSupply","gstin","code","substring","enrichedItems","product","p","productId","itemCode","ptshortName","hsnCode","uom","stockingUOM","cgst","sgst","igst","taxGroupName","s","trim","subtotal","reduce","sum","freightTax","grandTotal","amountWords","taxBreakdown","taxGroupDetails","sno","base","tgName","g","li","key","component","push","peramt","container","document","createElement","id","style","width","padding","fontFamily","innerHTML","logoUrl","bgName","email","website","mobile","cin","replace","contactPerson","phone","gstLabel","taxId","itemDescription","total","toLocaleString","body","appendChild","canvas","scale","useCORS","imgData","toDataURL","pdf","height","addImage","removeChild","setFontSize","text","blob","output","url","URL","createObjectURL","newWin","window","open","write","close","handleDiscountChange","field","value","quoteValue","handleChooseChange","filterProductsByCategory","filteredProducts","category","fetchTaxGroups","snap","fetchorders","reverse","fetchCustomers","fetchProducts","fetchDespatchModes","fetchPaymentTerms","handleInputChange","handleBreakdownChange","idx","items","handleBreakdownTypeChange","handleAddInlineSubProduct","breakdownIdx","initial","subProducts","defaultSP","name","handleRemoveSubProduct","biIdx","spIdx","splice","handleSubProductChange","sp","getSubProductsSum","bi","itemTotals","acc","mainTotal","subs","isBreakdownValid","TOL","subSum","abs","handleLineItemChange","updatedItems","handleSubmit","e","preventDefault","payload","orderDocId","formDataWithoutId","updatedAt","docRef","createdAt","quoteNo","quoteSnap","quoteDoc","q","previewOrderMode","getEmptyOrderForm","loadOrderPreview","selectedOrder","loadorderForEdit","current","toggleOrderForm","initialFormData","toggleTaxGroupSelection","lineIdx","isChecked","showOverlay","hideOverlay","selectOverlayValue","custcode","renderOverlay","getFilteredRows","list","nameKey","codeKey","toLowerCase","handleSelect","title","headers","rows","target","maxHeight","overflowY","h","i","cursor","j","shortName","renderTaxOverlay","selected","Set","position","zIndex","top","left","background","border","boxShadow","tg","has","checked","renderOrderPreview","o","fontSize","renderBreakdownTab","sumOfItemTotals","Object","values","v","canSave","isConverted","addBreakdownFromLineItems","mainItemTotal","remaining","desc","color","spId","rawVal","spTotal","paddingLeft","dueDate","renderProductOverlay","filtered","ptdescription","selectedProducts","some","itemType","materialType","onHand","custPartNo","renderorderTable","statusClass","renderorderForm","isFOB","flex","backgroundColor","verticalAlign","marginTop","getTaxDetailsFromGroup","totalPercent","totalAmount","componentDidMount","init","then","navState","props","location","openFormFromNav","openForm","editId","orderToEdit","quoteFromSession","sessionStorage","getItem","quote","JSON","parse","removeItem","componentDidUpdate","prevProps","prevState","customerObj","tax","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport bsCustomFileInput from 'bs-custom-file-input';\r\nimport { db } from '../../../../firebase';\r\nimport { collection, getDocs, addDoc, doc, updateDoc ,serverTimestamp} from 'firebase/firestore';\r\nimport html2canvas from 'html2canvas';\r\nimport { jsPDF } from 'jspdf'; \r\nimport { toWords } from \"number-to-words\";\r\nimport { withRouter } from 'react-router-dom';\r\nconst numberToWords = (num) => {\r\n  const a = ['', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine',\r\n    'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen',\r\n    'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];\r\n  const b = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\r\n\r\n  if (num === 0) return 'Zero';\r\n  if (num < 20) return a[num];\r\n  if (num < 100) return b[Math.floor(num / 10)] + ' ' + a[num % 10];\r\n  if (num < 1000)\r\n    return a[Math.floor(num / 100)] + ' Hundred ' + numberToWords(num % 100);\r\n  if (num < 100000)\r\n    return numberToWords(Math.floor(num / 1000)) + ' Thousand ' + numberToWords(num % 1000);\r\n  return 'Amount too large';\r\n};\r\n\r\nclass Order extends Component {\r\n  state = {\r\n    activeTab: 'co',\r\n    breakdownItems: [],\r\n    orders: [],\r\n    customers: [],\r\n    products: [],\r\n    despatchModes: [],\r\n    paymentTerms: [],\r\n    showForm: false,\r\n    editingId: null,\r\n    overlayType: '',\r\n    overlaySearch: '',\r\n    productOverlayVisible: false,\r\n    productOverlaySearch: '',\r\n    selectedProductIds: [],\r\n    taxGroups: [],\r\n    showTaxOverlay: false,\r\n    currentTaxIdx: null,\r\n     breakdownType: 'Amount', \r\n    formData: {\r\n      orderNo: '',\r\n      orderDate: new Date().toISOString().split('T')[0],\r\n      orderType: 'Standard',\r\n      customer: '',\r\n      status: 'Entered', \r\n      choose: 'Service',\r\n      qrefNo: '',\r\n      impExp: 'None',\r\n      currency: '',\r\n      conversionRate: '',\r\n      taxAmount: '',\r\n      orderValue: '',\r\n      discountPercent: 0,\r\n      discountAmount: 0,\r\n      afterDiscountValue: 0,\r\n      billTo: '',\r\n      shipTo: '',\r\n      despatchMode: 'By Air',\r\n      paymentTerms: '',\r\n      freightCharges: '',\r\n      freighttaxAmount: '',\r\n      taxPercent: '',\r\n      packingCharges: '',\r\n      lineItems: [],\r\n    }\r\n  };\r\n  customerInputRef = React.createRef();\r\n\r\n  formatAddress = (addr) => {\r\n    if (!addr) return '';\r\n    if (typeof addr === 'string') return addr;\r\n    return [\r\n      addr.address,\r\n      [addr.city, addr.state, addr.country].filter(Boolean).join(', '),\r\n      addr.zip\r\n    ].filter(Boolean).join('\\n');\r\n  };\r\n\r\n\r\n\r\n   getTaxDetailsFromGroup(groupName) {\r\n    if (!groupName || groupName === 'nill' || groupName === 'more') return { totalPercent: 0, totalAmount: 0 };\r\n\r\n    const group = this.state.taxGroups.find(tg => tg.groupName === groupName);\r\n    if (!group || !Array.isArray(group.lineItems)) return { totalPercent: 0, totalAmount: 0 };\r\n\r\n    let totalPercent = 0;\r\n    let totalAmount = 0;\r\n\r\n    group.lineItems.forEach(item => {\r\n      if (item.type === 'Percentage') {\r\n        totalPercent += parseFloat(item.percentOrAmt || 0);\r\n      } else if (item.type === 'Amount') {\r\n        totalAmount += parseFloat(item.percentOrAmt || 0);\r\n      }\r\n    });\r\n\r\n    return { totalPercent, totalAmount };\r\n  }\r\n\r\n\r\ncalculateOrderTotals = () => {\r\n  const { impExp, freightCharges, taxPercent, packingCharges, lineItems } = this.state.formData;\r\n\r\n  const freight = parseFloat(freightCharges) || 0;\r\n  const packing = parseFloat(packingCharges) || 0;\r\n  let taxOnFreight = 0;\r\n  if (['None', 'CIF'].includes(impExp)) {\r\n    taxOnFreight = (freight * (parseFloat(taxPercent) || 0)) / 100;\r\n  }\r\n\r\n  let lineTotal = 0;      // sum of base totals (without tax)\r\n  let itemTaxTotal = 0;   // sum of line taxes\r\n\r\n  const updatedLineItems = (lineItems || []).map(item => {\r\n    const qty = parseFloat(item.qty || 0);\r\n    const unitPrice = parseFloat(item.unitPrice || 0);\r\n    const baseTotal = qty * unitPrice;\r\n\r\n    // tax group(s)\r\n    const groupNames = (item.taxGroupNames && item.taxGroupNames.length) ? item.taxGroupNames : (item.taxGroup ? [item.taxGroup] : []);\r\n    let percent = 0;\r\n    let amount = 0;\r\n\r\n    groupNames.forEach(groupName => {\r\n      const group = this.state.taxGroups.find(t => t.groupName === groupName);\r\n      if (group && Array.isArray(group.lineItems)) {\r\n        group.lineItems.forEach(comp => {\r\n          const val = parseFloat(comp.percentOrAmt || 0);\r\n          if (comp.type === 'Percentage') percent += val;\r\n          if (comp.type === 'Amount') amount += val;\r\n        });\r\n      }\r\n    });\r\n\r\n    const taxAmt = (baseTotal * percent) / 100 + amount;\r\n    const itemTotalWithTax = baseTotal + taxAmt;\r\n\r\n    // accumulate totals\r\n    lineTotal += baseTotal;\r\n    itemTaxTotal += taxAmt;\r\n\r\n    return {\r\n      ...item,\r\n      qty,\r\n      unitPrice,\r\n      baseTotal: baseTotal.toFixed(2),\r\n      taxAmt: taxAmt.toFixed(2),\r\n      itemTotal: itemTotalWithTax.toFixed(2)\r\n    };\r\n  });\r\n\r\n  const totalTaxAmount = itemTaxTotal + taxOnFreight;\r\n  const orderValue = lineTotal + itemTaxTotal + freight + packing + taxOnFreight;\r\n\r\n  this.setState(prev => ({\r\n    formData: {\r\n      ...prev.formData,\r\n      lineItems: updatedLineItems,\r\n      totalTaxAmount: totalTaxAmount.toFixed(2),\r\n      orderValue: orderValue.toFixed(2)\r\n    }\r\n  }));\r\n};\r\n\r\n showOrderPDFWithOrg = async (order) => {\r\n    if (!order || !Array.isArray(order.lineItems) || order.lineItems.length === 0) {\r\n      alert(\"Order data is incomplete.\");\r\n      return;\r\n    }\r\n\r\n    // 1. Fetch org and customer data\r\n    const orgSnap = await getDocs(collection(db, 'businessGroups'));\r\n    const org = orgSnap.docs[0]?.data() || {};\r\n    const customer = this.state.customers.find(\r\n      c => c.custshortName === order.customer || c.custname === order.customer\r\n    ) || {};\r\n\r\n    // GST State Map for Place of Supply\r\n    const gstStateMap = {\r\n      \"01\": \"Jammu & Kashmir\", \"02\": \"Himachal Pradesh\", \"03\": \"Punjab\", \"04\": \"Chandigarh\",\r\n      \"05\": \"Uttarakhand\", \"06\": \"Haryana\", \"07\": \"Delhi\", \"08\": \"Rajasthan\", \"09\": \"Uttar Pradesh\",\r\n      \"10\": \"Bihar\", \"11\": \"Sikkim\", \"12\": \"Arunachal Pradesh\", \"13\": \"Nagaland\", \"14\": \"Manipur\",\r\n      \"15\": \"Mizoram\", \"16\": \"Tripura\", \"17\": \"Meghalaya\", \"18\": \"Assam\", \"19\": \"West Bengal\",\r\n      \"20\": \"Jharkhand\", \"21\": \"Odisha\", \"22\": \"Chhattisgarh\", \"23\": \"Madhya Pradesh\", \"24\": \"Gujarat\",\r\n      \"25\": \"Daman and Diu\", \"26\": \"Dadra and Nagar Haveli\", \"27\": \"Maharashtra\", \"28\": \"Andhra Pradesh (Old)\",\r\n      \"29\": \"Karnataka\", \"30\": \"Goa\", \"31\": \"Lakshadweep\", \"32\": \"Kerala\", \"33\": \"Tamil Nadu\",\r\n      \"34\": \"Puducherry\", \"35\": \"Andaman and Nicobar Islands\", \"36\": \"Telangana\", \"37\": \"Andhra Pradesh\",\r\n      \"97\": \"Other Territory\"\r\n    };\r\n\r\n    const getPlaceOfSupply = (gstin) => {\r\n      if (!gstin || gstin.length < 2) return '';\r\n      const code = gstin.substring(0, 2);\r\n      const state = gstStateMap[code];\r\n      return state ? `${code} - ${state}` : '';\r\n    };\r\n\r\n    // 2. Enrich line items\r\n    const enrichedItems = order.lineItems.map(item => {\r\n      const product = this.state.products.find(p => p.productId === item.itemCode) || {};\r\n      return {\r\n        ...item,\r\n        ptshortName: product.ptshortName || '',\r\n        hsnCode: product.hsnCode || '',\r\n        uom: product.stockingUOM || '',\r\n        cgst: item.cgst || 0,\r\n        sgst: item.sgst || 0,\r\n        igst: item.igst || 0,\r\n        taxGroupNames: item.taxGroupNames || (item.taxGroupName ? item.taxGroupName.split(',').map(s => s.trim()) : [])\r\n      };\r\n    });\r\n\r\n    // 3. Subtotal (without tax)\r\n    const subtotal = enrichedItems.reduce((sum, item) => sum + ((parseFloat(item.unitPrice) || 0) * (parseFloat(item.qty) || 0)), 0);\r\n    const freightCharges = parseFloat(order.freightCharges || 0);\r\n    const freightTax = parseFloat(order.freighttaxAmount || 0);\r\n    const totalTaxAmount = parseFloat(order.taxAmount || 0);\r\n    const grandTotal = parseFloat(order.orderValue || (subtotal + totalTaxAmount));\r\n    const amountWords = `INR ${toWords(Math.floor(grandTotal))} Only`;\r\n\r\n    // 4. Tax breakdown by group\r\n    let taxBreakdown = {};\r\n    let taxGroupDetails = [];\r\n    let sno = 1;\r\n    enrichedItems.forEach(item => {\r\n      const qty = parseFloat(item.qty || 0);\r\n      const unitPrice = parseFloat(item.unitPrice || 0);\r\n      const base = qty * unitPrice;\r\n      (item.taxGroupNames || []).forEach(tgName => {\r\n        const group = (this.state.taxGroups || []).find(g => g.groupName === tgName);\r\n        if (group) {\r\n          group.lineItems.forEach(li => {\r\n            const key = `${tgName} - ${li.component} (${li.percentOrAmt}${li.type === 'Amount' ? '' : '%'})`;\r\n            let taxAmt = 0;\r\n            if (li.type === 'Amount') taxAmt = parseFloat(li.percentOrAmt || 0);\r\n            else taxAmt = (base * parseFloat(li.percentOrAmt || 0)) / 100;\r\n            taxBreakdown[key] = (taxBreakdown[key] || 0) + taxAmt;\r\n            taxGroupDetails.push({\r\n              sno: sno++,\r\n              group: tgName,\r\n              peramt: `${li.percentOrAmt}${li.type === 'Amount' ? '' : '%'}`,\r\n              taxAmt: taxAmt.toFixed(2)\r\n            });\r\n          });\r\n        }\r\n      });\r\n      // Legacy support for cgst/sgst/igst\r\n      if (item.cgst) {\r\n        const key = `CGST ${item.cgst}%`;\r\n        const taxAmt = (base * item.cgst) / 100;\r\n        taxBreakdown[key] = (taxBreakdown[key] || 0) + taxAmt;\r\n        taxGroupDetails.push({\r\n          sno: sno++,\r\n          group: key,\r\n          peramt: `${item.cgst}%`,\r\n          taxAmt: taxAmt.toFixed(2)\r\n        });\r\n      }\r\n      if (item.sgst) {\r\n        const key = `SGST ${item.sgst}%`;\r\n        const taxAmt = (base * item.sgst) / 100;\r\n        taxBreakdown[key] = (taxBreakdown[key] || 0) + taxAmt;\r\n        taxGroupDetails.push({\r\n          sno: sno++,\r\n          group: key,\r\n          peramt: `${item.sgst}%`,\r\n          taxAmt: taxAmt.toFixed(2)\r\n        });\r\n      }\r\n      if (item.igst) {\r\n        const key = `IGST ${item.igst}%`;\r\n        const taxAmt = (base * item.igst) / 100;\r\n        taxBreakdown[key] = (taxBreakdown[key] || 0) + taxAmt;\r\n        taxGroupDetails.push({\r\n          sno: sno++,\r\n          group: key,\r\n          peramt: `${item.igst}%`,\r\n          taxAmt: taxAmt.toFixed(2)\r\n        });\r\n      }\r\n    });\r\n    if (freightTax > 0) {\r\n      taxBreakdown[\"Freight Tax\"] = freightTax;\r\n      taxGroupDetails.push({\r\n        sno: sno++,\r\n        group: \"Freight Tax\",\r\n        peramt: \"-\",\r\n        taxAmt: freightTax.toFixed(2)\r\n      });\r\n    }\r\n\r\n    // 5. Build HTML for PDF\r\n    const container = document.createElement('div');\r\n    container.id = 'pdf-preview-container';\r\n    container.style.width = '794px';\r\n    container.style.padding = '40px';\r\n    container.style.fontFamily = 'Arial';\r\n\r\n    container.innerHTML = `\r\n      <div style=\"display:flex; justify-content:space-between; align-items:center;\">\r\n        <img src=\"${org.logoUrl || ''}\" style=\"height:50px;\" />\r\n        <div style=\"font-size:18px; font-weight:bold;\">CUSTOMER ORDER</div>\r\n      </div>\r\n      <hr/>\r\n      <div style=\"display:flex; justify-content:space-between; font-size:11px;\">\r\n        <div style=\"line-height:1.5; width:50%;\">\r\n          <b>${org.bgName || ''}</b><br/>\r\n          ${org.address || ''}<br/>\r\n          <b>Email:</b> ${org.email || ''}<br/>\r\n          <b>Website:</b> ${org.website || ''}<br/>\r\n          <b>GSTIN:</b> ${org.gstin || ''}<br/>\r\n          <b>Mobile:</b> ${org.mobile || ''}<br/>\r\n          <b>CIN:</b> ${org.cin || ''}\r\n        </div>\r\n        <table style=\"font-size:11px; text-align:left;\">\r\n          <tr><td><b>Order No</b></td><td>: ${order.orderNo}</td></tr>\r\n          <tr><td><b>Order Date</b></td><td>: ${order.orderDate}</td></tr>\r\n          <tr><td><b>Currency</b></td><td>: ${order.currency || 'INR'}</td></tr>\r\n          <tr><td><b>Despatch</b></td><td>: ${order.despatchMode || ''}</td></tr>\r\n        </table>\r\n      </div>\r\n\r\n      <div style=\"margin-top:15px; display:flex; justify-content:space-between; font-size:11px;\">\r\n        <div style=\"width:48%;\">\r\n          <b style=\"background:#011b56; color:#fff; display:block; padding:4px;\">Bill To</b>\r\n          <div style=\"border:1px solid #ccc; padding:6px;\">\r\n           <b>${order.customer || ''}</b><br/>\r\n            ${order.billTo?.replace(/\\n/g, '<br/>') || ''}\r\n          </div>\r\n          <div style=\"font-size:10px; margin-top:6px;\">\r\n              <b>GSTIN:</b> ${customer.gstin || ''}<br/>\r\n              <b>Email:</b> ${customer.email || ''}<br/>\r\n              <b>Contact:</b> ${customer.contactPerson || ''}<br/>\r\n              <b>Phone:</b> ${customer.phone || ''}\r\n          </div>\r\n        </div>\r\n        <div style=\"width:48%;\">\r\n          <b style=\"background:#011b56; color:#fff; display:block; padding:4px;\">Ship To</b>\r\n          <div style=\"border:1px solid #ccc; padding:6px;\">\r\n           <b>${order.customer || ''}</b><br/>\r\n            ${order.shipTo?.replace(/\\n/g, '<br/>') || ''}\r\n          </div>\r\n          <div style=\"font-size:10px; margin-top:6px;\">\r\n            <b>Place of Supply:</b> ${getPlaceOfSupply(customer.gstin || '')}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <table style=\"width:100%; border-collapse:collapse; margin-top:20px; font-size:10px;\">\r\n        <thead>\r\n          <tr style=\"background:#f4f6fa;\">\r\n            <th style=\"border:1px solid #011b56;\">Item Code</th>\r\n            <th style=\"border:1px solid #011b56;\">Description</th>\r\n            <th style=\"border:1px solid #011b56;\">HSN</th>\r\n            <th style=\"border:1px solid #011b56;\">UOM</th>\r\n            <th style=\"border:1px solid #011b56;\">Qty</th>\r\n            <th style=\"border:1px solid #011b56;\">Unit Price</th>\r\n            <th style=\"border:1px solid #011b56;\">GST%</th>\r\n            <th style=\"border:1px solid #011b56;\">Item Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          ${enrichedItems.map(item => {\r\n            const gstLabel = (item.taxGroupNames && item.taxGroupNames.length)\r\n              ? item.taxGroupNames.join(', ')\r\n              : (item.taxGroupName || item.taxId || '-');\r\n            return `\r\n              <tr>\r\n                <td style=\"border:1px solid #011b56;\">${item.itemCode}</td>\r\n                <td style=\"border:1px solid #011b56;\">${item.itemDescription}</td>\r\n                <td style=\"border:1px solid #011b56;\">${item.hsnCode}</td>\r\n                <td style=\"border:1px solid #011b56;\">${item.uom}</td>\r\n                <td style=\"border:1px solid #011b56;\">${item.qty}</td>\r\n                <td style=\"border:1px solid #011b56;\">${item.unitPrice}</td>\r\n                <td style=\"border:1px solid #011b56;\">${gstLabel}</td>\r\n                <td style=\"border:1px solid #011b56;\">${item.total}</td>\r\n              </tr>`;\r\n          }).join('')}\r\n          <tr>\r\n            <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>Subtotal</b></td>\r\n            <td style=\"border:1px solid #011b56;\"><b>${subtotal.toFixed(2)}</b></td>\r\n        </tr>\r\n          <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>Total Tax Amount</b></td>\r\n          <td style=\"border:1px solid #011b56;\"><b>${totalTaxAmount.toFixed(2)}</b></td>\r\n        </tr>\r\n        <tr>\r\n          <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>Grand Total</b></td>\r\n          <td style=\"border:1px solid #011b56;\"><b>${grandTotal.toFixed(2)}</b></td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n      <div style=\"margin-top:8px; font-size:11px;\"><b>Amount in Words:</b> ${amountWords}</div>\r\n      <div style=\"margin-top:20px; text-align:right; font-size:10px;\">Printed on ${new Date().toLocaleString()}</div>\r\n    `;\r\n\r\n    document.body.appendChild(container);\r\n    const canvas = await html2canvas(container, { scale: 2, useCORS: true });\r\n    const imgData = canvas.toDataURL('image/png');\r\n    const pdf = new jsPDF('p', 'pt', 'a4');\r\n    const width = 595.28;\r\n    const height = canvas.height * width / canvas.width;\r\n    pdf.addImage(imgData, 'PNG', 0, 0, width, height);\r\n    document.body.removeChild(container);\r\n\r\n    pdf.setFontSize(11);\r\n    pdf.text(`For ${org.bgName || ''}`, width - 200, 780);\r\n    pdf.text('Authorized Signatory', width - 200, 800);\r\n\r\n    const blob = pdf.output('blob');\r\n    const url = URL.createObjectURL(blob);\r\n    const newWin = window.open();\r\n    newWin.document.write(`\r\n      <html><head><title>Order PDF Preview</title></head>\r\n      <body style=\"margin:0;\">\r\n        <iframe width=\"100%\" height=\"100%\" style=\"border:none;\" src=\"${url}\"></iframe>\r\n      </body></html>\r\n    `);\r\n    newWin.document.close();\r\n  };\r\n\r\nhandleDiscountChange = (field, value) => {\r\n  let { formData } = this.state;\r\n  formData[field] = value;\r\n\r\n  const quoteValue = parseFloat(formData.quoteValue || 0);\r\n  const discountPercent = parseFloat(formData.discountPercent || 0);\r\n  const discountAmount = (quoteValue * discountPercent) / 100;\r\n  const afterDiscountValue = quoteValue - discountAmount;\r\n\r\n  formData.discountAmount = discountAmount;\r\n  formData.afterDiscountValue = afterDiscountValue;\r\n\r\n  this.setState({ formData });\r\n};\r\n\r\nhandleChooseChange = (value) => {\r\n  this.setState(prev => ({\r\n    formData: { ...prev.formData, choose: value }\r\n  }), this.filterProductsByCategory);\r\n};\r\n\r\n// Filtering logic\r\nfilterProductsByCategory = () => {\r\n  const { choose } = this.state.formData;\r\n  let filteredProducts = [];\r\n  if (choose === \"Service\") {\r\n    filteredProducts = this.state.products.filter(p => p.category === \"Service\");\r\n  } else if (choose === \"Product\") {\r\n    filteredProducts = this.state.products.filter(p => p.category === \"Product\");\r\n  } else if (choose === \"Bundle\") {\r\n    filteredProducts = this.state.products; // All products\r\n  }\r\n  this.setState({ filteredProducts });\r\n};\r\n\r\ncomponentDidMount() {\r\n  bsCustomFileInput.init();\r\n  this.fetchorders();\r\n  this.fetchCustomers();\r\n  this.fetchProducts().then(() => this.filterProductsByCategory());\r\n  this.fetchDespatchModes();\r\n  this.fetchPaymentTerms();\r\n  this.fetchTaxGroups();\r\n\r\n  // If navigated with route state (history.push with state), open form\r\n  const navState = (this.props.location && this.props.location.state) || {};\r\n  const openFormFromNav = navState.openForm === true;\r\n  if (navState.openForm && navState.editId) {\r\n    const orderToEdit = this.state.orders.find(o => o.id === navState.editId);\r\n    if (orderToEdit) {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          ...orderToEdit,\r\n          editingId: orderToEdit.id,\r\n        },\r\n        showForm: true,\r\n      }), this.calculateOrderTotals);\r\n    }\r\n  }\r\n  const quoteFromSession = sessionStorage.getItem('quoteToConvert');\r\n  if (quoteFromSession && !this.state.showForm) {\r\n    const quote = JSON.parse(quoteFromSession);\r\n    sessionStorage.removeItem('quoteToConvert');\r\n\r\n    const lineItems = (quote.lineItems || []).map(item => {\r\n      const qty = parseFloat(item.qty || 1);\r\n      const unitPrice = parseFloat(item.unitPrice || 0);\r\n      const baseTotal = qty * unitPrice;\r\n      let percent = 0;\r\n      let amount = 0;\r\n      (item.taxGroupNames || item.taxGroup ? (item.taxGroupNames || [item.taxGroup]) : []).forEach(groupName => {\r\n        const group = (this.state.taxGroups || []).find(t => t.groupName === groupName);\r\n        if (group && Array.isArray(group.lineItems)) {\r\n          group.lineItems.forEach(comp => {\r\n            const val = parseFloat(comp.percentOrAmt || 0);\r\n            if (comp.type === 'Percentage') percent += val;\r\n            if (comp.type === 'Amount') amount += val;\r\n          });\r\n        }\r\n      });\r\n\r\n      const taxAmt = (baseTotal * percent) / 100 + amount;\r\n      const itemTotal = baseTotal + taxAmt;\r\n\r\n      return {\r\n        ...item,\r\n        qty,\r\n        unitPrice,\r\n        taxAmt: taxAmt.toFixed(2),\r\n        itemTotal: itemTotal.toFixed(2)\r\n      };\r\n    });\r\n\r\n    // discount calculations\r\n    const quoteValue = parseFloat(quote.quoteValue || 0) || lineItems.reduce((s, li) => s + parseFloat(li.itemTotal || 0), 0);\r\n    const discountPercent = parseFloat(quote.discountPercent || 0) || 0;\r\n    const discountAmount = (quoteValue * discountPercent) / 100;\r\n    const afterDiscountValue = quoteValue - discountAmount;\r\n\r\n    // Set form state and open form\r\n    this.setState(prev => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        ...quote,\r\n        showForm: true,\r\n        editingId: null,\r\n        previewOrderMode: false,\r\n        orderNo: `CO${1000 + prev.orders.length}`,\r\n        orderDate: new Date().toISOString().split('T')[0],\r\n        status: 'Entered',\r\n        orderType: 'Standard',\r\n        orderValue: lineItems.reduce((s, li) => s + parseFloat(li.itemTotal || 0), 0).toFixed(2),\r\n        discountPercent,\r\n        discountAmount: discountAmount.toFixed(2),\r\n        afterDiscountValue: afterDiscountValue.toFixed(2),\r\n        lineItems,\r\n        quoteNo: quote.quoteNo || '',\r\n        qrefNo: quote.quoteNo || ''\r\n      },\r\n      breakdownItems: Array.isArray(quote.breakdownItems) ? quote.breakdownItems : [],\r\n      showForm: true\r\n    }), () => {\r\n      this.calculateOrderTotals();\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  // if nav state requested open form (without session)\r\n  if (openFormFromNav && !this.state.showForm) {\r\n    // toggle an empty order form ready to be filled\r\n    this.toggleOrderForm();\r\n    // ensure totals initialized\r\n    this.calculateOrderTotals();\r\n  }\r\n  if (navState.openForm && !navState.editId && !quoteFromSession) {\r\n    this.toggleOrderForm();\r\n  }\r\n}\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // Customer details auto-fill\r\n    if (\r\n      this.state.showForm &&\r\n      this.state.customers.length > 0 &&\r\n      this.state.formData.customer &&\r\n      (prevState.formData.customer !== this.state.formData.customer ||\r\n       (!this.state.formData.billTo && !this.state.formData.shipTo))\r\n    ) {\r\n      const customerObj = this.state.customers.find(\r\n        c => c.custname === this.state.formData.customer || c.custcode === this.state.formData.customer\r\n      );\r\n      if (customerObj) {\r\n        this.setState(prev => ({\r\n          formData: {\r\n            ...prev.formData,\r\n            billTo: this.formatAddress(customerObj.billTo),\r\n            shipTo: this.formatAddress(customerObj.shipTo),\r\n            currency: customerObj.currency || '',\r\n            // paymentTerms: customerObj.paymentTerms || '', // No auto-fill for payment terms\r\n            // despatchMode: customerObj.despatchMode || '' // No auto-fill for despatch mode\r\n          }\r\n        }));\r\n      }\r\n    }\r\n\r\n    // Freight and Tax calculation based on impExp\r\n    const { impExp, freightCharges, taxPercent,packingCharges, lineItems } = this.state.formData;\r\n    if (['None', 'CIF'].includes(impExp)) {\r\n      const freight = parseFloat(freightCharges) || 0;\r\n      const tax = parseFloat(taxPercent) || 0;\r\n      const packing = parseFloat(packingCharges) || 0;\r\n\r\n      const taxAmount = (freight * tax) / 100;\r\n\r\n      const lineTotal = lineItems.reduce((sum, item) => {\r\n  const total = parseFloat(item.itemTotal) || 0;\r\n  return sum + total;\r\n}, 0);\r\n\r\nconst orderValue = lineTotal + freight + packing;\r\n\r\n      if (\r\n    this.state.formData.taxAmount !== taxAmount.toFixed(2) ||\r\n    this.state.formData.orderValue !== orderValue.toFixed(2)\r\n  ) {\r\n    this.setState(prev => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        taxAmount: taxAmount.toFixed(2),\r\n        orderValue: orderValue.toFixed(2)\r\n      }\r\n    }));\r\n  }\r\n} else if (impExp === 'FOB') {\r\n  if (\r\n    this.state.formData.freightCharges !== '' ||\r\n    this.state.formData.taxPercent !== '' ||\r\n    this.state.formData.taxAmount !== '' ||\r\n    this.state.formData.packingCharges !== ''\r\n  ) {\r\n    this.setState(prev => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        freightCharges: '',\r\n        taxPercent: '',\r\n        taxAmount: '',\r\n        packingCharges: '',\r\n        orderValue: ''\r\n      }\r\n    }));\r\n  }\r\n\r\n    }\r\n  }\r\nfetchTaxGroups = async () => {\r\n  const snap = await getDocs(collection(db, 'taxGroups'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ taxGroups: data });\r\n};\r\n\r\n  fetchorders = async () => {\r\n    const snap = await getDocs(collection(db, 'orders'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ orders: data.reverse() });\r\n  };\r\n\r\n  fetchCustomers = async () => {\r\n    const snap = await getDocs(collection(db, 'customers'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ customers: data });\r\n  };\r\n\r\n  fetchProducts = async () => {\r\n  const snap = await getDocs(collection(db, 'products'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ products: data, filteredProducts: data }, this.filterProductsByCategory);\r\n};\r\n  fetchDespatchModes = async () => {\r\n  const snap = await getDocs(collection(db, 'modes'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ despatchModes: data });\r\n};\r\n\r\nfetchPaymentTerms = async () => {\r\n  const snap = await getDocs(collection(db, 'paymentTerms'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ paymentTerms: data });\r\n};\r\n\r\n\r\n  handleInputChange = (field, value) => {\r\n  this.setState(prev => ({\r\n    formData: { ...prev.formData, [field]: value }\r\n  }), () => {\r\n    if (field === 'discountPercent') this.calculateOrderTotals();\r\n  });\r\n};\r\n  handleBreakdownChange = (idx, field, value) => {\r\n  this.setState(prev => {\r\n    const items = [...prev.breakdownItems];\r\n    items[idx][field] = value;\r\n    return { breakdownItems: items };\r\n  });\r\n};\r\n\r\n handleBreakdownTypeChange = (val) => {\r\n    this.setState({ breakdownType: val });\r\n  };\r\n\r\n  handleAddInlineSubProduct = (breakdownIdx, initial = null) => {\r\n    this.setState(prev => {\r\n      const items = [...prev.breakdownItems];\r\n      const item = items[breakdownIdx] ? { ...items[breakdownIdx] } : null;\r\n      if (!item) return {};\r\n      const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\r\n      const defaultSP = { name: '', value: '' };\r\n      subProducts.push(initial ? { ...defaultSP, ...initial } : defaultSP);\r\n      item.subProducts = subProducts;\r\n      items[breakdownIdx] = item;\r\n      return { breakdownItems: items };\r\n    });\r\n  };\r\n    handleRemoveSubProduct = (biIdx, spIdx) => {\r\n    this.setState(prev => {\r\n      const items = [...prev.breakdownItems];\r\n      if (!items[biIdx]) return {};\r\n      const item = { ...items[biIdx] };\r\n      const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\r\n      subProducts.splice(spIdx, 1);\r\n      item.subProducts = subProducts;\r\n      items[biIdx] = item;\r\n      return { breakdownItems: items };\r\n    });\r\n  };\r\n  handleSubProductChange = (biIdx, spIdx, field, value) => {\r\n    this.setState(prev => {\r\n      const items = [...prev.breakdownItems];\r\n      if (!items[biIdx]) return {};\r\n      const item = { ...items[biIdx] };\r\n      const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\r\n      const sp = { ...subProducts[spIdx], [field]: value };\r\n      subProducts[spIdx] = sp;\r\n      item.subProducts = subProducts;\r\n      items[biIdx] = item;\r\n      return { breakdownItems: items };\r\n    });\r\n  };\r\n  getSubProductsSum = (bi) => {\r\n    const { breakdownType, formData } = this.state;\r\n    const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\r\n      acc[li.itemCode] = parseFloat(li.total || 0) || 0;\r\n      return acc;\r\n    }, {});\r\n    const mainTotal = itemTotals[bi.productId] || 0;\r\n    const subs = Array.isArray(bi.subProducts) ? bi.subProducts : [];\r\n    return subs.reduce((s, sp) => {\r\n      const val = parseFloat(sp.value || 0) || 0;\r\n      if (breakdownType === 'Percentage') {\r\n        return s + (mainTotal * val / 100);\r\n      }\r\n      return s + val;\r\n    }, 0);\r\n  };\r\n   isBreakdownValid = () => {\r\n    const { breakdownItems, formData } = this.state;\r\n    const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\r\n      acc[li.itemCode] = parseFloat(li.total || 0) || 0;\r\n      return acc;\r\n    }, {});\r\n    const TOL = 0.01;\r\n    for (let bi of breakdownItems) {\r\n      const mainTotal = itemTotals[bi.productId] || 0;\r\n      if (mainTotal > 0) {\r\n        const subSum = this.getSubProductsSum(bi);\r\n        if (Math.abs(subSum - mainTotal) > TOL) return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\nhandleLineItemChange = (idx, field, value) => {\r\n  const updatedItems = [...this.state.formData.lineItems];\r\n  updatedItems[idx] = { ...updatedItems[idx], [field]: value };\r\n\r\n  // recalc tax & totals for this line\r\n  const qty = parseFloat(updatedItems[idx].qty || 0);\r\n  const unitPrice = parseFloat(updatedItems[idx].unitPrice || 0);\r\n  const baseTotal = qty * unitPrice;\r\n\r\n  let percent = 0;\r\n  let amount = 0;\r\n  (updatedItems[idx].taxGroupNames || []).forEach(groupName => {\r\n    const group = this.state.taxGroups.find(t => t.groupName === groupName);\r\n    if (group && Array.isArray(group.lineItems)) {\r\n      group.lineItems.forEach(comp => {\r\n        const val = parseFloat(comp.percentOrAmt || 0);\r\n        if (comp.type === 'Percentage') percent += val;\r\n        if (comp.type === 'Amount') amount += val;\r\n      });\r\n    }\r\n  });\r\n\r\n  const taxAmt = (baseTotal * percent) / 100 + amount;\r\n  updatedItems[idx].taxAmt = taxAmt.toFixed(2);\r\n  updatedItems[idx].itemTotal = (baseTotal + taxAmt).toFixed(2);\r\n\r\n  // update state + recalc full totals\r\n  this.setState(prev => ({\r\n    formData: { ...prev.formData, lineItems: updatedItems }\r\n  }), this.calculateOrderTotals);\r\n};\r\n\r\n\r\nhandleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  const { editingId, formData, orders, breakdownItems } = this.state;\r\n  if (!formData.customer) return alert(\"Customer is required\");\r\n  if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\r\n\r\n  formData.breakdownItems = breakdownItems;\r\n  const payload = {\r\n    ...formData,\r\n    status: \"Awaiting for Approval\", // Always set to Awaiting for Approval on save\r\n    breakdownItems: this.state.breakdownItems || []\r\n  };\r\n\r\n  let orderDocId = editingId;\r\n  if (editingId) {\r\n    const { id, ...formDataWithoutId } = formData;\r\n    await updateDoc(doc(db, \"orders\", editingId), {\r\n      ...formDataWithoutId,\r\n      status: \"Awaiting for Approval\",\r\n      updatedAt: serverTimestamp()\r\n    });\r\n    orderDocId = editingId;\r\n  } else {\r\n    formData.orderNo = `CO${1000 + orders.length}`;\r\n    const docRef = await addDoc(collection(db, \"orders\"), {\r\n      ...formData,\r\n      status: \"Awaiting for Approval\",\r\n      createdAt: serverTimestamp()\r\n    });\r\n    orderDocId = docRef.id;\r\n  }\r\n\r\n  // If this order was created from a quote, update quote status now\r\n  if (formData.quoteNo) {\r\n    const quoteSnap = await getDocs(collection(db, \"quotes\"));\r\n    const quoteDoc = quoteSnap.docs.find(q => q.data().quoteNo === formData.quoteNo);\r\n    if (quoteDoc) {\r\n      await updateDoc(doc(db, \"quotes\", quoteDoc.id), { status: \"ConvertedToOrder\" });\r\n    }\r\n  }\r\n\r\n  this.setState({ showForm: false, editingId: null, previewOrderMode: false, formData: this.getEmptyOrderForm() });\r\n  this.fetchorders();\r\n};\r\n\r\n// Helper to reset formData\r\ngetEmptyOrderForm = () => ({\r\n  orderNo: '',\r\n  orderDate: new Date().toISOString().split('T')[0],\r\n  orderType: 'Standard',\r\n  customer: '',\r\n  status: 'Entered',\r\n  choose: 'Service',\r\n  qrefNo: '',\r\n  impExp: 'None',\r\n  currency: '',\r\n  conversionRate: '',\r\n  taxAmount: '',\r\n  orderValue: '',\r\n  discountPercent: 0,\r\n  discountAmount: 0,\r\n  afterDiscountValue: 0,\r\n  billTo: '',\r\n  shipTo: '',\r\n  despatchMode: 'By Air',\r\n  paymentTerms: '',\r\n  freightCharges: '',\r\n  freighttaxAmount: '',\r\n  taxPercent: '',\r\n  packingCharges: '',\r\n  lineItems: [],\r\n});\r\n\r\nloadOrderPreview = (order) => {\r\n  this.setState({\r\n    selectedOrder: order,\r\n    previewOrderMode: true\r\n  });\r\n};\r\n\r\nloadorderForEdit = (order) => {\r\n  this.setState({\r\n    formData: {\r\n      ...order,\r\n      lineItems: Array.isArray(order.lineItems) ? order.lineItems : []\r\n    },\r\n    breakdownItems: Array.isArray(order.breakdownItems) ? order.breakdownItems : [],\r\n    editingId: order.id,\r\n    showForm: true,\r\n    previewOrderMode: false, // <-- Ensure preview mode is off\r\n    activeTab: 'co'\r\n  }, () => {\r\n    if (this.customerInputRef.current) {\r\n      this.customerInputRef.current.value = order.customer;\r\n    }\r\n  });\r\n};\r\n\r\ntoggleOrderForm = () => {\r\n  this.setState(prev => ({\r\n    showForm: !prev.showForm,\r\n    formData: {\r\n      ...this.initialFormData, // however you reset it\r\n      orderNo: `CO${1000 + prev.orders.length}`,\r\n      orderDate: new Date().toISOString().split('T')[0],\r\n      status: 'Entered',\r\n      lineItems: []\r\n    }\r\n  }), this.calculateOrderTotals);\r\n};\r\n\r\n\r\n\r\n\r\ntoggleTaxGroupSelection = (groupName, lineIdx, isChecked) => {\r\n  const formData = { ...this.state.formData };\r\n  const item = formData.lineItems[lineIdx];\r\n\r\n  if (!item.taxGroupNames) item.taxGroupNames = [];\r\n\r\n  if (isChecked) {\r\n    if (!item.taxGroupNames.includes(groupName)) {\r\n      item.taxGroupNames.push(groupName);\r\n    }\r\n  } else {\r\n    item.taxGroupNames = item.taxGroupNames.filter(g => g !== groupName);\r\n  }\r\n\r\n  this.setState({ formData }, () => this.calculateOrderTotals());\r\n};\r\n\r\n  showOverlay = (type) => this.setState({ overlayType: type, overlaySearch: '' });\r\n  hideOverlay = () => this.setState({ overlayType: '', overlaySearch: '' });\r\n\r\n  selectOverlayValue = (value) => {\r\n    if (this.state.overlayType === 'customer') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          customer: value.custname || value.custcode || '', // Use custname or custcode\r\n          billTo: this.formatAddress(value.billTo),\r\n          shipTo: this.formatAddress(value.shipTo),\r\n          currency: value.currency || '',\r\n          // despatchMode: value.despatchMode || '', // No auto-fill for despatch mode\r\n          // paymentTerms: value.paymentTerms || '' // No auto-fill for payment terms\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }), () => {\r\n        if (this.customerInputRef.current) {\r\n          this.customerInputRef.current.value = value.custname || value.custcode || '';\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n renderOverlay = () => {\r\n  const { overlayType, overlaySearch, customers, despatchModes, paymentTerms } = this.state;\r\n\r\n  const getFilteredRows = (list, nameKey = 'name', codeKey = 'shortName') =>\r\n    list.filter(item =>\r\n      (item[nameKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()) ||\r\n      (item[codeKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase())\r\n    );\r\n\r\n  const handleSelect = (item) => {\r\n    if (overlayType === 'customer') {\r\n      this.selectOverlayValue(item);\r\n    } else if (overlayType === 'despatchMode') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          despatchMode: item.name\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }));\r\n    } else if (overlayType === 'paymentTerms') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          paymentTerms: item.name\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  let title = '';\r\n  let headers = [];\r\n  let rows = [];\r\n\r\n  if (overlayType === 'customer') {\r\n    title = 'Select Customer';\r\n    headers = ['Name', 'Code', 'Short Name'];\r\n    rows = getFilteredRows(customers, 'custname', 'custcode');\r\n  } else if (overlayType === 'despatchMode') {\r\n    title = 'Select Despatch Mode';\r\n    headers = ['Name'];\r\n    rows = getFilteredRows(despatchModes);\r\n  } else if (overlayType === 'paymentTerms') {\r\n    title = 'Select Payment Terms';\r\n    headers = ['Name'];\r\n    rows = getFilteredRows(paymentTerms);\r\n  } else {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"custom-overlay\">\r\n      <div className=\"custom-overlay-content\">\r\n        <div className=\"custom-overlay-title\">{title}</div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control mb-2\"\r\n          placeholder={`Search ${overlayType}...`}\r\n          value={overlaySearch}\r\n          onChange={e => this.setState({ overlaySearch: e.target.value })}\r\n        />\r\n        <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n          <table className=\"table table-bordered table-sm\">\r\n            <thead>\r\n              <tr>\r\n                {headers.map((h, i) => <th key={i}>{h}</th>)}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {rows.map((item, i) => (\r\n                <tr key={item.id || i} onClick={() => handleSelect(item)} style={{ cursor: 'pointer' }}>\r\n                  {headers.map((h, j) => (\r\n                    <td key={j}>\r\n                      {overlayType === 'customer'\r\n                        ? h === 'Name' ? item.custname\r\n                          : h === 'Code' ? item.custcode\r\n                          : item.custshortName\r\n                        : h === 'Name' ? item.name\r\n                          : item.shortName}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n              {rows.length === 0 && (\r\n                <tr>\r\n                  <td colSpan={headers.length} className=\"text-center\">No records found</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <button className=\"btn btn-secondary btn-sm mt-2\" onClick={this.hideOverlay}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nrenderTaxOverlay = () => {\r\n  const { taxGroups, currentTaxIdx, formData } = this.state;\r\n  if (currentTaxIdx === null) return null;\r\n\r\n  const item = formData.lineItems[currentTaxIdx];\r\n  const selected = new Set(item.taxGroupNames || []);\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed', zIndex: 1000, top: '10%', left: '15%',\r\n      background: '#fff', border: '1px solid #ccc', padding: '20px',\r\n      boxShadow: '0 0 10px rgba(0,0,0,0.3)', width: '70%',\r\n      maxHeight: '70vh', overflowY: 'auto'\r\n    }}>\r\n      <h5>Select Tax Groups</h5>\r\n      <table className=\"table table-sm table-bordered\">\r\n        <thead>\r\n          <tr><th></th><th>Group</th><th>Components</th><th>%</th></tr>\r\n        </thead>\r\n        <tbody>\r\n          {taxGroups.map(tg => (\r\n            <tr key={tg.groupName}>\r\n              <td>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selected.has(tg.groupName)}\r\n                  onChange={e =>\r\n                    this.toggleTaxGroupSelection(tg.groupName, currentTaxIdx, e.target.checked)\r\n                  }\r\n                />\r\n              </td>\r\n              <td>{tg.groupName}</td>\r\n              <td>{tg.lineItems.map(li => li.component).join(', ')}</td>\r\n              <td>{tg.lineItems.map(li => li.percentOrAmt).join(', ')}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"text-right mt-3\">\r\n        <button className=\"btn btn-sm btn-success\" onClick={() => this.setState({ showTaxOverlay: false })}>\r\n          Done\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nrenderOrderPreview = () => {\r\n  const o = this.state.selectedOrder;\r\n  if (!o) return null;\r\n\r\n  const subtotal = o.lineItems?.reduce(\r\n    (sum, item) => sum + (parseFloat(item.total) || 0),\r\n    0\r\n  ) || 0;\r\n\r\n  const freightCharges = parseFloat(o.freightCharges || 0);\r\n  const taxAmount = parseFloat(o.taxAmount || 0);\r\n  const grandTotal = parseFloat(o.orderValue || subtotal + freightCharges + taxAmount);\r\n\r\n  const amountWords = `INR ${window.toWords\r\n    ? window.toWords(Math.floor(grandTotal))\r\n    : grandTotal} Only`;\r\n\r\n  // Find customer record for extra details\r\n  const customer = this.state.customers.find(\r\n    c => c.custshortName === o.customer || c.custname === o.customer\r\n  ) || {};\r\n\r\n  return (\r\n    <div className=\"card mt-4 p-4 shadow-sm full-height d-flex flex-column\">\r\n      <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n        <h4 className=\"card-title mb-0\">Order Preview - {o.orderNo}</h4>\r\n        <div className=\"flex items-center gap-x-4\">\r\n          <button\r\n          className=\"btn btn-sm btn-primary\"\r\n          onClick={() => this.loadorderForEdit(o)}\r\n          disabled={o.status !== \"Entered\" && o.status !== \"Awaiting for Approval\"}\r\n        >\r\n          Edit\r\n        </button>\r\n          \r\n        </div>\r\n      </div>\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col-md-4\"><b>Customer:</b> {o.customer}</div>\r\n        <div className=\"col-md-4\"><b>Date:</b> {o.orderDate}</div>\r\n        <div className=\"col-md-4\"><b>Status:</b> {o.status}</div>\r\n      </div>\r\n      <div className=\"row mb-4\">\r\n        <div className=\"col-md-6\">\r\n          <b>Bill To:</b><br />\r\n          {o.billTo || \"-\"}\r\n          <div className=\"mt-2\" style={{ fontSize: \"0.9em\" }}>\r\n            <b>GSTIN:</b> {customer.gstin || \"-\"}<br />\r\n            <b>Email:</b> {customer.email || \"-\"}<br />\r\n            <b>Phone:</b> {customer.phone || \"-\"}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <b>Ship To:</b><br />\r\n          {o.shipTo || \"-\"}\r\n        </div>\r\n      </div>\r\n      <h5 className=\"mt-2\">Line Items</h5>\r\n      <table className=\"table table-bordered table-sm\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th>Item Code</th>\r\n            <th>Description</th>\r\n            <th>Qty</th>\r\n            <th>Unit Price</th>\r\n            <th>Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {o.lineItems?.map((item, i) => (\r\n            <tr key={i}>\r\n              <td>{item.itemCode}</td>\r\n              <td>{item.itemDescription}</td>\r\n              <td>{item.qty}</td>\r\n              <td>{item.unitPrice}</td>\r\n              <td>{item.total}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"mt-3\">\r\n        <p><b>Subtotal:</b> {subtotal.toFixed(2)}</p>\r\n        <p><b>Freight Charges:</b> {freightCharges.toFixed(2)}</p>\r\n        <p><b>Tax Amount:</b> {taxAmount.toFixed(2)}</p>\r\n        <p className=\"h6\"><b>Grand Total:</b> {grandTotal.toFixed(2)}</p>\r\n        <p className=\"h6\"><b>Amount in Words:</b> {amountWords}</p>\r\n      </div>\r\n      <div className=\"mt-auto pt-3 text-right \">\r\n        <button\r\n          className=\"btn btn-secondary\"\r\n          onClick={() => this.setState({ previewOrderMode: false })}\r\n        >\r\n          Back to List\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nrenderBreakdownTab = () => {\r\n  const { breakdownItems, breakdownType, formData } = this.state;\r\n\r\n  // map item totals from lineItems (main product totals)\r\n  const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\r\n    acc[li.itemCode] = parseFloat(li.total || 0) || 0;\r\n    return acc;\r\n  }, {});\r\n  const sumOfItemTotals = Object.values(itemTotals).reduce((s, v) => s + v, 0);\r\n\r\n  // compute subproducts sum\r\n  const getSubProductsSum = (bi) => {\r\n    const mainTotal = itemTotals[bi.productId] || 0;\r\n    const subs = Array.isArray(bi.subProducts) ? bi.subProducts : [];\r\n    return subs.reduce((s, sp) => {\r\n      const val = parseFloat(sp.value || 0) || 0;\r\n      return s + (breakdownType === \"Percentage\" ? (mainTotal * val / 100) : val);\r\n    }, 0);\r\n  };\r\n\r\n  const canSave = this.isBreakdownValid();\r\n  const isConverted = formData?.status === \"ConvertedToOrder\"; // 🔑 single flag\r\n\r\n  return (\r\n    <div>\r\n      <h5>Milestone Breakdown</h5>\r\n\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col\"><b>Quote Value:</b> {formData.quoteValue}</div>\r\n        <div className=\"col\"><b>After Discount Quote Value:</b> {formData.afterDiscountValue}</div>\r\n        <div className=\"col\"><b>Tax Amount:</b> {formData.taxAmount}</div>\r\n        <div className=\"col\"><b>Sum of Item Totals:</b> {sumOfItemTotals.toFixed(2)}</div>\r\n      </div>\r\n\r\n      {/* Mode selector + Add Breakdown button */}\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col-md-3\">\r\n          <label>Subproduct Mode</label>\r\n          <select\r\n            className=\"form-control form-control-sm\"\r\n            value={breakdownType}\r\n            onChange={e => this.handleBreakdownTypeChange(e.target.value)}\r\n            disabled={isConverted} // disable if converted\r\n          >\r\n            <option value=\"Amount\">Amount</option>\r\n            <option value=\"Percentage\">Percentage</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"col-md-9 text-right\">\r\n          {!isConverted && (\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary btn-sm\"\r\n              onClick={this.addBreakdownFromLineItems}\r\n            >\r\n              + Add Breakdown\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* ===== Table ===== */}\r\n      <table className=\"table table-bordered\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th>S.No</th>\r\n            <th>ID</th>\r\n            <th>Desc / Subproduct name</th>\r\n            <th>SubProduct value ({breakdownType === \"Percentage\" ? \"%\" : \"₹\"})</th>\r\n            <th>Total (₹)</th>\r\n            <th>Due Date</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {breakdownItems.map((item, idx) => {\r\n            const mainItemTotal = itemTotals[item.productId] || 0;\r\n            const subSum = getSubProductsSum(item);\r\n            const remaining = mainItemTotal - subSum;\r\n            const subs = Array.isArray(item.subProducts) ? item.subProducts : [];\r\n\r\n            return (\r\n              <React.Fragment key={idx}>\r\n                {/* parent product row */}\r\n                <tr style={{ background: \"#eef4ff\" }}>\r\n                  <td>{item.sno}</td>\r\n                  <td>{item.productId}</td>\r\n                  <td>{item.desc}</td>\r\n                  <td>\r\n                    <div>\r\n                      <div><small>Subproducts sum: <b>{subSum.toFixed(2)}</b></small></div>\r\n                      <div>\r\n                        <small>\r\n                          Remaining:{\" \"}\r\n                          <b style={{ color: remaining > 0.01 ? \"red\" : \"green\" }}>\r\n                            {remaining.toFixed(2)}\r\n                          </b>\r\n                        </small>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td>{mainItemTotal.toFixed(2)}</td>\r\n                  <td></td>\r\n                  <td>\r\n                  {!isConverted && (\r\n                    <div className=\"d-flex\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-sm btn-outline-primary mr-2\"\r\n                        onClick={() => this.handleAddInlineSubProduct(idx)}\r\n                      >+ Add</button>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-sm btn-outline-secondary\"\r\n                        onClick={() => {\r\n                          if (remaining <= 0) return;\r\n                          this.handleAddInlineSubProduct(idx, {\r\n                            name: \"New Product\",\r\n                            value: breakdownType === \"Percentage\"\r\n                              ? ((remaining * 100) / (mainItemTotal || 1)).toFixed(2)\r\n                              : remaining.toFixed(2)\r\n                          });\r\n                        }}\r\n                      >Auto-fill</button>\r\n                      \r\n                    </div>\r\n                  )}\r\n                </td>\r\n                </tr>\r\n\r\n                {/* subproduct rows */}\r\n                {subs.length === 0 && (\r\n                  <tr key={`notice-${idx}`}>\r\n                    <td colSpan=\"6\" className=\"text-center text-muted\">\r\n                      No subproducts added for this item.\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n\r\n                {subs.map((sp, spIdx) => {\r\n                  const spId = `${item.productId}_${spIdx + 1}`;\r\n                  const rawVal = parseFloat(sp.value || 0) || 0;\r\n                  const spTotal = breakdownType === \"Percentage\"\r\n                    ? (mainItemTotal * rawVal / 100)\r\n                    : rawVal;\r\n\r\n                  return (\r\n                    <tr key={spId} style={{ background: \"#f9f9f9\" }}>\r\n                      <td className=\"text-muted\">—</td>\r\n                      <td>{spId}</td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={sp.name || \"\"}\r\n                          onChange={(e) => this.handleSubProductChange(idx, spIdx, \"name\", e.target.value)}\r\n                          placeholder=\"Enter name\"\r\n                          disabled={isConverted}\r\n                          style={{ paddingLeft: \"18px\" }}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"number\"\r\n                          step=\"any\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={sp.value || \"\"}\r\n                          onChange={(e) => this.handleSubProductChange(idx, spIdx, \"value\", e.target.value)}\r\n                          disabled={isConverted}\r\n                        />\r\n                      </td>\r\n                      <td>{spTotal.toFixed(2)}</td>\r\n                      <td>\r\n                      <input\r\n                        type=\"date\"\r\n                        className=\"form-control form-control-sm\"\r\n                        value={sp.dueDate || \"\"}\r\n                        onChange={(e) =>\r\n                          this.handleSubProductChange(idx, spIdx, \"dueDate\", e.target.value)\r\n                        }\r\n                        disabled={isConverted}\r\n                      />\r\n                    </td>\r\n\r\n                      <td>\r\n                      {!isConverted && (\r\n                        <>\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-sm btn-danger\"\r\n                            onClick={() => this.handleRemoveSubProduct(idx, spIdx)}\r\n                          >-</button>\r\n                        </>\r\n                      )}\r\n                    </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n\r\n      {!canSave && !isConverted && (\r\n        <div className=\"alert alert-danger\">\r\n          Breakdown incomplete — for each product the sum of subproduct totals\r\n          must equal the product total. Save disabled until fixed.\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n  renderProductOverlay = () => {\r\n    const { filteredProducts, productOverlaySearch, selectedProductIds } = this.state;\r\nconst filtered = filteredProducts.filter(p =>\r\n  (p.ptshortName || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) ||\r\n  (p.ptdescription || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) ||\r\n  (p.itemCode || '').toLowerCase().includes(productOverlaySearch.toLowerCase())\r\n);\r\n    return (\r\n      <div className=\"custom-overlay\">\r\n        <div className=\"custom-overlay-content\">\r\n          <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n            <div className=\"custom-overlay-title\">Select Products</div>\r\n            <button\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => {\r\n                const selectedProducts = filteredProducts.filter(p => this.state.selectedProductIds.includes(p.id));\r\n                this.setState(prev => ({\r\n                  formData: {\r\n                    ...prev.formData,\r\n                    lineItems: [\r\n                      ...prev.formData.lineItems,\r\n                      ...selectedProducts\r\n                        .filter(p => !prev.formData.lineItems.some(item => item.id === p.id))\r\n                        .map(p => ({\r\n                          id: p.id,\r\n                          itemCode: p.productId || '',\r\n                          itemDescription: p.ptdescription || '',\r\n                          itemType: p.itemType || '',\r\n                          materialType: p.materialType || '',\r\n                          onHand: p.onHand || 0,\r\n                          taxGroup: p.taxGroup || '',\r\n                          custPartNo: p.custPartNo || '', // Assuming this is cust part table\r\n                          hsnCode: p.hsnCode || '', // Assuming HSN No.\r\n                          unitPrice: p.unitPrice || 0,\r\n                          qty: 1,\r\n                          total: (p.unitPrice || 0).toFixed(2)\r\n                        }))\r\n                    ]\r\n                  },\r\n                  productOverlayVisible: false,\r\n                  selectedProductIds: []\r\n                }));\r\n              }}\r\n            >Add Selected</button>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Search products...\"\r\n            value={productOverlaySearch}\r\n            onChange={e => this.setState({ productOverlaySearch: e.target.value })}\r\n          />\r\n          <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n            <table className=\"table table-bordered table-sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th></th>\r\n                  <th>Item Code</th>\r\n                  <th>Item Desc</th>\r\n                  <th>Item Type</th>\r\n                  <th>Material Type</th>\r\n                  <th>On Hand</th>\r\n                  <th>Tax Grp</th>\r\n                  <th>Cust Part No</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filtered.map(p => (\r\n                  <tr key={p.id}>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedProductIds.includes(p.id)}\r\n                        onChange={e => {\r\n                          const checked = e.target.checked;\r\n                          this.setState(prev => ({\r\n                            selectedProductIds: checked\r\n                              ? [...prev.selectedProductIds, p.id]\r\n                              : prev.selectedProductIds.filter(id => id !== p.id)\r\n                          }));\r\n                        }}\r\n                      />\r\n                    </td>\r\n                    <td>{p.productId}</td>\r\n                    <td>{p.ptdescription || ''}</td>\r\n                    <td>{p.itemType || ''}</td>\r\n                    <td>{p.materialType || ''}</td>\r\n                    <td>{p.onHand || 0}</td>\r\n                    <td>{p.taxGroup || ''}</td>\r\n                    <td>{p.custPartNo || ''}</td>\r\n                  </tr>\r\n                ))}\r\n                {filtered.length === 0 && (\r\n                  <tr>\r\n                    <td colSpan=\"8\" className=\"text-center\">No products found</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          {/* Add pagination here if needed, for now, it's just a placeholder */}\r\n          <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n            <span>Page 1 of 1</span>\r\n            <button className=\"btn btn-secondary btn-sm\" onClick={() => this.setState({ productOverlayVisible: false, selectedProductIds: [] })}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderorderTable = () => (\r\n    <div className=\"card mt-4 full-height\">\r\n      <div className=\"card-body\">\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n          <h4 className=\"card-title\">Orders</h4>\r\n          <button className=\"btn btn-primary\" onClick={() => this.setState({ showForm: true })}>+ Add Order</button>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-bordered table-hover\">\r\n            <thead className=\"thead-light\">\r\n              <tr style={{ fontSize: '14px' }}>\r\n                <th>Order No</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Order Value</th>\r\n                <th>After Discount</th>\r\n                <th>Status</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.orders.map((q, i) => {\r\n                let statusClass = \"badge-secondary\";\r\n                if( q.status === \"Awaiting for Approval\") statusClass=\"badge-warning\";\r\n                else if(q.status === \"ConvertedToOrder\") statusClass=\"badge-info\";\r\n                else if(q.status === \"COCreated\") statusClass=\"badge-secondary\";\r\n                else if(q.status === \"Approved\") statusClass=\"badge-success\";\r\n                else if(q.status === \"Rejected\") statusClass=\"badge-danger\";\r\n\r\n                return(\r\n                  <tr key={i} style={{ fontSize: '14px' }}>\r\n                  <td>\r\n                    <button\r\n                     className=\"btn btn-link p-0\" \r\n                     onClick={() => this.loadOrderPreview(q)}>\r\n                    {q.orderNo}\r\n                  </button>\r\n\r\n                  </td>\r\n                  <td>{q.customer}</td>\r\n                  <td>{q.orderDate}</td>\r\n                  <td>{q.orderValue}</td>\r\n                  <td>{q.afterDiscountValue}</td>\r\n                  <td>\r\n                    <label className={`badge ${statusClass}`}\r\n                    style={{fontSize: '14px'}}>{q.status}</label></td>\r\n                    <td> <i\r\n                        className=\"mdi mdi-printer menu-icon\"\r\n                        onClick={() => this.showOrderPDFWithOrg(q)}\r\n                        style={{ fontSize: '24px', color: '#2196F3', cursor: 'pointer' }}\r\n                      ></i></td>\r\n                  \r\n                </tr>\r\n                );\r\n              })}\r\n                    {this.state.orders.length === 0 && (\r\n                <tr><td colSpan=\"6\" className=\"text-center\">No orders found.</td></tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  renderorderForm = () => {\r\n    const { formData, overlayType, productOverlayVisible,breakdownItems,breakdownType } = this.state;\r\n    const isFOB = formData.impExp === 'FOB';\r\n      const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\r\n      acc[li.itemCode] = parseFloat(li.total || 0) || 0;\r\n      return acc;\r\n    }, {});\r\n    const sumOfItemTotals = Object.values(itemTotals).reduce((sum, val) => sum + val, 0);\r\n\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"card full-height\">\r\n          <div style={{ flex: 1, overflowY: 'auto', padding: '24px' }}>\r\n            <h4 className=\"mb-3\">Order Form</h4>\r\n            <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n              <li className=\"nav-item\">\r\n                <button type=\"button\" className={`nav-link ${this.state.activeTab === 'co' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'co' })}>CO Details</button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <button type=\"button\" className={`nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'commercial' })}>Commercial Terms</button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n              <button type=\"button\" className={`nav-link ${this.state.activeTab === 'breakdown' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'breakdown' })}>Breakdown</button>\r\n            </li>\r\n            </ul>\r\n            <form className=\"form-sample\" onSubmit={this.handleSubmit}>\r\n              <div className=\"tab-content pt-3\">\r\n                {this.state.activeTab === 'co' && (\r\n                  <>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Order No</label>\r\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={formData.orderNo} onChange={(e) => this.handleInputChange('orderNo', e.target.value)} />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Order Date</label>\r\n                        <input type=\"date\" className=\"form-control form-control-sm\" value={formData.orderDate} onChange={(e) => this.handleInputChange('orderDate', e.target.value)} />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Order Type</label>\r\n                        <select className=\"form-control form-control-sm\" value={formData.orderType} onChange={(e) => this.handleInputChange('orderType', e.target.value)}>\r\n                          <option>Standard</option>\r\n                          <option>Manual</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Status</label>\r\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={formData.status}   style={{ backgroundColor: '#fff' }} readOnly />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Customer</label>\r\n                        <div className=\"input-group input-group-sm\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Choose Customer\"\r\n                            ref={this.customerInputRef}\r\n                            value={formData.customer}\r\n                            readOnly\r\n                            onClick={() => this.showOverlay('customer')}\r\n                            style={{ cursor: 'pointer' }}\r\n                          />\r\n                          <div className=\"input-group-append\">\r\n                            <button className=\"btn btn-outline-secondary btn-sm\" type=\"button\" onClick={() => this.showOverlay('customer')}>Select</button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>IMP/EXP</label>\r\n                        <select\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.impExp}\r\n                          onChange={(e) => this.handleInputChange('impExp', e.target.value)}\r\n                        >\r\n                          <option>None</option>\r\n                          <option>COB</option>\r\n                          <option>FOB</option>\r\n                          <option>CIF</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group col-md-2\">\r\n                        <label>Ref No.</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.qrefNo}\r\n                          onChange={(e) => this.handleInputChange('qrefNo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                    <label>Choose</label>\r\n                    <div className=\"d-flex align-items-center\">\r\n                      <div className=\"form-check mr-4\">\r\n                        <input type=\"radio\" className=\"form-check-input\" name=\"choose\" id=\"chooseService\" value=\"Service\"\r\n                          checked={formData.choose === 'Service'}\r\n                          onChange={e => this.handleChooseChange(e.target.value)}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"chooseService\">Service</label>\r\n                      </div>\r\n                      <div className=\"form-check mr-4\">\r\n                        <input type=\"radio\" className=\"form-check-input\" name=\"choose\" id=\"chooseProduct\" value=\"Product\"\r\n                          checked={formData.choose === 'Product'}\r\n                          onChange={e => this.handleChooseChange(e.target.value)}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"chooseProduct\">Product</label>\r\n                      </div>\r\n                      <div className=\"form-check\">\r\n                        <input type=\"radio\" className=\"form-check-input\" name=\"choose\" id=\"chooseBundle\" value=\"Bundle\"\r\n                          checked={formData.choose === 'Bundle'}\r\n                          onChange={e => this.handleChooseChange(e.target.value)}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"chooseBundle\">Bundle (Service+Product)</label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Currency</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.currency}\r\n                          style={{ backgroundColor: '#fff' }}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Conversion Rate</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.conversionRate}\r\n                          onChange={(e) => this.handleInputChange('conversionRate', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Tax Amount</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.totalTaxAmount}\r\n                          onChange={(e) => this.handleInputChange('totalTaxAmount', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Order Value</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.orderValue}\r\n                          onChange={(e) => this.handleInputChange('orderValue', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                      <label>Discount %</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        className='form-control'\r\n                        value={formData.discountPercent}\r\n                        onChange={e => {\r\n                          this.handleInputChange('discountPercent', e.target.value);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                    <label>Discount Amount</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-control\"\r\n                      value={this.state.formData.discountAmount}\r\n                      readOnly\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group col-md-4\">\r\n                      <label>After Discount - Quote Value</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={this.state.formData.afterDiscountValue}\r\n                        readOnly\r\n                      />\r\n                    </div>\r\n                </div>\r\n                          <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                            <h4 className=\"card-title\">Line Item</h4>\r\n                            <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={() => this.setState({ productOverlayVisible: true })}>\r\n                              + Add Product\r\n                            </button>\r\n                          </div>\r\n                          <div className=\"table-responsive\">\r\n                            <table className=\"table table-bordered\">\r\n                              <thead className=\"thead-light\">\r\n                                <tr >\r\n                                  <th> Item Code </th>\r\n                                  <th> Item Desc </th>\r\n                                  <th> Cust Part No </th>\r\n                                  <th> HSN No </th>\r\n                                  <th> On Hand </th> \r\n                                  <th>Unit Price</th>\r\n                                  <th>Quantity</th>\r\n                                  <th>Tax Id</th>\r\n                                  <th>Item Total</th>\r\n                                  <th>Tax amount</th>\r\n                                  <th>Grand Total</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {formData.lineItems.map((item, idx) => (\r\n                                  <tr key={item.id || idx}>\r\n                                    <td>{item.itemCode}</td>\r\n                                    <td>{item.itemDescription}</td>\r\n                                    <td>{item.custPartNo}</td>\r\n                                    <td>{item.hsnCode}</td>\r\n                                    <td>{item.onHand}</td>\r\n                                    <td>\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        value={item.unitPrice}\r\n                                        onChange={e => this.handleLineItemChange(idx, 'unitPrice', e.target.value)}\r\n                                        style={{ width: 80 }}\r\n                                      />\r\n                                    </td>\r\n                                    <td>\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        min=\"1\"\r\n                                        value={item.qty}\r\n                                        onChange={e => this.handleLineItemChange(idx, 'qty', e.target.value)}\r\n                                        style={{ width: 60 }}\r\n                                      />\r\n                                    </td>\r\n                                    <td style={{ verticalAlign: 'middle' }}>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-sm btn-outline-primary\"\r\n                                        onClick={() => this.setState({ showTaxOverlay: true, currentTaxIdx: idx })}\r\n                                      >\r\n                                        Select Tax\r\n                                      </button>\r\n                                      <div style={{ fontSize: '10px', marginTop: '4px' }}>\r\n                                        {(item.taxGroupNames || []).join(', ') || '-'}\r\n                                      </div>\r\n                                    </td>\r\n                                    <td>{item.baseTotal || '0.00'}</td>\r\n                                      <td>{item.taxAmt || '0.00'}</td>\r\n                                      <td>{item.itemTotal || '0.00'}</td>\r\n\r\n                                     \r\n                                  </tr>\r\n                                ))}\r\n                                {formData.lineItems.length === 0 && (\r\n                                  <tr>\r\n                                    <td colSpan=\"9\" className=\"text-center\">No items</td>\r\n                                  </tr>\r\n                                )}\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                      \r\n                  </>\r\n                )}\r\n                {this.state.activeTab === 'commercial' && (\r\n                  <>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-6\">\r\n                        <label>Bill To</label>\r\n                        <textarea\r\n                          className=\"form-control form-control-sm\"\r\n                          rows=\"3\"\r\n                          value={formData.billTo}\r\n                          onChange={(e) => this.handleInputChange('billTo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-6\">\r\n                        <label>Ship To</label>\r\n                        <textarea\r\n                          className=\"form-control form-control-sm\"\r\n                          rows=\"3\"\r\n                          value={formData.shipTo}\r\n                          onChange={(e) => this.handleInputChange('shipTo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-4\">\r\n  <label>Despatch Mode</label>\r\n  <div className=\"input-group input-group-sm\">\r\n    <input\r\n      type=\"text\"\r\n      className=\"form-control\"\r\n      value={formData.despatchMode}\r\n      readOnly\r\n      onClick={() => !isFOB && this.showOverlay('despatchMode')}\r\n      style={{ cursor: isFOB ? 'not-allowed' : 'pointer', backgroundColor: '#fff' }}\r\n    />\r\n    <div className=\"input-group-append\">\r\n      <button\r\n        className=\"btn btn-outline-secondary btn-sm\"\r\n        type=\"button\"\r\n        disabled={isFOB}\r\n        onClick={() => this.showOverlay('despatchMode')}\r\n      >\r\n        Select\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div className=\"form-group col-md-4\">\r\n  <label>Payment Terms</label>\r\n  <div className=\"input-group input-group-sm\">\r\n    <input\r\n      type=\"text\"\r\n      className=\"form-control\"\r\n      value={formData.paymentTerms}\r\n      readOnly\r\n      onClick={() => !isFOB && this.showOverlay('paymentTerms')}\r\n      style={{ cursor: isFOB ? 'not-allowed' : 'pointer', backgroundColor: '#fff' }}\r\n    />\r\n    <div className=\"input-group-append\">\r\n      <button\r\n        className=\"btn btn-outline-secondary btn-sm\"\r\n        type=\"button\"\r\n        disabled={isFOB}\r\n        onClick={() => this.showOverlay('paymentTerms')}\r\n      >\r\n        Select\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Freight Charges</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.freightCharges}\r\n                          onChange={(e) => this.handleInputChange('freightCharges', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Tax %</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxPercent}\r\n                          onChange={(e) => this.handleInputChange('taxPercent', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Freight Tax Amount</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxAmount}\r\n                          onChange={(e) => this.handleInputChange('freighttaxAmount', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Packing Charges</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.packingCharges}\r\n                          onChange={(e) => this.handleInputChange('packingCharges', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-right mt-3\">\r\n                      <button type=\"submit\" className=\"btn btn-success\">Save All Details</button>\r\n                    </div>\r\n                  </>\r\n                )}\r\n                 {this.state.activeTab === 'breakdown' && (this.renderBreakdownTab())}\r\n              </div>\r\n\r\n             <div className=\"fixed-card-footer text-right p-3 border-top bg-white\">\r\n                <button type=\"submit\" className=\"btn btn-success mr-2\" disabled={!this.isBreakdownValid()}>Save All Details</button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => this.setState({ showForm: false, editingId: null })}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n            {overlayType && this.renderOverlay()}\r\n            {productOverlayVisible && this.renderProductOverlay()}\r\n            {this.state.showTaxOverlay && this.renderTaxOverlay()}\r\n          </div>\r\n           \r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        {this.state.previewOrderMode ? this.renderOrderPreview() : (this.state.showForm ? this.renderorderForm() : this.renderorderTable())}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Order);\r\n"]},"metadata":{},"sourceType":"module"}