{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\sales\\\\salestransactions\\\\invoice\\\\CustomerOrderBilling.js\";\nimport React, { Component } from 'react';\nimport { db } from '../../../../firebase';\nimport { collection, getDocs, addDoc, doc, updateDoc, serverTimestamp } from 'firebase/firestore';\n\nclass CustomerOrderBilling extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      invoices: [],\n      orders: [],\n      customers: [],\n      activeTab: 'billing',\n      taxGroups: [],\n      despatchModes: [],\n      paymentTerms: [],\n      showForm: false,\n      editingId: null,\n      showOrderOverlay: false,\n      orderOverlaySearch: '',\n      selectedOrder: null,\n      showTaxOverlay: false,\n      currentTaxIdx: null,\n      overlayType: '',\n      overlaySearch: '',\n      formData: this.getEmptyInvoiceForm()\n    };\n\n    this.fetchInvoices = async () => {\n      const snap = await getDocs(collection(db, 'invoices'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        invoices: data.reverse()\n      });\n    };\n\n    this.fetchOrders = async () => {\n      const snap = await getDocs(collection(db, 'orders'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        orders: data.reverse()\n      });\n    };\n\n    this.fetchCustomers = async () => {\n      const snap = await getDocs(collection(db, 'customers'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        customers: data\n      });\n    };\n\n    this.fetchTaxGroups = async () => {\n      const snap = await getDocs(collection(db, 'taxGroups'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        taxGroups: data\n      });\n    };\n\n    this.fetchDespatchModes = async () => {\n      const snap = await getDocs(collection(db, 'modes'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        despatchModes: data\n      });\n    };\n\n    this.fetchPaymentTerms = async () => {\n      const snap = await getDocs(collection(db, 'paymentTerms'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        paymentTerms: data\n      });\n    };\n\n    this.showOrderOverlay = () => this.setState({\n      showOrderOverlay: true,\n      orderOverlaySearch: ''\n    });\n\n    this.hideOrderOverlay = () => this.setState({\n      showOrderOverlay: false,\n      orderOverlaySearch: ''\n    });\n\n    this.selectOrderForInvoice = order => {\n      // Find customer details for billTo/shipTo/currency\n      const customerObj = this.state.customers.find(c => c.custname === order.customer || c.custcode === order.customer);\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          customerOrderId: order.orderNo,\n          customerOrderCompany: order.customer,\n          customerOrderDate: order.orderDate,\n          customer: order.customer,\n          invoiceValue: order.orderValue,\n          discountPercent: order.discountPercent || 0,\n          discountAmount: order.discountAmount || 0,\n          afterDiscountValue: order.afterDiscountValue || 0,\n          billTo: customerObj ? this.formatAddress(customerObj.billTo) : '',\n          shipTo: customerObj ? this.formatAddress(customerObj.shipTo) : '',\n          currency: customerObj ? customerObj.currency || '' : '',\n          despatchMode: order.despatchMode || 'By Air',\n          paymentTerms: order.paymentTerms || '',\n          freightCharges: order.freightCharges || '',\n          freighttaxAmount: order.freighttaxAmount || '',\n          taxPercent: order.taxPercent || '',\n          packingCharges: order.packingCharges || '',\n          taxAmount: order.taxAmount || '',\n          lineItems: (order.lineItems || []).map(item => ({\n            itemCode: item.itemCode || '',\n            ptshortName: item.ptshortName || '',\n            itemDescription: item.itemDescription || '',\n            hsnCode: item.hsnCode || '',\n            uom: item.uom || '',\n            qty: item.qty || 1,\n            unitPrice: item.unitPrice || 0,\n            taxGroupNames: item.taxGroupNames || [],\n            taxAmt: item.taxAmt || 0,\n            total: item.total || (parseFloat(item.qty || 1) * parseFloat(item.unitPrice || 0)).toFixed(2)\n          }))\n        },\n        showOrderOverlay: false,\n        selectedOrder: order\n      }));\n    };\n\n    this.formatAddress = addr => {\n      if (!addr) return '';\n      if (typeof addr === 'string') return addr;\n      return [addr.address, [addr.city, addr.state, addr.country].filter(Boolean).join(', '), addr.zip].filter(Boolean).join('\\n');\n    };\n\n    this.handleInputChange = (field, value) => {\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          [field]: value\n        }\n      }));\n    };\n\n    this.handleLineItemChange = (idx, field, value) => {\n      const updatedItems = [...this.state.formData.lineItems];\n      updatedItems[idx] = { ...updatedItems[idx],\n        [field]: value\n      };\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          lineItems: updatedItems\n        }\n      }));\n    };\n\n    this.toggleTaxGroupSelection = (groupName, lineIdx, isChecked) => {\n      const formData = { ...this.state.formData\n      };\n      const item = formData.lineItems[lineIdx];\n      if (!item.taxGroupNames) item.taxGroupNames = [];\n\n      if (isChecked) {\n        if (!item.taxGroupNames.includes(groupName)) {\n          item.taxGroupNames.push(groupName);\n        }\n      } else {\n        item.taxGroupNames = item.taxGroupNames.filter(g => g !== groupName);\n      }\n\n      this.setState({\n        formData\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        editingId,\n        formData,\n        invoices\n      } = this.state;\n      if (!formData.customer) return alert(\"Customer is required\");\n      if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\n\n      if (editingId) {\n        const {\n          id,\n          ...formDataWithoutId\n        } = formData;\n        await updateDoc(doc(db, \"invoices\", editingId), { ...formDataWithoutId,\n          status: \"Entered\",\n          updatedAt: serverTimestamp()\n        });\n      } else {\n        formData.invoiceNo = `INV${1000 + invoices.length}`;\n        await addDoc(collection(db, \"invoices\"), { ...formData,\n          status: \"Entered\",\n          createdAt: serverTimestamp()\n        });\n      }\n\n      this.setState({\n        showForm: false,\n        editingId: null,\n        formData: this.getEmptyInvoiceForm()\n      });\n      this.fetchInvoices();\n    };\n\n    this.renderOrderOverlay = () => {\n      const {\n        orders,\n        orderOverlaySearch\n      } = this.state;\n      const filtered = orders.filter(o => (o.orderNo || '').toLowerCase().includes(orderOverlaySearch.toLowerCase()) || (o.customer || '').toLowerCase().includes(orderOverlaySearch.toLowerCase()));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }\n      }, \"Select Customer Order\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: \"Search by ID or Company...\",\n        value: orderOverlaySearch,\n        onChange: e => this.setState({\n          orderOverlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 19\n        }\n      }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 19\n        }\n      }, \"Company\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 19\n        }\n      }, \"Date\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 15\n        }\n      }, filtered.map((o, i) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: o.id || i,\n        onClick: () => this.selectOrderForInvoice(o),\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }\n      }, o.orderNo), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }\n      }, o.customer), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }\n      }, o.orderDate))), filtered.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: 3,\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }\n      }, \"No orders found\"))))), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm mt-2\",\n        onClick: this.hideOrderOverlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }\n      }, \"Cancel\")));\n    };\n\n    this.renderTaxOverlay = () => {\n      const {\n        taxGroups,\n        currentTaxIdx,\n        formData\n      } = this.state;\n      if (currentTaxIdx === null) return null;\n      const item = formData.lineItems[currentTaxIdx];\n      const selected = new Set(item.taxGroupNames || []);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'fixed',\n          zIndex: 1000,\n          top: '10%',\n          left: '15%',\n          background: '#fff',\n          border: '1px solid #ccc',\n          padding: '20px',\n          boxShadow: '0 0 10px rgba(0,0,0,0.3)',\n          width: '70%',\n          maxHeight: '70vh',\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 9\n        }\n      }, \"Select Tax Groups\"), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-sm table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 26\n        }\n      }, \"Group\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 40\n        }\n      }, \"Components\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 59\n        }\n      }, \"%\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }\n      }, taxGroups.map(tg => /*#__PURE__*/React.createElement(\"tr\", {\n        key: tg.groupName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: selected.has(tg.groupName),\n        onChange: e => this.toggleTaxGroupSelection(tg.groupName, currentTaxIdx, e.target.checked),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 17\n        }\n      }, tg.groupName), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 17\n        }\n      }, tg.lineItems.map(li => li.component).join(', ')), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 17\n        }\n      }, tg.lineItems.map(li => li.percentOrAmt).join(', ')))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-success\",\n        onClick: () => this.setState({\n          showTaxOverlay: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }\n      }, \"Done\")));\n    };\n\n    this.renderBillingDetails = () => {\n      const {\n        formData\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }\n      }, \"Invoice No\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.invoiceNo,\n        onChange: e => this.handleInputChange('invoiceNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }\n      }, \"Invoice Date\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"date\",\n        className: \"form-control form-control-sm\",\n        value: formData.invoiceDate,\n        onChange: e => this.handleInputChange('invoiceDate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }\n      }, \"Customer Order\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: formData.customerOrderId,\n        readOnly: true,\n        onClick: this.showOrderOverlay,\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        onClick: this.showOrderOverlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 15\n        }\n      }, \"Select\"))), /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }\n      }, formData.customerOrderCompany && /*#__PURE__*/React.createElement(React.Fragment, null, \"Company: \", formData.customerOrderCompany, \" | Date: \", formData.customerOrderDate))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }\n      }, \"Customer\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.customer,\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-responsive mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 15\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 15\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 15\n        }\n      }, \"Cust Part Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 15\n        }\n      }, \"HSN/SAC\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 15\n        }\n      }, \"Locator\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 15\n        }\n      }, \"UOM\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 15\n        }\n      }, \"On Hand\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 15\n        }\n      }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 15\n        }\n      }, \"Order Qty\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 15\n        }\n      }, \"Recv Qty\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 15\n        }\n      }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 15\n        }\n      }, \"Tax Group\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 15\n        }\n      }, \"Tax Amt\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 15\n        }\n      }, \"Item Total\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }\n      }, formData.lineItems.map((item, idx) => {\n        var _item$taxGroupNames;\n\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: idx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 17\n          }\n        }, item.itemCode), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 17\n          }\n        }, item.itemDescription), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 17\n          }\n        }, item.custPartCode), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 17\n          }\n        }, item.hsnCode), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 17\n          }\n        }, item.locator), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 17\n          }\n        }, item.uom), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 17\n          }\n        }, item.onHand), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 17\n          }\n        }, item.unitPrice), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 17\n          }\n        }, item.orderQty), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 17\n          }\n        }, item.recvQty), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          className: \"form-control form-control-sm\",\n          value: item.qty,\n          onChange: e => this.handleLineItemChange(idx, 'qty', e.target.value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 19\n          }\n        })), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm btn-outline-primary\",\n          onClick: () => this.setState({\n            showTaxOverlay: true,\n            currentTaxIdx: idx\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 19\n          }\n        }, ((_item$taxGroupNames = item.taxGroupNames) === null || _item$taxGroupNames === void 0 ? void 0 : _item$taxGroupNames.join(', ')) || 'Select')), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 17\n          }\n        }, item.taxAmt), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 17\n          }\n        }, item.total));\n      })))));\n    };\n\n    this.renderCommercialDetails = () => {\n      const {\n        formData\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }\n      }, \"Despatch Mode\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.despatchMode,\n        onChange: e => this.handleInputChange('despatchMode', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }\n      }, \"Payment Terms\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.paymentTerms,\n        onChange: e => this.handleInputChange('paymentTerms', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }\n      }, \"Freight Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.freightCharges,\n        onChange: e => this.handleInputChange('freightCharges', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }\n      }))));\n    };\n\n    this.renderNotes = () => {\n      const {\n        formData\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 9\n        }\n      }, \"Notes\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control\",\n        rows: \"4\",\n        value: formData.notes || '',\n        onChange: e => this.handleInputChange('notes', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 9\n        }\n      })));\n    };\n\n    this.renderTable = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-4 full-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 11\n      }\n    }, \"Customer Order Billing\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.setState({\n        showForm: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 11\n      }\n    }, \"+ Add Invoice\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 17\n      }\n    }, \"Invoice No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 17\n      }\n    }, \"Customer Order\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 17\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 17\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 17\n      }\n    }, \"Invoice Value\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 17\n      }\n    }, \"Status\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 13\n      }\n    }, this.state.invoices.map((inv, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 19\n      }\n    }, inv.invoiceNo), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 19\n      }\n    }, inv.customerOrderId), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 19\n      }\n    }, inv.customer), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 19\n      }\n    }, inv.invoiceDate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 19\n      }\n    }, inv.invoiceValue), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 19\n      }\n    }, inv.status))), this.state.invoices.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"6\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 21\n      }\n    }, \"No invoices found.\")))))));\n\n    this.renderForm = () => {\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"card full-height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: 'auto',\n          padding: '24px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 5\n        }\n      }, \"Customer Order Billing\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"nav nav-tabs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: `nav-link ${this.state.activeTab === 'billing' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'billing'\n        }),\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 9\n        }\n      }, \"Billing Details\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: `nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'commercial'\n        }),\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 9\n        }\n      }, \"Commercial Details\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: `nav-link ${this.state.activeTab === 'notes' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'notes'\n        }),\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 9\n        }\n      }, \"Notes\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tab-content mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 5\n        }\n      }, this.state.activeTab === 'billing' && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tab-pane active\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 9\n        }\n      }, this.renderBillingDetails()), this.state.activeTab === 'commercial' && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tab-pane active\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 9\n        }\n      }, this.renderCommercialDetails()), this.state.activeTab === 'notes' && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tab-pane active\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 9\n        }\n      }, this.renderNotes()))));\n    };\n  }\n\n  getEmptyInvoiceForm() {\n    return {\n      invoiceNo: '',\n      invoiceDate: new Date().toISOString().split('T')[0],\n      invoiceType: 'Standard',\n      customerOrderId: '',\n      customerOrderCompany: '',\n      customerOrderDate: '',\n      customer: '',\n      status: 'Entered',\n      choose: 'Service',\n      qrefNo: '',\n      impExp: 'None',\n      currency: '',\n      conversionRate: '',\n      taxAmount: '',\n      invoiceValue: '',\n      discountPercent: 0,\n      discountAmount: 0,\n      afterDiscountValue: 0,\n      billTo: '',\n      shipTo: '',\n      despatchMode: 'By Air',\n      paymentTerms: '',\n      freightCharges: '',\n      freighttaxAmount: '',\n      taxPercent: '',\n      packingCharges: '',\n      lineItems: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchInvoices();\n    this.fetchOrders();\n    this.fetchCustomers();\n    this.fetchTaxGroups();\n    this.fetchDespatchModes();\n    this.fetchPaymentTerms();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 7\n      }\n    }, this.state.showForm ? this.renderForm() : this.renderTable());\n  }\n\n}\n\nexport default CustomerOrderBilling;","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/sales/salestransactions/invoice/CustomerOrderBilling.js"],"names":["React","Component","db","collection","getDocs","addDoc","doc","updateDoc","serverTimestamp","CustomerOrderBilling","state","invoices","orders","customers","activeTab","taxGroups","despatchModes","paymentTerms","showForm","editingId","showOrderOverlay","orderOverlaySearch","selectedOrder","showTaxOverlay","currentTaxIdx","overlayType","overlaySearch","formData","getEmptyInvoiceForm","fetchInvoices","snap","data","docs","map","id","setState","reverse","fetchOrders","fetchCustomers","fetchTaxGroups","fetchDespatchModes","fetchPaymentTerms","hideOrderOverlay","selectOrderForInvoice","order","customerObj","find","c","custname","customer","custcode","prev","customerOrderId","orderNo","customerOrderCompany","customerOrderDate","orderDate","invoiceValue","orderValue","discountPercent","discountAmount","afterDiscountValue","billTo","formatAddress","shipTo","currency","despatchMode","freightCharges","freighttaxAmount","taxPercent","packingCharges","taxAmount","lineItems","item","itemCode","ptshortName","itemDescription","hsnCode","uom","qty","unitPrice","taxGroupNames","taxAmt","total","parseFloat","toFixed","addr","address","city","country","filter","Boolean","join","zip","handleInputChange","field","value","handleLineItemChange","idx","updatedItems","toggleTaxGroupSelection","groupName","lineIdx","isChecked","includes","push","g","handleSubmit","e","preventDefault","alert","length","formDataWithoutId","status","updatedAt","invoiceNo","createdAt","renderOrderOverlay","filtered","o","toLowerCase","target","maxHeight","overflowY","i","cursor","renderTaxOverlay","selected","Set","position","zIndex","top","left","background","border","padding","boxShadow","width","tg","has","checked","li","component","percentOrAmt","renderBillingDetails","invoiceDate","custPartCode","locator","onHand","orderQty","recvQty","renderCommercialDetails","renderNotes","notes","renderTable","inv","renderForm","flex","Date","toISOString","split","invoiceType","choose","qrefNo","impExp","conversionRate","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { db } from '../../../../firebase';\r\nimport { collection, getDocs, addDoc, doc, updateDoc, serverTimestamp } from 'firebase/firestore';\r\n\r\nclass CustomerOrderBilling extends Component {\r\n  state = {\r\n    invoices: [],\r\n    orders: [],\r\n    customers: [],\r\n    activeTab: 'billing',\r\n    taxGroups: [],\r\n    despatchModes: [],\r\n    paymentTerms: [],\r\n    showForm: false,\r\n    editingId: null,\r\n    showOrderOverlay: false,\r\n    orderOverlaySearch: '',\r\n    selectedOrder: null,\r\n    showTaxOverlay: false,\r\n    currentTaxIdx: null,\r\n    overlayType: '',\r\n    overlaySearch: '',\r\n    formData: this.getEmptyInvoiceForm()\r\n  };\r\n\r\n  getEmptyInvoiceForm() {\r\n    return {\r\n      invoiceNo: '',\r\n      invoiceDate: new Date().toISOString().split('T')[0],\r\n      invoiceType: 'Standard',\r\n      customerOrderId: '',\r\n      customerOrderCompany: '',\r\n      customerOrderDate: '',\r\n      customer: '',\r\n      status: 'Entered',\r\n      choose: 'Service',\r\n      qrefNo: '',\r\n      impExp: 'None',\r\n      currency: '',\r\n      conversionRate: '',\r\n      taxAmount: '',\r\n      invoiceValue: '',\r\n      discountPercent: 0,\r\n      discountAmount: 0,\r\n      afterDiscountValue: 0,\r\n      billTo: '',\r\n      shipTo: '',\r\n      despatchMode: 'By Air',\r\n      paymentTerms: '',\r\n      freightCharges: '',\r\n      freighttaxAmount: '',\r\n      taxPercent: '',\r\n      packingCharges: '',\r\n      lineItems: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchInvoices();\r\n    this.fetchOrders();\r\n    this.fetchCustomers();\r\n    this.fetchTaxGroups();\r\n    this.fetchDespatchModes();\r\n    this.fetchPaymentTerms();\r\n  }\r\n\r\n  fetchInvoices = async () => {\r\n    const snap = await getDocs(collection(db, 'invoices'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ invoices: data.reverse() });\r\n  };\r\n\r\n  fetchOrders = async () => {\r\n    const snap = await getDocs(collection(db, 'orders'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ orders: data.reverse() });\r\n  };\r\n\r\n  fetchCustomers = async () => {\r\n    const snap = await getDocs(collection(db, 'customers'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ customers: data });\r\n  };\r\n\r\n  fetchTaxGroups = async () => {\r\n    const snap = await getDocs(collection(db, 'taxGroups'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ taxGroups: data });\r\n  };\r\n\r\n  fetchDespatchModes = async () => {\r\n    const snap = await getDocs(collection(db, 'modes'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ despatchModes: data });\r\n  };\r\n\r\n  fetchPaymentTerms = async () => {\r\n    const snap = await getDocs(collection(db, 'paymentTerms'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ paymentTerms: data });\r\n  };\r\n\r\n  showOrderOverlay = () => this.setState({ showOrderOverlay: true, orderOverlaySearch: '' });\r\n  hideOrderOverlay = () => this.setState({ showOrderOverlay: false, orderOverlaySearch: '' });\r\n\r\n  selectOrderForInvoice = (order) => {\r\n    // Find customer details for billTo/shipTo/currency\r\n    const customerObj = this.state.customers.find(\r\n      c => c.custname === order.customer || c.custcode === order.customer\r\n    );\r\n    this.setState(prev => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        customerOrderId: order.orderNo,\r\n        customerOrderCompany: order.customer,\r\n        customerOrderDate: order.orderDate,\r\n        customer: order.customer,\r\n        invoiceValue: order.orderValue,\r\n        discountPercent: order.discountPercent || 0,\r\n        discountAmount: order.discountAmount || 0,\r\n        afterDiscountValue: order.afterDiscountValue || 0,\r\n        billTo: customerObj ? this.formatAddress(customerObj.billTo) : '',\r\n        shipTo: customerObj ? this.formatAddress(customerObj.shipTo) : '',\r\n        currency: customerObj ? customerObj.currency || '' : '',\r\n        despatchMode: order.despatchMode || 'By Air',\r\n        paymentTerms: order.paymentTerms || '',\r\n        freightCharges: order.freightCharges || '',\r\n        freighttaxAmount: order.freighttaxAmount || '',\r\n        taxPercent: order.taxPercent || '',\r\n        packingCharges: order.packingCharges || '',\r\n        taxAmount: order.taxAmount || '',\r\n        lineItems: (order.lineItems || []).map(item => ({\r\n          itemCode: item.itemCode || '',\r\n          ptshortName: item.ptshortName || '',\r\n          itemDescription: item.itemDescription || '',\r\n          hsnCode: item.hsnCode || '',\r\n          uom: item.uom || '',\r\n          qty: item.qty || 1,\r\n          unitPrice: item.unitPrice || 0,\r\n          taxGroupNames: item.taxGroupNames || [],\r\n          taxAmt: item.taxAmt || 0,\r\n          total: item.total || (parseFloat(item.qty || 1) * parseFloat(item.unitPrice || 0)).toFixed(2),\r\n        }))\r\n      },\r\n      showOrderOverlay: false,\r\n      selectedOrder: order\r\n    }));\r\n  };\r\n\r\n  formatAddress = (addr) => {\r\n    if (!addr) return '';\r\n    if (typeof addr === 'string') return addr;\r\n    return [\r\n      addr.address,\r\n      [addr.city, addr.state, addr.country].filter(Boolean).join(', '),\r\n      addr.zip\r\n    ].filter(Boolean).join('\\n');\r\n  };\r\n\r\n  handleInputChange = (field, value) => {\r\n    this.setState(prev => ({\r\n      formData: { ...prev.formData, [field]: value }\r\n    }));\r\n  };\r\n\r\n  handleLineItemChange = (idx, field, value) => {\r\n    const updatedItems = [...this.state.formData.lineItems];\r\n    updatedItems[idx] = { ...updatedItems[idx], [field]: value };\r\n    this.setState(prev => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        lineItems: updatedItems\r\n      }\r\n    }));\r\n  };\r\n\r\n  toggleTaxGroupSelection = (groupName, lineIdx, isChecked) => {\r\n    const formData = { ...this.state.formData };\r\n    const item = formData.lineItems[lineIdx];\r\n    if (!item.taxGroupNames) item.taxGroupNames = [];\r\n    if (isChecked) {\r\n      if (!item.taxGroupNames.includes(groupName)) {\r\n        item.taxGroupNames.push(groupName);\r\n      }\r\n    } else {\r\n      item.taxGroupNames = item.taxGroupNames.filter(g => g !== groupName);\r\n    }\r\n    this.setState({ formData });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { editingId, formData, invoices } = this.state;\r\n    if (!formData.customer) return alert(\"Customer is required\");\r\n    if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\r\n\r\n    if (editingId) {\r\n      const { id, ...formDataWithoutId } = formData;\r\n      await updateDoc(doc(db, \"invoices\", editingId), {\r\n        ...formDataWithoutId,\r\n        status: \"Entered\",\r\n        updatedAt: serverTimestamp()\r\n      });\r\n    } else {\r\n      formData.invoiceNo = `INV${1000 + invoices.length}`;\r\n      await addDoc(collection(db, \"invoices\"), {\r\n        ...formData,\r\n        status: \"Entered\",\r\n        createdAt: serverTimestamp()\r\n      });\r\n    }\r\n\r\n    this.setState({ showForm: false, editingId: null, formData: this.getEmptyInvoiceForm() });\r\n    this.fetchInvoices();\r\n  };\r\n\r\n  renderOrderOverlay = () => {\r\n    const { orders, orderOverlaySearch } = this.state;\r\n    const filtered = orders.filter(o =>\r\n      (o.orderNo || '').toLowerCase().includes(orderOverlaySearch.toLowerCase()) ||\r\n      (o.customer || '').toLowerCase().includes(orderOverlaySearch.toLowerCase())\r\n    );\r\n    return (\r\n      <div className=\"custom-overlay\">\r\n        <div className=\"custom-overlay-content\">\r\n          <div className=\"custom-overlay-title\">Select Customer Order</div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Search by ID or Company...\"\r\n            value={orderOverlaySearch}\r\n            onChange={e => this.setState({ orderOverlaySearch: e.target.value })}\r\n          />\r\n          <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n            <table className=\"table table-bordered table-sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>Company</th>\r\n                  <th>Date</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filtered.map((o, i) => (\r\n                  <tr key={o.id || i} onClick={() => this.selectOrderForInvoice(o)} style={{ cursor: 'pointer' }}>\r\n                    <td>{o.orderNo}</td>\r\n                    <td>{o.customer}</td>\r\n                    <td>{o.orderDate}</td>\r\n                  </tr>\r\n                ))}\r\n                {filtered.length === 0 && (\r\n                  <tr>\r\n                    <td colSpan={3} className=\"text-center\">No orders found</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <button className=\"btn btn-secondary btn-sm mt-2\" onClick={this.hideOrderOverlay}>Cancel</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderTaxOverlay = () => {\r\n    const { taxGroups, currentTaxIdx, formData } = this.state;\r\n    if (currentTaxIdx === null) return null;\r\n    const item = formData.lineItems[currentTaxIdx];\r\n    const selected = new Set(item.taxGroupNames || []);\r\n    return (\r\n      <div style={{\r\n        position: 'fixed', zIndex: 1000, top: '10%', left: '15%',\r\n        background: '#fff', border: '1px solid #ccc', padding: '20px',\r\n        boxShadow: '0 0 10px rgba(0,0,0,0.3)', width: '70%',\r\n        maxHeight: '70vh', overflowY: 'auto'\r\n      }}>\r\n        <h5>Select Tax Groups</h5>\r\n        <table className=\"table table-sm table-bordered\">\r\n          <thead>\r\n            <tr><th></th><th>Group</th><th>Components</th><th>%</th></tr>\r\n          </thead>\r\n          <tbody>\r\n            {taxGroups.map(tg => (\r\n              <tr key={tg.groupName}>\r\n                <td>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={selected.has(tg.groupName)}\r\n                    onChange={e =>\r\n                      this.toggleTaxGroupSelection(tg.groupName, currentTaxIdx, e.target.checked)\r\n                    }\r\n                  />\r\n                </td>\r\n                <td>{tg.groupName}</td>\r\n                <td>{tg.lineItems.map(li => li.component).join(', ')}</td>\r\n                <td>{tg.lineItems.map(li => li.percentOrAmt).join(', ')}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"text-right mt-3\">\r\n          <button className=\"btn btn-sm btn-success\" onClick={() => this.setState({ showTaxOverlay: false })}>\r\n            Done\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\nrenderBillingDetails = () => {\r\n  const { formData } = this.state;\r\n  return (\r\n    <div>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group col-md-3\">\r\n          <label>Invoice No</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control form-control-sm\"\r\n            value={formData.invoiceNo}\r\n            onChange={e => this.handleInputChange('invoiceNo', e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group col-md-3\">\r\n          <label>Invoice Date</label>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-control form-control-sm\"\r\n            value={formData.invoiceDate}\r\n            onChange={e => this.handleInputChange('invoiceDate', e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group col-md-3\">\r\n          <label>Customer Order</label>\r\n          <div className=\"input-group input-group-sm\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={formData.customerOrderId}\r\n              readOnly\r\n              onClick={this.showOrderOverlay}\r\n              style={{ cursor: 'pointer' }}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary btn-sm\"\r\n                type=\"button\"\r\n                onClick={this.showOrderOverlay}\r\n              >\r\n                Select\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <small>\r\n            {formData.customerOrderCompany && (\r\n              <>Company: {formData.customerOrderCompany} | Date: {formData.customerOrderDate}</>\r\n            )}\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group col-md-3\">\r\n          <label>Customer</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control form-control-sm\"\r\n            value={formData.customer}\r\n            readOnly\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* --- Line Items table --- */}\r\n      <div className=\"table-responsive mt-3\">\r\n        <table className=\"table table-bordered table-sm\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>Item Code</th>\r\n              <th>Description</th>\r\n              <th>Cust Part Code</th>\r\n              <th>HSN/SAC</th>\r\n              <th>Locator</th>\r\n              <th>UOM</th>\r\n              <th>On Hand</th>\r\n              <th>Unit Price</th>\r\n              <th>Order Qty</th>\r\n              <th>Recv Qty</th>\r\n              <th>Quantity</th>\r\n              <th>Tax Group</th>\r\n              <th>Tax Amt</th>\r\n              <th>Item Total</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {formData.lineItems.map((item, idx) => (\r\n              <tr key={idx}>\r\n                <td>{item.itemCode}</td>\r\n                <td>{item.itemDescription}</td>\r\n                <td>{item.custPartCode}</td>\r\n                <td>{item.hsnCode}</td>\r\n                <td>{item.locator}</td>\r\n                <td>{item.uom}</td>\r\n                <td>{item.onHand}</td>\r\n                <td>{item.unitPrice}</td>\r\n                <td>{item.orderQty}</td>\r\n                <td>{item.recvQty}</td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control form-control-sm\"\r\n                    value={item.qty}\r\n                    onChange={e => this.handleLineItemChange(idx, 'qty', e.target.value)}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-sm btn-outline-primary\"\r\n                    onClick={() => this.setState({ showTaxOverlay: true, currentTaxIdx: idx })}\r\n                  >\r\n                    {item.taxGroupNames?.join(', ') || 'Select'}\r\n                  </button>\r\n                </td>\r\n                <td>{item.taxAmt}</td>\r\n                <td>{item.total}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nrenderCommercialDetails = () => {\r\n  const { formData } = this.state;\r\n  return (\r\n    <div>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group col-md-4\">\r\n          <label>Despatch Mode</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control form-control-sm\"\r\n            value={formData.despatchMode}\r\n            onChange={e => this.handleInputChange('despatchMode', e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group col-md-4\">\r\n          <label>Payment Terms</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control form-control-sm\"\r\n            value={formData.paymentTerms}\r\n            onChange={e => this.handleInputChange('paymentTerms', e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group col-md-4\">\r\n          <label>Freight Charges</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            value={formData.freightCharges}\r\n            onChange={e => this.handleInputChange('freightCharges', e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nrenderNotes = () => {\r\n  const { formData } = this.state;\r\n  return (\r\n    <div>\r\n      <div className=\"form-group\">\r\n        <label>Notes</label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          rows=\"4\"\r\n          value={formData.notes || ''}\r\n          onChange={e => this.handleInputChange('notes', e.target.value)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n  renderTable = () => (\r\n    <div className=\"card mt-4 full-height\">\r\n      <div className=\"card-body\">\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n          <h4 className=\"card-title\">Customer Order Billing</h4>\r\n          <button className=\"btn btn-primary\" onClick={() => this.setState({ showForm: true })}>+ Add Invoice</button>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-bordered table-hover\">\r\n            <thead className=\"thead-light\">\r\n              <tr>\r\n                <th>Invoice No</th>\r\n                <th>Customer Order</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Invoice Value</th>\r\n                <th>Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.invoices.map((inv, i) => (\r\n                <tr key={i}>\r\n                  <td>{inv.invoiceNo}</td>\r\n                  <td>{inv.customerOrderId}</td>\r\n                  <td>{inv.customer}</td>\r\n                  <td>{inv.invoiceDate}</td>\r\n                  <td>{inv.invoiceValue}</td>\r\n                  <td>{inv.status}</td>\r\n                </tr>\r\n              ))}\r\n              {this.state.invoices.length === 0 && (\r\n                <tr><td colSpan=\"6\" className=\"text-center\">No invoices found.</td></tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  renderForm = () => {\r\n    <div className=\"card full-height\">\r\n  <div style={{ flex: 1, overflowY: 'auto', padding: '24px' }}>\r\n    <h4 className=\"mb-3\">Customer Order Billing</h4>\r\n\r\n    {/* --- Tabs header --- */}\r\n    <ul className=\"nav nav-tabs\">\r\n      <li className=\"nav-item\">\r\n        <button\r\n          className={`nav-link ${this.state.activeTab === 'billing' ? 'active' : ''}`}\r\n          onClick={() => this.setState({ activeTab: 'billing' })}\r\n          type=\"button\"\r\n        >\r\n          Billing Details\r\n        </button>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <button\r\n          className={`nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`}\r\n          onClick={() => this.setState({ activeTab: 'commercial' })}\r\n          type=\"button\"\r\n        >\r\n          Commercial Details\r\n        </button>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <button\r\n          className={`nav-link ${this.state.activeTab === 'notes' ? 'active' : ''}`}\r\n          onClick={() => this.setState({ activeTab: 'notes' })}\r\n          type=\"button\"\r\n        >\r\n          Notes\r\n        </button>\r\n      </li>\r\n    </ul>\r\n\r\n    {/* --- Tab content --- */}\r\n    <div className=\"tab-content mt-3\">\r\n      {this.state.activeTab === 'billing' && (\r\n        <div className=\"tab-pane active\">\r\n          {/* Billing form fields (use your existing invoice fields) */}\r\n          {this.renderBillingDetails()}\r\n        </div>\r\n      )}\r\n      {this.state.activeTab === 'commercial' && (\r\n        <div className=\"tab-pane active\">\r\n          {this.renderCommercialDetails()}\r\n        </div>\r\n      )}\r\n      {this.state.activeTab === 'notes' && (\r\n        <div className=\"tab-pane active\">\r\n          {this.renderNotes()}\r\n        </div>\r\n      )}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        {this.state.showForm ? this.renderForm() : this.renderTable()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomerOrderBilling;"]},"metadata":{},"sourceType":"module"}