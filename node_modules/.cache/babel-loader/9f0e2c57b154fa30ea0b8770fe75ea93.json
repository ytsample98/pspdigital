{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\panelone\\\\Order.js\";\nimport React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport { db } from '../../firebase';\nimport { collection, getDocs, addDoc, doc, updateDoc } from 'firebase/firestore';\nimport html2canvas from 'html2canvas';\nimport { jsPDF } from 'jspdf';\nimport { withRouter } from 'react-router-dom';\n\nconst numberToWords = num => {\n  const a = ['', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine', 'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];\n  const b = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\n  if (num === 0) return 'Zero';\n  if (num < 20) return a[num];\n  if (num < 100) return b[Math.floor(num / 10)] + ' ' + a[num % 10];\n  if (num < 1000) return a[Math.floor(num / 100)] + ' Hundred ' + numberToWords(num % 100);\n  if (num < 100000) return numberToWords(Math.floor(num / 1000)) + ' Thousand ' + numberToWords(num % 1000);\n  return 'Amount too large';\n};\n\nclass Order extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: 'co',\n      orders: [],\n      customers: [],\n      products: [],\n      despatchModes: [],\n      paymentTerms: [],\n      showForm: false,\n      editingId: null,\n      overlayType: '',\n      overlaySearch: '',\n      productOverlayVisible: false,\n      productOverlaySearch: '',\n      selectedProductIds: [],\n      taxGroups: [],\n      showTaxOverlay: false,\n      currentTaxIdx: null,\n      formData: {\n        orderNo: '',\n        orderDate: new Date().toISOString().split('T')[0],\n        orderType: 'Standard',\n        customer: '',\n        status: 'Entered',\n        // Static 'Entered'\n        choose: 'Service',\n        qrefNo: '',\n        impExp: 'None',\n        currency: '',\n        conversionRate: '',\n        taxAmount: '',\n        orderValue: '',\n        billTo: '',\n        shipTo: '',\n        despatchMode: 'By Air',\n        paymentTerms: '',\n        freightCharges: '',\n        freighttaxAmount: '',\n        taxPercent: '',\n        packingCharges: '',\n        lineItems: []\n      }\n    };\n    this.customerInputRef = React.createRef();\n\n    this.formatAddress = addr => {\n      if (!addr) return '';\n      if (typeof addr === 'string') return addr;\n      return [addr.address, [addr.city, addr.state, addr.country].filter(Boolean).join(', '), addr.zip].filter(Boolean).join('\\n');\n    };\n\n    this.calculateOrderTotals = () => {\n      const {\n        impExp,\n        freightCharges,\n        taxPercent,\n        packingCharges,\n        lineItems\n      } = this.state.formData;\n      let freight = parseFloat(freightCharges) || 0;\n      let packing = parseFloat(packingCharges) || 0;\n      let taxOnFreight = 0;\n\n      if (['None', 'CIF'].includes(impExp)) {\n        taxOnFreight = freight * (parseFloat(taxPercent) || 0) / 100;\n      }\n\n      let lineTotal = 0;\n      let itemTaxTotal = 0;\n      const updatedLineItems = lineItems.map(item => {\n        const baseTotal = parseFloat(item.unitPrice || 0) * parseFloat(item.qty || 1);\n        const taxDetails = this.getTaxDetailsFromGroup(item.taxGroup);\n        const taxAmt = baseTotal * taxDetails.totalPercent / 100 + baseTotal * taxDetails.totalAmount;\n        const total = baseTotal + taxAmt;\n        item.total = total.toFixed(2);\n        item.taxAmount = taxAmt.toFixed(2);\n        lineTotal += baseTotal;\n        itemTaxTotal += taxAmt;\n        return item;\n      });\n      const totalTaxAmount = itemTaxTotal + taxOnFreight;\n      const orderValue = lineTotal + freight + packing + itemTaxTotal;\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          taxAmount: totalTaxAmount.toFixed(2),\n          orderValue: orderValue.toFixed(2),\n          lineItems: updatedLineItems\n        }\n      }));\n    };\n\n    this.fetchTaxGroups = async () => {\n      const snap = await getDocs(collection(db, 'taxGroups'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        taxGroups: data\n      });\n    };\n\n    this.fetchorders = async () => {\n      const snap = await getDocs(collection(db, 'orders'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        orders: data.reverse()\n      });\n    };\n\n    this.fetchCustomers = async () => {\n      const snap = await getDocs(collection(db, 'customers'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        customers: data\n      });\n    };\n\n    this.fetchProducts = async () => {\n      const snap = await getDocs(collection(db, 'products'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        products: data\n      });\n    };\n\n    this.fetchDespatchModes = async () => {\n      const snap = await getDocs(collection(db, 'modes'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        despatchModes: data\n      });\n    };\n\n    this.fetchPaymentTerms = async () => {\n      const snap = await getDocs(collection(db, 'paymentTerms'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        paymentTerms: data\n      });\n    };\n\n    this.handleInputChange = (field, value) => {\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          [field]: value\n        }\n      }));\n    };\n\n    this.handleLineItemChange = (idx, field, value) => {\n      this.setState(prev => {\n        const lineItems = [...prev.formData.lineItems];\n        const item = { ...lineItems[idx]\n        };\n\n        if (field === 'taxGroup') {\n          item.taxGroup = value; // Optional: Set taxPercent for display\n\n          const taxDetails = this.getTaxDetailsFromGroup(value);\n          item.taxPercent = taxDetails.totalPercent;\n        } else {\n          item[field] = value;\n        }\n\n        lineItems[idx] = item;\n        return {\n          formData: { ...prev.formData,\n            lineItems\n          }\n        };\n      }, this.calculateOrderTotals); // <== 🔁 Recalculate after setState\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        editingId,\n        formData,\n        orders\n      } = this.state;\n      if (!formData.customer) return alert(\"Customer is required\");\n      if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\n\n      if (editingId) {\n        await updateDoc(doc(db, 'orders', editingId), formData);\n      } else {\n        formData.orderNo = `PO${1000 + orders.length}`;\n        await addDoc(collection(db, 'orders'), formData);\n      }\n\n      this.setState({\n        showForm: false,\n        editingId: null\n      });\n      this.fetchorders();\n    };\n\n    this.loadorderForEdit = order => {\n      this.setState({\n        formData: { ...order,\n          lineItems: Array.isArray(order.lineItems) ? order.lineItems : [] // Ensure array\n\n        },\n        editingId: order.id,\n        showForm: true,\n        activeTab: 'co'\n      }, () => {\n        if (this.customerInputRef.current) {\n          this.customerInputRef.current.value = order.customer;\n        }\n      });\n    };\n\n    this.showOverlay = type => this.setState({\n      overlayType: type,\n      overlaySearch: ''\n    });\n\n    this.hideOverlay = () => this.setState({\n      overlayType: '',\n      overlaySearch: ''\n    });\n\n    this.selectOverlayValue = value => {\n      if (this.state.overlayType === 'customer') {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            customer: value.custname || value.custcode || '',\n            // Use custname or custcode\n            billTo: this.formatAddress(value.billTo),\n            shipTo: this.formatAddress(value.shipTo),\n            currency: value.currency || '' // despatchMode: value.despatchMode || '', // No auto-fill for despatch mode\n            // paymentTerms: value.paymentTerms || '' // No auto-fill for payment terms\n\n          },\n          overlayType: '',\n          overlaySearch: ''\n        }), () => {\n          if (this.customerInputRef.current) {\n            this.customerInputRef.current.value = value.custname || value.custcode || '';\n          }\n        });\n      }\n    };\n\n    this.showOrderPDFWithOrg = async order => {\n      var _orgSnap$docs$, _order$billTo, _order$shipTo;\n\n      if (!order || !Array.isArray(order.lineItems) || order.lineItems.length === 0) {\n        alert(\"Order data is incomplete.\");\n        return;\n      }\n\n      const orgSnap = await getDocs(collection(db, 'businessGroups'));\n      const org = ((_orgSnap$docs$ = orgSnap.docs[0]) === null || _orgSnap$docs$ === void 0 ? void 0 : _orgSnap$docs$.data()) || {};\n      const customer = this.state.customers.find(c => c.custshortName === order.customer) || {};\n      const subtotal = order.lineItems.reduce((sum, i) => sum + (parseFloat(i.total) || 0), 0);\n      const tax = parseFloat(order.taxAmount || 0);\n      const total = subtotal + tax;\n      const amountWords = `INR ${numberToWords(Math.floor(total))} Only`;\n      const enrichedItems = order.lineItems.map(item => {\n        const product = this.state.products.find(p => p.productId === item.itemCode) || {};\n        return { ...item,\n          ptshortName: product.ptshortName || '',\n          hsnCode: product.hsnCode || '',\n          uom: product.stockingUOM || ''\n        };\n      });\n      const taxSummary = {};\n      order.lineItems.forEach(item => {\n        const group = item.taxGroup || 'Nill';\n        const percent = parseFloat(item.taxPercent || 0);\n        const total = parseFloat(item.total || 0);\n        const taxAmt = percent * total / 100;\n        if (!taxSummary[group]) taxSummary[group] = 0;\n        taxSummary[group] += taxAmt;\n      });\n      const container = document.createElement('div');\n      container.id = 'pdf-preview-container';\n      container.style.width = '794px';\n      container.style.padding = '40px';\n      container.style.fontFamily = 'Arial';\n      container.innerHTML = `\n    <div style=\"display:flex; justify-content:space-between; align-items:center;\">\n      <img src=\"${org.logoUrl || ''}\" style=\"height:50px;\" />\n      <div style=\"font-size:18px; font-weight:bold;\">SALES ORDER</div>\n    </div>\n    <hr/>\n    <div style=\"display:flex; justify-content:space-between; font-size:11px;\">\n      <div style=\"line-height:1.5; width:50%;\">\n        <b>${org.bgName || ''}</b><br/>\n        ${org.address || ''}<br/>\n        <b>Email:</b> ${org.email || ''}<br/>\n        <b>Website:</b> ${org.website || ''}<br/>\n        <b>GSTIN:</b> ${org.gstin || ''}\n      </div>\n      <table style=\"font-size:11px; text-align:left;\">\n        <tr><td><b>Order No</b></td><td>: ${order.orderNo}</td></tr>\n        <tr><td><b>Order Date</b></td><td>: ${order.orderDate}</td></tr>\n        <tr><td><b>Currency</b></td><td>: ${order.currency || 'INR'}</td></tr>\n        <tr><td><b>Despatch</b></td><td>: ${order.despatchMode || ''}</td></tr>\n      </table>\n    </div>\n\n    <div style=\"margin-top:15px; display:flex; justify-content:space-between; font-size:11px;\">\n      <div style=\"width:48%;\">\n        <b style=\"background:#011b56; color:#fff; display:block; padding:4px;\">Bill To</b>\n        <div style=\"border:1px solid #ccc; padding:6px;\">\n          ${((_order$billTo = order.billTo) === null || _order$billTo === void 0 ? void 0 : _order$billTo.replace(/\\n/g, '<br/>')) || ''}\n          \n        </div>\n        <div style=\"font-size:10px; margin-top:6px;\">\n            <b>GSTIN:</b> ${customer.gstin || ''}<br/>\n            <b>Email:</b> ${customer.email || ''}<br/>\n            <b>Contact:</b> ${customer.contactPerson || ''}<br/>\n            <b>Phone:</b> ${customer.phone || ''}\n          </div>\n      </div>\n      <div style=\"width:48%;\">\n        <b style=\"background:#011b56; color:#fff; display:block; padding:4px;\">Ship To</b>\n        <div style=\"border:1px solid #ccc; padding:6px;\">\n          ${((_order$shipTo = order.shipTo) === null || _order$shipTo === void 0 ? void 0 : _order$shipTo.replace(/\\n/g, '<br/>')) || ''}\n        </div>\n      </div>\n    </div>\n\n    <table style=\"width:100%; border-collapse:collapse; margin-top:20px; font-size:10px;\">\n      <thead>\n        <tr style=\"background:#f4f6fa;\">\n          <th style=\"border:1px solid #011b56;\">Item Code</th>\n          <th style=\"border:1px solid #011b56;\">Short</th>\n          <th style=\"border:1px solid #011b56;\">Description</th>\n          <th style=\"border:1px solid #011b56;\">HSN</th>\n          <th style=\"border:1px solid #011b56;\">UOM</th>\n          <th style=\"border:1px solid #011b56;\">Qty</th>\n          <th style=\"border:1px solid #011b56;\">Unit Price</th>\n          <th style=\"border:1px solid #011b56;\">Total</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${enrichedItems.map(item => `\n          <tr>\n            <td style=\"border:1px solid #011b56;\">${item.itemCode}</td>\n            <td style=\"border:1px solid #011b56;\">${item.ptshortName}</td>\n            <td style=\"border:1px solid #011b56;\">${item.itemDescription}</td>\n            <td style=\"border:1px solid #011b56;\">${item.hsnCode}</td>\n            <td style=\"border:1px solid #011b56;\">${item.uom}</td>\n            <td style=\"border:1px solid #011b56;\">${item.qty}</td>\n            <td style=\"border:1px solid #011b56;\">${item.unitPrice}</td>\n            <td style=\"border:1px solid #011b56;\">${item.total}</td>\n          </tr>`).join('')}\n        <tr><td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\">Subtotal</td><td style=\"border:1px solid #011b56;\">${subtotal.toFixed(2)}</td></tr>${Object.entries(taxSummary).map(([group, amt]) => `\n  <tr>\n    <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\">Tax - ${group}</td>\n    <td style=\"border:1px solid #011b56;\">${amt.toFixed(2)}</td>\n  </tr>\n`).join('')}\n\n        <tr><td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>Total</b></td><td style=\"border:1px solid #011b56;\"><b>${total.toFixed(2)}</b></td></tr>\n      </tbody>\n    </table>\n\n    <div style=\"margin-top:8px; font-size:11px;\"><b>Amount in Words:</b> ${amountWords}</div>\n    <div style=\"text-align:right; font-size:11px; margin-top:30px;\">For ${org.bgName}<br/><br/><br/>Authorized Signatory</div>\n    <div style=\"margin-top:20px; text-align:right; font-size:10px;\">Printed on ${new Date().toLocaleString()}</div>\n  `;\n      document.body.appendChild(container);\n      const canvas = await html2canvas(container, {\n        scale: 2,\n        useCORS: true\n      });\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'pt', 'a4');\n      const width = 595.28;\n      const height = canvas.height * width / canvas.width;\n      pdf.addImage(imgData, 'PNG', 0, 0, width, height);\n      const blob = pdf.output('blob');\n      const url = URL.createObjectURL(blob);\n      const newWin = window.open();\n      newWin.document.write(`\n    <html><head><title>PDF Preview</title></head>\n    <body style=\"margin:0;\">\n      <iframe width=\"100%\" height=\"100%\" style=\"border:none;\" src=\"${url}\"></iframe>\n      <button onclick=\"document.querySelector('iframe').contentWindow.print()\" style=\"position:fixed;top:10px;right:110px;\"></button>\n      <a href=\"${url}\" download=\"Sales_Order_${order.orderNo || 'PDF'}.pdf\" style=\"position:fixed;top:10px;right:10px;\"></a>\n    </body></html>\n  `);\n      newWin.document.close();\n      document.body.removeChild(container);\n    };\n\n    this.renderOverlay = () => {\n      const {\n        overlayType,\n        overlaySearch,\n        customers,\n        despatchModes,\n        paymentTerms\n      } = this.state;\n\n      const getFilteredRows = (list, nameKey = 'name', codeKey = 'shortName') => list.filter(item => (item[nameKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()) || (item[codeKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()));\n\n      const handleSelect = item => {\n        if (overlayType === 'customer') {\n          this.selectOverlayValue(item);\n        } else if (overlayType === 'despatchMode') {\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              despatchMode: item.name\n            },\n            overlayType: '',\n            overlaySearch: ''\n          }));\n        } else if (overlayType === 'paymentTerms') {\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              paymentTerms: item.name\n            },\n            overlayType: '',\n            overlaySearch: ''\n          }));\n        }\n      };\n\n      let title = '';\n      let headers = [];\n      let rows = [];\n\n      if (overlayType === 'customer') {\n        title = 'Select Customer';\n        headers = ['Name', 'Code', 'Short Name'];\n        rows = getFilteredRows(customers, 'custname', 'custcode');\n      } else if (overlayType === 'despatchMode') {\n        title = 'Select Despatch Mode';\n        headers = ['Name'];\n        rows = getFilteredRows(despatchModes);\n      } else if (overlayType === 'paymentTerms') {\n        title = 'Select Payment Terms';\n        headers = ['Name'];\n        rows = getFilteredRows(paymentTerms);\n      } else {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 9\n        }\n      }, title), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: `Search ${overlayType}...`,\n        value: overlaySearch,\n        onChange: e => this.setState({\n          overlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 15\n        }\n      }, headers.map((h, i) => /*#__PURE__*/React.createElement(\"th\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 40\n        }\n      }, h)))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 13\n        }\n      }, rows.map((item, i) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id || i,\n        onClick: () => handleSelect(item),\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 17\n        }\n      }, headers.map((h, j) => /*#__PURE__*/React.createElement(\"td\", {\n        key: j,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 21\n        }\n      }, overlayType === 'customer' ? h === 'Name' ? item.custname : h === 'Code' ? item.custcode : item.custshortName : h === 'Name' ? item.name : item.shortName)))), rows.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: headers.length,\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 19\n        }\n      }, \"No records found\"))))), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm mt-2\",\n        onClick: this.hideOverlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 9\n        }\n      }, \"Cancel\")));\n    };\n\n    this.renderTaxOverlay = () => {\n      const {\n        taxGroups,\n        currentTaxIdx\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 9\n        }\n      }, \"Select Tax Group\"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 17\n        }\n      }, \"Group Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 17\n        }\n      }, \"Classification\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 13\n        }\n      }, taxGroups.map(group => {\n        // Compute total percentage from lineItems\n        let totalPercent = 0;\n\n        if (group.lineItems && group.lineItems.length) {\n          totalPercent = group.lineItems.filter(i => i.type === 'Percentage').reduce((acc, i) => acc + parseFloat(i.percentOrAmt || 0), 0);\n        }\n\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: group.groupName,\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: () => {\n            const formData = { ...this.state.formData\n            };\n            const items = [...formData.lineItems];\n            items[currentTaxIdx].taxGroup = group.groupName;\n            items[currentTaxIdx].taxPercent = totalPercent;\n            formData.lineItems = items;\n            this.setState({\n              formData,\n              showTaxOverlay: false,\n              currentTaxIdx: null\n            }, this.calculateOrderTotals);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 21\n          }\n        }, group.groupName), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 21\n          }\n        }, group.classification));\n      })))), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-secondary mt-2\",\n        onClick: () => this.setState({\n          showTaxOverlay: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 9\n        }\n      }, \"Cancel\")));\n    };\n\n    this.renderProductOverlay = () => {\n      const {\n        products,\n        productOverlaySearch,\n        selectedProductIds\n      } = this.state;\n      const filtered = products.filter(p => (p.ptshortName || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) || (p.ptdescription || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) || (p.itemCode || '').toLowerCase().includes(productOverlaySearch.toLowerCase()));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 13\n        }\n      }, \"Select Products\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-success btn-sm\",\n        onClick: () => {\n          const selectedProducts = products.filter(p => this.state.selectedProductIds.includes(p.id));\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              lineItems: [...prev.formData.lineItems, ...selectedProducts.filter(p => !prev.formData.lineItems.some(item => item.id === p.id)).map(p => ({\n                id: p.id,\n                itemCode: p.productId || '',\n                itemDescription: p.ptdescription || '',\n                itemType: p.itemType || '',\n                materialType: p.materialType || '',\n                onHand: p.onHand || 0,\n                taxGroup: p.taxGroup || '',\n                custPartNo: p.custPartNo || '',\n                // Assuming this is cust part table\n                hsnNo: p.hsnNo || '',\n                // Assuming HSN No.\n                unitPrice: p.unitPrice || 0,\n                qty: 1,\n                total: (p.unitPrice || 0).toFixed(2)\n              }))]\n            },\n            productOverlayVisible: false,\n            selectedProductIds: []\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 13\n        }\n      }, \"Add Selected\")), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: \"Search products...\",\n        value: productOverlaySearch,\n        onChange: e => this.setState({\n          productOverlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 19\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 19\n        }\n      }, \"Item Desc\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 19\n        }\n      }, \"Item Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 19\n        }\n      }, \"Material Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 19\n        }\n      }, \"On Hand\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 19\n        }\n      }, \"Tax Grp\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 19\n        }\n      }, \"Cust Part No\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 15\n        }\n      }, filtered.map(p => /*#__PURE__*/React.createElement(\"tr\", {\n        key: p.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: selectedProductIds.includes(p.id),\n        onChange: e => {\n          const checked = e.target.checked;\n          this.setState(prev => ({\n            selectedProductIds: checked ? [...prev.selectedProductIds, p.id] : prev.selectedProductIds.filter(id => id !== p.id)\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 21\n        }\n      }, p.productId), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 21\n        }\n      }, p.ptdescription || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 21\n        }\n      }, p.itemType || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 21\n        }\n      }, p.materialType || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 21\n        }\n      }, p.onHand || 0), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 21\n        }\n      }, p.taxGroup || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 21\n        }\n      }, p.custPartNo || ''))), filtered.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"8\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 21\n        }\n      }, \"No products found\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 13\n        }\n      }, \"Page 1 of 1\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        onClick: () => this.setState({\n          productOverlayVisible: false,\n          selectedProductIds: []\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 13\n        }\n      }, \"Cancel\"))));\n    };\n\n    this.renderorderTable = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-4 full-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 801,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 11\n      }\n    }, \"Orders\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.setState({\n        showForm: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 11\n      }\n    }, \"+ Add Order\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 17\n      }\n    }, \"Order No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 17\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 17\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 17\n      }\n    }, \"Order Value\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 17\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 17\n      }\n    }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 13\n      }\n    }, this.state.orders.map((q, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-link p-0\",\n      onClick: () => this.loadorderForEdit(q),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 21\n      }\n    }, q.orderNo)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 830,\n        columnNumber: 19\n      }\n    }, q.customer), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 19\n      }\n    }, q.orderDate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 19\n      }\n    }, q.orderValue), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"badge badge-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 23\n      }\n    }, q.status)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"mdi mdi-printer menu-icon\",\n      onClick: () => this.showOrderPDFWithOrg(q),\n      style: {\n        fontSize: '24px',\n        color: '#2196F3',\n        cursor: 'pointer'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 21\n      }\n    })))), this.state.orders.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"6\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 21\n      }\n    }, \"No orders found.\")))))));\n\n    this.renderorderForm = () => {\n      const {\n        formData,\n        overlayType,\n        productOverlayVisible\n      } = this.state;\n      const isFOB = formData.impExp === 'FOB';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card full-height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: 'auto',\n          padding: '24px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 13\n        }\n      }, \"Order Form\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"nav nav-tabs\",\n        role: \"tablist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'co' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'co'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 17\n        }\n      }, \"CO Details\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'commercial'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 17\n        }\n      }, \"Commercial Terms\"))), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"form-sample\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tab-content pt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 15\n        }\n      }, this.state.activeTab === 'co' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 874,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 876,\n          columnNumber: 25\n        }\n      }, \"Order No\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.orderNo,\n        onChange: e => this.handleInputChange('orderNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 25\n        }\n      }, \"Order Date\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"date\",\n        className: \"form-control form-control-sm\",\n        value: formData.orderDate,\n        onChange: e => this.handleInputChange('orderDate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 25\n        }\n      }, \"Order Type\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.orderType,\n        onChange: e => this.handleInputChange('orderType', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 885,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 27\n        }\n      }, \"Standard\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 887,\n          columnNumber: 27\n        }\n      }, \"Manual\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 891,\n          columnNumber: 25\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.status,\n        style: {\n          backgroundColor: '#fff'\n        },\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 892,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 896,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 897,\n          columnNumber: 25\n        }\n      }, \"Customer\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 898,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Choose Customer\",\n        ref: this.customerInputRef,\n        value: formData.customer,\n        readOnly: true,\n        onClick: () => this.showOverlay('customer'),\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 899,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        onClick: () => this.showOverlay('customer'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 29\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 914,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 25\n        }\n      }, \"IMP/EXP\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.impExp,\n        onChange: e => this.handleInputChange('impExp', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 921,\n          columnNumber: 27\n        }\n      }, \"None\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 27\n        }\n      }, \"COB\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 27\n        }\n      }, \"FOB\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 27\n        }\n      }, \"CIF\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 927,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 928,\n          columnNumber: 25\n        }\n      }, \"Ref No.\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.qrefNo,\n        onChange: e => this.handleInputChange('qrefNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 929,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 25\n        }\n      }, \"Choose\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check mr-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 939,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        className: \"form-check-input\",\n        name: \"choose\",\n        id: \"chooseService\",\n        value: \"Service\",\n        checked: formData.choose === 'Service',\n        onChange: e => this.handleInputChange('choose', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 940,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"chooseService\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 941,\n          columnNumber: 29\n        }\n      }, \"Service\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        className: \"form-check-input\",\n        name: \"choose\",\n        id: \"chooseProduct\",\n        value: \"Product\",\n        checked: formData.choose === 'Product',\n        onChange: e => this.handleInputChange('choose', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"chooseProduct\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 945,\n          columnNumber: 29\n        }\n      }, \"Product\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 952,\n          columnNumber: 25\n        }\n      }, \"Currency\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.currency,\n        style: {\n          backgroundColor: '#fff'\n        },\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 953,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 962,\n          columnNumber: 25\n        }\n      }, \"Conversion Rate\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.conversionRate,\n        onChange: e => this.handleInputChange('conversionRate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 963,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 970,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 971,\n          columnNumber: 25\n        }\n      }, \"Tax Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxAmount,\n        onChange: e => this.handleInputChange('taxAmount', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 972,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 980,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 981,\n          columnNumber: 25\n        }\n      }, \"Order Value\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.orderValue,\n        onChange: e => this.handleInputChange('orderValue', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 982,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 992,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 993,\n          columnNumber: 29\n        }\n      }, \"Line Item\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-sm\",\n        onClick: () => this.setState({\n          productOverlayVisible: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 994,\n          columnNumber: 29\n        }\n      }, \"+ Add Product\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-responsive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 998,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 999,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1000,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1001,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1002,\n          columnNumber: 35\n        }\n      }, \" Item Code \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1003,\n          columnNumber: 35\n        }\n      }, \" Item Desc \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 35\n        }\n      }, \" Cust Part No \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1005,\n          columnNumber: 35\n        }\n      }, \" HSN No \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1006,\n          columnNumber: 35\n        }\n      }, \" On Hand \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1007,\n          columnNumber: 35\n        }\n      }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1008,\n          columnNumber: 35\n        }\n      }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1009,\n          columnNumber: 35\n        }\n      }, \"Tax Id\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1010,\n          columnNumber: 35\n        }\n      }, \"Item Total\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1011,\n          columnNumber: 35\n        }\n      }, \"Tax Amt\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1014,\n          columnNumber: 31\n        }\n      }, formData.lineItems.map((item, idx) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id || idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1017,\n          columnNumber: 37\n        }\n      }, item.itemCode), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1018,\n          columnNumber: 37\n        }\n      }, item.itemDescription), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1019,\n          columnNumber: 37\n        }\n      }, item.custPartNo), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1020,\n          columnNumber: 37\n        }\n      }, item.hsnNo), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1021,\n          columnNumber: 37\n        }\n      }, item.onHand), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        value: item.unitPrice,\n        onChange: e => this.handleLineItemChange(idx, 'unitPrice', e.target.value),\n        style: {\n          width: 80\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1023,\n          columnNumber: 39\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1030,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        min: \"1\",\n        value: item.qty,\n        onChange: e => this.handleLineItemChange(idx, 'qty', e.target.value),\n        style: {\n          width: 60\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1031,\n          columnNumber: 39\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1039,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        value: item.taxGroup || '',\n        onChange: e => {\n          const val = e.target.value;\n\n          if (val === 'more') {\n            this.setState({\n              showTaxOverlay: true,\n              currentTaxIdx: idx\n            });\n          } else {\n            this.handleLineItemChange(idx, 'taxGroup', val);\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1040,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1051,\n          columnNumber: 5\n        }\n      }, \"-Select-\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"nill\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1052,\n          columnNumber: 5\n        }\n      }, \"Nill Tax\"), Array.isArray(this.state.taxGroups) && this.state.taxGroups.map(group => {\n        var _group$lineItems;\n\n        const percent = ((_group$lineItems = group.lineItems) === null || _group$lineItems === void 0 ? void 0 : _group$lineItems.filter(i => i.type === 'Percentage').reduce((acc, i) => acc + parseFloat(i.percentOrAmt || 0), 0)) || 0;\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: group.groupName,\n          value: group.groupName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1059,\n            columnNumber: 9\n          }\n        }, group.groupName, \" (\", percent, \"%)\");\n      }), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"more\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1065,\n          columnNumber: 5\n        }\n      }, \"More\"))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1069,\n          columnNumber: 39\n        }\n      }, item.taxAmount || '0.00'), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1070,\n          columnNumber: 39\n        }\n      }, item.total || '0.00'))), formData.lineItems.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1074,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"9\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1075,\n          columnNumber: 37\n        }\n      }, \"No items\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1082,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1083,\n          columnNumber: 29\n        }\n      }, \"Page 1 of 1\"))), this.state.activeTab === 'commercial' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1090,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1091,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1092,\n          columnNumber: 25\n        }\n      }, \"Bill To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"3\",\n        value: formData.billTo,\n        onChange: e => this.handleInputChange('billTo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1093,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1100,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1101,\n          columnNumber: 25\n        }\n      }, \"Ship To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"3\",\n        value: formData.shipTo,\n        onChange: e => this.handleInputChange('shipTo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1102,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1110,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1111,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1112,\n          columnNumber: 3\n        }\n      }, \"Despatch Mode\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1113,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: formData.despatchMode,\n        readOnly: true,\n        onClick: () => !isFOB && this.showOverlay('despatchMode'),\n        style: {\n          cursor: isFOB ? 'not-allowed' : 'pointer',\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1114,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1122,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        disabled: isFOB,\n        onClick: () => this.showOverlay('despatchMode'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1123,\n          columnNumber: 7\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1135,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1136,\n          columnNumber: 3\n        }\n      }, \"Payment Terms\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1137,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: formData.paymentTerms,\n        readOnly: true,\n        onClick: () => !isFOB && this.showOverlay('paymentTerms'),\n        style: {\n          cursor: isFOB ? 'not-allowed' : 'pointer',\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1138,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1146,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        disabled: isFOB,\n        onClick: () => this.showOverlay('paymentTerms'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1147,\n          columnNumber: 7\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1159,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1160,\n          columnNumber: 25\n        }\n      }, \"Freight Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.freightCharges,\n        onChange: e => this.handleInputChange('freightCharges', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1161,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1170,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1171,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1172,\n          columnNumber: 25\n        }\n      }, \"Tax %\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxPercent,\n        onChange: e => this.handleInputChange('taxPercent', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1173,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1181,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1182,\n          columnNumber: 25\n        }\n      }, \"Freight Tax Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxAmount,\n        onChange: e => this.handleInputChange('freighttaxAmount', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1183,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1191,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1192,\n          columnNumber: 25\n        }\n      }, \"Packing Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.packingCharges,\n        onChange: e => this.handleInputChange('packingCharges', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1193,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1202,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1203,\n          columnNumber: 23\n        }\n      }, \"Save All Details\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fixed-card-footer text-right p-3 border-top bg-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1208,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1209,\n          columnNumber: 17\n        }\n      }, \"Save All Details\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: () => this.setState({\n          showForm: false,\n          editingId: null\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1210,\n          columnNumber: 17\n        }\n      }, \"Cancel\"))), overlayType && this.renderOverlay(), productOverlayVisible && this.renderProductOverlay())));\n    };\n  }\n\n  componentDidMount() {\n    bsCustomFileInput.init();\n    this.fetchorders();\n    this.fetchCustomers();\n    this.fetchProducts();\n    this.fetchDespatchModes();\n    this.fetchPaymentTerms();\n    this.calculateOrderTotals();\n    this.fetchTaxGroups();\n    const quoteFromSession = sessionStorage.getItem('quoteToConvert');\n\n    if (quoteFromSession && !this.state.showForm) {\n      const quote = JSON.parse(quoteFromSession);\n      sessionStorage.removeItem('quoteToConvert');\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          ...quote,\n          orderNo: `PO${1000 + prev.orders.length}`,\n          orderDate: new Date().toISOString().split('T')[0],\n          status: 'Entered',\n          orderType: 'Standard',\n          orderValue: quote.quoteValue,\n          quoteNo: quote.quoteNo\n        },\n        showForm: true\n      }));\n    }\n  }\n\n  getTaxDetailsFromGroup(groupName) {\n    if (!groupName || groupName === 'nill' || groupName === 'more') return {\n      totalPercent: 0,\n      totalAmount: 0\n    };\n    const group = this.state.taxGroups.find(tg => tg.groupName === groupName);\n    if (!group || !Array.isArray(group.lineItems)) return {\n      totalPercent: 0,\n      totalAmount: 0\n    };\n    let totalPercent = 0;\n    let totalAmount = 0;\n    group.lineItems.forEach(item => {\n      if (item.type === 'Percentage') {\n        totalPercent += parseFloat(item.percentOrAmt || 0);\n      } else if (item.type === 'Amount') {\n        totalAmount += parseFloat(item.percentOrAmt || 0);\n      }\n    });\n    return {\n      totalPercent,\n      totalAmount\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // Customer details auto-fill\n    if (this.state.showForm && this.state.customers.length > 0 && this.state.formData.customer && (prevState.formData.customer !== this.state.formData.customer || !this.state.formData.billTo && !this.state.formData.shipTo)) {\n      const customerObj = this.state.customers.find(c => c.custname === this.state.formData.customer || c.custcode === this.state.formData.customer);\n\n      if (customerObj) {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            billTo: this.formatAddress(customerObj.billTo),\n            shipTo: this.formatAddress(customerObj.shipTo),\n            currency: customerObj.currency || '' // paymentTerms: customerObj.paymentTerms || '', // No auto-fill for payment terms\n            // despatchMode: customerObj.despatchMode || '' // No auto-fill for despatch mode\n\n          }\n        }));\n      }\n    } // Freight and Tax calculation based on impExp\n\n\n    const {\n      impExp,\n      freightCharges,\n      taxPercent,\n      packingCharges,\n      lineItems\n    } = this.state.formData;\n\n    if (['None', 'CIF'].includes(impExp)) {\n      const freight = parseFloat(freightCharges) || 0;\n      const tax = parseFloat(taxPercent) || 0;\n      const packing = parseFloat(packingCharges) || 0;\n      const taxAmount = freight * tax / 100;\n      const lineTotal = lineItems.reduce((sum, item) => {\n        const total = parseFloat(item.total) || 0;\n        return sum + total;\n      }, 0);\n      const orderValue = lineTotal + freight + taxAmount + packing;\n\n      if (this.state.formData.taxAmount !== taxAmount.toFixed(2) || this.state.formData.orderValue !== orderValue.toFixed(2)) {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            taxAmount: taxAmount.toFixed(2),\n            orderValue: orderValue.toFixed(2)\n          }\n        }));\n      }\n    } else if (impExp === 'FOB') {\n      if (this.state.formData.freightCharges !== '' || this.state.formData.taxPercent !== '' || this.state.formData.taxAmount !== '' || this.state.formData.packingCharges !== '') {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            freightCharges: '',\n            taxPercent: '',\n            taxAmount: '',\n            packingCharges: '',\n            orderValue: ''\n          }\n        }));\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1230,\n        columnNumber: 7\n      }\n    }, this.state.showForm ? this.renderorderForm() : this.renderorderTable());\n  }\n\n}\n\nexport default withRouter(Order);","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/panelone/Order.js"],"names":["React","Component","Form","bsCustomFileInput","db","collection","getDocs","addDoc","doc","updateDoc","html2canvas","jsPDF","withRouter","numberToWords","num","a","b","Math","floor","Order","state","activeTab","orders","customers","products","despatchModes","paymentTerms","showForm","editingId","overlayType","overlaySearch","productOverlayVisible","productOverlaySearch","selectedProductIds","taxGroups","showTaxOverlay","currentTaxIdx","formData","orderNo","orderDate","Date","toISOString","split","orderType","customer","status","choose","qrefNo","impExp","currency","conversionRate","taxAmount","orderValue","billTo","shipTo","despatchMode","freightCharges","freighttaxAmount","taxPercent","packingCharges","lineItems","customerInputRef","createRef","formatAddress","addr","address","city","country","filter","Boolean","join","zip","calculateOrderTotals","freight","parseFloat","packing","taxOnFreight","includes","lineTotal","itemTaxTotal","updatedLineItems","map","item","baseTotal","unitPrice","qty","taxDetails","getTaxDetailsFromGroup","taxGroup","taxAmt","totalPercent","totalAmount","total","toFixed","totalTaxAmount","setState","prev","fetchTaxGroups","snap","data","docs","id","fetchorders","reverse","fetchCustomers","fetchProducts","fetchDespatchModes","fetchPaymentTerms","handleInputChange","field","value","handleLineItemChange","idx","handleSubmit","e","preventDefault","alert","length","loadorderForEdit","order","Array","isArray","current","showOverlay","type","hideOverlay","selectOverlayValue","custname","custcode","showOrderPDFWithOrg","orgSnap","org","find","c","custshortName","subtotal","reduce","sum","i","tax","amountWords","enrichedItems","product","p","productId","itemCode","ptshortName","hsnCode","uom","stockingUOM","taxSummary","forEach","group","percent","container","document","createElement","style","width","padding","fontFamily","innerHTML","logoUrl","bgName","email","website","gstin","replace","contactPerson","phone","itemDescription","Object","entries","amt","toLocaleString","body","appendChild","canvas","scale","useCORS","imgData","toDataURL","pdf","height","addImage","blob","output","url","URL","createObjectURL","newWin","window","open","write","close","removeChild","renderOverlay","getFilteredRows","list","nameKey","codeKey","toLowerCase","handleSelect","name","title","headers","rows","target","maxHeight","overflowY","h","cursor","j","shortName","renderTaxOverlay","acc","percentOrAmt","groupName","items","classification","renderProductOverlay","filtered","ptdescription","selectedProducts","some","itemType","materialType","onHand","custPartNo","hsnNo","checked","renderorderTable","fontSize","q","color","renderorderForm","isFOB","flex","backgroundColor","val","componentDidMount","init","quoteFromSession","sessionStorage","getItem","quote","JSON","parse","removeItem","quoteValue","quoteNo","tg","componentDidUpdate","prevProps","prevState","customerObj","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport bsCustomFileInput from 'bs-custom-file-input';\r\nimport { db } from '../../firebase';\r\nimport { collection, getDocs, addDoc, doc, updateDoc } from 'firebase/firestore';\r\nimport html2canvas from 'html2canvas';\r\nimport { jsPDF } from 'jspdf'; \r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst numberToWords = (num) => {\r\n  const a = ['', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine',\r\n    'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen',\r\n    'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];\r\n  const b = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\r\n\r\n  if (num === 0) return 'Zero';\r\n  if (num < 20) return a[num];\r\n  if (num < 100) return b[Math.floor(num / 10)] + ' ' + a[num % 10];\r\n  if (num < 1000)\r\n    return a[Math.floor(num / 100)] + ' Hundred ' + numberToWords(num % 100);\r\n  if (num < 100000)\r\n    return numberToWords(Math.floor(num / 1000)) + ' Thousand ' + numberToWords(num % 1000);\r\n  return 'Amount too large';\r\n};\r\n\r\nclass Order extends Component {\r\n  state = {\r\n    activeTab: 'co',\r\n    orders: [],\r\n    customers: [],\r\n    products: [],\r\n    despatchModes: [],\r\n    paymentTerms: [],\r\n    showForm: false,\r\n    editingId: null,\r\n    overlayType: '',\r\n    overlaySearch: '',\r\n    productOverlayVisible: false,\r\n    productOverlaySearch: '',\r\n    selectedProductIds: [],\r\n    taxGroups: [],\r\n    showTaxOverlay: false,\r\n    currentTaxIdx: null,\r\n    formData: {\r\n      orderNo: '',\r\n      orderDate: new Date().toISOString().split('T')[0],\r\n      orderType: 'Standard',\r\n      customer: '',\r\n      status: 'Entered', // Static 'Entered'\r\n      choose: 'Service',\r\n      qrefNo: '',\r\n      impExp: 'None',\r\n      currency: '',\r\n      conversionRate: '',\r\n      taxAmount: '',\r\n      orderValue: '',\r\n      billTo: '',\r\n      shipTo: '',\r\n      despatchMode: 'By Air',\r\n      paymentTerms: '',\r\n      freightCharges: '',\r\n      freighttaxAmount: '',\r\n      taxPercent: '',\r\n      packingCharges: '',\r\n      lineItems: [],\r\n    }\r\n  };\r\n  customerInputRef = React.createRef();\r\n\r\n  // Helper to format address for Bill To / Ship To\r\n  formatAddress = (addr) => {\r\n    if (!addr) return '';\r\n    if (typeof addr === 'string') return addr;\r\n    return [\r\n      addr.address,\r\n      [addr.city, addr.state, addr.country].filter(Boolean).join(', '),\r\n      addr.zip\r\n    ].filter(Boolean).join('\\n');\r\n  };\r\n\r\n  componentDidMount() {\r\n    bsCustomFileInput.init();\r\n    this.fetchorders();\r\n    this.fetchCustomers();\r\n    this.fetchProducts();\r\n    this.fetchDespatchModes();\r\n    this.fetchPaymentTerms();\r\n    this.calculateOrderTotals();\r\n    this.fetchTaxGroups();\r\n\r\n    const quoteFromSession = sessionStorage.getItem('quoteToConvert');\r\n    if (quoteFromSession && !this.state.showForm) {\r\n      const quote = JSON.parse(quoteFromSession);\r\n      sessionStorage.removeItem('quoteToConvert');\r\n\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          ...quote,\r\n          orderNo: `PO${1000 + prev.orders.length}`,\r\n          orderDate: new Date().toISOString().split('T')[0],\r\n          status: 'Entered',\r\n          orderType: 'Standard',\r\n          orderValue: quote.quoteValue,\r\n          quoteNo: quote.quoteNo\r\n        },\r\n        showForm: true\r\n      }));\r\n    }\r\n\r\n  }\r\n  getTaxDetailsFromGroup(groupName) {\r\n  if (!groupName || groupName === 'nill' || groupName === 'more') return { totalPercent: 0, totalAmount: 0 };\r\n\r\n  const group = this.state.taxGroups.find(tg => tg.groupName === groupName);\r\n  if (!group || !Array.isArray(group.lineItems)) return { totalPercent: 0, totalAmount: 0 };\r\n\r\n  let totalPercent = 0;\r\n  let totalAmount = 0;\r\n\r\n  group.lineItems.forEach(item => {\r\n    if (item.type === 'Percentage') {\r\n      totalPercent += parseFloat(item.percentOrAmt || 0);\r\n    } else if (item.type === 'Amount') {\r\n      totalAmount += parseFloat(item.percentOrAmt || 0);\r\n    }\r\n  });\r\n\r\n  return { totalPercent, totalAmount };\r\n}\r\n\r\ncalculateOrderTotals = () => {\r\n  const { impExp, freightCharges, taxPercent, packingCharges, lineItems } = this.state.formData;\r\n  let freight = parseFloat(freightCharges) || 0;\r\n  let packing = parseFloat(packingCharges) || 0;\r\n  let taxOnFreight = 0;\r\n  if (['None', 'CIF'].includes(impExp)) {\r\n    taxOnFreight = (freight * (parseFloat(taxPercent) || 0)) / 100;\r\n  }\r\n\r\n  let lineTotal = 0;\r\n  let itemTaxTotal = 0;\r\n\r\n  const updatedLineItems = lineItems.map(item => {\r\n    const baseTotal = (parseFloat(item.unitPrice || 0) * parseFloat(item.qty || 1));\r\n    const taxDetails = this.getTaxDetailsFromGroup(item.taxGroup);\r\n    const taxAmt = (baseTotal * taxDetails.totalPercent / 100) + (baseTotal * taxDetails.totalAmount);\r\n    \r\n\r\n    const total = baseTotal + taxAmt;\r\n    item.total = total.toFixed(2);\r\n    item.taxAmount = taxAmt.toFixed(2);\r\n\r\n    lineTotal += baseTotal;\r\n    itemTaxTotal += taxAmt;\r\n\r\n    return item;\r\n  });\r\n\r\n  const totalTaxAmount = itemTaxTotal + taxOnFreight;\r\n  const orderValue = lineTotal + freight + packing + itemTaxTotal;\r\n\r\n  this.setState(prev => ({\r\n    formData: {\r\n      ...prev.formData,\r\n      taxAmount: totalTaxAmount.toFixed(2),\r\n      orderValue: orderValue.toFixed(2),\r\n      lineItems: updatedLineItems\r\n    }\r\n  }));\r\n};\r\n\r\n\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // Customer details auto-fill\r\n    if (\r\n      this.state.showForm &&\r\n      this.state.customers.length > 0 &&\r\n      this.state.formData.customer &&\r\n      (prevState.formData.customer !== this.state.formData.customer ||\r\n       (!this.state.formData.billTo && !this.state.formData.shipTo))\r\n    ) {\r\n      const customerObj = this.state.customers.find(\r\n        c => c.custname === this.state.formData.customer || c.custcode === this.state.formData.customer\r\n      );\r\n      if (customerObj) {\r\n        this.setState(prev => ({\r\n          formData: {\r\n            ...prev.formData,\r\n            billTo: this.formatAddress(customerObj.billTo),\r\n            shipTo: this.formatAddress(customerObj.shipTo),\r\n            currency: customerObj.currency || '',\r\n            // paymentTerms: customerObj.paymentTerms || '', // No auto-fill for payment terms\r\n            // despatchMode: customerObj.despatchMode || '' // No auto-fill for despatch mode\r\n          }\r\n        }));\r\n      }\r\n    }\r\n\r\n    // Freight and Tax calculation based on impExp\r\n    const { impExp, freightCharges, taxPercent,packingCharges, lineItems } = this.state.formData;\r\n    if (['None', 'CIF'].includes(impExp)) {\r\n      const freight = parseFloat(freightCharges) || 0;\r\n      const tax = parseFloat(taxPercent) || 0;\r\n      const packing = parseFloat(packingCharges) || 0;\r\n\r\n      const taxAmount = (freight * tax) / 100;\r\n\r\n      const lineTotal = lineItems.reduce((sum, item) => {\r\n        const total = parseFloat(item.total) || 0;\r\n        return sum + total;\r\n      }, 0);\r\n\r\n      const orderValue = lineTotal + freight + taxAmount + packing;\r\n\r\n      if (\r\n    this.state.formData.taxAmount !== taxAmount.toFixed(2) ||\r\n    this.state.formData.orderValue !== orderValue.toFixed(2)\r\n  ) {\r\n    this.setState(prev => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        taxAmount: taxAmount.toFixed(2),\r\n        orderValue: orderValue.toFixed(2)\r\n      }\r\n    }));\r\n  }\r\n} else if (impExp === 'FOB') {\r\n  if (\r\n    this.state.formData.freightCharges !== '' ||\r\n    this.state.formData.taxPercent !== '' ||\r\n    this.state.formData.taxAmount !== '' ||\r\n    this.state.formData.packingCharges !== ''\r\n  ) {\r\n    this.setState(prev => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        freightCharges: '',\r\n        taxPercent: '',\r\n        taxAmount: '',\r\n        packingCharges: '',\r\n        orderValue: ''\r\n      }\r\n    }));\r\n  }\r\n\r\n    }\r\n  }\r\nfetchTaxGroups = async () => {\r\n  const snap = await getDocs(collection(db, 'taxGroups'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ taxGroups: data });\r\n};\r\n\r\n  fetchorders = async () => {\r\n    const snap = await getDocs(collection(db, 'orders'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ orders: data.reverse() });\r\n  };\r\n\r\n  fetchCustomers = async () => {\r\n    const snap = await getDocs(collection(db, 'customers'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ customers: data });\r\n  };\r\n\r\n  fetchProducts = async () => {\r\n    const snap = await getDocs(collection(db, 'products'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ products: data });\r\n  };\r\n  fetchDespatchModes = async () => {\r\n  const snap = await getDocs(collection(db, 'modes'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ despatchModes: data });\r\n};\r\n\r\nfetchPaymentTerms = async () => {\r\n  const snap = await getDocs(collection(db, 'paymentTerms'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ paymentTerms: data });\r\n};\r\n\r\n\r\n  handleInputChange = (field, value) => {\r\n    this.setState(prev => ({\r\n      formData: { ...prev.formData, [field]: value }\r\n    }));\r\n  };\r\n  \r\n\r\n handleLineItemChange = (idx, field, value) => {\r\n  this.setState(prev => {\r\n    const lineItems = [...prev.formData.lineItems];\r\n    const item = { ...lineItems[idx] };\r\n\r\n    if (field === 'taxGroup') {\r\n      item.taxGroup = value;\r\n      // Optional: Set taxPercent for display\r\n      const taxDetails = this.getTaxDetailsFromGroup(value);\r\n      item.taxPercent = taxDetails.totalPercent;\r\n    } else {\r\n      item[field] = value;\r\n    }\r\n\r\n    lineItems[idx] = item;\r\n\r\n    return {\r\n      formData: {\r\n        ...prev.formData,\r\n        lineItems\r\n      }\r\n    };\r\n  }, this.calculateOrderTotals); // <== 🔁 Recalculate after setState\r\n};\r\n\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { editingId, formData, orders } = this.state;\r\n    if (!formData.customer) return alert(\"Customer is required\");\r\n    if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\r\n\r\n    if (editingId) {\r\n      await updateDoc(doc(db, 'orders', editingId), formData);\r\n    } else {\r\n      formData.orderNo = `PO${1000 + orders.length}`;\r\n      await addDoc(collection(db, 'orders'), formData);\r\n    }\r\n    this.setState({ showForm: false, editingId: null });\r\n    this.fetchorders();\r\n  };\r\n\r\n  loadorderForEdit = (order) => {\r\n    this.setState({\r\n      formData: {\r\n        ...order,\r\n        lineItems: Array.isArray(order.lineItems) ? order.lineItems : [] // Ensure array\r\n      },\r\n      editingId: order.id,\r\n      showForm: true,\r\n      activeTab: 'co'\r\n    }, () => {\r\n      if (this.customerInputRef.current) {\r\n        this.customerInputRef.current.value = order.customer;\r\n      }\r\n    });\r\n  };\r\n\r\n  showOverlay = (type) => this.setState({ overlayType: type, overlaySearch: '' });\r\n  hideOverlay = () => this.setState({ overlayType: '', overlaySearch: '' });\r\n\r\n  selectOverlayValue = (value) => {\r\n    if (this.state.overlayType === 'customer') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          customer: value.custname || value.custcode || '', // Use custname or custcode\r\n          billTo: this.formatAddress(value.billTo),\r\n          shipTo: this.formatAddress(value.shipTo),\r\n          currency: value.currency || '',\r\n          // despatchMode: value.despatchMode || '', // No auto-fill for despatch mode\r\n          // paymentTerms: value.paymentTerms || '' // No auto-fill for payment terms\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }), () => {\r\n        if (this.customerInputRef.current) {\r\n          this.customerInputRef.current.value = value.custname || value.custcode || '';\r\n        }\r\n      });\r\n    }\r\n  };\r\n  \r\nshowOrderPDFWithOrg = async (order) => {\r\n  if (!order || !Array.isArray(order.lineItems) || order.lineItems.length === 0) {\r\n    alert(\"Order data is incomplete.\");\r\n    return;\r\n  }\r\n\r\n  const orgSnap = await getDocs(collection(db, 'businessGroups'));\r\n  const org = orgSnap.docs[0]?.data() || {};\r\n\r\n  const customer = this.state.customers.find(c => c.custshortName === order.customer) || {};\r\n\r\n  const subtotal = order.lineItems.reduce((sum, i) => sum + (parseFloat(i.total) || 0), 0);\r\n  const tax = parseFloat(order.taxAmount || 0);\r\n  const total = subtotal + tax;\r\n  const amountWords = `INR ${numberToWords(Math.floor(total))} Only`;\r\n\r\n  const enrichedItems = order.lineItems.map(item => {\r\n    const product = this.state.products.find(p => p.productId === item.itemCode) || {};\r\n    return {\r\n      ...item,\r\n      ptshortName: product.ptshortName || '',\r\n      hsnCode: product.hsnCode || '',\r\n      uom: product.stockingUOM || ''\r\n    };\r\n  });\r\n  const taxSummary = {};\r\n    order.lineItems.forEach(item => {\r\n      const group = item.taxGroup || 'Nill';\r\n      const percent = parseFloat(item.taxPercent || 0);\r\n      const total = parseFloat(item.total || 0);\r\n      const taxAmt = (percent * total) / 100;\r\n      if (!taxSummary[group]) taxSummary[group] = 0;\r\n      taxSummary[group] += taxAmt;\r\n    });\r\n\r\n\r\n  const container = document.createElement('div');\r\n  container.id = 'pdf-preview-container';\r\n  container.style.width = '794px';\r\n  container.style.padding = '40px';\r\n  container.style.fontFamily = 'Arial';\r\n  container.innerHTML = `\r\n    <div style=\"display:flex; justify-content:space-between; align-items:center;\">\r\n      <img src=\"${org.logoUrl || ''}\" style=\"height:50px;\" />\r\n      <div style=\"font-size:18px; font-weight:bold;\">SALES ORDER</div>\r\n    </div>\r\n    <hr/>\r\n    <div style=\"display:flex; justify-content:space-between; font-size:11px;\">\r\n      <div style=\"line-height:1.5; width:50%;\">\r\n        <b>${org.bgName || ''}</b><br/>\r\n        ${org.address || ''}<br/>\r\n        <b>Email:</b> ${org.email || ''}<br/>\r\n        <b>Website:</b> ${org.website || ''}<br/>\r\n        <b>GSTIN:</b> ${org.gstin || ''}\r\n      </div>\r\n      <table style=\"font-size:11px; text-align:left;\">\r\n        <tr><td><b>Order No</b></td><td>: ${order.orderNo}</td></tr>\r\n        <tr><td><b>Order Date</b></td><td>: ${order.orderDate}</td></tr>\r\n        <tr><td><b>Currency</b></td><td>: ${order.currency || 'INR'}</td></tr>\r\n        <tr><td><b>Despatch</b></td><td>: ${order.despatchMode || ''}</td></tr>\r\n      </table>\r\n    </div>\r\n\r\n    <div style=\"margin-top:15px; display:flex; justify-content:space-between; font-size:11px;\">\r\n      <div style=\"width:48%;\">\r\n        <b style=\"background:#011b56; color:#fff; display:block; padding:4px;\">Bill To</b>\r\n        <div style=\"border:1px solid #ccc; padding:6px;\">\r\n          ${order.billTo?.replace(/\\n/g, '<br/>') || ''}\r\n          \r\n        </div>\r\n        <div style=\"font-size:10px; margin-top:6px;\">\r\n            <b>GSTIN:</b> ${customer.gstin || ''}<br/>\r\n            <b>Email:</b> ${customer.email || ''}<br/>\r\n            <b>Contact:</b> ${customer.contactPerson || ''}<br/>\r\n            <b>Phone:</b> ${customer.phone || ''}\r\n          </div>\r\n      </div>\r\n      <div style=\"width:48%;\">\r\n        <b style=\"background:#011b56; color:#fff; display:block; padding:4px;\">Ship To</b>\r\n        <div style=\"border:1px solid #ccc; padding:6px;\">\r\n          ${order.shipTo?.replace(/\\n/g, '<br/>') || ''}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <table style=\"width:100%; border-collapse:collapse; margin-top:20px; font-size:10px;\">\r\n      <thead>\r\n        <tr style=\"background:#f4f6fa;\">\r\n          <th style=\"border:1px solid #011b56;\">Item Code</th>\r\n          <th style=\"border:1px solid #011b56;\">Short</th>\r\n          <th style=\"border:1px solid #011b56;\">Description</th>\r\n          <th style=\"border:1px solid #011b56;\">HSN</th>\r\n          <th style=\"border:1px solid #011b56;\">UOM</th>\r\n          <th style=\"border:1px solid #011b56;\">Qty</th>\r\n          <th style=\"border:1px solid #011b56;\">Unit Price</th>\r\n          <th style=\"border:1px solid #011b56;\">Total</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        ${enrichedItems.map(item => `\r\n          <tr>\r\n            <td style=\"border:1px solid #011b56;\">${item.itemCode}</td>\r\n            <td style=\"border:1px solid #011b56;\">${item.ptshortName}</td>\r\n            <td style=\"border:1px solid #011b56;\">${item.itemDescription}</td>\r\n            <td style=\"border:1px solid #011b56;\">${item.hsnCode}</td>\r\n            <td style=\"border:1px solid #011b56;\">${item.uom}</td>\r\n            <td style=\"border:1px solid #011b56;\">${item.qty}</td>\r\n            <td style=\"border:1px solid #011b56;\">${item.unitPrice}</td>\r\n            <td style=\"border:1px solid #011b56;\">${item.total}</td>\r\n          </tr>`).join('')}\r\n        <tr><td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\">Subtotal</td><td style=\"border:1px solid #011b56;\">${subtotal.toFixed(2)}</td></tr>${Object.entries(taxSummary).map(([group, amt]) => `\r\n  <tr>\r\n    <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\">Tax - ${group}</td>\r\n    <td style=\"border:1px solid #011b56;\">${amt.toFixed(2)}</td>\r\n  </tr>\r\n`).join('')}\r\n\r\n        <tr><td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>Total</b></td><td style=\"border:1px solid #011b56;\"><b>${total.toFixed(2)}</b></td></tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <div style=\"margin-top:8px; font-size:11px;\"><b>Amount in Words:</b> ${amountWords}</div>\r\n    <div style=\"text-align:right; font-size:11px; margin-top:30px;\">For ${org.bgName}<br/><br/><br/>Authorized Signatory</div>\r\n    <div style=\"margin-top:20px; text-align:right; font-size:10px;\">Printed on ${new Date().toLocaleString()}</div>\r\n  `;\r\n\r\n  document.body.appendChild(container);\r\n\r\n  const canvas = await html2canvas(container, { scale: 2, useCORS: true });\r\n  const imgData = canvas.toDataURL('image/png');\r\n  const pdf = new jsPDF('p', 'pt', 'a4');\r\n  const width = 595.28;\r\n  const height = canvas.height * width / canvas.width;\r\n  pdf.addImage(imgData, 'PNG', 0, 0, width, height);\r\n\r\n  const blob = pdf.output('blob');\r\n  const url = URL.createObjectURL(blob);\r\n  const newWin = window.open();\r\n  newWin.document.write(`\r\n    <html><head><title>PDF Preview</title></head>\r\n    <body style=\"margin:0;\">\r\n      <iframe width=\"100%\" height=\"100%\" style=\"border:none;\" src=\"${url}\"></iframe>\r\n      <button onclick=\"document.querySelector('iframe').contentWindow.print()\" style=\"position:fixed;top:10px;right:110px;\"></button>\r\n      <a href=\"${url}\" download=\"Sales_Order_${order.orderNo || 'PDF'}.pdf\" style=\"position:fixed;top:10px;right:10px;\"></a>\r\n    </body></html>\r\n  `);\r\n  newWin.document.close();\r\n\r\n  document.body.removeChild(container);\r\n};\r\n\r\n\r\n\r\n renderOverlay = () => {\r\n  const { overlayType, overlaySearch, customers, despatchModes, paymentTerms } = this.state;\r\n\r\n  const getFilteredRows = (list, nameKey = 'name', codeKey = 'shortName') =>\r\n    list.filter(item =>\r\n      (item[nameKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()) ||\r\n      (item[codeKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase())\r\n    );\r\n\r\n  const handleSelect = (item) => {\r\n    if (overlayType === 'customer') {\r\n      this.selectOverlayValue(item);\r\n    } else if (overlayType === 'despatchMode') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          despatchMode: item.name\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }));\r\n    } else if (overlayType === 'paymentTerms') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          paymentTerms: item.name\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  let title = '';\r\n  let headers = [];\r\n  let rows = [];\r\n\r\n  if (overlayType === 'customer') {\r\n    title = 'Select Customer';\r\n    headers = ['Name', 'Code', 'Short Name'];\r\n    rows = getFilteredRows(customers, 'custname', 'custcode');\r\n  } else if (overlayType === 'despatchMode') {\r\n    title = 'Select Despatch Mode';\r\n    headers = ['Name'];\r\n    rows = getFilteredRows(despatchModes);\r\n  } else if (overlayType === 'paymentTerms') {\r\n    title = 'Select Payment Terms';\r\n    headers = ['Name'];\r\n    rows = getFilteredRows(paymentTerms);\r\n  } else {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"custom-overlay\">\r\n      <div className=\"custom-overlay-content\">\r\n        <div className=\"custom-overlay-title\">{title}</div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control mb-2\"\r\n          placeholder={`Search ${overlayType}...`}\r\n          value={overlaySearch}\r\n          onChange={e => this.setState({ overlaySearch: e.target.value })}\r\n        />\r\n        <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n          <table className=\"table table-bordered table-sm\">\r\n            <thead>\r\n              <tr>\r\n                {headers.map((h, i) => <th key={i}>{h}</th>)}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {rows.map((item, i) => (\r\n                <tr key={item.id || i} onClick={() => handleSelect(item)} style={{ cursor: 'pointer' }}>\r\n                  {headers.map((h, j) => (\r\n                    <td key={j}>\r\n                      {overlayType === 'customer'\r\n                        ? h === 'Name' ? item.custname\r\n                          : h === 'Code' ? item.custcode\r\n                          : item.custshortName\r\n                        : h === 'Name' ? item.name\r\n                          : item.shortName}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n              {rows.length === 0 && (\r\n                <tr>\r\n                  <td colSpan={headers.length} className=\"text-center\">No records found</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <button className=\"btn btn-secondary btn-sm mt-2\" onClick={this.hideOverlay}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nrenderTaxOverlay = () => {\r\n  const { taxGroups, currentTaxIdx } = this.state;\r\n\r\n  return (\r\n    <div className=\"custom-overlay\">\r\n      <div className=\"custom-overlay-content\">\r\n        <div className=\"custom-overlay-title\">Select Tax Group</div>\r\n        <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n          <table className=\"table table-bordered table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>Group Name</th>\r\n                <th>Classification</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {taxGroups.map((group) => {\r\n                // Compute total percentage from lineItems\r\n                let totalPercent = 0;\r\n                if (group.lineItems && group.lineItems.length) {\r\n                  totalPercent = group.lineItems\r\n                    .filter(i => i.type === 'Percentage')\r\n                    .reduce((acc, i) => acc + parseFloat(i.percentOrAmt || 0), 0);\r\n                }\r\n\r\n                return (\r\n                  <tr\r\n                    key={group.groupName}\r\n                    style={{ cursor: 'pointer' }}\r\n                    onClick={() => {\r\n                      const formData = { ...this.state.formData };\r\n                      const items = [...formData.lineItems];\r\n\r\n                      items[currentTaxIdx].taxGroup = group.groupName;\r\n                      items[currentTaxIdx].taxPercent = totalPercent;\r\n\r\n                      formData.lineItems = items;\r\n\r\n                      this.setState({\r\n                        formData,\r\n                        showTaxOverlay: false,\r\n                        currentTaxIdx: null\r\n                      }, this.calculateOrderTotals);\r\n                    }}\r\n                  >\r\n                    <td>{group.groupName}</td>\r\n                    <td>{group.classification}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <button className=\"btn btn-sm btn-secondary mt-2\" onClick={() => this.setState({ showTaxOverlay: false })}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n  renderProductOverlay = () => {\r\n    const { products, productOverlaySearch, selectedProductIds } = this.state;\r\n    const filtered = products.filter(p =>\r\n      (p.ptshortName || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) ||\r\n      (p.ptdescription || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) ||\r\n      (p.itemCode || '').toLowerCase().includes(productOverlaySearch.toLowerCase())\r\n    );\r\n    return (\r\n      <div className=\"custom-overlay\">\r\n        <div className=\"custom-overlay-content\">\r\n          <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n            <div className=\"custom-overlay-title\">Select Products</div>\r\n            <button\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => {\r\n                const selectedProducts = products.filter(p => this.state.selectedProductIds.includes(p.id));\r\n                this.setState(prev => ({\r\n                  formData: {\r\n                    ...prev.formData,\r\n                    lineItems: [\r\n                      ...prev.formData.lineItems,\r\n                      ...selectedProducts\r\n                        .filter(p => !prev.formData.lineItems.some(item => item.id === p.id))\r\n                        .map(p => ({\r\n                          id: p.id,\r\n                          itemCode: p.productId || '',\r\n                          itemDescription: p.ptdescription || '',\r\n                          itemType: p.itemType || '',\r\n                          materialType: p.materialType || '',\r\n                          onHand: p.onHand || 0,\r\n                          taxGroup: p.taxGroup || '',\r\n                          custPartNo: p.custPartNo || '', // Assuming this is cust part table\r\n                          hsnNo: p.hsnNo || '', // Assuming HSN No.\r\n                          unitPrice: p.unitPrice || 0,\r\n                          qty: 1,\r\n                          total: (p.unitPrice || 0).toFixed(2)\r\n                        }))\r\n                    ]\r\n                  },\r\n                  productOverlayVisible: false,\r\n                  selectedProductIds: []\r\n                }));\r\n              }}\r\n            >Add Selected</button>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Search products...\"\r\n            value={productOverlaySearch}\r\n            onChange={e => this.setState({ productOverlaySearch: e.target.value })}\r\n          />\r\n          <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n            <table className=\"table table-bordered table-sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th></th>\r\n                  <th>Item Code</th>\r\n                  <th>Item Desc</th>\r\n                  <th>Item Type</th>\r\n                  <th>Material Type</th>\r\n                  <th>On Hand</th>\r\n                  <th>Tax Grp</th>\r\n                  <th>Cust Part No</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filtered.map(p => (\r\n                  <tr key={p.id}>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedProductIds.includes(p.id)}\r\n                        onChange={e => {\r\n                          const checked = e.target.checked;\r\n                          this.setState(prev => ({\r\n                            selectedProductIds: checked\r\n                              ? [...prev.selectedProductIds, p.id]\r\n                              : prev.selectedProductIds.filter(id => id !== p.id)\r\n                          }));\r\n                        }}\r\n                      />\r\n                    </td>\r\n                    <td>{p.productId}</td>\r\n                    <td>{p.ptdescription || ''}</td>\r\n                    <td>{p.itemType || ''}</td>\r\n                    <td>{p.materialType || ''}</td>\r\n                    <td>{p.onHand || 0}</td>\r\n                    <td>{p.taxGroup || ''}</td>\r\n                    <td>{p.custPartNo || ''}</td>\r\n                  </tr>\r\n                ))}\r\n                {filtered.length === 0 && (\r\n                  <tr>\r\n                    <td colSpan=\"8\" className=\"text-center\">No products found</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          {/* Add pagination here if needed, for now, it's just a placeholder */}\r\n          <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n            <span>Page 1 of 1</span>\r\n            <button className=\"btn btn-secondary btn-sm\" onClick={() => this.setState({ productOverlayVisible: false, selectedProductIds: [] })}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderorderTable = () => (\r\n    <div className=\"card mt-4 full-height\">\r\n      <div className=\"card-body\">\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n          <h4 className=\"card-title\">Orders</h4>\r\n          <button className=\"btn btn-primary\" onClick={() => this.setState({ showForm: true })}>+ Add Order</button>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-bordered table-hover\">\r\n            <thead className=\"thead-light\">\r\n              <tr style={{ fontSize: '14px' }}>\r\n                <th>Order No</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Order Value</th>\r\n                <th>Status</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.orders.map((q, i) => (\r\n                <tr key={i} style={{ fontSize: '14px' }}>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-link p-0\"\r\n                      onClick={() => this.loadorderForEdit(q)}\r\n                    >\r\n                      {q.orderNo}\r\n                    </button>\r\n                  </td>\r\n                  <td>{q.customer}</td>\r\n                  <td>{q.orderDate}</td>\r\n                  <td>{q.orderValue}</td>\r\n                  <td><label className=\"badge badge-info\">{q.status}</label></td>\r\n                 <td>\r\n                    <i\r\n                      className=\"mdi mdi-printer menu-icon\"\r\n                      onClick={() => this.showOrderPDFWithOrg(q)}\r\n                      style={{ fontSize: '24px', color: '#2196F3', cursor: 'pointer' }}\r\n                    ></i>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n              {this.state.orders.length === 0 && (\r\n                <tr><td colSpan=\"6\" className=\"text-center\">No orders found.</td></tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  renderorderForm = () => {\r\n    const { formData, overlayType, productOverlayVisible } = this.state;\r\n    const isFOB = formData.impExp === 'FOB';\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"card full-height\">\r\n          <div style={{ flex: 1, overflowY: 'auto', padding: '24px' }}>\r\n            <h4 className=\"mb-3\">Order Form</h4>\r\n            <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n              <li className=\"nav-item\">\r\n                <button type=\"button\" className={`nav-link ${this.state.activeTab === 'co' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'co' })}>CO Details</button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <button type=\"button\" className={`nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'commercial' })}>Commercial Terms</button>\r\n              </li>\r\n            </ul>\r\n            <form className=\"form-sample\" onSubmit={this.handleSubmit}>\r\n              <div className=\"tab-content pt-3\">\r\n                {this.state.activeTab === 'co' && (\r\n                  <>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Order No</label>\r\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={formData.orderNo} onChange={(e) => this.handleInputChange('orderNo', e.target.value)} />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Order Date</label>\r\n                        <input type=\"date\" className=\"form-control form-control-sm\" value={formData.orderDate} onChange={(e) => this.handleInputChange('orderDate', e.target.value)} />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Order Type</label>\r\n                        <select className=\"form-control form-control-sm\" value={formData.orderType} onChange={(e) => this.handleInputChange('orderType', e.target.value)}>\r\n                          <option>Standard</option>\r\n                          <option>Manual</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Status</label>\r\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={formData.status}   style={{ backgroundColor: '#fff' }} readOnly />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Customer</label>\r\n                        <div className=\"input-group input-group-sm\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Choose Customer\"\r\n                            ref={this.customerInputRef}\r\n                            value={formData.customer}\r\n                            readOnly\r\n                            onClick={() => this.showOverlay('customer')}\r\n                            style={{ cursor: 'pointer' }}\r\n                          />\r\n                          <div className=\"input-group-append\">\r\n                            <button className=\"btn btn-outline-secondary btn-sm\" type=\"button\" onClick={() => this.showOverlay('customer')}>Select</button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>IMP/EXP</label>\r\n                        <select\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.impExp}\r\n                          onChange={(e) => this.handleInputChange('impExp', e.target.value)}\r\n                        >\r\n                          <option>None</option>\r\n                          <option>COB</option>\r\n                          <option>FOB</option>\r\n                          <option>CIF</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group col-md-2\">\r\n                        <label>Ref No.</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.qrefNo}\r\n                          onChange={(e) => this.handleInputChange('qrefNo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Choose</label>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"form-check mr-4\">\r\n                            <input type=\"radio\" className=\"form-check-input\" name=\"choose\" id=\"chooseService\" value=\"Service\" checked={formData.choose === 'Service'} onChange={(e) => this.handleInputChange('choose', e.target.value)} />\r\n                            <label className=\"form-check-label\" htmlFor=\"chooseService\">Service</label>\r\n                          </div>\r\n                          <div className=\"form-check\">\r\n                            <input type=\"radio\" className=\"form-check-input\" name=\"choose\" id=\"chooseProduct\" value=\"Product\" checked={formData.choose === 'Product'} onChange={(e) => this.handleInputChange('choose', e.target.value)} />\r\n                            <label className=\"form-check-label\" htmlFor=\"chooseProduct\">Product</label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Currency</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.currency}\r\n                          style={{ backgroundColor: '#fff' }}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Conversion Rate</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.conversionRate}\r\n                          onChange={(e) => this.handleInputChange('conversionRate', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Tax Amount</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxAmount}\r\n                          onChange={(e) => this.handleInputChange('taxAmount', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Order Value</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.orderValue}\r\n                          onChange={(e) => this.handleInputChange('orderValue', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                   \r\n                          <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                            <h4 className=\"card-title\">Line Item</h4>\r\n                            <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={() => this.setState({ productOverlayVisible: true })}>\r\n                              + Add Product\r\n                            </button>\r\n                          </div>\r\n                          <div className=\"table-responsive\">\r\n                            <table className=\"table table-bordered\">\r\n                              <thead className=\"thead-light\">\r\n                                <tr >\r\n                                  <th> Item Code </th>\r\n                                  <th> Item Desc </th>\r\n                                  <th> Cust Part No </th>\r\n                                  <th> HSN No </th>\r\n                                  <th> On Hand </th> \r\n                                  <th>Unit Price</th>\r\n                                  <th>Quantity</th>\r\n                                  <th>Tax Id</th>\r\n                                  <th>Item Total</th>\r\n                                  <th>Tax Amt</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {formData.lineItems.map((item, idx) => (\r\n                                  <tr key={item.id || idx}>\r\n                                    <td>{item.itemCode}</td>\r\n                                    <td>{item.itemDescription}</td>\r\n                                    <td>{item.custPartNo}</td>\r\n                                    <td>{item.hsnNo}</td>\r\n                                    <td>{item.onHand}</td>\r\n                                    <td>\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        value={item.unitPrice}\r\n                                        onChange={e => this.handleLineItemChange(idx, 'unitPrice', e.target.value)}\r\n                                        style={{ width: 80 }}\r\n                                      />\r\n                                    </td>\r\n                                    <td>\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        min=\"1\"\r\n                                        value={item.qty}\r\n                                        onChange={e => this.handleLineItemChange(idx, 'qty', e.target.value)}\r\n                                        style={{ width: 60 }}\r\n                                      />\r\n                                    </td>\r\n                                    <td>\r\n  <select\r\n    value={item.taxGroup || ''}\r\n    onChange={(e) => {\r\n      const val = e.target.value;\r\n      if (val === 'more') {\r\n        this.setState({ showTaxOverlay: true, currentTaxIdx: idx });\r\n      } else {\r\n        this.handleLineItemChange(idx, 'taxGroup', val);\r\n      }\r\n    }}\r\n  >\r\n    <option value=\"\">-Select-</option>\r\n    <option value=\"nill\">Nill Tax</option>\r\n\r\n    {Array.isArray(this.state.taxGroups) && this.state.taxGroups.map(group => {\r\n      const percent = group.lineItems?.filter(i => i.type === 'Percentage')\r\n        .reduce((acc, i) => acc + parseFloat(i.percentOrAmt || 0), 0) || 0;\r\n\r\n      return (\r\n        <option key={group.groupName} value={group.groupName}>\r\n          {group.groupName} ({percent}%)\r\n        </option>\r\n      );\r\n    })}\r\n\r\n    <option value=\"more\">More</option>\r\n  </select>\r\n</td>\r\n\r\n                                      <td>{item.taxAmount || '0.00'}</td>\r\n                                      <td>{item.total || '0.00'}</td>\r\n                                  </tr>\r\n                                ))}\r\n                                {formData.lineItems.length === 0 && (\r\n                                  <tr>\r\n                                    <td colSpan=\"9\" className=\"text-center\">No items</td>\r\n                                  </tr>\r\n                                )}\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                          {/* Add pagination for line items here if needed */}\r\n                          <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n                            <span>Page 1 of 1</span>\r\n                          </div>\r\n                      \r\n                  </>\r\n                )}\r\n                {this.state.activeTab === 'commercial' && (\r\n                  <>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-6\">\r\n                        <label>Bill To</label>\r\n                        <textarea\r\n                          className=\"form-control form-control-sm\"\r\n                          rows=\"3\"\r\n                          value={formData.billTo}\r\n                          onChange={(e) => this.handleInputChange('billTo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-6\">\r\n                        <label>Ship To</label>\r\n                        <textarea\r\n                          className=\"form-control form-control-sm\"\r\n                          rows=\"3\"\r\n                          value={formData.shipTo}\r\n                          onChange={(e) => this.handleInputChange('shipTo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-4\">\r\n  <label>Despatch Mode</label>\r\n  <div className=\"input-group input-group-sm\">\r\n    <input\r\n      type=\"text\"\r\n      className=\"form-control\"\r\n      value={formData.despatchMode}\r\n      readOnly\r\n      onClick={() => !isFOB && this.showOverlay('despatchMode')}\r\n      style={{ cursor: isFOB ? 'not-allowed' : 'pointer', backgroundColor: '#fff' }}\r\n    />\r\n    <div className=\"input-group-append\">\r\n      <button\r\n        className=\"btn btn-outline-secondary btn-sm\"\r\n        type=\"button\"\r\n        disabled={isFOB}\r\n        onClick={() => this.showOverlay('despatchMode')}\r\n      >\r\n        Select\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div className=\"form-group col-md-4\">\r\n  <label>Payment Terms</label>\r\n  <div className=\"input-group input-group-sm\">\r\n    <input\r\n      type=\"text\"\r\n      className=\"form-control\"\r\n      value={formData.paymentTerms}\r\n      readOnly\r\n      onClick={() => !isFOB && this.showOverlay('paymentTerms')}\r\n      style={{ cursor: isFOB ? 'not-allowed' : 'pointer', backgroundColor: '#fff' }}\r\n    />\r\n    <div className=\"input-group-append\">\r\n      <button\r\n        className=\"btn btn-outline-secondary btn-sm\"\r\n        type=\"button\"\r\n        disabled={isFOB}\r\n        onClick={() => this.showOverlay('paymentTerms')}\r\n      >\r\n        Select\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Freight Charges</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.freightCharges}\r\n                          onChange={(e) => this.handleInputChange('freightCharges', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Tax %</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxPercent}\r\n                          onChange={(e) => this.handleInputChange('taxPercent', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Freight Tax Amount</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxAmount}\r\n                          onChange={(e) => this.handleInputChange('freighttaxAmount', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Packing Charges</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.packingCharges}\r\n                          onChange={(e) => this.handleInputChange('packingCharges', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-right mt-3\">\r\n                      <button type=\"submit\" className=\"btn btn-success\">Save All Details</button>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n              <div className=\"fixed-card-footer text-right p-3 border-top bg-white\">\r\n                <button type=\"submit\" className=\"btn btn-success mr-2\">Save All Details</button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => this.setState({ showForm: false, editingId: null })}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n            {overlayType && this.renderOverlay()}\r\n            {productOverlayVisible && this.renderProductOverlay()}\r\n          </div>\r\n           \r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        {this.state.showForm ? this.renderorderForm() : this.renderorderTable()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Order);\r\n\r\n"]},"metadata":{},"sourceType":"module"}