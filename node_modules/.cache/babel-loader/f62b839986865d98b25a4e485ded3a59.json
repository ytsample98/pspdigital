{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\panelone\\\\Quote.js\";\nimport React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport { db } from '../../firebase';\nimport { collection, getDocs, addDoc, doc, updateDoc } from 'firebase/firestore';\nimport { withRouter } from 'react-router-dom';\n\nclass Quote extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: 'co',\n      quotes: [],\n      customers: [],\n      products: [],\n      despatchModes: [],\n      paymentTerms: [],\n      showForm: false,\n      editingId: null,\n      overlayType: '',\n      overlaySearch: '',\n      productOverlayVisible: false,\n      productOverlaySearch: '',\n      selectedProductIds: [],\n      taxComponents: [],\n      taxGroups: [],\n      previewMode: false,\n      selectedQuote: null,\n      formData: {\n        quoteNo: '',\n        quoteDate: new Date().toISOString().split('T')[0],\n        quoteType: 'Standard',\n        customer: '',\n        status: 'Entered',\n        // Static 'Entered'\n        choose: 'Service',\n        qrefNo: '',\n        impExp: 'None',\n        currency: '',\n        conversionRate: '',\n        taxAmount: '',\n        quoteValue: '',\n        billTo: '',\n        shipTo: '',\n        despatchMode: 'By Air',\n        paymentTerms: '',\n        freightCharges: '',\n        freighttaxAmount: '',\n        taxPercent: '',\n        packingCharges: '',\n        lineItems: []\n      }\n    };\n    this.customerInputRef = React.createRef();\n\n    this.formatAddress = addr => {\n      if (!addr) return '';\n      if (typeof addr === 'string') return addr;\n      return [addr.address, [addr.city, addr.state, addr.country].filter(Boolean).join(', '), addr.zip].filter(Boolean).join('\\n');\n    };\n\n    this.handleLineItemChange = (idx, field, value) => {\n      const updatedItems = [...this.state.formData.lineItems];\n      const item = { ...updatedItems[idx]\n      };\n\n      if (field === 'taxId') {\n        if (value === 'more') {\n          this.setState({\n            showTaxOverlay: true\n          });\n          return;\n        }\n\n        item.taxId = value;\n      } else {\n        item[field] = value;\n      }\n\n      updatedItems[idx] = item;\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          lineItems: updatedItems\n        }\n      }), this.recalculateQuoteTotals);\n    };\n\n    this.resetFOBFields = () => {\n      const {\n        freightCharges,\n        taxPercent,\n        taxAmount,\n        packingCharges,\n        quoteValue\n      } = this.state.formData;\n      const needsReset = [freightCharges, taxPercent, taxAmount, packingCharges, quoteValue].some(val => val !== '' && val !== null && val !== undefined);\n\n      if (needsReset) {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            freightCharges: '',\n            taxPercent: '',\n            taxAmount: '',\n            packingCharges: '',\n            quoteValue: ''\n          }\n        }));\n      }\n    };\n\n    this.fetchQuotes = async () => {\n      const snap = await getDocs(collection(db, 'quotes'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        quotes: data.reverse()\n      });\n    };\n\n    this.fetchCustomers = async () => {\n      const snap = await getDocs(collection(db, 'customers'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        customers: data\n      });\n    };\n\n    this.fetchProducts = async () => {\n      const snap = await getDocs(collection(db, 'products'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        products: data\n      });\n    };\n\n    this.fetchDespatchModes = async () => {\n      const snap = await getDocs(collection(db, 'modes'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        despatchModes: data\n      });\n    };\n\n    this.fetchPaymentTerms = async () => {\n      const snap = await getDocs(collection(db, 'paymentTerms'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        paymentTerms: data\n      });\n    };\n\n    this.handleInputChange = (field, value) => {\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          [field]: value\n        }\n      }));\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        editingId,\n        formData,\n        quotes\n      } = this.state;\n      if (!formData.customer) return alert(\"Customer is required\");\n      if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\n\n      if (editingId) {\n        await updateDoc(doc(db, 'quotes', editingId), formData);\n      } else {\n        formData.quoteNo = `QT${1000 + quotes.length}`;\n        await addDoc(collection(db, 'quotes'), formData);\n      }\n\n      this.setState({\n        showForm: false,\n        editingId: null\n      });\n      this.fetchQuotes();\n    };\n\n    this.loadQuotePreview = q => {\n      this.setState({\n        selectedQuote: q,\n        previewMode: true\n      });\n    };\n\n    this.getTaxPercentage = taxId => {\n      if (!taxId || taxId === 'nill') return 0;\n      const tax = this.state.taxComponents.find(tc => tc.id === taxId);\n      return (tax === null || tax === void 0 ? void 0 : tax.percentage) || 0;\n    };\n\n    this.loadQuoteForEdit = quote => {\n      this.setState({\n        formData: { ...quote,\n          lineItems: Array.isArray(quote.lineItems) ? quote.lineItems : [] // Ensure array\n\n        },\n        editingId: quote.id,\n        showForm: true,\n        previewMode: false,\n        activeTab: 'co'\n      }, () => {\n        if (this.customerInputRef.current) {\n          this.customerInputRef.current.value = quote.customer;\n        }\n      });\n    };\n\n    this.convertToOrder = quote => {\n      // Save quote in sessionStorage (or navigate with state via router if you use react-router)\n      sessionStorage.setItem('quoteToConvert', JSON.stringify(quote));\n      this.props.history.push('/panelone/Order');\n    };\n\n    this.showOverlay = type => this.setState({\n      overlayType: type,\n      overlaySearch: ''\n    });\n\n    this.hideOverlay = () => this.setState({\n      overlayType: '',\n      overlaySearch: ''\n    });\n\n    this.selectOverlayValue = value => {\n      if (this.state.overlayType === 'customer') {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            customer: value.custname || value.custcode || '',\n            // Use custname or custcode\n            billTo: this.formatAddress(value.billTo),\n            shipTo: this.formatAddress(value.shipTo),\n            currency: value.currency || '' // despatchMode: value.despatchMode || '', // No auto-fill for despatch mode\n            // paymentTerms: value.paymentTerms || '' // No auto-fill for payment terms\n\n          },\n          overlayType: '',\n          overlaySearch: ''\n        }), () => {\n          if (this.customerInputRef.current) {\n            this.customerInputRef.current.value = value.custname || value.custcode || '';\n          }\n        });\n      }\n    };\n\n    this.renderTaxOverlay = () => {\n      const {\n        taxComponents,\n        taxLineIndex\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 9\n        }\n      }, \"Select Tax Group\"), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 17\n        }\n      }, \"Component\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 35\n        }\n      }, \"%\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }\n      }, taxComponents.map(tc => /*#__PURE__*/React.createElement(\"tr\", {\n        key: tc.id,\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: () => {\n          const updated = [...this.state.formData.lineItems];\n          updated[taxLineIndex].taxId = tc.id;\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              lineItems: updated\n            },\n            showTaxOverlay: false,\n            taxLineIndex: null\n          }), this.updateQuoteTotals);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 17\n        }\n      }, tc.code), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 17\n        }\n      }, tc.percentage))))), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-secondary mt-2\",\n        onClick: () => this.setState({\n          showTaxOverlay: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 9\n        }\n      }, \"Cancel\")));\n    };\n\n    this.renderOverlay = () => {\n      const {\n        overlayType,\n        overlaySearch,\n        customers,\n        despatchModes,\n        paymentTerms\n      } = this.state;\n\n      const getFilteredRows = (list, nameKey = 'name', codeKey = 'shortName') => list.filter(item => (item[nameKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()) || (item[codeKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()));\n\n      const handleSelect = item => {\n        if (overlayType === 'customer') {\n          this.selectOverlayValue(item);\n        } else if (overlayType === 'despatchMode') {\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              despatchMode: item.name\n            },\n            overlayType: '',\n            overlaySearch: ''\n          }));\n        } else if (overlayType === 'paymentTerms') {\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              paymentTerms: item.name\n            },\n            overlayType: '',\n            overlaySearch: ''\n          }));\n        }\n      };\n\n      let title = '';\n      let headers = [];\n      let rows = [];\n\n      if (overlayType === 'customer') {\n        title = 'Select Customer';\n        headers = ['Name', 'Code', 'Short Name'];\n        rows = getFilteredRows(customers, 'custname', 'custcode');\n      } else if (overlayType === 'despatchMode') {\n        title = 'Select Despatch Mode';\n        headers = ['Name', 'Short Name'];\n        rows = getFilteredRows(despatchModes);\n      } else if (overlayType === 'paymentTerms') {\n        title = 'Select Payment Terms';\n        headers = ['Name', 'Short Name'];\n        rows = getFilteredRows(paymentTerms);\n      } else {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 9\n        }\n      }, title), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: `Search ${overlayType}...`,\n        value: overlaySearch,\n        onChange: e => this.setState({\n          overlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 15\n        }\n      }, headers.map((h, i) => /*#__PURE__*/React.createElement(\"th\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 40\n        }\n      }, h)))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }\n      }, rows.map((item, i) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id || i,\n        onClick: () => handleSelect(item),\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 17\n        }\n      }, headers.map((h, j) => /*#__PURE__*/React.createElement(\"td\", {\n        key: j,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 21\n        }\n      }, overlayType === 'customer' ? h === 'Name' ? item.custname : h === 'Code' ? item.custcode : item.custshortName : h === 'Name' ? item.name : item.shortName)))), rows.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: headers.length,\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 19\n        }\n      }, \"No records found\"))))), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm mt-2\",\n        onClick: this.hideOverlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 9\n        }\n      }, \"Cancel\")));\n    };\n\n    this.renderProductOverlay = () => {\n      const {\n        products,\n        productOverlaySearch,\n        selectedProductIds\n      } = this.state;\n      const filtered = products.filter(p => (p.ptshortName || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) || (p.ptdescription || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) || (p.itemCode || '').toLowerCase().includes(productOverlaySearch.toLowerCase()));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 13\n        }\n      }, \"Select Products\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-success btn-sm\",\n        onClick: () => {\n          const selectedProducts = products.filter(p => this.state.selectedProductIds.includes(p.id));\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              lineItems: [...prev.formData.lineItems, ...selectedProducts.filter(p => !prev.formData.lineItems.some(item => item.id === p.id)).map(p => ({\n                id: p.id,\n                itemCode: p.productId || '',\n                itemDescription: p.ptdescription || '',\n                itemType: p.itemType || '',\n                materialType: p.materialType || '',\n                onHand: p.onHand || 0,\n                taxGroup: p.taxGroup || '',\n                custPartNo: p.custPartNo || '',\n                // Assuming this is cust part table\n                hsnNo: p.hsnNo || '',\n                // Assuming HSN No.\n                unitPrice: p.unitPrice || 0,\n                qty: 1,\n                total: (p.unitPrice || 0).toFixed(2)\n              }))]\n            },\n            productOverlayVisible: false,\n            selectedProductIds: []\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }\n      }, \"Add Selected\")), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: \"Search products...\",\n        value: productOverlaySearch,\n        onChange: e => this.setState({\n          productOverlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 19\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 19\n        }\n      }, \"Item Desc\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 19\n        }\n      }, \"Item Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 19\n        }\n      }, \"Material Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 19\n        }\n      }, \"On Hand\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 19\n        }\n      }, \"Tax Grp\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 19\n        }\n      }, \"Cust Part No\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 15\n        }\n      }, filtered.map(p => /*#__PURE__*/React.createElement(\"tr\", {\n        key: p.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: selectedProductIds.includes(p.id),\n        onChange: e => {\n          const checked = e.target.checked;\n          this.setState(prev => ({\n            selectedProductIds: checked ? [...prev.selectedProductIds, p.id] : prev.selectedProductIds.filter(id => id !== p.id)\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 21\n        }\n      }, p.productId), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 21\n        }\n      }, p.ptdescription || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 21\n        }\n      }, p.itemType || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 21\n        }\n      }, p.materialType || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 21\n        }\n      }, p.onHand || 0), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 21\n        }\n      }, p.taxGroup || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 21\n        }\n      }, p.custPartNo || ''))), filtered.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"8\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 21\n        }\n      }, \"No products found\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 13\n        }\n      }, \"Page 1 of 1\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        onClick: () => this.setState({\n          productOverlayVisible: false,\n          selectedProductIds: []\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 13\n        }\n      }, \"Cancel\"))));\n    };\n\n    this.renderQuoteTable = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-4 full-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 11\n      }\n    }, \"Quotes\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.setState({\n        showForm: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 11\n      }\n    }, \"+ Add Quote\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 17\n      }\n    }, \"Quote No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 17\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 17\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 17\n      }\n    }, \"Quote Value\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 17\n      }\n    }, \"Status\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 13\n      }\n    }, this.state.quotes.map((q, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-link p-0\",\n      onClick: () => this.loadQuotePreview(q),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 21\n      }\n    }, q.quoteNo)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 19\n      }\n    }, q.customer), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 19\n      }\n    }, q.quoteDate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 19\n      }\n    }, q.quoteValue), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"badge badge-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 23\n      }\n    }, q.status)))), this.state.quotes.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"6\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 21\n      }\n    }, \"No quotes found.\")))))));\n\n    this.renderQuoteForm = () => {\n      const {\n        formData,\n        overlayType,\n        productOverlayVisible,\n        taxGroups\n      } = this.state;\n      const isFOB = formData.impExp === 'FOB';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card full-height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: 'auto',\n          padding: '24px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 13\n        }\n      }, \"Quote Form\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"nav nav-tabs\",\n        role: \"tablist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'co' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'co'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 17\n        }\n      }, \"CO Details\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'commercial'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 17\n        }\n      }, \"Commercial Terms\"))), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"form-sample\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tab-content pt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 15\n        }\n      }, this.state.activeTab === 'co' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 25\n        }\n      }, \"Quote No\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.quoteNo,\n        onChange: e => this.handleInputChange('quoteNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 25\n        }\n      }, \"Quote Date\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"date\",\n        className: \"form-control form-control-sm\",\n        value: formData.quoteDate,\n        onChange: e => this.handleInputChange('quoteDate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 25\n        }\n      }, \"Quote Type\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.quoteType,\n        onChange: e => this.handleInputChange('quoteType', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 27\n        }\n      }, \"Standard\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 27\n        }\n      }, \"Manual\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 25\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.status,\n        style: {\n          backgroundColor: '#fff'\n        },\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 25\n        }\n      }, \"Customer\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Choose Customer\",\n        ref: this.customerInputRef,\n        value: formData.customer,\n        readOnly: true,\n        onClick: () => this.showOverlay('customer'),\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        onClick: () => this.showOverlay('customer'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 29\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 25\n        }\n      }, \"IMP/EXP\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.impExp,\n        onChange: e => this.handleInputChange('impExp', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 27\n        }\n      }, \"None\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 27\n        }\n      }, \"COB\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 27\n        }\n      }, \"FOB\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 27\n        }\n      }, \"CIF\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 25\n        }\n      }, \"Ref No.\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.qrefNo,\n        onChange: e => this.handleInputChange('qrefNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 25\n        }\n      }, \"Choose\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check mr-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        className: \"form-check-input\",\n        name: \"choose\",\n        id: \"chooseService\",\n        value: \"Service\",\n        checked: formData.choose === 'Service',\n        onChange: e => this.handleInputChange('choose', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"chooseService\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 29\n        }\n      }, \"Service\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        className: \"form-check-input\",\n        name: \"choose\",\n        id: \"chooseProduct\",\n        value: \"Product\",\n        checked: formData.choose === 'Product',\n        onChange: e => this.handleInputChange('choose', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"chooseProduct\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 29\n        }\n      }, \"Product\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 25\n        }\n      }, \"Currency\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.currency,\n        style: {\n          backgroundColor: '#fff'\n        },\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 25\n        }\n      }, \"Conversion Rate\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.conversionRate,\n        onChange: e => this.handleInputChange('conversionRate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 25\n        }\n      }, \"Tax Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxAmount,\n        onChange: e => this.handleInputChange('taxAmount', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 25\n        }\n      }, \"Quote Value\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.quoteValue,\n        onChange: e => this.handleInputChange('quoteValue', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 29\n        }\n      }, \"Line Item\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-sm\",\n        onClick: () => this.setState({\n          productOverlayVisible: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 29\n        }\n      }, \"+ Add Product\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-responsive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 15\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 15\n        }\n      }, \"Item Desc\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 15\n        }\n      }, \"Cust Part No\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 15\n        }\n      }, \"HSN No\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 15\n        }\n      }, \"UOM\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 15\n        }\n      }, \"On Hand\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 15\n        }\n      }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 15\n        }\n      }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 15\n        }\n      }, \"Tax Id\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 15\n        }\n      }, \"Item Total\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 15\n        }\n      }, \"Tax Amt\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 15\n        }\n      }, \"Tax Info\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 11\n        }\n      }, formData.lineItems.map((item, idx) => {\n        const itemTotal = item.unitPrice * item.qty;\n        const taxDetails = this.getTaxDetailsFromGroup(item.taxId);\n        const taxAmt = itemTotal * taxDetails.totalPercent / 100 + taxDetails.totalAmount * itemTotal;\n        const totalWithTax = itemTotal + taxAmt;\n        const taxGroup = taxGroups.find(tg => tg.id === item.taxId);\n        const taxInfo = taxGroup ? `${taxGroup.name} (${(taxDetails.totalPercent || 0) + (taxDetails.totalAmount ? ` + ₹${taxDetails.totalAmount}` : '')})` : item.taxId === 'more' ? 'Select via More' : item.taxId === 'nill' ? 'Nill Tax' : '-';\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: item.id || idx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 19\n          }\n        }, item.itemCode), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 19\n          }\n        }, item.itemDescription), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 19\n          }\n        }, item.custPartNo), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 19\n          }\n        }, item.hsnNo), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 19\n          }\n        }, item.uom), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 19\n          }\n        }, item.onHand), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          value: item.unitPrice,\n          onChange: e => this.handleLineItemChange(idx, 'unitPrice', e.target.value),\n          style: {\n            width: 80\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 812,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 819,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          value: item.qty,\n          onChange: e => this.handleLineItemChange(idx, 'qty', e.target.value),\n          style: {\n            width: 60\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 828,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"select\", {\n          value: item.taxId || '',\n          onChange: e => this.handleLineItemChange(idx, 'taxId', e.target.value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 23\n          }\n        }, \"-Select-\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"nill\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 23\n          }\n        }, \"Nill Tax\"), Array.isArray(taxGroups) && taxGroups.map(group => /*#__PURE__*/React.createElement(\"option\", {\n          key: group.id,\n          value: group.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 25\n          }\n        }, group.name)), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"more\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 23\n          }\n        }, \"More\"))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 841,\n            columnNumber: 19\n          }\n        }, totalWithTax.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 842,\n            columnNumber: 19\n          }\n        }, taxAmt.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 843,\n            columnNumber: 19\n          }\n        }, taxInfo));\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 29\n        }\n      }, \"Page 1 of 1\"))), this.state.activeTab === 'commercial' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 25\n        }\n      }, \"Bill To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"3\",\n        value: formData.billTo,\n        onChange: e => this.handleInputChange('billTo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 25\n        }\n      }, \"Ship To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"3\",\n        value: formData.shipTo,\n        onChange: e => this.handleInputChange('shipTo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 3\n        }\n      }, \"Despatch Mode\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: formData.despatchMode,\n        readOnly: true,\n        onClick: () => !isFOB && this.showOverlay('despatchMode'),\n        style: {\n          cursor: isFOB ? 'not-allowed' : 'pointer',\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 891,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        disabled: isFOB,\n        onClick: () => this.showOverlay('despatchMode'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 892,\n          columnNumber: 7\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 905,\n          columnNumber: 3\n        }\n      }, \"Payment Terms\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: formData.paymentTerms,\n        readOnly: true,\n        onClick: () => !isFOB && this.showOverlay('paymentTerms'),\n        style: {\n          cursor: isFOB ? 'not-allowed' : 'pointer',\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 907,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        disabled: isFOB,\n        onClick: () => this.showOverlay('paymentTerms'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 7\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 928,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 929,\n          columnNumber: 25\n        }\n      }, \"Freight Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.freightCharges,\n        onChange: e => this.handleInputChange('freightCharges', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 930,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 939,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 940,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 941,\n          columnNumber: 25\n        }\n      }, \"Tax %\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxPercent,\n        onChange: e => this.handleInputChange('taxPercent', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 942,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 25\n        }\n      }, \"Freight Tax Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxAmount,\n        onChange: e => this.handleInputChange('freighttaxAmount', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 952,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 960,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 25\n        }\n      }, \"Packing Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.packingCharges,\n        onChange: e => this.handleInputChange('packingCharges', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 962,\n          columnNumber: 25\n        }\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fixed-card-footer text-right p-3 border-top bg-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 17\n        }\n      }, \"Save All Details\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: () => this.setState({\n          showForm: false,\n          editingId: null\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 979,\n          columnNumber: 17\n        }\n      }, \"Cancel\"))), overlayType && this.renderOverlay(), productOverlayVisible && this.renderProductOverlay())));\n    };\n\n    this.renderQuotePreview = () => {\n      var _q$lineItems;\n\n      const q = this.state.selectedQuote;\n      if (!q) return null;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card mt-4 full-height p-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1001,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1002,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1003,\n          columnNumber: 9\n        }\n      }, \"Quote Preview - \", q.quoteNo), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-info mr-2\",\n        onClick: () => this.loadQuoteForEdit(q),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1005,\n          columnNumber: 11\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-success\",\n        onClick: () => this.convertToOrder(q),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1006,\n          columnNumber: 11\n        }\n      }, \"Convert to Order\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1009,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1010,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1010,\n          columnNumber: 35\n        }\n      }, \"Customer:\"), \" \", q.customer), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1011,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1011,\n          columnNumber: 35\n        }\n      }, \"Date:\"), \" \", q.quoteDate), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1012,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1012,\n          columnNumber: 35\n        }\n      }, \"Status:\"), \" \", q.status)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1014,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1015,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1015,\n          columnNumber: 35\n        }\n      }, \"Bill To:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1015,\n          columnNumber: 50\n        }\n      }), q.billTo), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 35\n        }\n      }, \"Ship To:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 50\n        }\n      }), q.shipTo)), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1018,\n          columnNumber: 7\n        }\n      }, \"Line Items\"), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1019,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1020,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1021,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 13\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 31\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 51\n        }\n      }, \"Qty\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 63\n        }\n      }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 82\n        }\n      }, \"Total\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1025,\n          columnNumber: 9\n        }\n      }, (_q$lineItems = q.lineItems) === null || _q$lineItems === void 0 ? void 0 : _q$lineItems.map((item, i) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1027,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1028,\n          columnNumber: 15\n        }\n      }, item.itemCode), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1029,\n          columnNumber: 15\n        }\n      }, item.itemDescription), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1030,\n          columnNumber: 15\n        }\n      }, item.qty), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1031,\n          columnNumber: 15\n        }\n      }, item.unitPrice), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1032,\n          columnNumber: 15\n        }\n      }, item.total))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1037,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1037,\n          columnNumber: 35\n        }\n      }, \"Total:\"), \" \", q.quoteValue), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary mt-3\",\n        onClick: () => this.setState({\n          previewMode: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1038,\n          columnNumber: 7\n        }\n      }, \"Back to List\"));\n    };\n  }\n\n  componentDidMount() {\n    bsCustomFileInput.init();\n    this.fetchQuotes();\n    this.fetchCustomers();\n    this.fetchProducts();\n    this.fetchDespatchModes();\n    this.fetchPaymentTerms();\n  }\n\n  getTaxDetailsFromGroup(groupId) {\n    if (!groupId || groupId === 'nill' || groupId === 'more') return {\n      totalPercent: 0,\n      totalAmount: 0\n    };\n    const taxGroup = this.state.taxGroups.find(tg => tg.id === groupId);\n    if (!taxGroup || !Array.isArray(taxGroup.lineItems)) return {\n      totalPercent: 0,\n      totalAmount: 0\n    };\n    let totalPercent = 0;\n    let totalAmount = 0;\n    taxGroup.lineItems.forEach(item => {\n      if (item.type === 'Percentage') {\n        totalPercent += parseFloat(item.percentOrAmt || 0);\n      } else if (item.type === 'Amount') {\n        totalAmount += parseFloat(item.percentOrAmt || 0);\n      }\n    });\n    return {\n      totalPercent,\n      totalAmount\n    };\n  }\n\n  recalculateQuoteTotals() {\n    const {\n      impExp,\n      freightCharges,\n      taxPercent,\n      packingCharges,\n      lineItems\n    } = this.state.formData;\n    let freight = parseFloat(freightCharges) || 0;\n    let packing = parseFloat(packingCharges) || 0;\n    let taxOnFreight = 0;\n\n    if (['None', 'CIF'].includes(impExp)) {\n      taxOnFreight = freight * (parseFloat(taxPercent) || 0) / 100;\n    }\n\n    let lineTotal = 0;\n    let itemTaxTotal = 0;\n    const updatedLineItems = lineItems.map(item => {\n      const baseTotal = parseFloat(item.unitPrice || 0) * parseFloat(item.qty || 1);\n      const taxDetails = this.getTaxDetailsFromGroup(item.taxId);\n      const taxAmt = baseTotal * taxDetails.totalPercent / 100 + taxDetails.totalAmount * baseTotal;\n      const total = baseTotal + taxAmt;\n      item.total = total.toFixed(2);\n      item.taxAmt = taxAmt.toFixed(2);\n      lineTotal += baseTotal;\n      itemTaxTotal += taxAmt;\n      return item;\n    });\n    const totalTaxAmount = itemTaxTotal + taxOnFreight;\n    const quoteValue = lineTotal + freight + packing + itemTaxTotal; // Avoid unnecessary update loop by checking\n\n    if (this.state.formData.taxAmount !== totalTaxAmount.toFixed(2) || this.state.formData.quoteValue !== quoteValue.toFixed(2)) {\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          taxAmount: totalTaxAmount.toFixed(2),\n          quoteValue: quoteValue.toFixed(2),\n          lineItems: updatedLineItems\n        }\n      }));\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // Step 1: Autofill logic (unchanged)\n    if (this.state.showForm && this.state.customers.length > 0 && this.state.formData.customer && (prevState.formData.customer !== this.state.formData.customer || !this.state.formData.billTo && !this.state.formData.shipTo)) {\n      const customerObj = this.state.customers.find(c => c.custname === this.state.formData.customer || c.custcode === this.state.formData.customer);\n\n      if (customerObj) {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            billTo: this.formatAddress(customerObj.billTo),\n            shipTo: this.formatAddress(customerObj.shipTo),\n            currency: customerObj.currency || ''\n          }\n        }));\n      }\n    } // Step 2: Prevent infinite recalculate calls\n\n\n    const changed = prevState.formData.lineItems !== this.state.formData.lineItems || prevState.formData.freightCharges !== this.state.formData.freightCharges || prevState.formData.taxPercent !== this.state.formData.taxPercent || prevState.formData.packingCharges !== this.state.formData.packingCharges || prevState.formData.impExp !== this.state.formData.impExp;\n\n    if (changed) {\n      this.recalculateQuoteTotals();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1045,\n        columnNumber: 7\n      }\n    }, this.state.previewMode ? this.renderQuotePreview() : this.state.showForm ? this.renderQuoteForm() : this.renderQuoteTable(), this.state.showTaxOverlay && this.renderTaxOverlay());\n  }\n\n}\n\nexport default withRouter(Quote);","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/panelone/Quote.js"],"names":["React","Component","Form","bsCustomFileInput","db","collection","getDocs","addDoc","doc","updateDoc","withRouter","Quote","state","activeTab","quotes","customers","products","despatchModes","paymentTerms","showForm","editingId","overlayType","overlaySearch","productOverlayVisible","productOverlaySearch","selectedProductIds","taxComponents","taxGroups","previewMode","selectedQuote","formData","quoteNo","quoteDate","Date","toISOString","split","quoteType","customer","status","choose","qrefNo","impExp","currency","conversionRate","taxAmount","quoteValue","billTo","shipTo","despatchMode","freightCharges","freighttaxAmount","taxPercent","packingCharges","lineItems","customerInputRef","createRef","formatAddress","addr","address","city","country","filter","Boolean","join","zip","handleLineItemChange","idx","field","value","updatedItems","item","setState","showTaxOverlay","taxId","prev","recalculateQuoteTotals","resetFOBFields","needsReset","some","val","undefined","fetchQuotes","snap","data","docs","map","id","reverse","fetchCustomers","fetchProducts","fetchDespatchModes","fetchPaymentTerms","handleInputChange","handleSubmit","e","preventDefault","alert","length","loadQuotePreview","q","getTaxPercentage","tax","find","tc","percentage","loadQuoteForEdit","quote","Array","isArray","current","convertToOrder","sessionStorage","setItem","JSON","stringify","props","history","push","showOverlay","type","hideOverlay","selectOverlayValue","custname","custcode","renderTaxOverlay","taxLineIndex","cursor","updated","updateQuoteTotals","code","renderOverlay","getFilteredRows","list","nameKey","codeKey","toLowerCase","includes","handleSelect","name","title","headers","rows","target","maxHeight","overflowY","h","i","j","custshortName","shortName","renderProductOverlay","filtered","p","ptshortName","ptdescription","itemCode","selectedProducts","productId","itemDescription","itemType","materialType","onHand","taxGroup","custPartNo","hsnNo","unitPrice","qty","total","toFixed","checked","renderQuoteTable","fontSize","renderQuoteForm","isFOB","flex","padding","backgroundColor","itemTotal","taxDetails","getTaxDetailsFromGroup","taxAmt","totalPercent","totalAmount","totalWithTax","tg","taxInfo","uom","width","group","renderQuotePreview","componentDidMount","init","groupId","forEach","parseFloat","percentOrAmt","freight","packing","taxOnFreight","lineTotal","itemTaxTotal","updatedLineItems","baseTotal","totalTaxAmount","componentDidUpdate","prevProps","prevState","customerObj","c","changed","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport bsCustomFileInput from 'bs-custom-file-input';\r\nimport { db } from '../../firebase';\r\nimport { collection, getDocs, addDoc, doc, updateDoc } from 'firebase/firestore';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Quote extends Component {\r\n  state = {\r\n    activeTab: 'co',\r\n    quotes: [],\r\n    customers: [],\r\n    products: [],\r\n    despatchModes: [],\r\n    paymentTerms: [],\r\n    showForm: false,\r\n    editingId: null,\r\n    overlayType: '',\r\n    overlaySearch: '',\r\n    productOverlayVisible: false,\r\n    productOverlaySearch: '',\r\n    selectedProductIds: [],\r\n    taxComponents: [],\r\n    taxGroups:[],\r\n    previewMode: false,\r\n    selectedQuote: null,\r\n    formData: {\r\n      quoteNo: '',\r\n      quoteDate: new Date().toISOString().split('T')[0],\r\n      quoteType: 'Standard',\r\n      customer: '',\r\n      status: 'Entered', // Static 'Entered'\r\n      choose: 'Service',\r\n      qrefNo: '',\r\n      impExp: 'None',\r\n      currency: '',\r\n      conversionRate: '',\r\n      taxAmount: '',\r\n      quoteValue: '',\r\n      billTo: '',\r\n      shipTo: '',\r\n      despatchMode: 'By Air',\r\n      paymentTerms: '',\r\n      freightCharges: '',\r\n      freighttaxAmount: '',\r\n      taxPercent: '',\r\n      packingCharges: '',\r\n      lineItems: [],\r\n    }\r\n  };\r\n  customerInputRef = React.createRef();\r\n\r\n  // Helper to format address for Bill To / Ship To\r\n  formatAddress = (addr) => {\r\n    if (!addr) return '';\r\n    if (typeof addr === 'string') return addr;\r\n    return [\r\n      addr.address,\r\n      [addr.city, addr.state, addr.country].filter(Boolean).join(', '),\r\n      addr.zip\r\n    ].filter(Boolean).join('\\n');\r\n  };\r\n\r\n  componentDidMount() {\r\n    bsCustomFileInput.init();\r\n    this.fetchQuotes();\r\n    this.fetchCustomers();\r\n    this.fetchProducts();\r\n    this.fetchDespatchModes();\r\n    this.fetchPaymentTerms();\r\n\r\n  }\r\n\r\ngetTaxDetailsFromGroup(groupId) {\r\n  if (!groupId || groupId === 'nill' || groupId === 'more') return { totalPercent: 0, totalAmount: 0 };\r\n\r\n  const taxGroup = this.state.taxGroups.find(tg => tg.id === groupId);\r\n  if (!taxGroup || !Array.isArray(taxGroup.lineItems)) return { totalPercent: 0, totalAmount: 0 };\r\n\r\n  let totalPercent = 0;\r\n  let totalAmount = 0;\r\n\r\n  taxGroup.lineItems.forEach(item => {\r\n    if (item.type === 'Percentage') {\r\n      totalPercent += parseFloat(item.percentOrAmt || 0);\r\n    } else if (item.type === 'Amount') {\r\n      totalAmount += parseFloat(item.percentOrAmt || 0);\r\n    }\r\n  });\r\n\r\n  return { totalPercent, totalAmount };\r\n}\r\n\r\nhandleLineItemChange = (idx, field, value) => {\r\n  const updatedItems = [...this.state.formData.lineItems];\r\n  const item = { ...updatedItems[idx] };\r\n\r\n  if (field === 'taxId') {\r\n    if (value === 'more') {\r\n      this.setState({ showTaxOverlay: true });\r\n      return;\r\n    }\r\n    item.taxId = value;\r\n  } else {\r\n    item[field] = value;\r\n  }\r\n\r\n  updatedItems[idx] = item;\r\n\r\n  this.setState(prev => ({\r\n    formData: {\r\n      ...prev.formData,\r\n      lineItems: updatedItems\r\n    }\r\n  }), this.recalculateQuoteTotals);\r\n};\r\n\r\nrecalculateQuoteTotals() {\r\n  const { impExp, freightCharges, taxPercent, packingCharges, lineItems } = this.state.formData;\r\n  let freight = parseFloat(freightCharges) || 0;\r\n  let packing = parseFloat(packingCharges) || 0;\r\n  let taxOnFreight = 0;\r\n  if (['None', 'CIF'].includes(impExp)) {\r\n    taxOnFreight = (freight * (parseFloat(taxPercent) || 0)) / 100;\r\n  }\r\n\r\n  let lineTotal = 0;\r\n  let itemTaxTotal = 0;\r\n\r\n  const updatedLineItems = lineItems.map(item => {\r\n    const baseTotal = (parseFloat(item.unitPrice || 0) * parseFloat(item.qty || 1));\r\n    const taxDetails = this.getTaxDetailsFromGroup(item.taxId);\r\n    const taxAmt = (baseTotal * taxDetails.totalPercent / 100) + (taxDetails.totalAmount * baseTotal);\r\n\r\n    const total = baseTotal + taxAmt;\r\n    item.total = total.toFixed(2);\r\n    item.taxAmt = taxAmt.toFixed(2);\r\n\r\n    lineTotal += baseTotal;\r\n    itemTaxTotal += taxAmt;\r\n\r\n    return item;\r\n  });\r\n\r\n  const totalTaxAmount = itemTaxTotal + taxOnFreight;\r\n  const quoteValue = lineTotal + freight + packing + itemTaxTotal;\r\n\r\n  // Avoid unnecessary update loop by checking\r\n  if (\r\n    this.state.formData.taxAmount !== totalTaxAmount.toFixed(2) ||\r\n    this.state.formData.quoteValue !== quoteValue.toFixed(2)\r\n  ) {\r\n    this.setState(prev => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        taxAmount: totalTaxAmount.toFixed(2),\r\n        quoteValue: quoteValue.toFixed(2),\r\n        lineItems: updatedLineItems\r\n      }\r\n    }));\r\n  }\r\n}\r\n\r\nresetFOBFields = () => {\r\n  const { freightCharges, taxPercent, taxAmount, packingCharges, quoteValue } = this.state.formData;\r\n  const needsReset = [freightCharges, taxPercent, taxAmount, packingCharges, quoteValue]\r\n    .some(val => val !== '' && val !== null && val !== undefined);\r\n\r\n  if (needsReset) {\r\n    this.setState(prev => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        freightCharges: '',\r\n        taxPercent: '',\r\n        taxAmount: '',\r\n        packingCharges: '',\r\n        quoteValue: ''\r\n      }\r\n    }));\r\n  }\r\n};\r\n\r\ncomponentDidUpdate(prevProps, prevState) {\r\n  // Step 1: Autofill logic (unchanged)\r\n  if (\r\n    this.state.showForm &&\r\n    this.state.customers.length > 0 &&\r\n    this.state.formData.customer &&\r\n    (prevState.formData.customer !== this.state.formData.customer ||\r\n     (!this.state.formData.billTo && !this.state.formData.shipTo))\r\n  ) {\r\n    const customerObj = this.state.customers.find(\r\n      c =>\r\n        c.custname === this.state.formData.customer ||\r\n        c.custcode === this.state.formData.customer\r\n    );\r\n    if (customerObj) {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          billTo: this.formatAddress(customerObj.billTo),\r\n          shipTo: this.formatAddress(customerObj.shipTo),\r\n          currency: customerObj.currency || ''\r\n        }\r\n      }));\r\n    }\r\n  }\r\n\r\n  // Step 2: Prevent infinite recalculate calls\r\n  const changed =\r\n    prevState.formData.lineItems !== this.state.formData.lineItems ||\r\n    prevState.formData.freightCharges !== this.state.formData.freightCharges ||\r\n    prevState.formData.taxPercent !== this.state.formData.taxPercent ||\r\n    prevState.formData.packingCharges !== this.state.formData.packingCharges ||\r\n    prevState.formData.impExp !== this.state.formData.impExp;\r\n\r\n  if (changed) {\r\n    this.recalculateQuoteTotals();\r\n  }\r\n}\r\n\r\n  fetchQuotes = async () => {\r\n    const snap = await getDocs(collection(db, 'quotes'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ quotes: data.reverse() });\r\n  };\r\n\r\n  fetchCustomers = async () => {\r\n    const snap = await getDocs(collection(db, 'customers'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ customers: data });\r\n  };\r\n\r\n  fetchProducts = async () => {\r\n    const snap = await getDocs(collection(db, 'products'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ products: data });\r\n  };\r\n  fetchDespatchModes = async () => {\r\n  const snap = await getDocs(collection(db, 'modes'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ despatchModes: data });\r\n};\r\n\r\nfetchPaymentTerms = async () => {\r\n  const snap = await getDocs(collection(db, 'paymentTerms'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ paymentTerms: data });\r\n};\r\n\r\n\r\n  handleInputChange = (field, value) => {\r\n    this.setState(prev => ({\r\n      formData: { ...prev.formData, [field]: value }\r\n    }));\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { editingId, formData, quotes } = this.state;\r\n    if (!formData.customer) return alert(\"Customer is required\");\r\n    if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\r\n\r\n    if (editingId) {\r\n      await updateDoc(doc(db, 'quotes', editingId), formData);\r\n    } else {\r\n      formData.quoteNo = `QT${1000 + quotes.length}`;\r\n      await addDoc(collection(db, 'quotes'), formData);\r\n    }\r\n    this.setState({ showForm: false, editingId: null });\r\n    this.fetchQuotes();\r\n  };\r\nloadQuotePreview = (q) => {\r\n  this.setState({\r\n    selectedQuote: q,\r\n    previewMode: true\r\n  });\r\n};\r\ngetTaxPercentage = (taxId) => {\r\n  if (!taxId || taxId === 'nill') return 0;\r\n  const tax = this.state.taxComponents.find(tc => tc.id === taxId);\r\n  return tax?.percentage || 0;\r\n};\r\n\r\n\r\n  loadQuoteForEdit = (quote) => {\r\n    this.setState({\r\n      formData: {\r\n        ...quote,\r\n        lineItems: Array.isArray(quote.lineItems) ? quote.lineItems : [] // Ensure array\r\n      },\r\n      editingId: quote.id,\r\n      showForm: true,\r\n      previewMode: false,\r\n      activeTab: 'co'\r\n    }, () => {\r\n      if (this.customerInputRef.current) {\r\n        this.customerInputRef.current.value = quote.customer;\r\n      }\r\n    });\r\n  };\r\nconvertToOrder = (quote) => {\r\n  // Save quote in sessionStorage (or navigate with state via router if you use react-router)\r\n  sessionStorage.setItem('quoteToConvert', JSON.stringify(quote));\r\n this.props.history.push('/panelone/Order');\r\n};\r\n\r\n  showOverlay = (type) => this.setState({ overlayType: type, overlaySearch: '' });\r\n  hideOverlay = () => this.setState({ overlayType: '', overlaySearch: '' });\r\n\r\n  selectOverlayValue = (value) => {\r\n    if (this.state.overlayType === 'customer') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          customer: value.custname || value.custcode || '', // Use custname or custcode\r\n          billTo: this.formatAddress(value.billTo),\r\n          shipTo: this.formatAddress(value.shipTo),\r\n          currency: value.currency || '',\r\n          // despatchMode: value.despatchMode || '', // No auto-fill for despatch mode\r\n          // paymentTerms: value.paymentTerms || '' // No auto-fill for payment terms\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }), () => {\r\n        if (this.customerInputRef.current) {\r\n          this.customerInputRef.current.value = value.custname || value.custcode || '';\r\n        }\r\n      });\r\n    }\r\n  };\r\n  renderTaxOverlay = () => {\r\n  const { taxComponents, taxLineIndex } = this.state;\r\n\r\n  return (\r\n    <div className=\"custom-overlay\">\r\n      <div className=\"custom-overlay-content\">\r\n        <div className=\"custom-overlay-title\">Select Tax Group</div>\r\n        <table className=\"table table-bordered table-sm\">\r\n          <thead>\r\n            <tr><th>Component</th><th>%</th></tr>\r\n          </thead>\r\n          <tbody>\r\n            {taxComponents.map(tc => (\r\n              <tr key={tc.id} style={{ cursor: 'pointer' }} onClick={() => {\r\n                const updated = [...this.state.formData.lineItems];\r\n                updated[taxLineIndex].taxId = tc.id;\r\n                this.setState(prev => ({\r\n                  formData: { ...prev.formData, lineItems: updated },\r\n                  showTaxOverlay: false,\r\n                  taxLineIndex: null\r\n                }), this.updateQuoteTotals);\r\n              }}>\r\n                <td>{tc.code}</td>\r\n                <td>{tc.percentage}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <button className=\"btn btn-sm btn-secondary mt-2\" onClick={() => this.setState({ showTaxOverlay: false })}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n renderOverlay = () => {\r\n  const { overlayType, overlaySearch, customers, despatchModes, paymentTerms } = this.state;\r\n\r\n  const getFilteredRows = (list, nameKey = 'name', codeKey = 'shortName') =>\r\n    list.filter(item =>\r\n      (item[nameKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()) ||\r\n      (item[codeKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase())\r\n    );\r\n\r\n  const handleSelect = (item) => {\r\n    if (overlayType === 'customer') {\r\n      this.selectOverlayValue(item);\r\n    } else if (overlayType === 'despatchMode') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          despatchMode: item.name\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }));\r\n    } else if (overlayType === 'paymentTerms') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          paymentTerms: item.name\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  let title = '';\r\n  let headers = [];\r\n  let rows = [];\r\n\r\n  if (overlayType === 'customer') {\r\n    title = 'Select Customer';\r\n    headers = ['Name', 'Code', 'Short Name'];\r\n    rows = getFilteredRows(customers, 'custname', 'custcode');\r\n  } else if (overlayType === 'despatchMode') {\r\n    title = 'Select Despatch Mode';\r\n    headers = ['Name', 'Short Name'];\r\n    rows = getFilteredRows(despatchModes);\r\n  } else if (overlayType === 'paymentTerms') {\r\n    title = 'Select Payment Terms';\r\n    headers = ['Name', 'Short Name'];\r\n    rows = getFilteredRows(paymentTerms);\r\n  } else {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"custom-overlay\">\r\n      <div className=\"custom-overlay-content\">\r\n        <div className=\"custom-overlay-title\">{title}</div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control mb-2\"\r\n          placeholder={`Search ${overlayType}...`}\r\n          value={overlaySearch}\r\n          onChange={e => this.setState({ overlaySearch: e.target.value })}\r\n        />\r\n        <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n          <table className=\"table table-bordered table-sm\">\r\n            <thead>\r\n              <tr>\r\n                {headers.map((h, i) => <th key={i}>{h}</th>)}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {rows.map((item, i) => (\r\n                <tr key={item.id || i} onClick={() => handleSelect(item)} style={{ cursor: 'pointer' }}>\r\n                  {headers.map((h, j) => (\r\n                    <td key={j}>\r\n                      {overlayType === 'customer'\r\n                        ? h === 'Name' ? item.custname\r\n                          : h === 'Code' ? item.custcode\r\n                          : item.custshortName\r\n                        : h === 'Name' ? item.name\r\n                          : item.shortName}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n              {rows.length === 0 && (\r\n                <tr>\r\n                  <td colSpan={headers.length} className=\"text-center\">No records found</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <button className=\"btn btn-secondary btn-sm mt-2\" onClick={this.hideOverlay}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n  renderProductOverlay = () => {\r\n    const { products, productOverlaySearch, selectedProductIds } = this.state;\r\n    const filtered = products.filter(p =>\r\n      (p.ptshortName || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) ||\r\n      (p.ptdescription || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) ||\r\n      (p.itemCode || '').toLowerCase().includes(productOverlaySearch.toLowerCase())\r\n    );\r\n    return (\r\n      <div className=\"custom-overlay\">\r\n        <div className=\"custom-overlay-content\">\r\n          <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n            <div className=\"custom-overlay-title\">Select Products</div>\r\n            <button\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => {\r\n                const selectedProducts = products.filter(p => this.state.selectedProductIds.includes(p.id));\r\n                this.setState(prev => ({\r\n                  formData: {\r\n                    ...prev.formData,\r\n                    lineItems: [\r\n                      ...prev.formData.lineItems,\r\n                      ...selectedProducts\r\n                        .filter(p => !prev.formData.lineItems.some(item => item.id === p.id))\r\n                        .map(p => ({\r\n                          id: p.id,\r\n                          itemCode: p.productId || '',\r\n                          itemDescription: p.ptdescription || '',\r\n                          itemType: p.itemType || '',\r\n                          materialType: p.materialType || '',\r\n                          onHand: p.onHand || 0,\r\n                          taxGroup: p.taxGroup || '',\r\n                          custPartNo: p.custPartNo || '', // Assuming this is cust part table\r\n                          hsnNo: p.hsnNo || '', // Assuming HSN No.\r\n                          unitPrice: p.unitPrice || 0,\r\n                          qty: 1,\r\n                          total: (p.unitPrice || 0).toFixed(2)\r\n                        }))\r\n                    ]\r\n                  },\r\n                  productOverlayVisible: false,\r\n                  selectedProductIds: []\r\n                }));\r\n              }}\r\n            >Add Selected</button>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Search products...\"\r\n            value={productOverlaySearch}\r\n            onChange={e => this.setState({ productOverlaySearch: e.target.value })}\r\n          />\r\n          <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n            <table className=\"table table-bordered table-sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th></th>\r\n                  <th>Item Code</th>\r\n                  <th>Item Desc</th>\r\n                  <th>Item Type</th>\r\n                  <th>Material Type</th>\r\n                  <th>On Hand</th>\r\n                  <th>Tax Grp</th>\r\n                  <th>Cust Part No</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filtered.map(p => (\r\n                  <tr key={p.id}>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedProductIds.includes(p.id)}\r\n                        onChange={e => {\r\n                          const checked = e.target.checked;\r\n                          this.setState(prev => ({\r\n                            selectedProductIds: checked\r\n                              ? [...prev.selectedProductIds, p.id]\r\n                              : prev.selectedProductIds.filter(id => id !== p.id)\r\n                          }));\r\n                        }}\r\n                      />\r\n                    </td>\r\n                    <td>{p.productId}</td>\r\n                    <td>{p.ptdescription || ''}</td>\r\n                    <td>{p.itemType || ''}</td>\r\n                    <td>{p.materialType || ''}</td>\r\n                    <td>{p.onHand || 0}</td>\r\n                    <td>{p.taxGroup || ''}</td>\r\n                    <td>{p.custPartNo || ''}</td>\r\n                  </tr>\r\n                ))}\r\n                {filtered.length === 0 && (\r\n                  <tr>\r\n                    <td colSpan=\"8\" className=\"text-center\">No products found</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          {/* Add pagination here if needed, for now, it's just a placeholder */}\r\n          <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n            <span>Page 1 of 1</span>\r\n            <button className=\"btn btn-secondary btn-sm\" onClick={() => this.setState({ productOverlayVisible: false, selectedProductIds: [] })}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n\r\n  renderQuoteTable = () => (\r\n    <div className=\"card mt-4 full-height\">\r\n      <div className=\"card-body\">\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n          <h4 className=\"card-title\">Quotes</h4>\r\n          <button className=\"btn btn-primary\" onClick={() => this.setState({ showForm: true })}>+ Add Quote</button>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-bordered table-hover\">\r\n            <thead className=\"thead-light\">\r\n              <tr style={{ fontSize: '14px' }}>\r\n                <th>Quote No</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Quote Value</th>\r\n                <th>Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.quotes.map((q, i) => (\r\n                <tr key={i} style={{ fontSize: '14px' }}>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-link p-0\"\r\n                      onClick={() => this.loadQuotePreview(q)}\r\n                    >\r\n                      {q.quoteNo}\r\n                    </button>\r\n                  </td>\r\n                  <td>{q.customer}</td>\r\n                  <td>{q.quoteDate}</td>\r\n                  <td>{q.quoteValue}</td>\r\n                  <td><label className=\"badge badge-info\">{q.status}</label></td>\r\n          \r\n                </tr>\r\n              ))}\r\n              {this.state.quotes.length === 0 && (\r\n                <tr><td colSpan=\"6\" className=\"text-center\">No quotes found.</td></tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  renderQuoteForm = () => {\r\n    const { formData, overlayType, productOverlayVisible ,taxGroups} = this.state;\r\n    const isFOB = formData.impExp === 'FOB';\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"card full-height\">\r\n          <div style={{ flex: 1, overflowY: 'auto', padding: '24px' }}>\r\n            <h4 className=\"mb-3\">Quote Form</h4>\r\n            <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n              <li className=\"nav-item\">\r\n                <button type=\"button\" className={`nav-link ${this.state.activeTab === 'co' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'co' })}>CO Details</button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <button type=\"button\" className={`nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'commercial' })}>Commercial Terms</button>\r\n              </li>\r\n            </ul>\r\n            <form className=\"form-sample\" onSubmit={this.handleSubmit}>\r\n              <div className=\"tab-content pt-3\">\r\n                {this.state.activeTab === 'co' && (\r\n                  <>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Quote No</label>\r\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={formData.quoteNo} onChange={(e) => this.handleInputChange('quoteNo', e.target.value)} />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Quote Date</label>\r\n                        <input type=\"date\" className=\"form-control form-control-sm\" value={formData.quoteDate} onChange={(e) => this.handleInputChange('quoteDate', e.target.value)} />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Quote Type</label>\r\n                        <select className=\"form-control form-control-sm\" value={formData.quoteType} onChange={(e) => this.handleInputChange('quoteType', e.target.value)}>\r\n                          <option>Standard</option>\r\n                          <option>Manual</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Status</label>\r\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={formData.status}   style={{ backgroundColor: '#fff' }} readOnly />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Customer</label>\r\n                        <div className=\"input-group input-group-sm\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Choose Customer\"\r\n                            ref={this.customerInputRef}\r\n                            value={formData.customer}\r\n                            readOnly\r\n                            onClick={() => this.showOverlay('customer')}\r\n                            style={{ cursor: 'pointer' }}\r\n                          />\r\n                          <div className=\"input-group-append\">\r\n                            <button className=\"btn btn-outline-secondary btn-sm\" type=\"button\" onClick={() => this.showOverlay('customer')}>Select</button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>IMP/EXP</label>\r\n                        <select\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.impExp}\r\n                          onChange={(e) => this.handleInputChange('impExp', e.target.value)}\r\n                        >\r\n                          <option>None</option>\r\n                          <option>COB</option>\r\n                          <option>FOB</option>\r\n                          <option>CIF</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group col-md-2\">\r\n                        <label>Ref No.</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.qrefNo}\r\n                          onChange={(e) => this.handleInputChange('qrefNo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Choose</label>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"form-check mr-4\">\r\n                            <input type=\"radio\" className=\"form-check-input\" name=\"choose\" id=\"chooseService\" value=\"Service\" checked={formData.choose === 'Service'} onChange={(e) => this.handleInputChange('choose', e.target.value)} />\r\n                            <label className=\"form-check-label\" htmlFor=\"chooseService\">Service</label>\r\n                          </div>\r\n                          <div className=\"form-check\">\r\n                            <input type=\"radio\" className=\"form-check-input\" name=\"choose\" id=\"chooseProduct\" value=\"Product\" checked={formData.choose === 'Product'} onChange={(e) => this.handleInputChange('choose', e.target.value)} />\r\n                            <label className=\"form-check-label\" htmlFor=\"chooseProduct\">Product</label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Currency</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.currency}\r\n                          style={{ backgroundColor: '#fff' }}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Conversion Rate</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.conversionRate}\r\n                          onChange={(e) => this.handleInputChange('conversionRate', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Tax Amount</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxAmount}\r\n                          onChange={(e) => this.handleInputChange('taxAmount', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Quote Value</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.quoteValue}\r\n                          onChange={(e) => this.handleInputChange('quoteValue', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                   \r\n                          <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                            <h4 className=\"card-title\">Line Item</h4>\r\n                            <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={() => this.setState({ productOverlayVisible: true })}>\r\n                              + Add Product\r\n                            </button>\r\n                          </div>\r\n                          <div className=\"table-responsive\">\r\n        <table className=\"table table-bordered\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>Item Code</th>\r\n              <th>Item Desc</th>\r\n              <th>Cust Part No</th>\r\n              <th>HSN No</th>\r\n              <th>UOM</th>\r\n              <th>On Hand</th>\r\n              <th>Unit Price</th>\r\n              <th>Quantity</th>\r\n              <th>Tax Id</th>\r\n              <th>Item Total</th>\r\n              <th>Tax Amt</th>\r\n              <th>Tax Info</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {formData.lineItems.map((item, idx) => {\r\n              const itemTotal = item.unitPrice * item.qty;\r\n              const taxDetails = this.getTaxDetailsFromGroup(item.taxId);\r\n              const taxAmt = (itemTotal * taxDetails.totalPercent / 100) + (taxDetails.totalAmount * itemTotal);\r\n              const totalWithTax = itemTotal + taxAmt;\r\n              const taxGroup = taxGroups.find(tg => tg.id === item.taxId);\r\n              const taxInfo = taxGroup\r\n                ? `${taxGroup.name} (${(taxDetails.totalPercent || 0) + (taxDetails.totalAmount ? ` + ₹${taxDetails.totalAmount}` : '')})`\r\n                : item.taxId === 'more'\r\n                ? 'Select via More'\r\n                : item.taxId === 'nill'\r\n                ? 'Nill Tax'\r\n                : '-';\r\n\r\n              return (\r\n                <tr key={item.id || idx}>\r\n                  <td>{item.itemCode}</td>\r\n                  <td>{item.itemDescription}</td>\r\n                  <td>{item.custPartNo}</td>\r\n                  <td>{item.hsnNo}</td>\r\n                  <td>{item.uom}</td>\r\n                  <td>{item.onHand}</td>\r\n                  <td>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={item.unitPrice}\r\n                      onChange={e => this.handleLineItemChange(idx, 'unitPrice', e.target.value)}\r\n                      style={{ width: 80 }}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      value={item.qty}\r\n                      onChange={e => this.handleLineItemChange(idx, 'qty', e.target.value)}\r\n                      style={{ width: 60 }}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <select\r\n                      value={item.taxId || ''}\r\n                      onChange={e => this.handleLineItemChange(idx, 'taxId', e.target.value)}\r\n                    >\r\n                      <option value=\"\">-Select-</option>\r\n                      <option value=\"nill\">Nill Tax</option>\r\n                      {Array.isArray(taxGroups) && taxGroups.map(group => (\r\n                        <option key={group.id} value={group.id}>{group.name}</option>\r\n                      ))}\r\n                      <option value=\"more\">More</option>\r\n                    </select>\r\n                  </td>\r\n                  <td>{totalWithTax.toFixed(2)}</td>\r\n                  <td>{taxAmt.toFixed(2)}</td>\r\n                  <td>{taxInfo}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n                          {/* Add pagination for line items here if needed */}\r\n                          <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n                            <span>Page 1 of 1</span>\r\n                          </div>\r\n                      \r\n                  </>\r\n                )}\r\n                {this.state.activeTab === 'commercial' && (\r\n                  <>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-6\">\r\n                        <label>Bill To</label>\r\n                        <textarea\r\n                          className=\"form-control form-control-sm\"\r\n                          rows=\"3\"\r\n                          value={formData.billTo}\r\n                          onChange={(e) => this.handleInputChange('billTo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-6\">\r\n                        <label>Ship To</label>\r\n                        <textarea\r\n                          className=\"form-control form-control-sm\"\r\n                          rows=\"3\"\r\n                          value={formData.shipTo}\r\n                          onChange={(e) => this.handleInputChange('shipTo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-4\">\r\n  <label>Despatch Mode</label>\r\n  <div className=\"input-group input-group-sm\">\r\n    <input\r\n      type=\"text\"\r\n      className=\"form-control\"\r\n      value={formData.despatchMode}\r\n      readOnly\r\n      onClick={() => !isFOB && this.showOverlay('despatchMode')}\r\n      style={{ cursor: isFOB ? 'not-allowed' : 'pointer', backgroundColor: '#fff' }}\r\n    />\r\n    <div className=\"input-group-append\">\r\n      <button\r\n        className=\"btn btn-outline-secondary btn-sm\"\r\n        type=\"button\"\r\n        disabled={isFOB}\r\n        onClick={() => this.showOverlay('despatchMode')}\r\n      >\r\n        Select\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div className=\"form-group col-md-4\">\r\n  <label>Payment Terms</label>\r\n  <div className=\"input-group input-group-sm\">\r\n    <input\r\n      type=\"text\"\r\n      className=\"form-control\"\r\n      value={formData.paymentTerms}\r\n      readOnly\r\n      onClick={() => !isFOB && this.showOverlay('paymentTerms')}\r\n      style={{ cursor: isFOB ? 'not-allowed' : 'pointer', backgroundColor: '#fff' }}\r\n    />\r\n    <div className=\"input-group-append\">\r\n      <button\r\n        className=\"btn btn-outline-secondary btn-sm\"\r\n        type=\"button\"\r\n        disabled={isFOB}\r\n        onClick={() => this.showOverlay('paymentTerms')}\r\n      >\r\n        Select\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Freight Charges</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.freightCharges}\r\n                          onChange={(e) => this.handleInputChange('freightCharges', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Tax %</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxPercent}\r\n                          onChange={(e) => this.handleInputChange('taxPercent', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Freight Tax Amount</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxAmount}\r\n                          onChange={(e) => this.handleInputChange('freighttaxAmount', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Packing Charges</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.packingCharges}\r\n                          onChange={(e) => this.handleInputChange('packingCharges', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </>\r\n                )}\r\n                \r\n\r\n              </div>\r\n              <div className=\"fixed-card-footer text-right p-3 border-top bg-white\">\r\n                <button type=\"submit\" className=\"btn btn-success mr-2\">Save All Details</button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => this.setState({ showForm: false, editingId: null })}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n            {overlayType && this.renderOverlay()}\r\n            {productOverlayVisible && this.renderProductOverlay()}\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\nrenderQuotePreview = () => {\r\n  const q = this.state.selectedQuote;\r\n  if (!q) return null;\r\n\r\n  return (\r\n    <div className=\"card mt-4 full-height p-4\">\r\n      <div className=\"d-flex justify-content-between mb-3\">\r\n        <h4 className=\"card-title\">Quote Preview - {q.quoteNo}</h4>\r\n        <div>\r\n          <button className=\"btn btn-sm btn-info mr-2\" onClick={() => this.loadQuoteForEdit(q)}>Edit</button>\r\n          <button className=\"btn btn-sm btn-success\" onClick={() => this.convertToOrder(q)}>Convert to Order</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\"><b>Customer:</b> {q.customer}</div>\r\n        <div className=\"col-md-4\"><b>Date:</b> {q.quoteDate}</div>\r\n        <div className=\"col-md-4\"><b>Status:</b> {q.status}</div>\r\n      </div>\r\n      <div className=\"row mt-2\">\r\n        <div className=\"col-md-6\"><b>Bill To:</b><br />{q.billTo}</div>\r\n        <div className=\"col-md-6\"><b>Ship To:</b><br />{q.shipTo}</div>\r\n      </div>\r\n      <h5 className=\"mt-4\">Line Items</h5>\r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>Item Code</th><th>Description</th><th>Qty</th><th>Unit Price</th><th>Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {q.lineItems?.map((item, i) => (\r\n            <tr key={i}>\r\n              <td>{item.itemCode}</td>\r\n              <td>{item.itemDescription}</td>\r\n              <td>{item.qty}</td>\r\n              <td>{item.unitPrice}</td>\r\n              <td>{item.total}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"text-right\"><b>Total:</b> {q.quoteValue}</div>\r\n      <button className=\"btn btn-secondary mt-3\" onClick={() => this.setState({ previewMode: false })}>Back to List</button>\r\n    </div>\r\n  );\r\n};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        {this.state.previewMode? this.renderQuotePreview(): this.state.showForm ? this.renderQuoteForm() : this.renderQuoteTable()}\r\n         {this.state.showTaxOverlay && this.renderTaxOverlay()}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Quote);\r\n"]},"metadata":{},"sourceType":"module"}