{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\sales\\\\salestransactions\\\\invoice\\\\idbill\\\\IndirectBillingApproval.js\";\n// IndirectBillingApproval.js\nimport React, { Component } from \"react\";\nimport { db } from \"../../../../../firebase\";\nimport { collection, getDocs, updateDoc, doc, serverTimestamp } from \"firebase/firestore\";\n\nclass IndirectBillingApproval extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      bills: [],\n      selected: null,\n      loading: false,\n      showRejectDialog: false,\n      rejectReason: \"\",\n      // local editable copy to allow inline editing within approval screen\n      formData: null\n    };\n\n    this.fetchBills = async () => {\n      const snap = await getDocs(collection(db, \"indirectBills\"));\n      const data = snap.docs.map(d => ({\n        id: d.id,\n        ...d.data()\n      }));\n      this.setState({\n        bills: data.reverse()\n      });\n    };\n\n    this.openPreview = bill => {\n      // create deep copy for editing inside approval screen\n      const copy = JSON.parse(JSON.stringify(bill || {}));\n      this.setState({\n        selected: bill,\n        formData: copy\n      });\n    };\n\n    this.closePreview = () => {\n      this.setState({\n        selected: null,\n        formData: null,\n        showRejectDialog: false,\n        rejectReason: \"\"\n      });\n    };\n\n    this.handleInputChange = (field, value) => {\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          [field]: value\n        }\n      }));\n    };\n\n    this.handleLineItemChange = (idx, field, value) => {\n      const items = [...(this.state.formData.lineItems || [])];\n      items[idx] = { ...items[idx],\n        [field]: value\n      }; // recalc itemTotal locally (same logic as IndirectBilling)\n\n      const qty = parseFloat(items[idx].shipQty || 0);\n      const unitPrice = parseFloat(items[idx].unitPrice || 0);\n      items[idx].itemTotal = (qty * unitPrice).toFixed(2);\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          lineItems: items\n        }\n      }));\n    };\n\n    this.recalcTotals = () => {\n      const f = this.state.formData || {};\n      const items = f.lineItems || [];\n      let totalValue = 0;\n      items.forEach(it => {\n        totalValue += parseFloat(it.itemTotal || 0);\n      });\n      const freightCharges = parseFloat(f.freightCharges || 0);\n      const freightPercent = parseFloat(f.freightPercent || 0);\n      const packingCharges = parseFloat(f.packingCharges || 0);\n      const freightTaxAmt = freightCharges * freightPercent / 100;\n      totalValue += freightCharges + packingCharges + freightTaxAmt;\n      if (f.conversionRate) totalValue = totalValue * parseFloat(f.conversionRate);\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          totalValue: totalValue ? totalValue.toFixed(2) : \"\",\n          freightTaxAmt: freightTaxAmt ? freightTaxAmt.toFixed(2) : \"0.00\"\n        }\n      }));\n    };\n\n    this.saveChanges = async (setAwaiting = true) => {\n      // Save edits inline. If setAwaiting === true, set status to \"Awaiting Approval\"\n      const {\n        selected,\n        formData\n      } = this.state;\n      if (!selected || !formData) return;\n      this.setState({\n        loading: true\n      });\n\n      try {\n        const cRef = doc(db, \"indirectBills\", selected.id);\n        const updatePayload = { ...formData,\n          updatedAt: serverTimestamp()\n        };\n        if (setAwaiting) updatePayload.status = \"Awaiting Approval\";\n        await updateDoc(cRef, updatePayload);\n        await this.fetchBills();\n        this.openPreview({ ...formData,\n          id: selected.id\n        }); // refresh local copy\n\n        alert(\"Saved.\");\n      } catch (err) {\n        console.error(err);\n        alert(\"Error saving: \" + err.message);\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this.approve = async () => {\n      const {\n        selected,\n        formData\n      } = this.state;\n      if (!selected || !formData) return;\n      if (!window.confirm(`Approve ${formData.billNo || selected.billNo}?`)) return;\n      this.setState({\n        loading: true\n      });\n\n      try {\n        const cRef = doc(db, \"indirectBills\", selected.id);\n        await updateDoc(cRef, { ...formData,\n          status: \"Approved\",\n          approvedAt: serverTimestamp(),\n          updatedAt: serverTimestamp()\n        });\n        alert(\"Approved.\");\n        await this.fetchBills();\n        this.closePreview();\n      } catch (err) {\n        console.error(err);\n        alert(\"Error approving: \" + err.message);\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this.openRejectDialog = () => {\n      this.setState({\n        showRejectDialog: true,\n        rejectReason: \"\"\n      });\n    };\n\n    this.closeRejectDialog = () => {\n      this.setState({\n        showRejectDialog: false,\n        rejectReason: \"\"\n      });\n    };\n\n    this.handleRejectReasonChange = e => this.setState({\n      rejectReason: e.target.value\n    });\n\n    this.handleRejectConfirm = async () => {\n      const {\n        selected,\n        formData,\n        rejectReason\n      } = this.state;\n      if (!selected) return;\n\n      if (!rejectReason || !rejectReason.trim()) {\n        alert(\"Please enter a reason for rejection.\");\n        return;\n      }\n\n      this.setState({\n        loading: true\n      });\n\n      try {\n        const cRef = doc(db, \"indirectBills\", selected.id);\n        await updateDoc(cRef, { ...formData,\n          status: \"Rejected\",\n          // per user's rule (badge will be success)\n          rejectReason,\n          rejectedAt: serverTimestamp(),\n          updatedAt: serverTimestamp()\n        });\n        alert(\"Rejected.\");\n        await this.fetchBills();\n        this.closePreview();\n      } catch (err) {\n        console.error(err);\n        alert(\"Error rejecting: \" + err.message);\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this.getStatusBadge = status => {\n      let cls = \"badge-secondary\";\n      if (!status) status = \"Entered\";\n      if (status === \"Awaiting Approval\") cls = \"badge-warning\";else if (status === \"Approved\") cls = \"badge-success\";else if (status === \"Rejected\") cls = \"badge-danger\"; // user requested rejected as success\n      else if (status === \"Partial\") cls = \"badge-purple\";else if (status === \"Completed\") cls = \"badge-info\";\n      return /*#__PURE__*/React.createElement(\"label\", {\n        className: `badge ${cls}`,\n        style: {\n          fontSize: '14px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 12\n        }\n      }, status);\n    };\n\n    this.renderRejectDialog = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-overlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-overlay-content\",\n      style: {\n        width: 400\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, \"Reject Reason\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"form-control\",\n      rows: 3,\n      value: this.state.rejectReason,\n      onChange: this.handleRejectReasonChange,\n      placeholder: \"Enter reason for rejection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-secondary mr-2\",\n      onClick: this.closeRejectDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: this.handleRejectConfirm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    }, \"Reject\"))));\n\n    this.renderPreview = () => {\n      const f = this.state.formData;\n      if (!f) return null;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card full-height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        className: \"form-sample\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: 'auto',\n          padding: '24px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }\n      }, \"Indirect Billing - Approval\"), this.renderTabs(), this.state.activeTab === 0 && this.renderBillingDetailsTab(), this.state.activeTab === 1 && this.renderPortTab(), this.state.activeTab === 2 && this.renderNotesTab()), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fixed-card-footer text-right p-3 border-top bg-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary mr-2\",\n        onClick: () => {\n          this.recalcTotals();\n          this.saveChanges(true);\n        },\n        disabled: this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }\n      }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-success mr-2\",\n        onClick: this.approve,\n        disabled: this.state.loading || f.status === \"Approved\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }\n      }, \"Approve\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-danger mr-2\",\n        onClick: this.openRejectDialog,\n        disabled: this.state.loading || f.status === \"Rejected\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }\n      }, \"Reject\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: this.closePreview,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }\n      }, \"Back to List\")), this.state.showRejectDialog && this.renderRejectDialog()));\n    };\n\n    this.renderTable = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-4 full-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }\n    }, \"Indirect Billing Approvals\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, \"Bill No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }\n    }, \"Supplier\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    }, \"Total Value\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }\n    }, \"Status\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }\n    }, this.state.bills.map(b => /*#__PURE__*/React.createElement(\"tr\", {\n      key: b.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-link p-0\",\n      onClick: () => this.openPreview(b),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 23\n      }\n    }, b.billNo)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 19\n      }\n    }, b.billDate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 19\n      }\n    }, b.supplier), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 19\n      }\n    }, b.totalValue), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 19\n      }\n    }, this.getStatusBadge(b.status)))), this.state.bills.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"5\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 53\n      }\n    }, \"No records\")))))));\n  }\n\n  componentDidMount() {\n    this.fetchBills();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 7\n      }\n    }, this.state.selected ? this.renderPreview() : this.renderTable());\n  }\n\n}\n\nexport default IndirectBillingApproval;","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/sales/salestransactions/invoice/idbill/IndirectBillingApproval.js"],"names":["React","Component","db","collection","getDocs","updateDoc","doc","serverTimestamp","IndirectBillingApproval","state","bills","selected","loading","showRejectDialog","rejectReason","formData","fetchBills","snap","data","docs","map","d","id","setState","reverse","openPreview","bill","copy","JSON","parse","stringify","closePreview","handleInputChange","field","value","prev","handleLineItemChange","idx","items","lineItems","qty","parseFloat","shipQty","unitPrice","itemTotal","toFixed","recalcTotals","f","totalValue","forEach","it","freightCharges","freightPercent","packingCharges","freightTaxAmt","conversionRate","saveChanges","setAwaiting","cRef","updatePayload","updatedAt","status","alert","err","console","error","message","approve","window","confirm","billNo","approvedAt","openRejectDialog","closeRejectDialog","handleRejectReasonChange","e","target","handleRejectConfirm","trim","rejectedAt","getStatusBadge","cls","fontSize","renderRejectDialog","width","renderPreview","flex","overflowY","padding","renderTabs","activeTab","renderBillingDetailsTab","renderPortTab","renderNotesTab","renderTable","b","billDate","supplier","length","componentDidMount","render"],"mappings":"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","sourcesContent":["// IndirectBillingApproval.js\r\nimport React, { Component } from \"react\";\r\nimport { db } from \"../../../../../firebase\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  updateDoc,\r\n  doc,\r\n  serverTimestamp,\r\n} from \"firebase/firestore\";\r\n\r\nclass IndirectBillingApproval extends Component {\r\n  state = {\r\n    bills: [],\r\n    selected: null,\r\n    loading: false,\r\n    showRejectDialog: false,\r\n    rejectReason: \"\",\r\n    // local editable copy to allow inline editing within approval screen\r\n    formData: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchBills();\r\n  }\r\n\r\n  fetchBills = async () => {\r\n    const snap = await getDocs(collection(db, \"indirectBills\"));\r\n    const data = snap.docs.map((d) => ({ id: d.id, ...d.data() }));\r\n    this.setState({ bills: data.reverse() });\r\n  };\r\n\r\n  openPreview = (bill) => {\r\n    // create deep copy for editing inside approval screen\r\n    const copy = JSON.parse(JSON.stringify(bill || {}));\r\n    this.setState({ selected: bill, formData: copy });\r\n  };\r\n\r\n  closePreview = () => {\r\n    this.setState({ selected: null, formData: null, showRejectDialog: false, rejectReason: \"\" });\r\n  };\r\n\r\n  handleInputChange = (field, value) => {\r\n    this.setState((prev) => ({\r\n      formData: { ...prev.formData, [field]: value },\r\n    }));\r\n  };\r\n\r\n  handleLineItemChange = (idx, field, value) => {\r\n    const items = [...(this.state.formData.lineItems || [])];\r\n    items[idx] = { ...items[idx], [field]: value };\r\n    // recalc itemTotal locally (same logic as IndirectBilling)\r\n    const qty = parseFloat(items[idx].shipQty || 0);\r\n    const unitPrice = parseFloat(items[idx].unitPrice || 0);\r\n    items[idx].itemTotal = (qty * unitPrice).toFixed(2);\r\n    this.setState((prev) => ({ formData: { ...prev.formData, lineItems: items } }));\r\n  };\r\n\r\n  recalcTotals = () => {\r\n    const f = this.state.formData || {};\r\n    const items = f.lineItems || [];\r\n    let totalValue = 0;\r\n    items.forEach(it => { totalValue += parseFloat(it.itemTotal || 0); });\r\n    const freightCharges = parseFloat(f.freightCharges || 0);\r\n    const freightPercent = parseFloat(f.freightPercent || 0);\r\n    const packingCharges = parseFloat(f.packingCharges || 0);\r\n    const freightTaxAmt = (freightCharges * freightPercent) / 100;\r\n    totalValue += freightCharges + packingCharges + freightTaxAmt;\r\n    if (f.conversionRate) totalValue = totalValue * parseFloat(f.conversionRate);\r\n    this.setState(prev => ({ formData: { ...prev.formData, totalValue: totalValue ? totalValue.toFixed(2) : \"\", freightTaxAmt: freightTaxAmt ? freightTaxAmt.toFixed(2) : \"0.00\" } }));\r\n  };\r\n\r\n  saveChanges = async (setAwaiting = true) => {\r\n    // Save edits inline. If setAwaiting === true, set status to \"Awaiting Approval\"\r\n    const { selected, formData } = this.state;\r\n    if (!selected || !formData) return;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const cRef = doc(db, \"indirectBills\", selected.id);\r\n      const updatePayload = {\r\n        ...formData,\r\n        updatedAt: serverTimestamp(),\r\n      };\r\n      if (setAwaiting) updatePayload.status = \"Awaiting Approval\";\r\n      await updateDoc(cRef, updatePayload);\r\n      await this.fetchBills();\r\n      this.openPreview({ ...formData, id: selected.id }); // refresh local copy\r\n      alert(\"Saved.\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Error saving: \" + err.message);\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  approve = async () => {\r\n    const { selected, formData } = this.state;\r\n    if (!selected || !formData) return;\r\n    if (!window.confirm(`Approve ${formData.billNo || selected.billNo}?`)) return;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const cRef = doc(db, \"indirectBills\", selected.id);\r\n      await updateDoc(cRef, {\r\n        ...formData,\r\n        status: \"Approved\",\r\n        approvedAt: serverTimestamp(),\r\n        updatedAt: serverTimestamp(),\r\n      });\r\n      alert(\"Approved.\");\r\n      await this.fetchBills();\r\n      this.closePreview();\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Error approving: \" + err.message);\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  openRejectDialog = () => {\r\n    this.setState({ showRejectDialog: true, rejectReason: \"\" });\r\n  };\r\n\r\n  closeRejectDialog = () => {\r\n    this.setState({ showRejectDialog: false, rejectReason: \"\" });\r\n  };\r\n\r\n  handleRejectReasonChange = (e) => this.setState({ rejectReason: e.target.value });\r\n\r\n  handleRejectConfirm = async () => {\r\n    const { selected, formData, rejectReason } = this.state;\r\n    if (!selected) return;\r\n    if (!rejectReason || !rejectReason.trim()) {\r\n      alert(\"Please enter a reason for rejection.\");\r\n      return;\r\n    }\r\n    this.setState({ loading: true });\r\n    try {\r\n      const cRef = doc(db, \"indirectBills\", selected.id);\r\n      await updateDoc(cRef, {\r\n        ...formData,\r\n        status: \"Rejected\", // per user's rule (badge will be success)\r\n        rejectReason,\r\n        rejectedAt: serverTimestamp(),\r\n        updatedAt: serverTimestamp(),\r\n      });\r\n      alert(\"Rejected.\");\r\n      await this.fetchBills();\r\n      this.closePreview();\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Error rejecting: \" + err.message);\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  getStatusBadge = (status) => {\r\n    let cls = \"badge-secondary\";\r\n    if (!status) status = \"Entered\";\r\n    if (status === \"Awaiting Approval\") cls = \"badge-warning\";\r\n    else if (status === \"Approved\") cls = \"badge-success\";\r\n    else if (status === \"Rejected\") cls = \"badge-danger\"; // user requested rejected as success\r\n    else if (status === \"Partial\") cls = \"badge-purple\";\r\n    else if (status === \"Completed\") cls = \"badge-info\";\r\n    return <label className={`badge ${cls}`} style={{ fontSize: '14px' }}>{status}</label>;\r\n  };\r\n\r\n  renderRejectDialog = () => (\r\n    <div className=\"custom-overlay\">\r\n      <div className=\"custom-overlay-content\" style={{ width: 400 }}>\r\n        <h5>Reject Reason</h5>\r\n        <textarea\r\n          className=\"form-control\"\r\n          rows={3}\r\n          value={this.state.rejectReason}\r\n          onChange={this.handleRejectReasonChange}\r\n          placeholder=\"Enter reason for rejection\"\r\n        />\r\n        <div className=\"text-right mt-3\">\r\n          <button className=\"btn btn-secondary mr-2\" onClick={this.closeRejectDialog}>Cancel</button>\r\n          <button className=\"btn btn-danger\" onClick={this.handleRejectConfirm}>Reject</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\nrenderPreview = () => {\r\n  const f = this.state.formData;\r\n  if (!f) return null;\r\n\r\n  return (\r\n    <div className=\"card full-height\">\r\n      <form className=\"form-sample\">\r\n        <div style={{ flex: 1, overflowY: 'auto', padding: '24px' }}>\r\n          <h4 className=\"mb-3\">Indirect Billing - Approval</h4>\r\n          \r\n          {/* Tabs like IndirectBilling */}\r\n          {this.renderTabs()}\r\n          {this.state.activeTab === 0 && this.renderBillingDetailsTab()}\r\n          {this.state.activeTab === 1 && this.renderPortTab()}\r\n          {this.state.activeTab === 2 && this.renderNotesTab()}\r\n        </div>\r\n\r\n        <div className=\"fixed-card-footer text-right p-3 border-top bg-white\">\r\n          <button\r\n            className=\"btn btn-secondary mr-2\"\r\n            onClick={() => { this.recalcTotals(); this.saveChanges(true); }}\r\n            disabled={this.state.loading}\r\n          >\r\n            Save\r\n          </button>\r\n          <button\r\n            className=\"btn btn-success mr-2\"\r\n            onClick={this.approve}\r\n            disabled={this.state.loading || f.status === \"Approved\"}\r\n          >\r\n            Approve\r\n          </button>\r\n          <button\r\n            className=\"btn btn-danger mr-2\"\r\n            onClick={this.openRejectDialog}\r\n            disabled={this.state.loading || f.status === \"Rejected\"}\r\n          >\r\n            Reject\r\n          </button>\r\n          <button className=\"btn btn-secondary\" onClick={this.closePreview}>\r\n            Back to List\r\n          </button>\r\n        </div>\r\n\r\n        {this.state.showRejectDialog && this.renderRejectDialog()}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n  renderTable = () => (\r\n    <div className=\"card mt-4 full-height\">\r\n      <div className=\"card-body\">\r\n        <h4 className=\"card-title\">Indirect Billing Approvals</h4>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-bordered table-hover\">\r\n            <thead className=\"thead-light\">\r\n              <tr>\r\n                <th>Bill No</th>\r\n                <th>Date</th>\r\n                <th>Supplier</th>\r\n                <th>Total Value</th>\r\n                <th>Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.bills.map(b => (\r\n                <tr key={b.id}>\r\n                  <td><button className=\"btn btn-link p-0\" onClick={() => this.openPreview(b)}>{b.billNo}</button></td>\r\n                  <td>{b.billDate}</td>\r\n                  <td>{b.supplier}</td>\r\n                  <td>{b.totalValue}</td>\r\n                  <td>{this.getStatusBadge(b.status)}</td>\r\n                </tr>\r\n              ))}\r\n              {this.state.bills.length === 0 && <tr><td colSpan=\"5\" className=\"text-center\">No records</td></tr>}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        {this.state.selected ? this.renderPreview() : this.renderTable()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IndirectBillingApproval;\r\n"]},"metadata":{},"sourceType":"module"}