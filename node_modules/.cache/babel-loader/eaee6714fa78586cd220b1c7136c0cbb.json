{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\dashboard\\\\Dashboard.js\";\nimport React, { Component } from \"react\";\nimport { Card, Row, Col, ButtonGroup, Button } from \"react-bootstrap\";\nimport { db } from \"../../firebase\";\nimport { collection, onSnapshot } from \"firebase/firestore\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport \"chart.js\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activities: [],\n      lineData: null,\n      barData: null,\n      filter: \"1M\",\n      // default filter\n      barGroup: \"Daily\"\n    };\n\n    this.filterByRange = (activities, range) => {\n      const now = new Date();\n      let cutoff;\n\n      switch (range) {\n        case \"1D\":\n          cutoff = new Date();\n          cutoff.setDate(now.getDate() - 1);\n          break;\n\n        case \"5D\":\n          cutoff = new Date();\n          cutoff.setDate(now.getDate() - 5);\n          break;\n\n        case \"1M\":\n          cutoff = new Date();\n          cutoff.setMonth(now.getMonth() - 1);\n          break;\n\n        case \"1Y\":\n          cutoff = new Date();\n          cutoff.setFullYear(now.getFullYear() - 1);\n          break;\n\n        default:\n          cutoff = new Date(\"2000-01-01\");\n      }\n\n      return activities.filter(a => new Date(a.date) >= cutoff);\n    };\n\n    this.buildLineChart = () => {\n      const {\n        activities,\n        filter\n      } = this.state;\n      const filtered = this.filterByRange(activities, filter); // Group by date + source\n\n      const grouped = {};\n      filtered.forEach(a => {\n        const date = a.date;\n        if (!grouped[date]) grouped[date] = {};\n        if (!grouped[date][a.source]) grouped[date][a.source] = 0;\n        grouped[date][a.source]++;\n      });\n      const labels = Object.keys(grouped).sort();\n      const sources = [\"Call\", \"Meeting\", \"Demo\", \"Mail\", \"Whatsapp\"];\n      const datasets = sources.map((src, i) => ({\n        label: src,\n        data: labels.map(d => grouped[d][src] || 0),\n        borderColor: this.getColor(i),\n        backgroundColor: this.getColor(i, 0.2),\n        fill: false,\n        tension: 0.3,\n        borderWidth: 2,\n        pointRadius: 4\n      }));\n      this.setState({\n        lineData: {\n          labels,\n          datasets\n        }\n      });\n    };\n\n    this.buildBarChart = () => {\n      const {\n        activities,\n        barGroup\n      } = this.state; // Helper to format date -> day / week / month\n\n      const formatDate = dateStr => {\n        const date = new Date(dateStr);\n\n        if (barGroup === \"Daily\") {\n          return date.toISOString().split(\"T\")[0]; // YYYY-MM-DD\n        } else if (barGroup === \"Weekly\") {\n          const firstDayOfYear = new Date(date.getFullYear(), 0, 1);\n          const pastDays = Math.floor((date - firstDayOfYear) / 86400000);\n          const week = Math.ceil((pastDays + firstDayOfYear.getDay() + 1) / 7);\n          return `Week ${week}, ${date.getFullYear()}`;\n        } else if (barGroup === \"Monthly\") {\n          return date.toLocaleString(\"default\", {\n            month: \"short\",\n            year: \"numeric\"\n          });\n        }\n      };\n\n      const grouped = {};\n      activities.forEach(a => {\n        const key = formatDate(a.date);\n        if (!grouped[key]) grouped[key] = 0;\n        grouped[key]++;\n      });\n      const labels = Object.keys(grouped);\n      const data = Object.values(grouped);\n      const dataset = {\n        label: `${barGroup} Activities`,\n        data,\n        backgroundColor: labels.map((_, i) => this.getColor(i, 0.7)),\n        borderRadius: 6\n      };\n      this.setState({\n        barData: {\n          labels,\n          datasets: [dataset]\n        }\n      });\n    };\n\n    this.getColor = (i, alpha = 1) => {\n      const colors = [`rgba(99, 102, 241, ${alpha})`, // Indigo\n      `rgba(34, 197, 94, ${alpha})`, // Green\n      `rgba(239, 68, 68, ${alpha})`, // Red\n      `rgba(234, 179, 8, ${alpha})`, // Yellow\n      `rgba(59, 130, 246, ${alpha})` // Blue\n      ];\n      return colors[i % colors.length];\n    };\n\n    this.getGradient = color => {\n      const canvas = document.createElement(\"canvas\");\n      const ctx = canvas.getContext(\"2d\");\n      const gradient = ctx.createLinearGradient(0, 0, 0, 200);\n      gradient.addColorStop(0, color);\n      gradient.addColorStop(1, \"rgba(255,255,255,0)\");\n      return gradient;\n    };\n  }\n\n  componentDidMount() {\n    onSnapshot(collection(db, \"activities\"), snapshot => {\n      const activities = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        activities\n      }, () => {\n        this.buildLineChart();\n        this.buildBarChart();\n      });\n    });\n  }\n\n  render() {\n    const {\n      lineData,\n      barData,\n      filter\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"p-3 shadow-sm bg-white border-0 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, \"Activities by Source over Time\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, \"Daily count of activities split by source\")), /*#__PURE__*/React.createElement(ButtonGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, [\"1D\", \"5D\", \"1M\", \"1Y\"].map(f => /*#__PURE__*/React.createElement(Button, {\n      key: f,\n      size: \"sm\",\n      variant: filter === f ? \"primary\" : \"light\",\n      onClick: () => this.setState({\n        filter: f\n      }, () => {\n        this.buildLineChart();\n        this.buildBarChart();\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, f)))), lineData && /*#__PURE__*/React.createElement(Line, {\n      data: lineData,\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: \"top\"\n          },\n          tooltip: {\n            mode: \"index\",\n            intersect: false,\n            backgroundColor: \"#111827\",\n            titleColor: \"#fff\",\n            bodyColor: \"#fff\"\n          }\n        },\n        interaction: {\n          mode: \"nearest\",\n          axis: \"x\",\n          intersect: false\n        },\n        scales: {\n          x: {\n            grid: {\n              display: false\n            }\n          },\n          y: {\n            beginAtZero: true,\n            grid: {\n              color: \"#f3f4f6\"\n            }\n          }\n        }\n      },\n      height: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"p-3 shadow-sm bg-white border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 7\n      }\n    }, \"Activities Overview\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 7\n      }\n    }, \"View activities aggregated by time period\")), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-select w-auto\",\n      value: this.state.barGroup,\n      onChange: e => this.setState({\n        barGroup: e.target.value\n      }, () => this.buildBarChart()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Daily\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 7\n      }\n    }, \"Daily\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Weekly\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 7\n      }\n    }, \"Weekly\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Monthly\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }\n    }, \"Monthly\"))), barData && /*#__PURE__*/React.createElement(Bar, {\n      data: barData,\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            callbacks: {\n              label: ctx => `${ctx.raw} activities`\n            }\n          }\n        },\n        scales: {\n          x: {\n            grid: {\n              display: false\n            }\n          },\n          y: {\n            beginAtZero: true\n          }\n        }\n      },\n      height: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 5\n      }\n    })))));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/dashboard/Dashboard.js"],"names":["React","Component","Card","Row","Col","ButtonGroup","Button","db","collection","onSnapshot","Line","Bar","Dashboard","state","activities","lineData","barData","filter","barGroup","filterByRange","range","now","Date","cutoff","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","a","date","buildLineChart","filtered","grouped","forEach","source","labels","Object","keys","sort","sources","datasets","map","src","i","label","data","d","borderColor","getColor","backgroundColor","fill","tension","borderWidth","pointRadius","setState","buildBarChart","formatDate","dateStr","toISOString","split","firstDayOfYear","pastDays","Math","floor","week","ceil","getDay","toLocaleString","month","year","key","values","dataset","_","borderRadius","alpha","colors","length","getGradient","color","canvas","document","createElement","ctx","getContext","gradient","createLinearGradient","addColorStop","componentDidMount","snapshot","docs","doc","id","render","f","responsive","plugins","legend","position","tooltip","mode","intersect","titleColor","bodyColor","interaction","axis","scales","x","grid","display","y","beginAtZero","e","target","value","callbacks","raw"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Row, Col, ButtonGroup, Button } from \"react-bootstrap\";\nimport { db } from \"../../firebase\";\nimport { collection, onSnapshot } from \"firebase/firestore\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport \"chart.js\";\n\nclass Dashboard extends Component {\n  state = {\n    activities: [],\n    lineData: null,\n    barData: null,\n    filter: \"1M\", // default filter\n    barGroup: \"Daily\",\n  };\n\n  componentDidMount() {\n    onSnapshot(collection(db, \"activities\"), (snapshot) => {\n      const activities = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      this.setState({ activities }, () => {\n        this.buildLineChart();\n        this.buildBarChart();\n      });\n    });\n  }\n\n\n  filterByRange = (activities, range) => {\n  const now = new Date();\n  let cutoff;\n\n  switch (range) {\n    case \"1D\":\n      cutoff = new Date();\n      cutoff.setDate(now.getDate() - 1);\n      break;\n    case \"5D\":\n      cutoff = new Date();\n      cutoff.setDate(now.getDate() - 5);\n      break;\n    case \"1M\":\n      cutoff = new Date();\n      cutoff.setMonth(now.getMonth() - 1);\n      break;\n    case \"1Y\":\n      cutoff = new Date();\n      cutoff.setFullYear(now.getFullYear() - 1);\n      break;\n    default:\n      cutoff = new Date(\"2000-01-01\");\n  }\n\n  return activities.filter((a) => new Date(a.date) >= cutoff);\n};\n\n\n\n\n  buildLineChart = () => {\n  const { activities, filter } = this.state;\n  const filtered = this.filterByRange(activities, filter);\n\n  // Group by date + source\n  const grouped = {};\n  filtered.forEach((a) => {\n    const date = a.date;\n    if (!grouped[date]) grouped[date] = {};\n    if (!grouped[date][a.source]) grouped[date][a.source] = 0;\n    grouped[date][a.source]++;\n  });\n\n  const labels = Object.keys(grouped).sort();\n  const sources = [\"Call\", \"Meeting\", \"Demo\", \"Mail\", \"Whatsapp\"];\n\n  const datasets = sources.map((src, i) => ({\n    label: src,\n    data: labels.map((d) => grouped[d][src] || 0),\n    borderColor: this.getColor(i),\n    backgroundColor: this.getColor(i, 0.2),\n    fill: false,\n    tension: 0.3,\n    borderWidth: 2,\n    pointRadius: 4,\n  }));\n\n  this.setState({ lineData: { labels, datasets } });\n};\n\nbuildBarChart = () => {\n  const { activities, barGroup } = this.state;\n\n  // Helper to format date -> day / week / month\n  const formatDate = (dateStr) => {\n    const date = new Date(dateStr);\n    if (barGroup === \"Daily\") {\n      return date.toISOString().split(\"T\")[0]; // YYYY-MM-DD\n    } else if (barGroup === \"Weekly\") {\n      const firstDayOfYear = new Date(date.getFullYear(), 0, 1);\n      const pastDays = Math.floor((date - firstDayOfYear) / 86400000);\n      const week = Math.ceil((pastDays + firstDayOfYear.getDay() + 1) / 7);\n      return `Week ${week}, ${date.getFullYear()}`;\n    } else if (barGroup === \"Monthly\") {\n      return date.toLocaleString(\"default\", { month: \"short\", year: \"numeric\" });\n    }\n  };\n\n  const grouped = {};\n  activities.forEach((a) => {\n    const key = formatDate(a.date);\n    if (!grouped[key]) grouped[key] = 0;\n    grouped[key]++;\n  });\n\n  const labels = Object.keys(grouped);\n  const data = Object.values(grouped);\n\n  const dataset = {\n    label: `${barGroup} Activities`,\n    data,\n    backgroundColor: labels.map((_, i) => this.getColor(i, 0.7)),\n    borderRadius: 6,\n  };\n\n  this.setState({\n    barData: { labels, datasets: [dataset] },\n  });\n};\n\n\n  getColor = (i, alpha = 1) => {\n    const colors = [\n      `rgba(99, 102, 241, ${alpha})`, // Indigo\n      `rgba(34, 197, 94, ${alpha})`,  // Green\n      `rgba(239, 68, 68, ${alpha})`,  // Red\n      `rgba(234, 179, 8, ${alpha})`,  // Yellow\n      `rgba(59, 130, 246, ${alpha})`, // Blue\n    ];\n    return colors[i % colors.length];\n  };\n\n  getGradient = (color) => {\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const gradient = ctx.createLinearGradient(0, 0, 0, 200);\n    gradient.addColorStop(0, color);\n    gradient.addColorStop(1, \"rgba(255,255,255,0)\");\n    return gradient;\n  };\n\n  render() {\n    const { lineData, barData, filter } = this.state;\n\n    return (\n      <div className=\"container mt-4\">\n        <Row>\n          <Col md={12}>\n            <Card className=\"p-3 shadow-sm bg-white border-0 mb-4\">\n              <div className=\"d-flex justify-content-between align-items-center\">\n                <div>\n                    <h5>Activities by Source over Time</h5>\n                    <p>Daily count of activities split by source</p>\n                </div>\n                <ButtonGroup>\n                  {[\"1D\", \"5D\", \"1M\", \"1Y\"].map((f) => (\n                    <Button\n                      key={f}\n                      size=\"sm\"\n                      variant={filter === f ? \"primary\" : \"light\"}\n                      onClick={() =>\n                        this.setState({ filter: f }, () => {\n                          this.buildLineChart();\n                          this.buildBarChart();\n                        })\n                      }\n                    >\n                      {f}\n                    </Button>\n                  ))}\n                </ButtonGroup>\n\n              </div>\n\n              {lineData && (\n                <Line\n                  data={lineData}\n                  options={{\n                    responsive: true,\n                    plugins: {\n                      legend: { position: \"top\" },\n                      tooltip: {\n                        mode: \"index\",\n                        intersect: false,\n                        backgroundColor: \"#111827\",\n                        titleColor: \"#fff\",\n                        bodyColor: \"#fff\",\n                      },\n                    },\n                    interaction: { mode: \"nearest\", axis: \"x\", intersect: false },\n                    scales: {\n                      x: { grid: { display: false } },\n                      y: { beginAtZero: true, grid: { color: \"#f3f4f6\" } },\n                    },\n                  }}\n                  height={100}\n                />\n              )}\n            </Card>\n          </Col>\n\n          <Col md={12}>\n           \n<Card className=\"p-3 shadow-sm bg-white border-0\">\n  <div className=\"d-flex justify-content-between align-items-center\">\n    <div>\n      <h5>Activities Overview</h5>\n      <p>View activities aggregated by time period</p>\n    </div>\n    <select\n      className=\"form-select w-auto\"\n      value={this.state.barGroup}\n      onChange={(e) =>\n        this.setState({ barGroup: e.target.value }, () => this.buildBarChart())\n      }\n    >\n      <option value=\"Daily\">Daily</option>\n      <option value=\"Weekly\">Weekly</option>\n      <option value=\"Monthly\">Monthly</option>\n    </select>\n  </div>\n\n  {barData && (\n    <Bar\n      data={barData}\n      options={{\n        responsive: true,\n        plugins: {\n          legend: { display: false },\n          tooltip: {\n            callbacks: {\n              label: (ctx) => `${ctx.raw} activities`,\n            },\n          },\n        },\n        scales: {\n          x: { grid: { display: false } },\n          y: { beginAtZero: true },\n        },\n      }}\n      height={100}\n    />\n  )}\n</Card>\n            \n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}