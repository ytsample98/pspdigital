{"ast":null,"code":"/* @license\nPapa Parse\nv5.5.3\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n((e, t) => {\n  \"function\" == typeof define && define.amd ? define([], t) : \"object\" == typeof module && \"undefined\" != typeof exports ? module.exports = t() : e.Papa = t();\n})(this, function r() {\n  var n = \"undefined\" != typeof self ? self : \"undefined\" != typeof window ? window : void 0 !== n ? n : {};\n  var d,\n      s = !n.document && !!n.postMessage,\n      a = n.IS_PAPA_WORKER || !1,\n      o = {},\n      h = 0,\n      v = {};\n\n  function u(e) {\n    this._handle = null, this._finished = !1, this._completed = !1, this._halted = !1, this._input = null, this._baseIndex = 0, this._partialLine = \"\", this._rowCount = 0, this._start = 0, this._nextChunk = null, this.isFirstChunk = !0, this._completeResults = {\n      data: [],\n      errors: [],\n      meta: {}\n    }, function (e) {\n      var t = b(e);\n      t.chunkSize = parseInt(t.chunkSize), e.step || e.chunk || (t.chunkSize = null);\n      this._handle = new i(t), (this._handle.streamer = this)._config = t;\n    }.call(this, e), this.parseChunk = function (t, e) {\n      var i = parseInt(this._config.skipFirstNLines) || 0;\n\n      if (this.isFirstChunk && 0 < i) {\n        let e = this._config.newline;\n        e || (r = this._config.quoteChar || '\"', e = this._handle.guessLineEndings(t, r)), t = [...t.split(e).slice(i)].join(e);\n      }\n\n      this.isFirstChunk && U(this._config.beforeFirstChunk) && void 0 !== (r = this._config.beforeFirstChunk(t)) && (t = r), this.isFirstChunk = !1, this._halted = !1;\n      var i = this._partialLine + t,\n          r = (this._partialLine = \"\", this._handle.parse(i, this._baseIndex, !this._finished));\n\n      if (!this._handle.paused() && !this._handle.aborted()) {\n        t = r.meta.cursor, i = (this._finished || (this._partialLine = i.substring(t - this._baseIndex), this._baseIndex = t), r && r.data && (this._rowCount += r.data.length), this._finished || this._config.preview && this._rowCount >= this._config.preview);\n        if (a) n.postMessage({\n          results: r,\n          workerId: v.WORKER_ID,\n          finished: i\n        });else if (U(this._config.chunk) && !e) {\n          if (this._config.chunk(r, this._handle), this._handle.paused() || this._handle.aborted()) return void (this._halted = !0);\n          this._completeResults = r = void 0;\n        }\n        return this._config.step || this._config.chunk || (this._completeResults.data = this._completeResults.data.concat(r.data), this._completeResults.errors = this._completeResults.errors.concat(r.errors), this._completeResults.meta = r.meta), this._completed || !i || !U(this._config.complete) || r && r.meta.aborted || (this._config.complete(this._completeResults, this._input), this._completed = !0), i || r && r.meta.paused || this._nextChunk(), r;\n      }\n\n      this._halted = !0;\n    }, this._sendError = function (e) {\n      U(this._config.error) ? this._config.error(e) : a && this._config.error && n.postMessage({\n        workerId: v.WORKER_ID,\n        error: e,\n        finished: !1\n      });\n    };\n  }\n\n  function f(e) {\n    var r;\n    (e = e || {}).chunkSize || (e.chunkSize = v.RemoteChunkSize), u.call(this, e), this._nextChunk = s ? function () {\n      this._readChunk(), this._chunkLoaded();\n    } : function () {\n      this._readChunk();\n    }, this.stream = function (e) {\n      this._input = e, this._nextChunk();\n    }, this._readChunk = function () {\n      if (this._finished) this._chunkLoaded();else {\n        if (r = new XMLHttpRequest(), this._config.withCredentials && (r.withCredentials = this._config.withCredentials), s || (r.onload = y(this._chunkLoaded, this), r.onerror = y(this._chunkError, this)), r.open(this._config.downloadRequestBody ? \"POST\" : \"GET\", this._input, !s), this._config.downloadRequestHeaders) {\n          var e,\n              t = this._config.downloadRequestHeaders;\n\n          for (e in t) r.setRequestHeader(e, t[e]);\n        }\n\n        var i;\n        this._config.chunkSize && (i = this._start + this._config.chunkSize - 1, r.setRequestHeader(\"Range\", \"bytes=\" + this._start + \"-\" + i));\n\n        try {\n          r.send(this._config.downloadRequestBody);\n        } catch (e) {\n          this._chunkError(e.message);\n        }\n\n        s && 0 === r.status && this._chunkError();\n      }\n    }, this._chunkLoaded = function () {\n      4 === r.readyState && (r.status < 200 || 400 <= r.status ? this._chunkError() : (this._start += this._config.chunkSize || r.responseText.length, this._finished = !this._config.chunkSize || this._start >= (e => null !== (e = e.getResponseHeader(\"Content-Range\")) ? parseInt(e.substring(e.lastIndexOf(\"/\") + 1)) : -1)(r), this.parseChunk(r.responseText)));\n    }, this._chunkError = function (e) {\n      e = r.statusText || e;\n\n      this._sendError(new Error(e));\n    };\n  }\n\n  function l(e) {\n    (e = e || {}).chunkSize || (e.chunkSize = v.LocalChunkSize), u.call(this, e);\n    var i,\n        r,\n        n = \"undefined\" != typeof FileReader;\n    this.stream = function (e) {\n      this._input = e, r = e.slice || e.webkitSlice || e.mozSlice, n ? ((i = new FileReader()).onload = y(this._chunkLoaded, this), i.onerror = y(this._chunkError, this)) : i = new FileReaderSync(), this._nextChunk();\n    }, this._nextChunk = function () {\n      this._finished || this._config.preview && !(this._rowCount < this._config.preview) || this._readChunk();\n    }, this._readChunk = function () {\n      var e = this._input,\n          t = (this._config.chunkSize && (t = Math.min(this._start + this._config.chunkSize, this._input.size), e = r.call(e, this._start, t)), i.readAsText(e, this._config.encoding));\n      n || this._chunkLoaded({\n        target: {\n          result: t\n        }\n      });\n    }, this._chunkLoaded = function (e) {\n      this._start += this._config.chunkSize, this._finished = !this._config.chunkSize || this._start >= this._input.size, this.parseChunk(e.target.result);\n    }, this._chunkError = function () {\n      this._sendError(i.error);\n    };\n  }\n\n  function c(e) {\n    var i;\n    u.call(this, e = e || {}), this.stream = function (e) {\n      return i = e, this._nextChunk();\n    }, this._nextChunk = function () {\n      var e, t;\n      if (!this._finished) return e = this._config.chunkSize, i = e ? (t = i.substring(0, e), i.substring(e)) : (t = i, \"\"), this._finished = !i, this.parseChunk(t);\n    };\n  }\n\n  function p(e) {\n    u.call(this, e = e || {});\n    var t = [],\n        i = !0,\n        r = !1;\n    this.pause = function () {\n      u.prototype.pause.apply(this, arguments), this._input.pause();\n    }, this.resume = function () {\n      u.prototype.resume.apply(this, arguments), this._input.resume();\n    }, this.stream = function (e) {\n      this._input = e, this._input.on(\"data\", this._streamData), this._input.on(\"end\", this._streamEnd), this._input.on(\"error\", this._streamError);\n    }, this._checkIsFinished = function () {\n      r && 1 === t.length && (this._finished = !0);\n    }, this._nextChunk = function () {\n      this._checkIsFinished(), t.length ? this.parseChunk(t.shift()) : i = !0;\n    }, this._streamData = y(function (e) {\n      try {\n        t.push(\"string\" == typeof e ? e : e.toString(this._config.encoding)), i && (i = !1, this._checkIsFinished(), this.parseChunk(t.shift()));\n      } catch (e) {\n        this._streamError(e);\n      }\n    }, this), this._streamError = y(function (e) {\n      this._streamCleanUp(), this._sendError(e);\n    }, this), this._streamEnd = y(function () {\n      this._streamCleanUp(), r = !0, this._streamData(\"\");\n    }, this), this._streamCleanUp = y(function () {\n      this._input.removeListener(\"data\", this._streamData), this._input.removeListener(\"end\", this._streamEnd), this._input.removeListener(\"error\", this._streamError);\n    }, this);\n  }\n\n  function i(m) {\n    var n,\n        s,\n        a,\n        t,\n        o = Math.pow(2, 53),\n        h = -o,\n        u = /^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)([eE][-+]?\\d+)?\\s*$/,\n        d = /^((\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z)))$/,\n        i = this,\n        r = 0,\n        f = 0,\n        l = !1,\n        e = !1,\n        c = [],\n        p = {\n      data: [],\n      errors: [],\n      meta: {}\n    };\n\n    function y(e) {\n      return \"greedy\" === m.skipEmptyLines ? \"\" === e.join(\"\").trim() : 1 === e.length && 0 === e[0].length;\n    }\n\n    function g() {\n      if (p && a && (k(\"Delimiter\", \"UndetectableDelimiter\", \"Unable to auto-detect delimiting character; defaulted to '\" + v.DefaultDelimiter + \"'\"), a = !1), m.skipEmptyLines && (p.data = p.data.filter(function (e) {\n        return !y(e);\n      })), _()) {\n        if (p) if (Array.isArray(p.data[0])) {\n          for (var e = 0; _() && e < p.data.length; e++) p.data[e].forEach(t);\n\n          p.data.splice(0, 1);\n        } else p.data.forEach(t);\n\n        function t(e, t) {\n          U(m.transformHeader) && (e = m.transformHeader(e, t)), c.push(e);\n        }\n      }\n\n      function i(e, t) {\n        for (var i = m.header ? {} : [], r = 0; r < e.length; r++) {\n          var n = r,\n              s = e[r],\n              s = ((e, t) => (e => (m.dynamicTypingFunction && void 0 === m.dynamicTyping[e] && (m.dynamicTyping[e] = m.dynamicTypingFunction(e)), !0 === (m.dynamicTyping[e] || m.dynamicTyping)))(e) ? \"true\" === t || \"TRUE\" === t || \"false\" !== t && \"FALSE\" !== t && ((e => {\n            if (u.test(e)) {\n              e = parseFloat(e);\n              if (h < e && e < o) return 1;\n            }\n          })(t) ? parseFloat(t) : d.test(t) ? new Date(t) : \"\" === t ? null : t) : t)(n = m.header ? r >= c.length ? \"__parsed_extra\" : c[r] : n, s = m.transform ? m.transform(s, n) : s);\n\n          \"__parsed_extra\" === n ? (i[n] = i[n] || [], i[n].push(s)) : i[n] = s;\n        }\n\n        return m.header && (r > c.length ? k(\"FieldMismatch\", \"TooManyFields\", \"Too many fields: expected \" + c.length + \" fields but parsed \" + r, f + t) : r < c.length && k(\"FieldMismatch\", \"TooFewFields\", \"Too few fields: expected \" + c.length + \" fields but parsed \" + r, f + t)), i;\n      }\n\n      var r;\n      p && (m.header || m.dynamicTyping || m.transform) && (r = 1, !p.data.length || Array.isArray(p.data[0]) ? (p.data = p.data.map(i), r = p.data.length) : p.data = i(p.data, 0), m.header && p.meta && (p.meta.fields = c), f += r);\n    }\n\n    function _() {\n      return m.header && 0 === c.length;\n    }\n\n    function k(e, t, i, r) {\n      e = {\n        type: e,\n        code: t,\n        message: i\n      };\n      void 0 !== r && (e.row = r), p.errors.push(e);\n    }\n\n    U(m.step) && (t = m.step, m.step = function (e) {\n      p = e, _() ? g() : (g(), 0 !== p.data.length && (r += e.data.length, m.preview && r > m.preview ? s.abort() : (p.data = p.data[0], t(p, i))));\n    }), this.parse = function (e, t, i) {\n      var r = m.quoteChar || '\"',\n          r = (m.newline || (m.newline = this.guessLineEndings(e, r)), a = !1, m.delimiter ? U(m.delimiter) && (m.delimiter = m.delimiter(e), p.meta.delimiter = m.delimiter) : ((r = ((e, t, i, r, n) => {\n        var s, a, o, h;\n        n = n || [\",\", \"\\t\", \"|\", \";\", v.RECORD_SEP, v.UNIT_SEP];\n\n        for (var u = 0; u < n.length; u++) {\n          for (var d, f = n[u], l = 0, c = 0, p = 0, g = (o = void 0, new E({\n            comments: r,\n            delimiter: f,\n            newline: t,\n            preview: 10\n          }).parse(e)), _ = 0; _ < g.data.length; _++) i && y(g.data[_]) ? p++ : (d = g.data[_].length, c += d, void 0 === o ? o = d : 0 < d && (l += Math.abs(d - o), o = d));\n\n          0 < g.data.length && (c /= g.data.length - p), (void 0 === a || l <= a) && (void 0 === h || h < c) && 1.99 < c && (a = l, s = f, h = c);\n        }\n\n        return {\n          successful: !!(m.delimiter = s),\n          bestDelimiter: s\n        };\n      })(e, m.newline, m.skipEmptyLines, m.comments, m.delimitersToGuess)).successful ? m.delimiter = r.bestDelimiter : (a = !0, m.delimiter = v.DefaultDelimiter), p.meta.delimiter = m.delimiter), b(m));\n      return m.preview && m.header && r.preview++, n = e, s = new E(r), p = s.parse(n, t, i), g(), l ? {\n        meta: {\n          paused: !0\n        }\n      } : p || {\n        meta: {\n          paused: !1\n        }\n      };\n    }, this.paused = function () {\n      return l;\n    }, this.pause = function () {\n      l = !0, s.abort(), n = U(m.chunk) ? \"\" : n.substring(s.getCharIndex());\n    }, this.resume = function () {\n      i.streamer._halted ? (l = !1, i.streamer.parseChunk(n, !0)) : setTimeout(i.resume, 3);\n    }, this.aborted = function () {\n      return e;\n    }, this.abort = function () {\n      e = !0, s.abort(), p.meta.aborted = !0, U(m.complete) && m.complete(p), n = \"\";\n    }, this.guessLineEndings = function (e, t) {\n      e = e.substring(0, 1048576);\n      var t = new RegExp(P(t) + \"([^]*?)\" + P(t), \"gm\"),\n          i = (e = e.replace(t, \"\")).split(\"\\r\"),\n          t = e.split(\"\\n\"),\n          e = 1 < t.length && t[0].length < i[0].length;\n      if (1 === i.length || e) return \"\\n\";\n\n      for (var r = 0, n = 0; n < i.length; n++) \"\\n\" === i[n][0] && r++;\n\n      return r >= i.length / 2 ? \"\\r\\n\" : \"\\r\";\n    };\n  }\n\n  function P(e) {\n    return e.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n  }\n\n  function E(C) {\n    var S = (C = C || {}).delimiter,\n        O = C.newline,\n        x = C.comments,\n        I = C.step,\n        A = C.preview,\n        T = C.fastMode,\n        D = null,\n        L = !1,\n        F = null == C.quoteChar ? '\"' : C.quoteChar,\n        j = F;\n    if (void 0 !== C.escapeChar && (j = C.escapeChar), (\"string\" != typeof S || -1 < v.BAD_DELIMITERS.indexOf(S)) && (S = \",\"), x === S) throw new Error(\"Comment character same as delimiter\");\n    !0 === x ? x = \"#\" : (\"string\" != typeof x || -1 < v.BAD_DELIMITERS.indexOf(x)) && (x = !1), \"\\n\" !== O && \"\\r\" !== O && \"\\r\\n\" !== O && (O = \"\\n\");\n    var z = 0,\n        M = !1;\n    this.parse = function (i, t, r) {\n      if (\"string\" != typeof i) throw new Error(\"Input must be a string\");\n      var n = i.length,\n          e = S.length,\n          s = O.length,\n          a = x.length,\n          o = U(I),\n          h = [],\n          u = [],\n          d = [],\n          f = z = 0;\n      if (!i) return w();\n\n      if (T || !1 !== T && -1 === i.indexOf(F)) {\n        for (var l = i.split(O), c = 0; c < l.length; c++) {\n          if (d = l[c], z += d.length, c !== l.length - 1) z += O.length;else if (r) return w();\n\n          if (!x || d.substring(0, a) !== x) {\n            if (o) {\n              if (h = [], k(d.split(S)), R(), M) return w();\n            } else k(d.split(S));\n\n            if (A && A <= c) return h = h.slice(0, A), w(!0);\n          }\n        }\n\n        return w();\n      }\n\n      for (var p = i.indexOf(S, z), g = i.indexOf(O, z), _ = new RegExp(P(j) + P(F), \"g\"), m = i.indexOf(F, z);;) if (i[z] === F) for (m = z, z++;;) {\n        if (-1 === (m = i.indexOf(F, m + 1))) return r || u.push({\n          type: \"Quotes\",\n          code: \"MissingQuotes\",\n          message: \"Quoted field unterminated\",\n          row: h.length,\n          index: z\n        }), E();\n        if (m === n - 1) return E(i.substring(z, m).replace(_, F));\n        if (F === j && i[m + 1] === j) m++;else if (F === j || 0 === m || i[m - 1] !== j) {\n          -1 !== p && p < m + 1 && (p = i.indexOf(S, m + 1));\n          var y = v(-1 === (g = -1 !== g && g < m + 1 ? i.indexOf(O, m + 1) : g) ? p : Math.min(p, g));\n\n          if (i.substr(m + 1 + y, e) === S) {\n            d.push(i.substring(z, m).replace(_, F)), i[z = m + 1 + y + e] !== F && (m = i.indexOf(F, z)), p = i.indexOf(S, z), g = i.indexOf(O, z);\n            break;\n          }\n\n          y = v(g);\n\n          if (i.substring(m + 1 + y, m + 1 + y + s) === O) {\n            if (d.push(i.substring(z, m).replace(_, F)), b(m + 1 + y + s), p = i.indexOf(S, z), m = i.indexOf(F, z), o && (R(), M)) return w();\n            if (A && h.length >= A) return w(!0);\n            break;\n          }\n\n          u.push({\n            type: \"Quotes\",\n            code: \"InvalidQuotes\",\n            message: \"Trailing quote on quoted field is malformed\",\n            row: h.length,\n            index: z\n          }), m++;\n        }\n      } else if (x && 0 === d.length && i.substring(z, z + a) === x) {\n        if (-1 === g) return w();\n        z = g + s, g = i.indexOf(O, z), p = i.indexOf(S, z);\n      } else if (-1 !== p && (p < g || -1 === g)) d.push(i.substring(z, p)), z = p + e, p = i.indexOf(S, z);else {\n        if (-1 === g) break;\n        if (d.push(i.substring(z, g)), b(g + s), o && (R(), M)) return w();\n        if (A && h.length >= A) return w(!0);\n      }\n\n      return E();\n\n      function k(e) {\n        h.push(e), f = z;\n      }\n\n      function v(e) {\n        var t = 0;\n        return t = -1 !== e && (e = i.substring(m + 1, e)) && \"\" === e.trim() ? e.length : t;\n      }\n\n      function E(e) {\n        return r || (void 0 === e && (e = i.substring(z)), d.push(e), z = n, k(d), o && R()), w();\n      }\n\n      function b(e) {\n        z = e, k(d), d = [], g = i.indexOf(O, z);\n      }\n\n      function w(e) {\n        if (C.header && !t && h.length && !L) {\n          var s = h[0],\n              a = Object.create(null),\n              o = new Set(s);\n          let n = !1;\n\n          for (let r = 0; r < s.length; r++) {\n            let i = s[r];\n\n            if (a[i = U(C.transformHeader) ? C.transformHeader(i, r) : i]) {\n              let e,\n                  t = a[i];\n\n              for (; e = i + \"_\" + t, t++, o.has(e););\n\n              o.add(e), s[r] = e, a[i]++, n = !0, (D = null === D ? {} : D)[e] = i;\n            } else a[i] = 1, s[r] = i;\n\n            o.add(i);\n          }\n\n          n && console.warn(\"Duplicate headers found and renamed.\"), L = !0;\n        }\n\n        return {\n          data: h,\n          errors: u,\n          meta: {\n            delimiter: S,\n            linebreak: O,\n            aborted: M,\n            truncated: !!e,\n            cursor: f + (t || 0),\n            renamedHeaders: D\n          }\n        };\n      }\n\n      function R() {\n        I(w()), h = [], u = [];\n      }\n    }, this.abort = function () {\n      M = !0;\n    }, this.getCharIndex = function () {\n      return z;\n    };\n  }\n\n  function g(e) {\n    var t = e.data,\n        i = o[t.workerId],\n        r = !1;\n    if (t.error) i.userError(t.error, t.file);else if (t.results && t.results.data) {\n      var n = {\n        abort: function () {\n          r = !0, _(t.workerId, {\n            data: [],\n            errors: [],\n            meta: {\n              aborted: !0\n            }\n          });\n        },\n        pause: m,\n        resume: m\n      };\n\n      if (U(i.userStep)) {\n        for (var s = 0; s < t.results.data.length && (i.userStep({\n          data: t.results.data[s],\n          errors: t.results.errors,\n          meta: t.results.meta\n        }, n), !r); s++);\n\n        delete t.results;\n      } else U(i.userChunk) && (i.userChunk(t.results, n, t.file), delete t.results);\n    }\n    t.finished && !r && _(t.workerId, t.results);\n  }\n\n  function _(e, t) {\n    var i = o[e];\n    U(i.userComplete) && i.userComplete(t), i.terminate(), delete o[e];\n  }\n\n  function m() {\n    throw new Error(\"Not implemented.\");\n  }\n\n  function b(e) {\n    if (\"object\" != typeof e || null === e) return e;\n    var t,\n        i = Array.isArray(e) ? [] : {};\n\n    for (t in e) i[t] = b(e[t]);\n\n    return i;\n  }\n\n  function y(e, t) {\n    return function () {\n      e.apply(t, arguments);\n    };\n  }\n\n  function U(e) {\n    return \"function\" == typeof e;\n  }\n\n  return v.parse = function (e, t) {\n    var i = (t = t || {}).dynamicTyping || !1;\n    U(i) && (t.dynamicTypingFunction = i, i = {});\n    if (t.dynamicTyping = i, t.transform = !!U(t.transform) && t.transform, !t.worker || !v.WORKERS_SUPPORTED) return i = null, v.NODE_STREAM_INPUT, \"string\" == typeof e ? (e = (e => 65279 !== e.charCodeAt(0) ? e : e.slice(1))(e), i = new (t.download ? f : c)(t)) : !0 === e.readable && U(e.read) && U(e.on) ? i = new p(t) : (n.File && e instanceof File || e instanceof Object) && (i = new l(t)), i.stream(e);\n    (i = (() => {\n      var e;\n      return !!v.WORKERS_SUPPORTED && (e = (() => {\n        var e = n.URL || n.webkitURL || null,\n            t = r.toString();\n        return v.BLOB_URL || (v.BLOB_URL = e.createObjectURL(new Blob([\"var global = (function() { if (typeof self !== 'undefined') { return self; } if (typeof window !== 'undefined') { return window; } if (typeof global !== 'undefined') { return global; } return {}; })(); global.IS_PAPA_WORKER=true; \", \"(\", t, \")();\"], {\n          type: \"text/javascript\"\n        })));\n      })(), (e = new n.Worker(e)).onmessage = g, e.id = h++, o[e.id] = e);\n    })()).userStep = t.step, i.userChunk = t.chunk, i.userComplete = t.complete, i.userError = t.error, t.step = U(t.step), t.chunk = U(t.chunk), t.complete = U(t.complete), t.error = U(t.error), delete t.worker, i.postMessage({\n      input: e,\n      config: t,\n      workerId: i.id\n    });\n  }, v.unparse = function (e, t) {\n    var n = !1,\n        _ = !0,\n        m = \",\",\n        y = \"\\r\\n\",\n        s = '\"',\n        a = s + s,\n        i = !1,\n        r = null,\n        o = !1,\n        h = ((() => {\n      if (\"object\" == typeof t) {\n        if (\"string\" != typeof t.delimiter || v.BAD_DELIMITERS.filter(function (e) {\n          return -1 !== t.delimiter.indexOf(e);\n        }).length || (m = t.delimiter), \"boolean\" != typeof t.quotes && \"function\" != typeof t.quotes && !Array.isArray(t.quotes) || (n = t.quotes), \"boolean\" != typeof t.skipEmptyLines && \"string\" != typeof t.skipEmptyLines || (i = t.skipEmptyLines), \"string\" == typeof t.newline && (y = t.newline), \"string\" == typeof t.quoteChar && (s = t.quoteChar), \"boolean\" == typeof t.header && (_ = t.header), Array.isArray(t.columns)) {\n          if (0 === t.columns.length) throw new Error(\"Option columns is empty\");\n          r = t.columns;\n        }\n\n        void 0 !== t.escapeChar && (a = t.escapeChar + s), t.escapeFormulae instanceof RegExp ? o = t.escapeFormulae : \"boolean\" == typeof t.escapeFormulae && t.escapeFormulae && (o = /^[=+\\-@\\t\\r].*$/);\n      }\n    })(), new RegExp(P(s), \"g\"));\n\n    \"string\" == typeof e && (e = JSON.parse(e));\n\n    if (Array.isArray(e)) {\n      if (!e.length || Array.isArray(e[0])) return u(null, e, i);\n      if (\"object\" == typeof e[0]) return u(r || Object.keys(e[0]), e, i);\n    } else if (\"object\" == typeof e) return \"string\" == typeof e.data && (e.data = JSON.parse(e.data)), Array.isArray(e.data) && (e.fields || (e.fields = e.meta && e.meta.fields || r), e.fields || (e.fields = Array.isArray(e.data[0]) ? e.fields : \"object\" == typeof e.data[0] ? Object.keys(e.data[0]) : []), Array.isArray(e.data[0]) || \"object\" == typeof e.data[0] || (e.data = [e.data])), u(e.fields || [], e.data || [], i);\n\n    throw new Error(\"Unable to serialize unrecognized input\");\n\n    function u(e, t, i) {\n      var r = \"\",\n          n = (\"string\" == typeof e && (e = JSON.parse(e)), \"string\" == typeof t && (t = JSON.parse(t)), Array.isArray(e) && 0 < e.length),\n          s = !Array.isArray(t[0]);\n\n      if (n && _) {\n        for (var a = 0; a < e.length; a++) 0 < a && (r += m), r += k(e[a], a);\n\n        0 < t.length && (r += y);\n      }\n\n      for (var o = 0; o < t.length; o++) {\n        var h = (n ? e : t[o]).length,\n            u = !1,\n            d = n ? 0 === Object.keys(t[o]).length : 0 === t[o].length;\n\n        if (i && !n && (u = \"greedy\" === i ? \"\" === t[o].join(\"\").trim() : 1 === t[o].length && 0 === t[o][0].length), \"greedy\" === i && n) {\n          for (var f = [], l = 0; l < h; l++) {\n            var c = s ? e[l] : l;\n            f.push(t[o][c]);\n          }\n\n          u = \"\" === f.join(\"\").trim();\n        }\n\n        if (!u) {\n          for (var p = 0; p < h; p++) {\n            0 < p && !d && (r += m);\n            var g = n && s ? e[p] : p;\n            r += k(t[o][g], p);\n          }\n\n          o < t.length - 1 && (!i || 0 < h && !d) && (r += y);\n        }\n      }\n\n      return r;\n    }\n\n    function k(e, t) {\n      var i, r;\n      return null == e ? \"\" : e.constructor === Date ? JSON.stringify(e).slice(1, 25) : (r = !1, o && \"string\" == typeof e && o.test(e) && (e = \"'\" + e, r = !0), i = e.toString().replace(h, a), (r = r || !0 === n || \"function\" == typeof n && n(e, t) || Array.isArray(n) && n[t] || ((e, t) => {\n        for (var i = 0; i < t.length; i++) if (-1 < e.indexOf(t[i])) return !0;\n\n        return !1;\n      })(i, v.BAD_DELIMITERS) || -1 < i.indexOf(m) || \" \" === i.charAt(0) || \" \" === i.charAt(i.length - 1)) ? s + i + s : i);\n    }\n  }, v.RECORD_SEP = String.fromCharCode(30), v.UNIT_SEP = String.fromCharCode(31), v.BYTE_ORDER_MARK = \"\\ufeff\", v.BAD_DELIMITERS = [\"\\r\", \"\\n\", '\"', v.BYTE_ORDER_MARK], v.WORKERS_SUPPORTED = !s && !!n.Worker, v.NODE_STREAM_INPUT = 1, v.LocalChunkSize = 10485760, v.RemoteChunkSize = 5242880, v.DefaultDelimiter = \",\", v.Parser = E, v.ParserHandle = i, v.NetworkStreamer = f, v.FileStreamer = l, v.StringStreamer = c, v.ReadableStreamStreamer = p, n.jQuery && ((d = n.jQuery).fn.parse = function (o) {\n    var i = o.config || {},\n        h = [];\n    return this.each(function (e) {\n      if (!(\"INPUT\" === d(this).prop(\"tagName\").toUpperCase() && \"file\" === d(this).attr(\"type\").toLowerCase() && n.FileReader) || !this.files || 0 === this.files.length) return !0;\n\n      for (var t = 0; t < this.files.length; t++) h.push({\n        file: this.files[t],\n        inputElem: this,\n        instanceConfig: d.extend({}, i)\n      });\n    }), e(), this;\n\n    function e() {\n      if (0 === h.length) U(o.complete) && o.complete();else {\n        var e,\n            t,\n            i,\n            r,\n            n = h[0];\n\n        if (U(o.before)) {\n          var s = o.before(n.file, n.inputElem);\n\n          if (\"object\" == typeof s) {\n            if (\"abort\" === s.action) return e = \"AbortError\", t = n.file, i = n.inputElem, r = s.reason, void (U(o.error) && o.error({\n              name: e\n            }, t, i, r));\n            if (\"skip\" === s.action) return void u();\n            \"object\" == typeof s.config && (n.instanceConfig = d.extend(n.instanceConfig, s.config));\n          } else if (\"skip\" === s) return void u();\n        }\n\n        var a = n.instanceConfig.complete;\n        n.instanceConfig.complete = function (e) {\n          U(a) && a(e, n.file, n.inputElem), u();\n        }, v.parse(n.file, n.instanceConfig);\n      }\n    }\n\n    function u() {\n      h.splice(0, 1), e();\n    }\n  }), a && (n.onmessage = function (e) {\n    e = e.data;\n    void 0 === v.WORKER_ID && e && (v.WORKER_ID = e.workerId);\n    \"string\" == typeof e.input ? n.postMessage({\n      workerId: v.WORKER_ID,\n      results: v.parse(e.input, e.config),\n      finished: !0\n    }) : (n.File && e.input instanceof File || e.input instanceof Object) && (e = v.parse(e.input, e.config)) && n.postMessage({\n      workerId: v.WORKER_ID,\n      results: e,\n      finished: !0\n    });\n  }), (f.prototype = Object.create(u.prototype)).constructor = f, (l.prototype = Object.create(u.prototype)).constructor = l, (c.prototype = Object.create(c.prototype)).constructor = c, (p.prototype = Object.create(u.prototype)).constructor = p, v;\n});","map":null,"metadata":{},"sourceType":"script"}