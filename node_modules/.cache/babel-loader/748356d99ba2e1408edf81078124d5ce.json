{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\panelone\\\\Quote.js\";\nimport React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport { db } from '../../firebase';\nimport { collection, getDocs, addDoc, doc, updateDoc } from 'firebase/firestore';\nimport { withRouter } from 'react-router-dom';\nimport html2canvas from 'html2canvas';\nimport { jsPDF } from 'jspdf';\n\nconst numberToWords = num => {\n  const a = ['', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine', 'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];\n  const b = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\n  if (num === 0) return 'Zero';\n  if (num < 20) return a[num];\n  if (num < 100) return b[Math.floor(num / 10)] + ' ' + a[num % 10];\n  if (num < 1000) return a[Math.floor(num / 100)] + ' Hundred ' + numberToWords(num % 100);\n  if (num < 100000) return numberToWords(Math.floor(num / 1000)) + ' Thousand ' + numberToWords(num % 1000);\n  return 'Amount too large';\n};\n\nclass Quote extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: 'co',\n      quotes: [],\n      customers: [],\n      products: [],\n      despatchModes: [],\n      paymentTerms: [],\n      showForm: false,\n      showTaxOverlay: false,\n      currentTaxLineIdx: null,\n      editingId: null,\n      overlayType: '',\n      overlaySearch: '',\n      productOverlayVisible: false,\n      productOverlaySearch: '',\n      selectedProductIds: [],\n      selectedTaxGroups: [],\n      taxComponents: [],\n      taxGroups: [],\n      previewMode: false,\n      selectedQuote: null,\n      formData: {\n        quoteNo: '',\n        quoteDate: new Date().toISOString().split('T')[0],\n        quoteType: 'Standard',\n        customer: '',\n        status: 'Entered',\n        // Static 'Entered'\n        choose: 'Service',\n        qrefNo: '',\n        impExp: 'None',\n        currency: '',\n        conversionRate: '',\n        taxAmount: '',\n        quoteValue: '',\n        billTo: '',\n        shipTo: '',\n        despatchMode: 'By Air',\n        paymentTerms: '',\n        freightCharges: '',\n        freighttaxAmount: '',\n        taxPercent: '',\n        packingCharges: '',\n        lineItems: []\n      }\n    };\n    this.customerInputRef = React.createRef();\n\n    this.formatAddress = addr => {\n      if (!addr) return '';\n      if (typeof addr === 'string') return addr;\n      return [addr.address, [addr.city, addr.state, addr.country].filter(Boolean).join(', '), addr.zip].filter(Boolean).join('\\n');\n    };\n\n    this.handleLineItemChange = (idx, field, value) => {\n      const updatedItems = [...this.state.formData.lineItems];\n      const item = { ...updatedItems[idx]\n      };\n\n      if (field === 'taxId') {\n        if (value === 'more') {\n          this.setState({\n            showTaxOverlay: true\n          });\n          return;\n        }\n\n        item.taxId = value;\n      } else {\n        item[field] = value;\n      }\n\n      updatedItems[idx] = item;\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          lineItems: updatedItems\n        }\n      }), this.recalculateQuoteTotals);\n    };\n\n    this.resetFOBFields = () => {\n      const {\n        freightCharges,\n        taxPercent,\n        taxAmount,\n        packingCharges,\n        quoteValue\n      } = this.state.formData;\n      const needsReset = [freightCharges, taxPercent, taxAmount, packingCharges, quoteValue].some(val => val !== '' && val !== null && val !== undefined);\n\n      if (needsReset) {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            freightCharges: '',\n            taxPercent: '',\n            taxAmount: '',\n            packingCharges: '',\n            quoteValue: ''\n          }\n        }));\n      }\n    };\n\n    this.fetchTaxGroups = async () => {\n      const snap = await getDocs(collection(db, 'taxGroups'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        taxGroups: data\n      });\n    };\n\n    this.fetchQuotes = async () => {\n      const snap = await getDocs(collection(db, 'quotes'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        quotes: data.reverse()\n      });\n    };\n\n    this.fetchCustomers = async () => {\n      const snap = await getDocs(collection(db, 'customers'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        customers: data\n      });\n    };\n\n    this.fetchProducts = async () => {\n      const snap = await getDocs(collection(db, 'products'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        products: data\n      });\n    };\n\n    this.fetchDespatchModes = async () => {\n      const snap = await getDocs(collection(db, 'modes'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        despatchModes: data\n      });\n    };\n\n    this.fetchPaymentTerms = async () => {\n      const snap = await getDocs(collection(db, 'paymentTerms'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        paymentTerms: data\n      });\n    };\n\n    this.handleInputChange = (field, value) => {\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          [field]: value\n        }\n      }));\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        editingId,\n        formData,\n        quotes\n      } = this.state;\n      if (!formData.customer) return alert(\"Customer is required\");\n      if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\n\n      if (editingId) {\n        await updateDoc(doc(db, 'quotes', editingId), formData);\n      } else {\n        formData.quoteNo = `QT${1000 + quotes.length}`;\n        await addDoc(collection(db, 'quotes'), formData);\n      }\n\n      this.setState({\n        showForm: false,\n        editingId: null\n      });\n      this.fetchQuotes();\n    };\n\n    this.loadQuotePreview = q => {\n      this.setState({\n        selectedQuote: q,\n        previewMode: true\n      });\n    };\n\n    this.getTaxPercentage = taxId => {\n      if (!taxId || taxId === 'nill') return 0;\n      const tax = this.state.taxComponents.find(tc => tc.id === taxId);\n      return (tax === null || tax === void 0 ? void 0 : tax.percentage) || 0;\n    };\n\n    this.loadQuoteForEdit = quote => {\n      this.setState({\n        formData: { ...quote,\n          lineItems: Array.isArray(quote.lineItems) ? quote.lineItems : [] // Ensure array\n\n        },\n        editingId: quote.id,\n        showForm: true,\n        previewMode: false,\n        activeTab: 'co'\n      }, () => {\n        if (this.customerInputRef.current) {\n          this.customerInputRef.current.value = quote.customer;\n        }\n      });\n    };\n\n    this.convertToOrder = quote => {\n      // Save quote in sessionStorage (or navigate with state via router if you use react-router)\n      sessionStorage.setItem('quoteToConvert', JSON.stringify(quote));\n      this.props.history.push('/panelone/Order');\n    };\n\n    this.showQuotePDFWithOrg = async quote => {\n      var _orgSnap$docs$, _quote$billTo, _quote$shipTo;\n\n      if (!quote || !Array.isArray(quote.lineItems) || quote.lineItems.length === 0) {\n        alert(\"Quote data is incomplete.\");\n        return;\n      }\n\n      const orgSnap = await getDocs(collection(db, 'businessGroups'));\n      const org = ((_orgSnap$docs$ = orgSnap.docs[0]) === null || _orgSnap$docs$ === void 0 ? void 0 : _orgSnap$docs$.data()) || {};\n      const customer = this.state.customers.find(c => c.custshortName === quote.customer) || {};\n      const enrichedItems = quote.lineItems.map(item => {\n        const product = this.state.products.find(p => p.productId === item.itemCode) || {};\n        const taxGroup = this.state.taxGroups.find(tg => tg.groupName === item.taxGroupName);\n        let cgst = 0,\n            sgst = 0,\n            igst = 0;\n\n        if (taxGroup) {\n          taxGroup.lineItems.forEach(l => {\n            if (l.component.toLowerCase().includes('cgst')) cgst += parseFloat(l.percentOrAmt || 0);\n            if (l.component.toLowerCase().includes('sgst')) sgst += parseFloat(l.percentOrAmt || 0);\n            if (l.component.toLowerCase().includes('igst')) igst += parseFloat(l.percentOrAmt || 0);\n          });\n        }\n\n        return { ...item,\n          ptshortName: product.ptshortName || '',\n          hsnCode: product.hsnCode || '',\n          uom: product.stockingUOM || '',\n          cgst,\n          sgst,\n          igst\n        };\n      });\n      const subtotal = enrichedItems.reduce((sum, i) => sum + (parseFloat(i.total) || 0), 0);\n      const tax = parseFloat(quote.taxAmount || 0);\n      const total = subtotal + tax;\n      const amountWords = `INR ${numberToWords(Math.floor(total))} Only`;\n      const container = document.createElement('div');\n      container.id = 'pdf-preview-container';\n      container.style.width = '794px';\n      container.style.padding = '40px';\n      container.style.fontFamily = 'Arial';\n      container.innerHTML = `\n    <div style=\"display:flex; justify-content:space-between; align-items:center;\">\n      <img src=\"${org.logoUrl || ''}\" style=\"height:50px;\" />\n      <div style=\"font-size:18px; font-weight:bold;\">QUOTATION</div>\n    </div>\n    <hr/>\n    <div style=\"display:flex; justify-content:space-between; font-size:11px;\">\n      <div style=\"line-height:1.5; width:50%;\">\n        <b>${org.bgName || ''}</b><br/>\n        ${org.address || ''}<br/>\n        <b>Email:</b> ${org.email || ''}<br/>\n        <b>Website:</b> ${org.website || ''}<br/>\n        <b>GSTIN:</b> ${org.gstin || ''}\n      </div>\n      <table style=\"font-size:11px; text-align:left;\">\n        <tr><td><b>Quote No</b></td><td>: ${quote.quoteNo}</td></tr>\n        <tr><td><b>Quote Date</b></td><td>: ${quote.quoteDate}</td></tr>\n        <tr><td><b>Currency</b></td><td>: ${quote.currency || 'INR'}</td></tr>\n        <tr><td><b>Despatch</b></td><td>: ${quote.despatchMode || ''}</td></tr>\n      </table>\n    </div>\n\n    <div style=\"margin-top:15px; display:flex; justify-content:space-between; font-size:11px;\">\n      <div style=\"width:48%;\">\n        <b style=\"background:#011b56; color:#fff; display:block; padding:4px;\">Bill To</b>\n        <div style=\"border:1px solid #ccc; padding:6px;\">\n         <b>${quote.customer || ''}</b><br/>\n          ${((_quote$billTo = quote.billTo) === null || _quote$billTo === void 0 ? void 0 : _quote$billTo.replace(/\\n/g, '<br/>')) || ''}\n        </div>\n        <div style=\"font-size:10px; margin-top:6px;\">\n            <b>GSTIN:</b> ${customer.gstin || ''}<br/>\n            <b>Email:</b> ${customer.email || ''}<br/>\n            <b>Contact:</b> ${customer.contactPerson || ''}<br/>\n            <b>Phone:</b> ${customer.phone || ''}\n        </div>\n      </div>\n      <div style=\"width:48%;\">\n        <b style=\"background:#011b56; color:#fff; display:block; padding:4px;\">Ship To</b>\n        <div style=\"border:1px solid #ccc; padding:6px;\">\n         <b>${quote.customer || ''}</b><br/>\n          ${((_quote$shipTo = quote.shipTo) === null || _quote$shipTo === void 0 ? void 0 : _quote$shipTo.replace(/\\n/g, '<br/>')) || ''}\n        </div>\n      </div>\n    </div>\n\n    <table style=\"width:100%; border-collapse:collapse; margin-top:20px; font-size:10px;\">\n      <thead>\n        <tr style=\"background:#f4f6fa;\">\n          <th style=\"border:1px solid #011b56;\">Item Code</th>\n          <th style=\"border:1px solid #011b56;\">Short</th>\n          <th style=\"border:1px solid #011b56;\">Description</th>\n          <th style=\"border:1px solid #011b56;\">HSN</th>\n          <th style=\"border:1px solid #011b56;\">UOM</th>\n          <th style=\"border:1px solid #011b56;\">Qty</th>\n          <th style=\"border:1px solid #011b56;\">Unit Price</th>\n          <th style=\"border:1px solid #011b56;\">CGST%</th>\n          <th style=\"border:1px solid #011b56;\">SGST%</th>\n          <th style=\"border:1px solid #011b56;\">IGST%</th>\n          <th style=\"border:1px solid #011b56;\">Total</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${enrichedItems.map(item => `\n          <tr>\n            <td style=\"border:1px solid #011b56;\">${item.itemCode}</td>\n            <td style=\"border:1px solid #011b56;\">${item.ptshortName}</td>\n            <td style=\"border:1px solid #011b56;\">${item.itemDescription}</td>\n            <td style=\"border:1px solid #011b56;\">${item.hsnCode}</td>\n            <td style=\"border:1px solid #011b56;\">${item.uom}</td>\n            <td style=\"border:1px solid #011b56;\">${item.qty}</td>\n            <td style=\"border:1px solid #011b56;\">${item.unitPrice}</td>\n            <td style=\"border:1px solid #011b56;\">${item.cgst || '-'}</td>\n            <td style=\"border:1px solid #011b56;\">${item.sgst || '-'}</td>\n            <td style=\"border:1px solid #011b56;\">${item.igst || '-'}</td>\n            <td style=\"border:1px solid #011b56;\">${item.total}</td>\n          </tr>`).join('')}\n        <tr><td colspan=\"10\" style=\"text-align:right; border:1px solid #011b56;\">Subtotal</td><td style=\"border:1px solid #011b56;\">${subtotal.toFixed(2)}</td></tr>\n        <tr><td colspan=\"10\" style=\"text-align:right; border:1px solid #011b56;\">Tax</td><td style=\"border:1px solid #011b56;\">${tax.toFixed(2)}</td></tr>\n        <tr><td colspan=\"10\" style=\"text-align:right; border:1px solid #011b56;\"><b>Total</b></td><td style=\"border:1px solid #011b56;\"><b>${total.toFixed(2)}</b></td></tr>\n      </tbody>\n    </table>\n\n    <div style=\"margin-top:8px; font-size:11px;\"><b>Amount in Words:</b> ${amountWords}</div>\n    <div style=\"text-align:right; font-size:11px; margin-top:30px;\">For ${org.bgName}<br/><br/><br/>Authorized Signatory</div>\n    <div style=\"margin-top:20px; text-align:right; font-size:10px;\">Printed on ${new Date().toLocaleString()}</div>\n  `;\n      document.body.appendChild(container);\n      const canvas = await html2canvas(container, {\n        scale: 2,\n        useCORS: true\n      });\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'pt', 'a4');\n      const width = 595.28;\n      const height = canvas.height * width / canvas.width;\n      pdf.addImage(imgData, 'PNG', 0, 0, width, height);\n      const blob = pdf.output('blob');\n      const url = URL.createObjectURL(blob);\n      const newWin = window.open();\n      newWin.document.write(`\n    <html><head><title>Quote PDF Preview</title></head>\n    <body style=\"margin:0;\">\n      <iframe width=\"100%\" height=\"100%\" style=\"border:none;\" src=\"${url}\"></iframe>\n      <button onclick=\"document.querySelector('iframe').contentWindow.print()\" style=\"position:fixed;top:10px;right:110px;\"></button>\n      <a href=\"${url}\" download=\"Quote_${quote.quoteNo || 'PDF'}.pdf\" style=\"position:fixed;top:10px;right:10px;\"></a>\n    </body></html>\n  `);\n      newWin.document.close();\n      document.body.removeChild(container);\n    };\n\n    this.renderTaxOverlay = () => {\n      const {\n        taxGroups,\n        currentTaxLineIdx\n      } = this.state;\n      if (currentTaxLineIdx === null) return null;\n      const item = this.state.formData.lineItems[currentTaxLineIdx];\n      const selected = new Set(item.taxGroupNames || []);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          zIndex: 999,\n          top: '20%',\n          left: '30%',\n          background: '#fff',\n          border: '1px solid #ccc',\n          padding: '15px',\n          maxHeight: '400px',\n          overflowY: 'auto',\n          width: '400px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 7\n        }\n      }, \"Select Tax Groups\"), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-sm table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 24\n        }\n      }, \"Group\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 38\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 51\n        }\n      }, \"%\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 9\n        }\n      }, taxGroups.map(tg => /*#__PURE__*/React.createElement(\"tr\", {\n        key: tg.groupName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: selected.has(tg.groupName),\n        onChange: e => this.toggleTaxGroupSelection(tg.groupName, currentTaxLineIdx, e.target.checked),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 15\n        }\n      }, tg.groupName), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 15\n        }\n      }, tg.lineItems.map(li => li.component).join(', ')), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 15\n        }\n      }, tg.lineItems.map(li => li.percentOrAmt).join(', ')))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-secondary\",\n        onClick: () => this.setState({\n          showTaxOverlay: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 9\n        }\n      }, \"Close\")));\n    };\n\n    this.toggleTaxGroupSelection = (groupName, lineIdx, isChecked) => {\n      const formData = { ...this.state.formData\n      };\n      const item = formData.lineItems[lineIdx];\n      if (!item.taxGroupNames) item.taxGroupNames = [];\n\n      if (isChecked) {\n        if (!item.taxGroupNames.includes(groupName)) {\n          item.taxGroupNames.push(groupName);\n        }\n      } else {\n        item.taxGroupNames = item.taxGroupNames.filter(g => g !== groupName);\n      } // Compute tax breakdown\n\n\n      let cgst = 0,\n          sgst = 0,\n          igst = 0;\n      item.taxGroupNames.forEach(gname => {\n        const tg = this.state.taxGroups.find(t => t.groupName === gname);\n\n        if (tg) {\n          tg.lineItems.forEach(l => {\n            const comp = l.component.toLowerCase();\n            const val = parseFloat(l.percentOrAmt || 0);\n            if (comp.includes('cgst')) cgst += val;\n            if (comp.includes('sgst')) sgst += val;\n            if (comp.includes('igst')) igst += val;\n          });\n        }\n      });\n      item.cgst = cgst;\n      item.sgst = sgst;\n      item.igst = igst;\n      this.setState({\n        formData\n      });\n    };\n\n    this.showOverlay = type => this.setState({\n      overlayType: type,\n      overlaySearch: ''\n    });\n\n    this.hideOverlay = () => this.setState({\n      overlayType: '',\n      overlaySearch: ''\n    });\n\n    this.selectOverlayValue = value => {\n      if (this.state.overlayType === 'customer') {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            customer: value.custname || value.custcode || '',\n            // Use custname or custcode\n            billTo: this.formatAddress(value.billTo),\n            shipTo: this.formatAddress(value.shipTo),\n            currency: value.currency || '' // despatchMode: value.despatchMode || '', // No auto-fill for despatch mode\n            // paymentTerms: value.paymentTerms || '' // No auto-fill for payment terms\n\n          },\n          overlayType: '',\n          overlaySearch: ''\n        }), () => {\n          if (this.customerInputRef.current) {\n            this.customerInputRef.current.value = value.custname || value.custcode || '';\n          }\n        });\n      }\n    };\n\n    this.renderTaxOverlay = () => {\n      const {\n        taxGroups,\n        currentTaxLineIdx,\n        formData\n      } = this.state;\n      if (currentTaxLineIdx === null) return null;\n      const item = formData.lineItems[currentTaxLineIdx];\n      const selected = new Set(item.taxGroupNames || []);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'fixed',\n          zIndex: 9999,\n          top: '15%',\n          left: '30%',\n          background: '#fff',\n          border: '1px solid #ccc',\n          padding: '20px',\n          boxShadow: '0 0 10px rgba(0,0,0,0.3)',\n          width: '500px',\n          maxHeight: '60vh',\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 7\n        }\n      }, \"Select Tax Groups\"), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-sm table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 24\n        }\n      }, \"Group\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 38\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 51\n        }\n      }, \"%\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 9\n        }\n      }, taxGroups.map(tg => /*#__PURE__*/React.createElement(\"tr\", {\n        key: tg.groupName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: selected.has(tg.groupName),\n        onChange: e => this.toggleTaxGroupSelection(tg.groupName, currentTaxLineIdx, e.target.checked),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 15\n        }\n      }, tg.groupName), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 15\n        }\n      }, tg.lineItems.map(li => li.component).join(', ')), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 15\n        }\n      }, tg.lineItems.map(li => li.percentOrAmt).join(', ')))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-primary\",\n        onClick: () => this.setState({\n          showTaxOverlay: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 9\n        }\n      }, \"Done\")));\n    };\n\n    this.renderOverlay = () => {\n      const {\n        overlayType,\n        overlaySearch,\n        customers,\n        despatchModes,\n        paymentTerms\n      } = this.state;\n\n      const getFilteredRows = (list, nameKey = 'name', codeKey = 'shortName') => list.filter(item => (item[nameKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()) || (item[codeKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()));\n\n      const handleSelect = item => {\n        if (overlayType === 'customer') {\n          this.selectOverlayValue(item);\n        } else if (overlayType === 'despatchMode') {\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              despatchMode: item.name\n            },\n            overlayType: '',\n            overlaySearch: ''\n          }));\n        } else if (overlayType === 'paymentTerms') {\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              paymentTerms: item.name\n            },\n            overlayType: '',\n            overlaySearch: ''\n          }));\n        }\n      };\n\n      let title = '';\n      let headers = [];\n      let rows = [];\n\n      if (overlayType === 'customer') {\n        title = 'Select Customer';\n        headers = ['Name', 'Code', 'Short Name'];\n        rows = getFilteredRows(customers, 'custname', 'custcode');\n      } else if (overlayType === 'despatchMode') {\n        title = 'Select Despatch Mode';\n        headers = ['Name', 'Short Name'];\n        rows = getFilteredRows(despatchModes);\n      } else if (overlayType === 'paymentTerms') {\n        title = 'Select Payment Terms';\n        headers = ['Name', 'Short Name'];\n        rows = getFilteredRows(paymentTerms);\n      } else {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 9\n        }\n      }, title), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: `Search ${overlayType}...`,\n        value: overlaySearch,\n        onChange: e => this.setState({\n          overlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 15\n        }\n      }, headers.map((h, i) => /*#__PURE__*/React.createElement(\"th\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 40\n        }\n      }, h)))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 13\n        }\n      }, rows.map((item, i) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id || i,\n        onClick: () => handleSelect(item),\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 17\n        }\n      }, headers.map((h, j) => /*#__PURE__*/React.createElement(\"td\", {\n        key: j,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 21\n        }\n      }, overlayType === 'customer' ? h === 'Name' ? item.custname : h === 'Code' ? item.custcode : item.custshortName : h === 'Name' ? item.name : item.shortName)))), rows.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: headers.length,\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 19\n        }\n      }, \"No records found\"))))), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm mt-2\",\n        onClick: this.hideOverlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 9\n        }\n      }, \"Cancel\")));\n    };\n\n    this.renderProductOverlay = () => {\n      const {\n        products,\n        productOverlaySearch,\n        selectedProductIds\n      } = this.state;\n      const filtered = products.filter(p => (p.ptshortName || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) || (p.ptdescription || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) || (p.itemCode || '').toLowerCase().includes(productOverlaySearch.toLowerCase()));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 13\n        }\n      }, \"Select Products\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-success btn-sm\",\n        onClick: () => {\n          const selectedProducts = products.filter(p => this.state.selectedProductIds.includes(p.id));\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              lineItems: [...prev.formData.lineItems, ...selectedProducts.filter(p => !prev.formData.lineItems.some(item => item.id === p.id)).map(p => ({\n                id: p.id,\n                itemCode: p.productId || '',\n                itemDescription: p.ptdescription || '',\n                itemType: p.itemType || '',\n                materialType: p.materialType || '',\n                onHand: p.onHand || 0,\n                taxGroup: p.taxGroup || '',\n                custPartNo: p.custPartNo || '',\n                // Assuming this is cust part table\n                hsnNo: p.hsnNo || '',\n                // Assuming HSN No.\n                unitPrice: p.unitPrice || 0,\n                qty: 1,\n                total: (p.unitPrice || 0).toFixed(2)\n              }))]\n            },\n            productOverlayVisible: false,\n            selectedProductIds: []\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 13\n        }\n      }, \"Add Selected\")), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: \"Search products...\",\n        value: productOverlaySearch,\n        onChange: e => this.setState({\n          productOverlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 19\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 19\n        }\n      }, \"Item Desc\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 19\n        }\n      }, \"Item Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 19\n        }\n      }, \"Material Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 19\n        }\n      }, \"On Hand\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 19\n        }\n      }, \"Tax Grp\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 19\n        }\n      }, \"Cust Part No\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 786,\n          columnNumber: 15\n        }\n      }, filtered.map(p => /*#__PURE__*/React.createElement(\"tr\", {\n        key: p.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: selectedProductIds.includes(p.id),\n        onChange: e => {\n          const checked = e.target.checked;\n          this.setState(prev => ({\n            selectedProductIds: checked ? [...prev.selectedProductIds, p.id] : prev.selectedProductIds.filter(id => id !== p.id)\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 21\n        }\n      }, p.productId), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 21\n        }\n      }, p.ptdescription || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 21\n        }\n      }, p.itemType || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 21\n        }\n      }, p.materialType || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 21\n        }\n      }, p.onHand || 0), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 21\n        }\n      }, p.taxGroup || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 21\n        }\n      }, p.custPartNo || ''))), filtered.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"8\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 21\n        }\n      }, \"No products found\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 13\n        }\n      }, \"Page 1 of 1\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        onClick: () => this.setState({\n          productOverlayVisible: false,\n          selectedProductIds: []\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 13\n        }\n      }, \"Cancel\"))));\n    };\n\n    this.renderQuoteTable = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-4 full-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 836,\n        columnNumber: 11\n      }\n    }, \"Quotes\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.setState({\n        showForm: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 11\n      }\n    }, \"+ Add Quote\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 840,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 841,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 17\n      }\n    }, \"Quote No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 17\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 17\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 17\n      }\n    }, \"Quote Value\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 17\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 17\n      }\n    }, \"Print\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 13\n      }\n    }, this.state.quotes.map((q, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-link p-0\",\n      onClick: () => this.loadQuotePreview(q),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 21\n      }\n    }, q.quoteNo)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 19\n      }\n    }, q.customer), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 19\n      }\n    }, q.quoteDate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 19\n      }\n    }, q.quoteValue), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 865,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"badge badge-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 865,\n        columnNumber: 23\n      }\n    }, q.status)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 866,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"mdi mdi-printer menu-icon\",\n      onClick: () => this.showQuotePDFWithOrg(q),\n      style: {\n        fontSize: '24px',\n        color: '#2196F3',\n        cursor: 'pointer'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 867,\n        columnNumber: 19\n      }\n    })))), this.state.quotes.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"6\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 21\n      }\n    }, \"No quotes found.\")))))));\n\n    this.renderQuoteForm = () => {\n      const {\n        formData,\n        overlayType,\n        productOverlayVisible,\n        showTaxOverlay,\n        taxGroups\n      } = this.state;\n      const isFOB = formData.impExp === 'FOB';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 892,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card full-height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: 'auto',\n          padding: '24px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 894,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 13\n        }\n      }, \"Quote Form\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"nav nav-tabs\",\n        role: \"tablist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 896,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 897,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'co' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'co'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 898,\n          columnNumber: 17\n        }\n      }, \"CO Details\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 900,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'commercial'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 17\n        }\n      }, \"Commercial Terms\"))), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"form-sample\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tab-content pt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 905,\n          columnNumber: 15\n        }\n      }, this.state.activeTab === 'co' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 908,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 25\n        }\n      }, \"Quote No\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.quoteNo,\n        onChange: e => this.handleInputChange('quoteNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 911,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 913,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 914,\n          columnNumber: 25\n        }\n      }, \"Quote Date\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"date\",\n        className: \"form-control form-control-sm\",\n        value: formData.quoteDate,\n        onChange: e => this.handleInputChange('quoteDate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 917,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 918,\n          columnNumber: 25\n        }\n      }, \"Quote Type\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.quoteType,\n        onChange: e => this.handleInputChange('quoteType', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 920,\n          columnNumber: 27\n        }\n      }, \"Standard\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 921,\n          columnNumber: 27\n        }\n      }, \"Manual\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 25\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.status,\n        style: {\n          backgroundColor: '#fff'\n        },\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 929,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 930,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 931,\n          columnNumber: 25\n        }\n      }, \"Customer\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Choose Customer\",\n        ref: this.customerInputRef,\n        value: formData.customer,\n        readOnly: true,\n        onClick: () => this.showOverlay('customer'),\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 933,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        onClick: () => this.showOverlay('customer'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 29\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 948,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 949,\n          columnNumber: 25\n        }\n      }, \"IMP/EXP\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.impExp,\n        onChange: e => this.handleInputChange('impExp', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 955,\n          columnNumber: 27\n        }\n      }, \"None\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 27\n        }\n      }, \"COB\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 957,\n          columnNumber: 27\n        }\n      }, \"FOB\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 958,\n          columnNumber: 27\n        }\n      }, \"CIF\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 962,\n          columnNumber: 25\n        }\n      }, \"Ref No.\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.qrefNo,\n        onChange: e => this.handleInputChange('qrefNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 963,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 970,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 971,\n          columnNumber: 25\n        }\n      }, \"Choose\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 972,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check mr-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 973,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        className: \"form-check-input\",\n        name: \"choose\",\n        id: \"chooseService\",\n        value: \"Service\",\n        checked: formData.choose === 'Service',\n        onChange: e => this.handleInputChange('choose', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 974,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"chooseService\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 975,\n          columnNumber: 29\n        }\n      }, \"Service\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        className: \"form-check-input\",\n        name: \"choose\",\n        id: \"chooseProduct\",\n        value: \"Product\",\n        checked: formData.choose === 'Product',\n        onChange: e => this.handleInputChange('choose', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"chooseProduct\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 979,\n          columnNumber: 29\n        }\n      }, \"Product\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 984,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 985,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 986,\n          columnNumber: 25\n        }\n      }, \"Currency\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.currency,\n        style: {\n          backgroundColor: '#fff'\n        },\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 987,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 995,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 25\n        }\n      }, \"Conversion Rate\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.conversionRate,\n        onChange: e => this.handleInputChange('conversionRate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 997,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1005,\n          columnNumber: 25\n        }\n      }, \"Tax Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxAmount,\n        onChange: e => this.handleInputChange('taxAmount', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1006,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1014,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1015,\n          columnNumber: 25\n        }\n      }, \"Quote Value\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.quoteValue,\n        onChange: e => this.handleInputChange('quoteValue', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1026,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1027,\n          columnNumber: 29\n        }\n      }, \"Line Item\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-sm\",\n        onClick: () => this.setState({\n          productOverlayVisible: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1028,\n          columnNumber: 29\n        }\n      }, \"+ Add Product\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-responsive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1032,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1033,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1035,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1036,\n          columnNumber: 15\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1037,\n          columnNumber: 15\n        }\n      }, \"Item Desc\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1038,\n          columnNumber: 15\n        }\n      }, \"Cust Part No\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1039,\n          columnNumber: 15\n        }\n      }, \"HSN No\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1040,\n          columnNumber: 15\n        }\n      }, \"UOM\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1041,\n          columnNumber: 15\n        }\n      }, \"On Hand\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1042,\n          columnNumber: 15\n        }\n      }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1043,\n          columnNumber: 15\n        }\n      }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1044,\n          columnNumber: 15\n        }\n      }, \"Tax Id\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1045,\n          columnNumber: 15\n        }\n      }, \"Item Total\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1046,\n          columnNumber: 15\n        }\n      }, \"Tax Amt\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1049,\n          columnNumber: 11\n        }\n      }, formData.lineItems.map((item, idx) => {\n        const itemTotal = item.unitPrice * item.qty;\n        const taxDetails = this.getTaxDetailsFromGroup(item.taxGroupName);\n        const taxAmt = itemTotal * taxDetails.totalPercent / 100 + itemTotal * taxDetails.totalAmount;\n        const totalWithTax = itemTotal + taxAmt;\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: item.id || idx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1058,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1059,\n            columnNumber: 19\n          }\n        }, item.itemCode), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1060,\n            columnNumber: 19\n          }\n        }, item.itemDescription), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1061,\n            columnNumber: 19\n          }\n        }, item.custPartNo), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1062,\n            columnNumber: 19\n          }\n        }, item.hsnNo), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1063,\n            columnNumber: 19\n          }\n        }, item.uom), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1064,\n            columnNumber: 19\n          }\n        }, item.onHand), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1065,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          value: item.unitPrice,\n          onChange: e => this.handleLineItemChange(idx, 'unitPrice', e.target.value),\n          style: {\n            width: 80\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1066,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1073,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          value: item.qty,\n          onChange: e => this.handleLineItemChange(idx, 'qty', e.target.value),\n          style: {\n            width: 60\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1074,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1082,\n            columnNumber: 18\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-outline-secondary btn-rounded btn-icon\",\n          onClick: () => this.setState({\n            showTaxOverlay: true,\n            currentTaxLineIdx: idx\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1083,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"mdi mdi-plus text-primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1087,\n            columnNumber: 19\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            fontSize: '13px',\n            marginTop: '4px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1089,\n            columnNumber: 17\n          }\n        }, (item.taxGroupNames || []).join(', ') || '-')), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1094,\n            columnNumber: 19\n          }\n        }, totalWithTax.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1095,\n            columnNumber: 19\n          }\n        }, taxAmt.toFixed(2)));\n      })))), showTaxOverlay && this.renderTaxOverlay(), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1105,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1106,\n          columnNumber: 29\n        }\n      }, \"Page 1 of 1\"))), this.state.activeTab === 'commercial' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1113,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1114,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1115,\n          columnNumber: 25\n        }\n      }, \"Bill To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"3\",\n        value: formData.billTo,\n        onChange: e => this.handleInputChange('billTo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1116,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1123,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1124,\n          columnNumber: 25\n        }\n      }, \"Ship To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"3\",\n        value: formData.shipTo,\n        onChange: e => this.handleInputChange('shipTo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1125,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1133,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1134,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1135,\n          columnNumber: 3\n        }\n      }, \"Despatch Mode\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1136,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: formData.despatchMode,\n        readOnly: true,\n        onClick: () => !isFOB && this.showOverlay('despatchMode'),\n        style: {\n          cursor: isFOB ? 'not-allowed' : 'pointer',\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1137,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1145,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        disabled: isFOB,\n        onClick: () => this.showOverlay('despatchMode'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1146,\n          columnNumber: 7\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1158,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1159,\n          columnNumber: 3\n        }\n      }, \"Payment Terms\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1160,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: formData.paymentTerms,\n        readOnly: true,\n        onClick: () => !isFOB && this.showOverlay('paymentTerms'),\n        style: {\n          cursor: isFOB ? 'not-allowed' : 'pointer',\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1161,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1169,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        disabled: isFOB,\n        onClick: () => this.showOverlay('paymentTerms'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1170,\n          columnNumber: 7\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1182,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1183,\n          columnNumber: 25\n        }\n      }, \"Freight Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.freightCharges,\n        onChange: e => this.handleInputChange('freightCharges', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1184,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1193,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1194,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1195,\n          columnNumber: 25\n        }\n      }, \"Tax %\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxPercent,\n        onChange: e => this.handleInputChange('taxPercent', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1196,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1204,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1205,\n          columnNumber: 25\n        }\n      }, \"Freight Tax Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxAmount,\n        onChange: e => this.handleInputChange('freighttaxAmount', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1206,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1214,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1215,\n          columnNumber: 25\n        }\n      }, \"Packing Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.packingCharges,\n        onChange: e => this.handleInputChange('packingCharges', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1216,\n          columnNumber: 25\n        }\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fixed-card-footer text-right p-3 border-top bg-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1231,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1232,\n          columnNumber: 17\n        }\n      }, \"Save All Details\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: () => this.setState({\n          showForm: false,\n          editingId: null\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1233,\n          columnNumber: 17\n        }\n      }, \"Cancel\"))), overlayType && this.renderOverlay(), productOverlayVisible && this.renderProductOverlay(), this.state.showTaxOverlay && this.renderTaxOverlay())));\n    };\n\n    this.renderQuotePreview = () => {\n      var _q$lineItems;\n\n      const q = this.state.selectedQuote;\n      if (!q) return null;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card mt-4 full-height p-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1257,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1258,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1259,\n          columnNumber: 9\n        }\n      }, \"Quote Preview - \", q.quoteNo), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1260,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-info mr-2\",\n        onClick: () => this.loadQuoteForEdit(q),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1261,\n          columnNumber: 11\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-success\",\n        onClick: () => this.convertToOrder(q),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1262,\n          columnNumber: 11\n        }\n      }, \"Convert to Order\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1265,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1266,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1266,\n          columnNumber: 35\n        }\n      }, \"Customer:\"), \" \", q.customer), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1267,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1267,\n          columnNumber: 35\n        }\n      }, \"Date:\"), \" \", q.quoteDate), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1268,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1268,\n          columnNumber: 35\n        }\n      }, \"Status:\"), \" \", q.status)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1270,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1271,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1271,\n          columnNumber: 35\n        }\n      }, \"Bill To:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1271,\n          columnNumber: 50\n        }\n      }), q.billTo), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1272,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1272,\n          columnNumber: 35\n        }\n      }, \"Ship To:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1272,\n          columnNumber: 50\n        }\n      }), q.shipTo)), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1274,\n          columnNumber: 7\n        }\n      }, \"Line Items\"), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1275,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1276,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1277,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1278,\n          columnNumber: 13\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1278,\n          columnNumber: 31\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1278,\n          columnNumber: 51\n        }\n      }, \"Qty\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1278,\n          columnNumber: 63\n        }\n      }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1278,\n          columnNumber: 82\n        }\n      }, \"Total\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1281,\n          columnNumber: 9\n        }\n      }, (_q$lineItems = q.lineItems) === null || _q$lineItems === void 0 ? void 0 : _q$lineItems.map((item, i) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1283,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1284,\n          columnNumber: 15\n        }\n      }, item.itemCode), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1285,\n          columnNumber: 15\n        }\n      }, item.itemDescription), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1286,\n          columnNumber: 15\n        }\n      }, item.qty), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1287,\n          columnNumber: 15\n        }\n      }, item.unitPrice), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1288,\n          columnNumber: 15\n        }\n      }, item.total))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1293,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1293,\n          columnNumber: 35\n        }\n      }, \"Total:\"), \" \", q.quoteValue), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary mt-3\",\n        onClick: () => this.setState({\n          previewMode: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1294,\n          columnNumber: 7\n        }\n      }, \"Back to List\"));\n    };\n  }\n\n  componentDidMount() {\n    bsCustomFileInput.init();\n    this.fetchQuotes();\n    this.fetchCustomers();\n    this.fetchProducts();\n    this.fetchDespatchModes();\n    this.fetchPaymentTerms();\n    this.fetchTaxGroups();\n  }\n\n  getTaxDetailsFromGroup(groupName) {\n    if (!groupName || groupName === 'nill' || groupName === 'more') return {\n      totalPercent: 0,\n      totalAmount: 0\n    };\n    const group = this.state.taxGroups.find(tg => tg.groupName === groupName);\n    if (!group || !Array.isArray(group.lineItems)) return {\n      totalPercent: 0,\n      totalAmount: 0\n    };\n    let totalPercent = 0;\n    let totalAmount = 0;\n    group.lineItems.forEach(item => {\n      if (item.type === 'Percentage') {\n        totalPercent += parseFloat(item.percentOrAmt || 0);\n      } else if (item.type === 'Amount') {\n        totalAmount += parseFloat(item.percentOrAmt || 0);\n      }\n    });\n    return {\n      totalPercent,\n      totalAmount\n    };\n  }\n\n  recalculateQuoteTotals() {\n    const {\n      impExp,\n      freightCharges,\n      taxPercent,\n      packingCharges,\n      lineItems\n    } = this.state.formData;\n    let freight = parseFloat(freightCharges) || 0;\n    let packing = parseFloat(packingCharges) || 0;\n    let taxOnFreight = 0;\n\n    if (['None', 'CIF'].includes(impExp)) {\n      taxOnFreight = freight * (parseFloat(taxPercent) || 0) / 100;\n    }\n\n    let lineTotal = 0;\n    let itemTaxTotal = 0;\n    const updatedLineItems = lineItems.map(item => {\n      const baseTotal = parseFloat(item.unitPrice || 0) * parseFloat(item.qty || 1);\n      const taxDetails = this.getTaxDetailsFromGroup(item.taxGroupName);\n      const taxAmt = baseTotal * taxDetails.totalPercent / 100 + baseTotal * taxDetails.totalAmount;\n      const total = baseTotal + taxAmt;\n      item.total = total.toFixed(2);\n      item.taxAmt = taxAmt.toFixed(2);\n      lineTotal += baseTotal;\n      itemTaxTotal += taxAmt;\n      return item;\n    });\n    const totalTaxAmount = itemTaxTotal + taxOnFreight;\n    const quoteValue = lineTotal + freight + packing + itemTaxTotal;\n    this.setState(prev => ({\n      formData: { ...prev.formData,\n        taxAmount: totalTaxAmount.toFixed(2),\n        quoteValue: quoteValue.toFixed(2),\n        lineItems: updatedLineItems\n      }\n    }));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (JSON.stringify(prevState.formData.lineItems) !== JSON.stringify(this.state.formData.lineItems)) {\n      this.recalculateQuoteTotals();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1301,\n        columnNumber: 7\n      }\n    }, this.state.previewMode ? this.renderQuotePreview() : this.state.showForm ? this.renderQuoteForm() : this.renderQuoteTable(), this.state.showTaxOverlay && this.renderTaxOverlay());\n  }\n\n}\n\nexport default withRouter(Quote);","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/panelone/Quote.js"],"names":["React","Component","Form","bsCustomFileInput","db","collection","getDocs","addDoc","doc","updateDoc","withRouter","html2canvas","jsPDF","numberToWords","num","a","b","Math","floor","Quote","state","activeTab","quotes","customers","products","despatchModes","paymentTerms","showForm","showTaxOverlay","currentTaxLineIdx","editingId","overlayType","overlaySearch","productOverlayVisible","productOverlaySearch","selectedProductIds","selectedTaxGroups","taxComponents","taxGroups","previewMode","selectedQuote","formData","quoteNo","quoteDate","Date","toISOString","split","quoteType","customer","status","choose","qrefNo","impExp","currency","conversionRate","taxAmount","quoteValue","billTo","shipTo","despatchMode","freightCharges","freighttaxAmount","taxPercent","packingCharges","lineItems","customerInputRef","createRef","formatAddress","addr","address","city","country","filter","Boolean","join","zip","handleLineItemChange","idx","field","value","updatedItems","item","setState","taxId","prev","recalculateQuoteTotals","resetFOBFields","needsReset","some","val","undefined","fetchTaxGroups","snap","data","docs","map","id","fetchQuotes","reverse","fetchCustomers","fetchProducts","fetchDespatchModes","fetchPaymentTerms","handleInputChange","handleSubmit","e","preventDefault","alert","length","loadQuotePreview","q","getTaxPercentage","tax","find","tc","percentage","loadQuoteForEdit","quote","Array","isArray","current","convertToOrder","sessionStorage","setItem","JSON","stringify","props","history","push","showQuotePDFWithOrg","orgSnap","org","c","custshortName","enrichedItems","product","p","productId","itemCode","taxGroup","tg","groupName","taxGroupName","cgst","sgst","igst","forEach","l","component","toLowerCase","includes","parseFloat","percentOrAmt","ptshortName","hsnCode","uom","stockingUOM","subtotal","reduce","sum","i","total","amountWords","container","document","createElement","style","width","padding","fontFamily","innerHTML","logoUrl","bgName","email","website","gstin","replace","contactPerson","phone","itemDescription","qty","unitPrice","toFixed","toLocaleString","body","appendChild","canvas","scale","useCORS","imgData","toDataURL","pdf","height","addImage","blob","output","url","URL","createObjectURL","newWin","window","open","write","close","removeChild","renderTaxOverlay","selected","Set","taxGroupNames","position","zIndex","top","left","background","border","maxHeight","overflowY","has","toggleTaxGroupSelection","target","checked","li","lineIdx","isChecked","g","gname","t","comp","showOverlay","type","hideOverlay","selectOverlayValue","custname","custcode","boxShadow","renderOverlay","getFilteredRows","list","nameKey","codeKey","handleSelect","name","title","headers","rows","h","cursor","j","shortName","renderProductOverlay","filtered","ptdescription","selectedProducts","itemType","materialType","onHand","custPartNo","hsnNo","renderQuoteTable","fontSize","color","renderQuoteForm","isFOB","flex","backgroundColor","itemTotal","taxDetails","getTaxDetailsFromGroup","taxAmt","totalPercent","totalAmount","totalWithTax","marginTop","renderQuotePreview","componentDidMount","init","group","freight","packing","taxOnFreight","lineTotal","itemTaxTotal","updatedLineItems","baseTotal","totalTaxAmount","componentDidUpdate","prevProps","prevState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport bsCustomFileInput from 'bs-custom-file-input';\r\nimport { db } from '../../firebase';\r\nimport { collection, getDocs, addDoc, doc, updateDoc } from 'firebase/firestore';\r\nimport { withRouter } from 'react-router-dom';\r\nimport html2canvas from 'html2canvas';\r\nimport { jsPDF } from 'jspdf';\r\n\r\n\r\nconst numberToWords = (num) => {\r\n  const a = ['', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine',\r\n    'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen',\r\n    'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];\r\n  const b = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\r\n\r\n  if (num === 0) return 'Zero';\r\n  if (num < 20) return a[num];\r\n  if (num < 100) return b[Math.floor(num / 10)] + ' ' + a[num % 10];\r\n  if (num < 1000)\r\n    return a[Math.floor(num / 100)] + ' Hundred ' + numberToWords(num % 100);\r\n  if (num < 100000)\r\n    return numberToWords(Math.floor(num / 1000)) + ' Thousand ' + numberToWords(num % 1000);\r\n  return 'Amount too large';\r\n};\r\n\r\n\r\nclass Quote extends Component {\r\n  state = {\r\n    activeTab: 'co',\r\n    quotes: [],\r\n    customers: [],\r\n    products: [],\r\n    despatchModes: [],\r\n    paymentTerms: [],\r\n    showForm: false,\r\n    showTaxOverlay: false,\r\n    currentTaxLineIdx: null,\r\n    editingId: null,\r\n    overlayType: '',\r\n    overlaySearch: '',\r\n    productOverlayVisible: false,\r\n    productOverlaySearch: '',\r\n    selectedProductIds: [],\r\n    selectedTaxGroups: [],\r\n    taxComponents: [],\r\n    taxGroups:[],\r\n    previewMode: false,\r\n    selectedQuote: null,\r\n    formData: {\r\n      quoteNo: '',\r\n      quoteDate: new Date().toISOString().split('T')[0],\r\n      quoteType: 'Standard',\r\n      customer: '',\r\n      status: 'Entered', // Static 'Entered'\r\n      choose: 'Service',\r\n      qrefNo: '',\r\n      impExp: 'None',\r\n      currency: '',\r\n      conversionRate: '',\r\n      taxAmount: '',\r\n      quoteValue: '',\r\n      billTo: '',\r\n      shipTo: '',\r\n      despatchMode: 'By Air',\r\n      paymentTerms: '',\r\n      freightCharges: '',\r\n      freighttaxAmount: '',\r\n      taxPercent: '',\r\n      packingCharges: '',\r\n      lineItems: [],\r\n    }\r\n  };\r\n  customerInputRef = React.createRef();\r\n\r\n  // Helper to format address for Bill To / Ship To\r\n  formatAddress = (addr) => {\r\n    if (!addr) return '';\r\n    if (typeof addr === 'string') return addr;\r\n    return [\r\n      addr.address,\r\n      [addr.city, addr.state, addr.country].filter(Boolean).join(', '),\r\n      addr.zip\r\n    ].filter(Boolean).join('\\n');\r\n  };\r\n\r\n  componentDidMount() {\r\n    bsCustomFileInput.init();\r\n    this.fetchQuotes();\r\n    this.fetchCustomers();\r\n    this.fetchProducts();\r\n    this.fetchDespatchModes();\r\n    this.fetchPaymentTerms();\r\n    this.fetchTaxGroups();\r\n\r\n\r\n  }\r\n\r\ngetTaxDetailsFromGroup(groupName) {\r\n  if (!groupName || groupName === 'nill' || groupName === 'more') return { totalPercent: 0, totalAmount: 0 };\r\n\r\n  const group = this.state.taxGroups.find(tg => tg.groupName === groupName);\r\n  if (!group || !Array.isArray(group.lineItems)) return { totalPercent: 0, totalAmount: 0 };\r\n\r\n  let totalPercent = 0;\r\n  let totalAmount = 0;\r\n\r\n  group.lineItems.forEach(item => {\r\n    if (item.type === 'Percentage') {\r\n      totalPercent += parseFloat(item.percentOrAmt || 0);\r\n    } else if (item.type === 'Amount') {\r\n      totalAmount += parseFloat(item.percentOrAmt || 0);\r\n    }\r\n  });\r\n\r\n  return { totalPercent, totalAmount };\r\n}\r\n\r\n\r\nhandleLineItemChange = (idx, field, value) => {\r\n  const updatedItems = [...this.state.formData.lineItems];\r\n  const item = { ...updatedItems[idx] };\r\n\r\n  if (field === 'taxId') {\r\n    if (value === 'more') {\r\n      this.setState({ showTaxOverlay: true });\r\n      return;\r\n    }\r\n    item.taxId = value;\r\n  } else {\r\n    item[field] = value;\r\n  }\r\n\r\n  updatedItems[idx] = item;\r\n\r\n  this.setState(prev => ({\r\n    formData: {\r\n      ...prev.formData,\r\n      lineItems: updatedItems\r\n    }\r\n  }), this.recalculateQuoteTotals);\r\n};\r\n\r\nrecalculateQuoteTotals() {\r\n  const { impExp, freightCharges, taxPercent, packingCharges, lineItems } = this.state.formData;\r\n  let freight = parseFloat(freightCharges) || 0;\r\n  let packing = parseFloat(packingCharges) || 0;\r\n  let taxOnFreight = 0;\r\n  if (['None', 'CIF'].includes(impExp)) {\r\n    taxOnFreight = (freight * (parseFloat(taxPercent) || 0)) / 100;\r\n  }\r\n\r\n  let lineTotal = 0;\r\n  let itemTaxTotal = 0;\r\n\r\n  const updatedLineItems = lineItems.map(item => {\r\n    const baseTotal = (parseFloat(item.unitPrice || 0) * parseFloat(item.qty || 1));\r\n    const taxDetails = this.getTaxDetailsFromGroup(item.taxGroupName);\r\n    const taxAmt = (baseTotal * taxDetails.totalPercent / 100) + (baseTotal * taxDetails.totalAmount);\r\n\r\n    const total = baseTotal + taxAmt;\r\n    item.total = total.toFixed(2);\r\n    item.taxAmt = taxAmt.toFixed(2);\r\n\r\n    lineTotal += baseTotal;\r\n    itemTaxTotal += taxAmt;\r\n\r\n    return item;\r\n  });\r\n\r\n  const totalTaxAmount = itemTaxTotal + taxOnFreight;\r\n  const quoteValue = lineTotal + freight + packing + itemTaxTotal;\r\n\r\n  this.setState(prev => ({\r\n    formData: {\r\n      ...prev.formData,\r\n      taxAmount: totalTaxAmount.toFixed(2),\r\n      quoteValue: quoteValue.toFixed(2),\r\n      lineItems: updatedLineItems\r\n    }\r\n  }));\r\n}\r\n\r\n\r\nresetFOBFields = () => {\r\n  const { freightCharges, taxPercent, taxAmount, packingCharges, quoteValue } = this.state.formData;\r\n  const needsReset = [freightCharges, taxPercent, taxAmount, packingCharges, quoteValue]\r\n    .some(val => val !== '' && val !== null && val !== undefined);\r\n\r\n  if (needsReset) {\r\n    this.setState(prev => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        freightCharges: '',\r\n        taxPercent: '',\r\n        taxAmount: '',\r\n        packingCharges: '',\r\n        quoteValue: ''\r\n      }\r\n    }));\r\n  }\r\n};\r\n\r\ncomponentDidUpdate(prevProps, prevState) {\r\n  if (JSON.stringify(prevState.formData.lineItems) !== JSON.stringify(this.state.formData.lineItems)) {\r\n    this.recalculateQuoteTotals();\r\n  }\r\n}\r\nfetchTaxGroups = async () => {\r\n  const snap = await getDocs(collection(db, 'taxGroups'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ taxGroups: data });\r\n};\r\n\r\n\r\n  fetchQuotes = async () => {\r\n    const snap = await getDocs(collection(db, 'quotes'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ quotes: data.reverse() });\r\n  };\r\n\r\n  fetchCustomers = async () => {\r\n    const snap = await getDocs(collection(db, 'customers'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ customers: data });\r\n  };\r\n\r\n  fetchProducts = async () => {\r\n    const snap = await getDocs(collection(db, 'products'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ products: data });\r\n  };\r\n  fetchDespatchModes = async () => {\r\n  const snap = await getDocs(collection(db, 'modes'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ despatchModes: data });\r\n};\r\n\r\nfetchPaymentTerms = async () => {\r\n  const snap = await getDocs(collection(db, 'paymentTerms'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ paymentTerms: data });\r\n};\r\n\r\n\r\n  handleInputChange = (field, value) => {\r\n    this.setState(prev => ({\r\n      formData: { ...prev.formData, [field]: value }\r\n    }));\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { editingId, formData, quotes } = this.state;\r\n    if (!formData.customer) return alert(\"Customer is required\");\r\n    if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\r\n\r\n    if (editingId) {\r\n      await updateDoc(doc(db, 'quotes', editingId), formData);\r\n    } else {\r\n      formData.quoteNo = `QT${1000 + quotes.length}`;\r\n      await addDoc(collection(db, 'quotes'), formData);\r\n    }\r\n    this.setState({ showForm: false, editingId: null });\r\n    this.fetchQuotes();\r\n  };\r\nloadQuotePreview = (q) => {\r\n  this.setState({\r\n    selectedQuote: q,\r\n    previewMode: true\r\n  });\r\n};\r\ngetTaxPercentage = (taxId) => {\r\n  if (!taxId || taxId === 'nill') return 0;\r\n  const tax = this.state.taxComponents.find(tc => tc.id === taxId);\r\n  return tax?.percentage || 0;\r\n};\r\n\r\n\r\n  loadQuoteForEdit = (quote) => {\r\n    this.setState({\r\n      formData: {\r\n        ...quote,\r\n        lineItems: Array.isArray(quote.lineItems) ? quote.lineItems : [] // Ensure array\r\n      },\r\n      editingId: quote.id,\r\n      showForm: true,\r\n      previewMode: false,\r\n      activeTab: 'co'\r\n    }, () => {\r\n      if (this.customerInputRef.current) {\r\n        this.customerInputRef.current.value = quote.customer;\r\n      }\r\n    });\r\n  };\r\nconvertToOrder = (quote) => {\r\n  // Save quote in sessionStorage (or navigate with state via router if you use react-router)\r\n  sessionStorage.setItem('quoteToConvert', JSON.stringify(quote));\r\n this.props.history.push('/panelone/Order');\r\n};\r\n// ✅ FULL UPDATED PDF FUNCTION — showQuotePDFWithOrg()\r\n\r\nshowQuotePDFWithOrg = async (quote) => {\r\n  if (!quote || !Array.isArray(quote.lineItems) || quote.lineItems.length === 0) {\r\n    alert(\"Quote data is incomplete.\");\r\n    return;\r\n  }\r\n\r\n  const orgSnap = await getDocs(collection(db, 'businessGroups'));\r\n  const org = orgSnap.docs[0]?.data() || {};\r\n  const customer = this.state.customers.find(c => c.custshortName === quote.customer) || {};\r\n\r\n  const enrichedItems = quote.lineItems.map(item => {\r\n    const product = this.state.products.find(p => p.productId === item.itemCode) || {};\r\n    const taxGroup = this.state.taxGroups.find(tg => tg.groupName === item.taxGroupName);\r\n    let cgst = 0, sgst = 0, igst = 0;\r\n\r\n    if (taxGroup) {\r\n      taxGroup.lineItems.forEach(l => {\r\n        if (l.component.toLowerCase().includes('cgst')) cgst += parseFloat(l.percentOrAmt || 0);\r\n        if (l.component.toLowerCase().includes('sgst')) sgst += parseFloat(l.percentOrAmt || 0);\r\n        if (l.component.toLowerCase().includes('igst')) igst += parseFloat(l.percentOrAmt || 0);\r\n      });\r\n    }\r\n\r\n    return {\r\n      ...item,\r\n      ptshortName: product.ptshortName || '',\r\n      hsnCode: product.hsnCode || '',\r\n      uom: product.stockingUOM || '',\r\n      cgst, sgst, igst\r\n    };\r\n  });\r\n\r\n  const subtotal = enrichedItems.reduce((sum, i) => sum + (parseFloat(i.total) || 0), 0);\r\n  const tax = parseFloat(quote.taxAmount || 0);\r\n  const total = subtotal + tax;\r\n  const amountWords = `INR ${numberToWords(Math.floor(total))} Only`;\r\n\r\n  const container = document.createElement('div');\r\n  container.id = 'pdf-preview-container';\r\n  container.style.width = '794px';\r\n  container.style.padding = '40px';\r\n  container.style.fontFamily = 'Arial';\r\n  container.innerHTML = `\r\n    <div style=\"display:flex; justify-content:space-between; align-items:center;\">\r\n      <img src=\"${org.logoUrl || ''}\" style=\"height:50px;\" />\r\n      <div style=\"font-size:18px; font-weight:bold;\">QUOTATION</div>\r\n    </div>\r\n    <hr/>\r\n    <div style=\"display:flex; justify-content:space-between; font-size:11px;\">\r\n      <div style=\"line-height:1.5; width:50%;\">\r\n        <b>${org.bgName || ''}</b><br/>\r\n        ${org.address || ''}<br/>\r\n        <b>Email:</b> ${org.email || ''}<br/>\r\n        <b>Website:</b> ${org.website || ''}<br/>\r\n        <b>GSTIN:</b> ${org.gstin || ''}\r\n      </div>\r\n      <table style=\"font-size:11px; text-align:left;\">\r\n        <tr><td><b>Quote No</b></td><td>: ${quote.quoteNo}</td></tr>\r\n        <tr><td><b>Quote Date</b></td><td>: ${quote.quoteDate}</td></tr>\r\n        <tr><td><b>Currency</b></td><td>: ${quote.currency || 'INR'}</td></tr>\r\n        <tr><td><b>Despatch</b></td><td>: ${quote.despatchMode || ''}</td></tr>\r\n      </table>\r\n    </div>\r\n\r\n    <div style=\"margin-top:15px; display:flex; justify-content:space-between; font-size:11px;\">\r\n      <div style=\"width:48%;\">\r\n        <b style=\"background:#011b56; color:#fff; display:block; padding:4px;\">Bill To</b>\r\n        <div style=\"border:1px solid #ccc; padding:6px;\">\r\n         <b>${quote.customer || ''}</b><br/>\r\n          ${quote.billTo?.replace(/\\n/g, '<br/>') || ''}\r\n        </div>\r\n        <div style=\"font-size:10px; margin-top:6px;\">\r\n            <b>GSTIN:</b> ${customer.gstin || ''}<br/>\r\n            <b>Email:</b> ${customer.email || ''}<br/>\r\n            <b>Contact:</b> ${customer.contactPerson || ''}<br/>\r\n            <b>Phone:</b> ${customer.phone || ''}\r\n        </div>\r\n      </div>\r\n      <div style=\"width:48%;\">\r\n        <b style=\"background:#011b56; color:#fff; display:block; padding:4px;\">Ship To</b>\r\n        <div style=\"border:1px solid #ccc; padding:6px;\">\r\n         <b>${quote.customer || ''}</b><br/>\r\n          ${quote.shipTo?.replace(/\\n/g, '<br/>') || ''}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <table style=\"width:100%; border-collapse:collapse; margin-top:20px; font-size:10px;\">\r\n      <thead>\r\n        <tr style=\"background:#f4f6fa;\">\r\n          <th style=\"border:1px solid #011b56;\">Item Code</th>\r\n          <th style=\"border:1px solid #011b56;\">Short</th>\r\n          <th style=\"border:1px solid #011b56;\">Description</th>\r\n          <th style=\"border:1px solid #011b56;\">HSN</th>\r\n          <th style=\"border:1px solid #011b56;\">UOM</th>\r\n          <th style=\"border:1px solid #011b56;\">Qty</th>\r\n          <th style=\"border:1px solid #011b56;\">Unit Price</th>\r\n          <th style=\"border:1px solid #011b56;\">CGST%</th>\r\n          <th style=\"border:1px solid #011b56;\">SGST%</th>\r\n          <th style=\"border:1px solid #011b56;\">IGST%</th>\r\n          <th style=\"border:1px solid #011b56;\">Total</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        ${enrichedItems.map(item => `\r\n          <tr>\r\n            <td style=\"border:1px solid #011b56;\">${item.itemCode}</td>\r\n            <td style=\"border:1px solid #011b56;\">${item.ptshortName}</td>\r\n            <td style=\"border:1px solid #011b56;\">${item.itemDescription}</td>\r\n            <td style=\"border:1px solid #011b56;\">${item.hsnCode}</td>\r\n            <td style=\"border:1px solid #011b56;\">${item.uom}</td>\r\n            <td style=\"border:1px solid #011b56;\">${item.qty}</td>\r\n            <td style=\"border:1px solid #011b56;\">${item.unitPrice}</td>\r\n            <td style=\"border:1px solid #011b56;\">${item.cgst || '-'}</td>\r\n            <td style=\"border:1px solid #011b56;\">${item.sgst || '-'}</td>\r\n            <td style=\"border:1px solid #011b56;\">${item.igst || '-'}</td>\r\n            <td style=\"border:1px solid #011b56;\">${item.total}</td>\r\n          </tr>`).join('')}\r\n        <tr><td colspan=\"10\" style=\"text-align:right; border:1px solid #011b56;\">Subtotal</td><td style=\"border:1px solid #011b56;\">${subtotal.toFixed(2)}</td></tr>\r\n        <tr><td colspan=\"10\" style=\"text-align:right; border:1px solid #011b56;\">Tax</td><td style=\"border:1px solid #011b56;\">${tax.toFixed(2)}</td></tr>\r\n        <tr><td colspan=\"10\" style=\"text-align:right; border:1px solid #011b56;\"><b>Total</b></td><td style=\"border:1px solid #011b56;\"><b>${total.toFixed(2)}</b></td></tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <div style=\"margin-top:8px; font-size:11px;\"><b>Amount in Words:</b> ${amountWords}</div>\r\n    <div style=\"text-align:right; font-size:11px; margin-top:30px;\">For ${org.bgName}<br/><br/><br/>Authorized Signatory</div>\r\n    <div style=\"margin-top:20px; text-align:right; font-size:10px;\">Printed on ${new Date().toLocaleString()}</div>\r\n  `;\r\n\r\n  document.body.appendChild(container);\r\n  const canvas = await html2canvas(container, { scale: 2, useCORS: true });\r\n  const imgData = canvas.toDataURL('image/png');\r\n  const pdf = new jsPDF('p', 'pt', 'a4');\r\n  const width = 595.28;\r\n  const height = canvas.height * width / canvas.width;\r\n  pdf.addImage(imgData, 'PNG', 0, 0, width, height);\r\n\r\n  const blob = pdf.output('blob');\r\n  const url = URL.createObjectURL(blob);\r\n  const newWin = window.open();\r\n  newWin.document.write(`\r\n    <html><head><title>Quote PDF Preview</title></head>\r\n    <body style=\"margin:0;\">\r\n      <iframe width=\"100%\" height=\"100%\" style=\"border:none;\" src=\"${url}\"></iframe>\r\n      <button onclick=\"document.querySelector('iframe').contentWindow.print()\" style=\"position:fixed;top:10px;right:110px;\"></button>\r\n      <a href=\"${url}\" download=\"Quote_${quote.quoteNo || 'PDF'}.pdf\" style=\"position:fixed;top:10px;right:10px;\"></a>\r\n    </body></html>\r\n  `);\r\n  newWin.document.close();\r\n  document.body.removeChild(container);\r\n};\r\n\r\nrenderTaxOverlay = () => {\r\n  const { taxGroups, currentTaxLineIdx } = this.state;\r\n  if (currentTaxLineIdx === null) return null;\r\n\r\n  const item = this.state.formData.lineItems[currentTaxLineIdx];\r\n  const selected = new Set(item.taxGroupNames || []);\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'absolute',\r\n      zIndex: 999,\r\n      top: '20%',\r\n      left: '30%',\r\n      background: '#fff',\r\n      border: '1px solid #ccc',\r\n      padding: '15px',\r\n      maxHeight: '400px',\r\n      overflowY: 'auto',\r\n      width: '400px'\r\n    }}>\r\n      <h6>Select Tax Groups</h6>\r\n      <table className=\"table table-sm table-bordered\">\r\n        <thead>\r\n          <tr><th></th><th>Group</th><th>Type</th><th>%</th></tr>\r\n        </thead>\r\n        <tbody>\r\n          {taxGroups.map(tg => (\r\n            <tr key={tg.groupName}>\r\n              <td>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selected.has(tg.groupName)}\r\n                  onChange={e => this.toggleTaxGroupSelection(tg.groupName, currentTaxLineIdx, e.target.checked)}\r\n                />\r\n              </td>\r\n              <td>{tg.groupName}</td>\r\n              <td>{tg.lineItems.map(li => li.component).join(', ')}</td>\r\n              <td>{tg.lineItems.map(li => li.percentOrAmt).join(', ')}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"text-right\">\r\n        <button className=\"btn btn-sm btn-secondary\" onClick={() => this.setState({ showTaxOverlay: false })}>Close</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ntoggleTaxGroupSelection = (groupName, lineIdx, isChecked) => {\r\n  const formData = { ...this.state.formData };\r\n  const item = formData.lineItems[lineIdx];\r\n\r\n  if (!item.taxGroupNames) item.taxGroupNames = [];\r\n\r\n  if (isChecked) {\r\n    if (!item.taxGroupNames.includes(groupName)) {\r\n      item.taxGroupNames.push(groupName);\r\n    }\r\n  } else {\r\n    item.taxGroupNames = item.taxGroupNames.filter(g => g !== groupName);\r\n  }\r\n\r\n  // Compute tax breakdown\r\n  let cgst = 0, sgst = 0, igst = 0;\r\n  item.taxGroupNames.forEach(gname => {\r\n    const tg = this.state.taxGroups.find(t => t.groupName === gname);\r\n    if (tg) {\r\n      tg.lineItems.forEach(l => {\r\n        const comp = l.component.toLowerCase();\r\n        const val = parseFloat(l.percentOrAmt || 0);\r\n        if (comp.includes('cgst')) cgst += val;\r\n        if (comp.includes('sgst')) sgst += val;\r\n        if (comp.includes('igst')) igst += val;\r\n      });\r\n    }\r\n  });\r\n\r\n  item.cgst = cgst;\r\n  item.sgst = sgst;\r\n  item.igst = igst;\r\n\r\n  this.setState({ formData });\r\n};\r\n\r\n\r\n  showOverlay = (type) => this.setState({ overlayType: type, overlaySearch: '' });\r\n  hideOverlay = () => this.setState({ overlayType: '', overlaySearch: '' });\r\n\r\n\r\n  selectOverlayValue = (value) => {\r\n    if (this.state.overlayType === 'customer') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          customer: value.custname || value.custcode || '', // Use custname or custcode\r\n          billTo: this.formatAddress(value.billTo),\r\n          shipTo: this.formatAddress(value.shipTo),\r\n          currency: value.currency || '',\r\n          // despatchMode: value.despatchMode || '', // No auto-fill for despatch mode\r\n          // paymentTerms: value.paymentTerms || '' // No auto-fill for payment terms\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }), () => {\r\n        if (this.customerInputRef.current) {\r\n          this.customerInputRef.current.value = value.custname || value.custcode || '';\r\n        }\r\n      });\r\n    }\r\n  };\r\nrenderTaxOverlay = () => {\r\n  const { taxGroups, currentTaxLineIdx, formData } = this.state;\r\n  if (currentTaxLineIdx === null) return null;\r\n\r\n  const item = formData.lineItems[currentTaxLineIdx];\r\n  const selected = new Set(item.taxGroupNames || []);\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed',\r\n      zIndex: 9999,\r\n      top: '15%',\r\n      left: '30%',\r\n      background: '#fff',\r\n      border: '1px solid #ccc',\r\n      padding: '20px',\r\n      boxShadow: '0 0 10px rgba(0,0,0,0.3)',\r\n      width: '500px',\r\n      maxHeight: '60vh',\r\n      overflowY: 'auto'\r\n    }}>\r\n      <h5>Select Tax Groups</h5>\r\n      <table className=\"table table-sm table-bordered\">\r\n        <thead>\r\n          <tr><th></th><th>Group</th><th>Type</th><th>%</th></tr>\r\n        </thead>\r\n        <tbody>\r\n          {taxGroups.map(tg => (\r\n            <tr key={tg.groupName}>\r\n              <td>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selected.has(tg.groupName)}\r\n                  onChange={e => this.toggleTaxGroupSelection(tg.groupName, currentTaxLineIdx, e.target.checked)}\r\n                />\r\n              </td>\r\n              <td>{tg.groupName}</td>\r\n              <td>{tg.lineItems.map(li => li.component).join(', ')}</td>\r\n              <td>{tg.lineItems.map(li => li.percentOrAmt).join(', ')}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"text-right mt-2\">\r\n        <button className=\"btn btn-sm btn-primary\" onClick={() => this.setState({ showTaxOverlay: false })}>\r\n          Done\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n renderOverlay = () => {\r\n  const { overlayType, overlaySearch, customers, despatchModes, paymentTerms } = this.state;\r\n\r\n  const getFilteredRows = (list, nameKey = 'name', codeKey = 'shortName') =>\r\n    list.filter(item =>\r\n      (item[nameKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()) ||\r\n      (item[codeKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase())\r\n    );\r\n\r\n  const handleSelect = (item) => {\r\n    if (overlayType === 'customer') {\r\n      this.selectOverlayValue(item);\r\n    } else if (overlayType === 'despatchMode') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          despatchMode: item.name\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }));\r\n    } else if (overlayType === 'paymentTerms') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          paymentTerms: item.name\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  let title = '';\r\n  let headers = [];\r\n  let rows = [];\r\n\r\n  if (overlayType === 'customer') {\r\n    title = 'Select Customer';\r\n    headers = ['Name', 'Code', 'Short Name'];\r\n    rows = getFilteredRows(customers, 'custname', 'custcode');\r\n  } else if (overlayType === 'despatchMode') {\r\n    title = 'Select Despatch Mode';\r\n    headers = ['Name', 'Short Name'];\r\n    rows = getFilteredRows(despatchModes);\r\n  } else if (overlayType === 'paymentTerms') {\r\n    title = 'Select Payment Terms';\r\n    headers = ['Name', 'Short Name'];\r\n    rows = getFilteredRows(paymentTerms);\r\n  } else {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"custom-overlay\">\r\n      <div className=\"custom-overlay-content\">\r\n        <div className=\"custom-overlay-title\">{title}</div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control mb-2\"\r\n          placeholder={`Search ${overlayType}...`}\r\n          value={overlaySearch}\r\n          onChange={e => this.setState({ overlaySearch: e.target.value })}\r\n        />\r\n        <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n          <table className=\"table table-bordered table-sm\">\r\n            <thead>\r\n              <tr>\r\n                {headers.map((h, i) => <th key={i}>{h}</th>)}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {rows.map((item, i) => (\r\n                <tr key={item.id || i} onClick={() => handleSelect(item)} style={{ cursor: 'pointer' }}>\r\n                  {headers.map((h, j) => (\r\n                    <td key={j}>\r\n                      {overlayType === 'customer'\r\n                        ? h === 'Name' ? item.custname\r\n                          : h === 'Code' ? item.custcode\r\n                          : item.custshortName\r\n                        : h === 'Name' ? item.name\r\n                          : item.shortName}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n              {rows.length === 0 && (\r\n                <tr>\r\n                  <td colSpan={headers.length} className=\"text-center\">No records found</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <button className=\"btn btn-secondary btn-sm mt-2\" onClick={this.hideOverlay}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n  renderProductOverlay = () => {\r\n    const { products, productOverlaySearch, selectedProductIds } = this.state;\r\n    const filtered = products.filter(p =>\r\n      (p.ptshortName || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) ||\r\n      (p.ptdescription || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) ||\r\n      (p.itemCode || '').toLowerCase().includes(productOverlaySearch.toLowerCase())\r\n    );\r\n    return (\r\n      <div className=\"custom-overlay\">\r\n        <div className=\"custom-overlay-content\">\r\n          <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n            <div className=\"custom-overlay-title\">Select Products</div>\r\n            <button\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => {\r\n                const selectedProducts = products.filter(p => this.state.selectedProductIds.includes(p.id));\r\n                this.setState(prev => ({\r\n                  formData: {\r\n                    ...prev.formData,\r\n                    lineItems: [\r\n                      ...prev.formData.lineItems,\r\n                      ...selectedProducts\r\n                        .filter(p => !prev.formData.lineItems.some(item => item.id === p.id))\r\n                        .map(p => ({\r\n                          id: p.id,\r\n                          itemCode: p.productId || '',\r\n                          itemDescription: p.ptdescription || '',\r\n                          itemType: p.itemType || '',\r\n                          materialType: p.materialType || '',\r\n                          onHand: p.onHand || 0,\r\n                          taxGroup: p.taxGroup || '',\r\n                          custPartNo: p.custPartNo || '', // Assuming this is cust part table\r\n                          hsnNo: p.hsnNo || '', // Assuming HSN No.\r\n                          unitPrice: p.unitPrice || 0,\r\n                          qty: 1,\r\n                          total: (p.unitPrice || 0).toFixed(2)\r\n                        }))\r\n                    ]\r\n                  },\r\n                  productOverlayVisible: false,\r\n                  selectedProductIds: []\r\n                }));\r\n              }}\r\n            >Add Selected</button>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Search products...\"\r\n            value={productOverlaySearch}\r\n            onChange={e => this.setState({ productOverlaySearch: e.target.value })}\r\n          />\r\n          <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n            <table className=\"table table-bordered table-sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th></th>\r\n                  <th>Item Code</th>\r\n                  <th>Item Desc</th>\r\n                  <th>Item Type</th>\r\n                  <th>Material Type</th>\r\n                  <th>On Hand</th>\r\n                  <th>Tax Grp</th>\r\n                  <th>Cust Part No</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filtered.map(p => (\r\n                  <tr key={p.id}>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedProductIds.includes(p.id)}\r\n                        onChange={e => {\r\n                          const checked = e.target.checked;\r\n                          this.setState(prev => ({\r\n                            selectedProductIds: checked\r\n                              ? [...prev.selectedProductIds, p.id]\r\n                              : prev.selectedProductIds.filter(id => id !== p.id)\r\n                          }));\r\n                        }}\r\n                      />\r\n                    </td>\r\n                    <td>{p.productId}</td>\r\n                    <td>{p.ptdescription || ''}</td>\r\n                    <td>{p.itemType || ''}</td>\r\n                    <td>{p.materialType || ''}</td>\r\n                    <td>{p.onHand || 0}</td>\r\n                    <td>{p.taxGroup || ''}</td>\r\n                    <td>{p.custPartNo || ''}</td>\r\n                  </tr>\r\n                ))}\r\n                {filtered.length === 0 && (\r\n                  <tr>\r\n                    <td colSpan=\"8\" className=\"text-center\">No products found</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          {/* Add pagination here if needed, for now, it's just a placeholder */}\r\n          <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n            <span>Page 1 of 1</span>\r\n            <button className=\"btn btn-secondary btn-sm\" onClick={() => this.setState({ productOverlayVisible: false, selectedProductIds: [] })}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n\r\n  renderQuoteTable = () => (\r\n    <div className=\"card mt-4 full-height\">\r\n      <div className=\"card-body\">\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n          <h4 className=\"card-title\">Quotes</h4>\r\n          <button className=\"btn btn-primary\" onClick={() => this.setState({ showForm: true })}>+ Add Quote</button>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-bordered table-hover\">\r\n            <thead className=\"thead-light\">\r\n              <tr style={{ fontSize: '14px' }}>\r\n                <th>Quote No</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Quote Value</th>\r\n                <th>Status</th>\r\n                <th>Print</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.quotes.map((q, i) => (\r\n                <tr key={i} style={{ fontSize: '14px' }}>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-link p-0\"\r\n                      onClick={() => this.loadQuotePreview(q)}\r\n                    >\r\n                      {q.quoteNo}\r\n                    </button>\r\n                  </td>\r\n                  <td>{q.customer}</td>\r\n                  <td>{q.quoteDate}</td>\r\n                  <td>{q.quoteValue}</td>\r\n                  <td><label className=\"badge badge-info\">{q.status}</label></td>\r\n                  <td>\r\n                  <i\r\n                    className=\"mdi mdi-printer menu-icon\"\r\n                    onClick={() => this.showQuotePDFWithOrg(q)}\r\n                    style={{ fontSize: '24px', color: '#2196F3', cursor: 'pointer' }}\r\n                  ></i>\r\n                </td>\r\n\r\n          \r\n                </tr>\r\n              ))}\r\n              {this.state.quotes.length === 0 && (\r\n                <tr><td colSpan=\"6\" className=\"text-center\">No quotes found.</td></tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  renderQuoteForm = () => {\r\n    const { formData, overlayType, productOverlayVisible ,showTaxOverlay,taxGroups} = this.state;\r\n    const isFOB = formData.impExp === 'FOB';\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"card full-height\">\r\n          <div style={{ flex: 1, overflowY: 'auto', padding: '24px' }}>\r\n            <h4 className=\"mb-3\">Quote Form</h4>\r\n            <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n              <li className=\"nav-item\">\r\n                <button type=\"button\" className={`nav-link ${this.state.activeTab === 'co' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'co' })}>CO Details</button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <button type=\"button\" className={`nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'commercial' })}>Commercial Terms</button>\r\n              </li>\r\n            </ul>\r\n            <form className=\"form-sample\" onSubmit={this.handleSubmit}>\r\n              <div className=\"tab-content pt-3\">\r\n                {this.state.activeTab === 'co' && (\r\n                  <>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Quote No</label>\r\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={formData.quoteNo} onChange={(e) => this.handleInputChange('quoteNo', e.target.value)} />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Quote Date</label>\r\n                        <input type=\"date\" className=\"form-control form-control-sm\" value={formData.quoteDate} onChange={(e) => this.handleInputChange('quoteDate', e.target.value)} />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Quote Type</label>\r\n                        <select className=\"form-control form-control-sm\" value={formData.quoteType} onChange={(e) => this.handleInputChange('quoteType', e.target.value)}>\r\n                          <option>Standard</option>\r\n                          <option>Manual</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Status</label>\r\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={formData.status}   style={{ backgroundColor: '#fff' }} readOnly />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Customer</label>\r\n                        <div className=\"input-group input-group-sm\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Choose Customer\"\r\n                            ref={this.customerInputRef}\r\n                            value={formData.customer}\r\n                            readOnly\r\n                            onClick={() => this.showOverlay('customer')}\r\n                            style={{ cursor: 'pointer' }}\r\n                          />\r\n                          <div className=\"input-group-append\">\r\n                            <button className=\"btn btn-outline-secondary btn-sm\" type=\"button\" onClick={() => this.showOverlay('customer')}>Select</button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>IMP/EXP</label>\r\n                        <select\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.impExp}\r\n                          onChange={(e) => this.handleInputChange('impExp', e.target.value)}\r\n                        >\r\n                          <option>None</option>\r\n                          <option>COB</option>\r\n                          <option>FOB</option>\r\n                          <option>CIF</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group col-md-2\">\r\n                        <label>Ref No.</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.qrefNo}\r\n                          onChange={(e) => this.handleInputChange('qrefNo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Choose</label>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"form-check mr-4\">\r\n                            <input type=\"radio\" className=\"form-check-input\" name=\"choose\" id=\"chooseService\" value=\"Service\" checked={formData.choose === 'Service'} onChange={(e) => this.handleInputChange('choose', e.target.value)} />\r\n                            <label className=\"form-check-label\" htmlFor=\"chooseService\">Service</label>\r\n                          </div>\r\n                          <div className=\"form-check\">\r\n                            <input type=\"radio\" className=\"form-check-input\" name=\"choose\" id=\"chooseProduct\" value=\"Product\" checked={formData.choose === 'Product'} onChange={(e) => this.handleInputChange('choose', e.target.value)} />\r\n                            <label className=\"form-check-label\" htmlFor=\"chooseProduct\">Product</label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Currency</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.currency}\r\n                          style={{ backgroundColor: '#fff' }}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Conversion Rate</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.conversionRate}\r\n                          onChange={(e) => this.handleInputChange('conversionRate', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Tax Amount</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxAmount}\r\n                          onChange={(e) => this.handleInputChange('taxAmount', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Quote Value</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.quoteValue}\r\n                          onChange={(e) => this.handleInputChange('quoteValue', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                   \r\n                          <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                            <h4 className=\"card-title\">Line Item</h4>\r\n                            <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={() => this.setState({ productOverlayVisible: true })}>\r\n                              + Add Product\r\n                            </button>\r\n                          </div>\r\n                       <div className=\"table-responsive\">\r\n        <table className=\"table table-bordered\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>Item Code</th>\r\n              <th>Item Desc</th>\r\n              <th>Cust Part No</th>\r\n              <th>HSN No</th>\r\n              <th>UOM</th>\r\n              <th>On Hand</th>\r\n              <th>Unit Price</th>\r\n              <th>Quantity</th>\r\n              <th>Tax Id</th>\r\n              <th>Item Total</th>\r\n              <th>Tax Amt</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {formData.lineItems.map((item, idx) => {\r\n              const itemTotal = item.unitPrice * item.qty;\r\n              const taxDetails = this.getTaxDetailsFromGroup(item.taxGroupName);\r\n              const taxAmt = (itemTotal * taxDetails.totalPercent / 100) + (itemTotal * taxDetails.totalAmount);\r\n              const totalWithTax = itemTotal + taxAmt;\r\n             \r\n              \r\n              return (\r\n                <tr key={item.id || idx}>\r\n                  <td>{item.itemCode}</td>\r\n                  <td>{item.itemDescription}</td>\r\n                  <td>{item.custPartNo}</td>\r\n                  <td>{item.hsnNo}</td>\r\n                  <td>{item.uom}</td>\r\n                  <td>{item.onHand}</td>\r\n                  <td>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={item.unitPrice}\r\n                      onChange={e => this.handleLineItemChange(idx, 'unitPrice', e.target.value)}\r\n                      style={{ width: 80 }}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      value={item.qty}\r\n                      onChange={e => this.handleLineItemChange(idx, 'qty', e.target.value)}\r\n                      style={{ width: 60 }}\r\n                    />\r\n                  </td>\r\n                 <td>\r\n                <button\r\n                  className=\"btn btn-outline-secondary btn-rounded btn-icon\"\r\n                  onClick={() => this.setState({ showTaxOverlay: true, currentTaxLineIdx: idx })}\r\n                >\r\n                  <i className=\"mdi mdi-plus text-primary\"></i>\r\n                </button>\r\n                <div style={{ fontSize: '13px', marginTop: '4px' }}>\r\n                  {(item.taxGroupNames || []).join(', ') || '-'}\r\n                </div>\r\n              </td>\r\n\r\n                  <td>{totalWithTax.toFixed(2)}</td>\r\n                  <td>{taxAmt.toFixed(2)}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {showTaxOverlay && this.renderTaxOverlay()}\r\n\r\n                          {/* Add pagination for line items here if needed */}\r\n                          <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n                            <span>Page 1 of 1</span>\r\n                          </div>\r\n                      \r\n                  </>\r\n                )}\r\n                {this.state.activeTab === 'commercial' && (\r\n                  <>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-6\">\r\n                        <label>Bill To</label>\r\n                        <textarea\r\n                          className=\"form-control form-control-sm\"\r\n                          rows=\"3\"\r\n                          value={formData.billTo}\r\n                          onChange={(e) => this.handleInputChange('billTo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-6\">\r\n                        <label>Ship To</label>\r\n                        <textarea\r\n                          className=\"form-control form-control-sm\"\r\n                          rows=\"3\"\r\n                          value={formData.shipTo}\r\n                          onChange={(e) => this.handleInputChange('shipTo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-4\">\r\n  <label>Despatch Mode</label>\r\n  <div className=\"input-group input-group-sm\">\r\n    <input\r\n      type=\"text\"\r\n      className=\"form-control\"\r\n      value={formData.despatchMode}\r\n      readOnly\r\n      onClick={() => !isFOB && this.showOverlay('despatchMode')}\r\n      style={{ cursor: isFOB ? 'not-allowed' : 'pointer', backgroundColor: '#fff' }}\r\n    />\r\n    <div className=\"input-group-append\">\r\n      <button\r\n        className=\"btn btn-outline-secondary btn-sm\"\r\n        type=\"button\"\r\n        disabled={isFOB}\r\n        onClick={() => this.showOverlay('despatchMode')}\r\n      >\r\n        Select\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div className=\"form-group col-md-4\">\r\n  <label>Payment Terms</label>\r\n  <div className=\"input-group input-group-sm\">\r\n    <input\r\n      type=\"text\"\r\n      className=\"form-control\"\r\n      value={formData.paymentTerms}\r\n      readOnly\r\n      onClick={() => !isFOB && this.showOverlay('paymentTerms')}\r\n      style={{ cursor: isFOB ? 'not-allowed' : 'pointer', backgroundColor: '#fff' }}\r\n    />\r\n    <div className=\"input-group-append\">\r\n      <button\r\n        className=\"btn btn-outline-secondary btn-sm\"\r\n        type=\"button\"\r\n        disabled={isFOB}\r\n        onClick={() => this.showOverlay('paymentTerms')}\r\n      >\r\n        Select\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Freight Charges</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.freightCharges}\r\n                          onChange={(e) => this.handleInputChange('freightCharges', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Tax %</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxPercent}\r\n                          onChange={(e) => this.handleInputChange('taxPercent', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Freight Tax Amount</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxAmount}\r\n                          onChange={(e) => this.handleInputChange('freighttaxAmount', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Packing Charges</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.packingCharges}\r\n                          onChange={(e) => this.handleInputChange('packingCharges', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </>\r\n                )}\r\n                \r\n\r\n              </div>\r\n              <div className=\"fixed-card-footer text-right p-3 border-top bg-white\">\r\n                <button type=\"submit\" className=\"btn btn-success mr-2\">Save All Details</button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => this.setState({ showForm: false, editingId: null })}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n            {overlayType && this.renderOverlay()}\r\n            {productOverlayVisible && this.renderProductOverlay()}\r\n            {this.state.showTaxOverlay && this.renderTaxOverlay()}\r\n\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\nrenderQuotePreview = () => {\r\n  const q = this.state.selectedQuote;\r\n  if (!q) return null;\r\n\r\n  return (\r\n    <div className=\"card mt-4 full-height p-4\">\r\n      <div className=\"d-flex justify-content-between mb-3\">\r\n        <h4 className=\"card-title\">Quote Preview - {q.quoteNo}</h4>\r\n        <div>\r\n          <button className=\"btn btn-sm btn-info mr-2\" onClick={() => this.loadQuoteForEdit(q)}>Edit</button>\r\n          <button className=\"btn btn-sm btn-success\" onClick={() => this.convertToOrder(q)}>Convert to Order</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\"><b>Customer:</b> {q.customer}</div>\r\n        <div className=\"col-md-4\"><b>Date:</b> {q.quoteDate}</div>\r\n        <div className=\"col-md-4\"><b>Status:</b> {q.status}</div>\r\n      </div>\r\n      <div className=\"row mt-2\">\r\n        <div className=\"col-md-6\"><b>Bill To:</b><br />{q.billTo}</div>\r\n        <div className=\"col-md-6\"><b>Ship To:</b><br />{q.shipTo}</div>\r\n      </div>\r\n      <h5 className=\"mt-4\">Line Items</h5>\r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>Item Code</th><th>Description</th><th>Qty</th><th>Unit Price</th><th>Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {q.lineItems?.map((item, i) => (\r\n            <tr key={i}>\r\n              <td>{item.itemCode}</td>\r\n              <td>{item.itemDescription}</td>\r\n              <td>{item.qty}</td>\r\n              <td>{item.unitPrice}</td>\r\n              <td>{item.total}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"text-right\"><b>Total:</b> {q.quoteValue}</div>\r\n      <button className=\"btn btn-secondary mt-3\" onClick={() => this.setState({ previewMode: false })}>Back to List</button>\r\n    </div>\r\n  );\r\n};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        {this.state.previewMode? this.renderQuotePreview(): this.state.showForm ? this.renderQuoteForm() : this.renderQuoteTable()}\r\n         {this.state.showTaxOverlay && this.renderTaxOverlay()}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Quote);\r\n"]},"metadata":{},"sourceType":"module"}