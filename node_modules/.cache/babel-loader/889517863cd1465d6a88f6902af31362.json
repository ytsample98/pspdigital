{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\crm\\\\Datalist.js\";\nimport React, { Component } from \"react\";\nimport { Modal, Button, Table, Form } from \"react-bootstrap\";\nimport { db } from \"../../firebase\";\nimport { collection, getDocs, addDoc, updateDoc, doc } from \"firebase/firestore\";\n\nclass Datalist extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      accounts: [],\n      showModal: false,\n      selectedAccount: null,\n      contactPersons: []\n    };\n\n    this.fetchAccounts = async () => {\n      const snap = await getDocs(collection(db, \"accounts\"));\n      const accounts = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        accounts\n      });\n    };\n\n    this.handleTableChange = async (id, field, value) => {\n      const accounts = this.state.accounts.map(acc => acc.id === id ? { ...acc,\n        [field]: value\n      } : acc);\n      this.setState({\n        accounts\n      });\n      const acc = accounts.find(a => a.id === id);\n      if (id.startsWith(\"temp-\")) return; // don't update Firestore until saved\n\n      await updateDoc(doc(db, \"accounts\", id), acc);\n    };\n\n    this.addAccount = () => {\n      const newAcc = {\n        id: \"temp-\" + Date.now(),\n        // temporary ID until saved\n        acno: \"\",\n        acname: \"\",\n        contact: \"\",\n        country: \"\",\n        state: \"\",\n        city: \"\",\n        email: \"\",\n        website: \"\",\n        phone: \"\",\n        contactPersons: []\n      };\n      this.setState({\n        accounts: [...this.state.accounts, newAcc]\n      });\n    };\n\n    this.saveNewAccount = async account => {\n      const {\n        id,\n        ...data\n      } = account;\n      const docRef = await addDoc(collection(db, \"accounts\"), data);\n      this.setState(prev => ({\n        accounts: prev.accounts.map(a => a.id === id ? { ...data,\n          id: docRef.id\n        } : a)\n      }));\n    };\n\n    this.openModal = account => {\n      this.setState({\n        showModal: true,\n        selectedAccount: { ...account\n        },\n        contactPersons: account.contactPersons || []\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        showModal: false,\n        selectedAccount: null,\n        contactPersons: []\n      });\n    };\n\n    this.handleModalChange = (field, value) => {\n      this.setState({\n        selectedAccount: { ...this.state.selectedAccount,\n          [field]: value\n        }\n      });\n    };\n\n    this.handleContactPersonChange = (index, field, value) => {\n      const cps = [...this.state.contactPersons];\n      cps[index][field] = value;\n      this.setState({\n        contactPersons: cps\n      });\n    };\n\n    this.addContactPerson = () => {\n      this.setState({\n        contactPersons: [...this.state.contactPersons, {\n          name: \"\",\n          designation: \"\",\n          phone: \"\",\n          mail: \"\",\n          linkedin: \"\"\n        }]\n      });\n    };\n\n    this.saveModal = async () => {\n      const {\n        selectedAccount,\n        contactPersons\n      } = this.state;\n      const updatedAcc = { ...selectedAccount,\n        contactPersons\n      };\n\n      if (updatedAcc.id.startsWith(\"temp-\")) {\n        // save new account\n        await this.saveNewAccount(updatedAcc);\n      } else {\n        // update existing account\n        await updateDoc(doc(db, \"accounts\", updatedAcc.id), updatedAcc);\n      }\n\n      this.fetchAccounts();\n      this.closeModal();\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAccounts();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, \"Account Data List\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.addAccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, \"+ Add Account\")), /*#__PURE__*/React.createElement(Table, {\n      bordered: true,\n      hover: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, \"a/c No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, \"a/c Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, \"Contact\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, \"Country\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, \"Website\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, \"Phone\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, \"More\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, this.state.accounts.map(acc => /*#__PURE__*/React.createElement(\"tr\", {\n      key: acc.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, [\"acno\", \"acname\", \"contact\", \"country\", \"state\", \"city\", \"email\", \"website\", \"phone\"].map(field => /*#__PURE__*/React.createElement(\"td\", {\n      key: field,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      value: acc[field] || \"\",\n      onChange: e => this.handleTableChange(acc.id, field, e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      size: \"sm\",\n      onClick: () => this.openModal(acc),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    }, \"More\")))))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showModal,\n      onHide: this.closeModal,\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, \"More Details\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }, this.state.selectedAccount && /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 19\n      }\n    }, \"a/c Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      value: this.state.selectedAccount.acname || \"\",\n      onChange: e => this.handleModalChange(\"acname\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n      value: this.state.selectedAccount.email || \"\",\n      onChange: e => this.handleModalChange(\"email\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, \"Contact Persons\"), this.state.contactPersons.map((cp, i) => /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: \"mb-3 p-2 border rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Name\",\n      value: cp.name,\n      onChange: e => this.handleContactPersonChange(i, \"name\", e.target.value),\n      className: \"mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Designation\",\n      value: cp.designation,\n      onChange: e => this.handleContactPersonChange(i, \"designation\", e.target.value),\n      className: \"mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Phone\",\n      value: cp.phone,\n      onChange: e => this.handleContactPersonChange(i, \"phone\", e.target.value),\n      className: \"mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Mail\",\n      value: cp.mail,\n      onChange: e => this.handleContactPersonChange(i, \"mail\", e.target.value),\n      className: \"mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"LinkedIn\",\n      value: cp.linkedin,\n      onChange: e => this.handleContactPersonChange(i, \"linkedin\", e.target.value),\n      className: \"mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.addContactPerson,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }\n    }, \"+ Add Contact Person\"))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.saveModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }\n    }, \"Cancel\"))));\n  }\n\n}\n\nexport default Datalist;","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/crm/Datalist.js"],"names":["React","Component","Modal","Button","Table","Form","db","collection","getDocs","addDoc","updateDoc","doc","Datalist","state","accounts","showModal","selectedAccount","contactPersons","fetchAccounts","snap","docs","map","id","data","setState","handleTableChange","field","value","acc","find","a","startsWith","addAccount","newAcc","Date","now","acno","acname","contact","country","city","email","website","phone","saveNewAccount","account","docRef","prev","openModal","closeModal","handleModalChange","handleContactPersonChange","index","cps","addContactPerson","name","designation","mail","linkedin","saveModal","updatedAcc","componentDidMount","render","e","target","cp","i"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Modal, Button, Table, Form } from \"react-bootstrap\";\r\nimport { db } from \"../../firebase\";  \r\nimport { collection, getDocs, addDoc, updateDoc, doc } from \"firebase/firestore\";\r\n\r\nclass Datalist extends Component {\r\n  state = {\r\n    accounts: [],\r\n    showModal: false,\r\n    selectedAccount: null,\r\n    contactPersons: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchAccounts();\r\n  }\r\n\r\n  fetchAccounts = async () => {\r\n    const snap = await getDocs(collection(db, \"accounts\"));\r\n    const accounts = snap.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ accounts });\r\n  };\r\n\r\n  handleTableChange = async (id, field, value) => {\r\n    const accounts = this.state.accounts.map((acc) =>\r\n      acc.id === id ? { ...acc, [field]: value } : acc\r\n    );\r\n    this.setState({ accounts });\r\n\r\n    const acc = accounts.find((a) => a.id === id);\r\n    if (id.startsWith(\"temp-\")) return; // don't update Firestore until saved\r\n    await updateDoc(doc(db, \"accounts\", id), acc);\r\n  };\r\n\r\n  addAccount = () => {\r\n    const newAcc = {\r\n      id: \"temp-\" + Date.now(), // temporary ID until saved\r\n      acno: \"\",\r\n      acname: \"\",\r\n      contact: \"\",\r\n      country: \"\",\r\n      state: \"\",\r\n      city: \"\",\r\n      email: \"\",\r\n      website: \"\",\r\n      phone: \"\",\r\n      contactPersons: [],\r\n    };\r\n    this.setState({ accounts: [...this.state.accounts, newAcc] });\r\n  };\r\n\r\n  saveNewAccount = async (account) => {\r\n    const { id, ...data } = account;\r\n    const docRef = await addDoc(collection(db, \"accounts\"), data);\r\n    this.setState((prev) => ({\r\n      accounts: prev.accounts.map((a) =>\r\n        a.id === id ? { ...data, id: docRef.id } : a\r\n      ),\r\n    }));\r\n  };\r\n\r\n  openModal = (account) => {\r\n    this.setState({\r\n      showModal: true,\r\n      selectedAccount: { ...account },\r\n      contactPersons: account.contactPersons || [],\r\n    });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ showModal: false, selectedAccount: null, contactPersons: [] });\r\n  };\r\n\r\n  handleModalChange = (field, value) => {\r\n    this.setState({\r\n      selectedAccount: { ...this.state.selectedAccount, [field]: value },\r\n    });\r\n  };\r\n\r\n  handleContactPersonChange = (index, field, value) => {\r\n    const cps = [...this.state.contactPersons];\r\n    cps[index][field] = value;\r\n    this.setState({ contactPersons: cps });\r\n  };\r\n\r\n  addContactPerson = () => {\r\n    this.setState({\r\n      contactPersons: [\r\n        ...this.state.contactPersons,\r\n        { name: \"\", designation: \"\", phone: \"\", mail: \"\", linkedin: \"\" },\r\n      ],\r\n    });\r\n  };\r\n\r\n  saveModal = async () => {\r\n    const { selectedAccount, contactPersons } = this.state;\r\n    const updatedAcc = { ...selectedAccount, contactPersons };\r\n\r\n    if (updatedAcc.id.startsWith(\"temp-\")) {\r\n      // save new account\r\n      await this.saveNewAccount(updatedAcc);\r\n    } else {\r\n      // update existing account\r\n      await updateDoc(doc(db, \"accounts\", updatedAcc.id), updatedAcc);\r\n    }\r\n\r\n    this.fetchAccounts();\r\n    this.closeModal();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container mt-4\">\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n          <h3>Account Data List</h3>\r\n          <Button variant=\"primary\" onClick={this.addAccount}>\r\n            + Add Account\r\n          </Button>\r\n        </div>\r\n\r\n        <Table bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>a/c No</th>\r\n              <th>a/c Name</th>\r\n              <th>Contact</th>\r\n              <th>Country</th>\r\n              <th>State</th>\r\n              <th>City</th>\r\n              <th>Email</th>\r\n              <th>Website</th>\r\n              <th>Phone</th>\r\n              <th>More</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.accounts.map((acc) => (\r\n              <tr key={acc.id}>\r\n                {[\"acno\", \"acname\", \"contact\", \"country\", \"state\", \"city\", \"email\", \"website\", \"phone\"].map(\r\n                  (field) => (\r\n                    <td key={field}>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        value={acc[field] || \"\"}\r\n                        onChange={(e) =>\r\n                          this.handleTableChange(acc.id, field, e.target.value)\r\n                        }\r\n                      />\r\n                    </td>\r\n                  )\r\n                )}\r\n                <td>\r\n                  <Button variant=\"info\" size=\"sm\" onClick={() => this.openModal(acc)}>\r\n                    More\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n\r\n        {/* Modal */}\r\n        <Modal show={this.state.showModal} onHide={this.closeModal} size=\"lg\">\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>More Details</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {this.state.selectedAccount && (\r\n              <Form>\r\n                <Form.Group>\r\n                  <Form.Label>a/c Name</Form.Label>\r\n                  <Form.Control\r\n                    value={this.state.selectedAccount.acname || \"\"}\r\n                    onChange={(e) => this.handleModalChange(\"acname\", e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control\r\n                    value={this.state.selectedAccount.email || \"\"}\r\n                    onChange={(e) => this.handleModalChange(\"email\", e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n                <hr />\r\n                <h5>Contact Persons</h5>\r\n                {this.state.contactPersons.map((cp, i) => (\r\n                  <div key={i} className=\"mb-3 p-2 border rounded\">\r\n                    <Form.Control\r\n                      placeholder=\"Name\"\r\n                      value={cp.name}\r\n                      onChange={(e) =>\r\n                        this.handleContactPersonChange(i, \"name\", e.target.value)\r\n                      }\r\n                      className=\"mb-1\"\r\n                    />\r\n                    <Form.Control\r\n                      placeholder=\"Designation\"\r\n                      value={cp.designation}\r\n                      onChange={(e) =>\r\n                        this.handleContactPersonChange(i, \"designation\", e.target.value)\r\n                      }\r\n                      className=\"mb-1\"\r\n                    />\r\n                    <Form.Control\r\n                      placeholder=\"Phone\"\r\n                      value={cp.phone}\r\n                      onChange={(e) =>\r\n                        this.handleContactPersonChange(i, \"phone\", e.target.value)\r\n                      }\r\n                      className=\"mb-1\"\r\n                    />\r\n                    <Form.Control\r\n                      placeholder=\"Mail\"\r\n                      value={cp.mail}\r\n                      onChange={(e) =>\r\n                        this.handleContactPersonChange(i, \"mail\", e.target.value)\r\n                      }\r\n                      className=\"mb-1\"\r\n                    />\r\n                    <Form.Control\r\n                      placeholder=\"LinkedIn\"\r\n                      value={cp.linkedin}\r\n                      onChange={(e) =>\r\n                        this.handleContactPersonChange(i, \"linkedin\", e.target.value)\r\n                      }\r\n                      className=\"mb-1\"\r\n                    />\r\n                  </div>\r\n                ))}\r\n                <Button variant=\"secondary\" onClick={this.addContactPerson}>\r\n                  + Add Contact Person\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={this.saveModal}>\r\n              Submit\r\n            </Button>\r\n            <Button variant=\"secondary\" onClick={this.closeModal}>\r\n              Cancel\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Datalist;\r\n"]},"metadata":{},"sourceType":"module"}