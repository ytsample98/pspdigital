{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\forms\\\\parties.js\";\nimport React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { db } from '../../firebase';\nimport { collection, addDoc, getDocs, doc, updateDoc } from 'firebase/firestore';\n\nclass CustomerForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formType: 'customer',\n      formData: {\n        company: '',\n        gst: '',\n        cin: '',\n        name: '',\n        phone: '',\n        email: '',\n        website: '',\n        billing: {\n          line1: '',\n          line2: '',\n          pincode: '',\n          city: '',\n          state: ''\n        },\n        shipping: {\n          line1: '',\n          line2: '',\n          pincode: '',\n          city: '',\n          state: '',\n          sameAsBilling: false\n        }\n      },\n      editingId: null,\n      customers: [],\n      orgs: [],\n      vendors: []\n    };\n\n    this.fetchData = async () => {\n      const collections = ['customers', 'orgs', 'vendors'];\n\n      for (const type of collections) {\n        const snapshot = await getDocs(collection(db, type));\n        const data = snapshot.docs.map((doc, i) => ({\n          id: doc.id,\n          index: i + 1,\n          ...doc.data()\n        }));\n        this.setState({\n          [type]: data\n        });\n      }\n    };\n\n    this.handleChange = (field, value) => {\n      const keys = field.split('.');\n      this.setState(prev => {\n        const newFormData = { ...prev.formData\n        };\n        if (keys.length === 1) newFormData[keys[0]] = value;else newFormData[keys[0]][keys[1]] = value;\n        return {\n          formData: newFormData\n        };\n      });\n    };\n\n    this.handleSameAsBilling = () => {\n      this.setState(prev => {\n        const {\n          billing,\n          shipping\n        } = prev.formData;\n        const updatedShipping = shipping.sameAsBilling ? {\n          line1: '',\n          line2: '',\n          pincode: '',\n          city: '',\n          state: '',\n          sameAsBilling: false\n        } : { ...billing,\n          sameAsBilling: true\n        };\n        return {\n          formData: { ...prev.formData,\n            shipping: updatedShipping\n          }\n        };\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const collectionName = this.state.formType === 'customer' ? 'customers' : this.state.formType === 'organisation' ? 'orgs' : 'vendors';\n\n      try {\n        if (this.state.editingId) {\n          await updateDoc(doc(db, collectionName, this.state.editingId), this.state.formData);\n        } else {\n          await addDoc(collection(db, collectionName), this.state.formData);\n        }\n\n        alert('Saved successfully');\n        this.setState({\n          editingId: null\n        });\n        this.fetchData();\n      } catch (error) {\n        console.error('Error saving data:', error);\n      }\n    };\n\n    this.handleEdit = (type, entry) => {\n      this.setState({\n        formType: type,\n        formData: { ...entry\n        },\n        editingId: entry.id\n      });\n    };\n\n    this.renderTable = (data, type) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, type.charAt(0).toUpperCase() + type.slice(1), \" List\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, \"Company\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, \"Phone\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, data.map((item, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }, type[0], index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }, item.company), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    }, item.phone), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary\",\n      onClick: () => this.handleEdit(type === 'customers' ? 'customer' : type === 'orgs' ? 'organisation' : 'vendor', item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, \"Edit\")))))))));\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  renderInput(label, field, type = 'text', required = false, disabled = false) {\n    const value = field.includes('.') ? this.state.formData[field.split('.')[0]][field.split('.')[1]] : this.state.formData[field];\n    return /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"col-sm-3 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, label), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: type,\n      value: value,\n      placeholder: `${label}${required ? '*' : ''}`,\n      onChange: e => this.handleChange(field, e.target.value),\n      disabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  render() {\n    const {\n      sameAsBilling\n    } = this.state.formData.shipping;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, \"Customer Form\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-sample\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"col-sm-3 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, \"Entity Type\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-9 d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, ['customer', 'organisation', 'vendor'].map(type => /*#__PURE__*/React.createElement(\"div\", {\n      key: type,\n      className: \"form-check form-check-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"radio\",\n      name: \"entityType\",\n      value: type,\n      checked: this.state.formType === type,\n      onChange: () => this.setState({\n        formType: type\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label text-capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, type))))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, \" Organisation Details \"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, this.renderInput('Company Name', 'company', 'text', true), this.renderInput('GST IN', 'gst', 'text', true), this.renderInput('CIN', 'cin', 'text', true))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, \" Contact Details \"), this.renderInput('Name', 'name', 'text', true), this.renderInput('Phone Number', 'phone', 'text', true), this.renderInput('Email', 'email', 'email', true), this.renderInput('Website', 'website', 'url'), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, \" Billing Address \"), this.renderInput('Address Line 1', 'billing.line1', 'text', true), this.renderInput('Address Line 2', 'billing.line2'), this.renderInput('Pincode', 'billing.pincode', 'text', true), this.renderInput('City', 'billing.city', 'text', true), this.renderInput('State', 'billing.state', 'text', true), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, \" Shipping Address \"), /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"col-sm-3 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, \"Same as Billing\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"checkbox\",\n      checked: sameAsBilling,\n      onChange: this.handleSameAsBilling,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 19\n      }\n    }, \"Yes\")))), this.renderInput('Address Line 1', 'shipping.line1', 'text', false, sameAsBilling), this.renderInput('Address Line 2', 'shipping.line2', 'text', false, sameAsBilling), this.renderInput('Pincode', 'shipping.pincode', 'text', false, sameAsBilling), this.renderInput('City', 'shipping.city', 'text', false, sameAsBilling), this.renderInput('State', 'shipping.state', 'text', false, sameAsBilling), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    }, \"Save\")))), this.renderTable(this.state.customers, 'customers'), this.renderTable(this.state.orgs, 'orgs'), this.renderTable(this.state.vendors, 'vendors'));\n  }\n\n}\n\nexport default CustomerForm;","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/forms/parties.js"],"names":["React","Component","Form","db","collection","addDoc","getDocs","doc","updateDoc","CustomerForm","state","formType","formData","company","gst","cin","name","phone","email","website","billing","line1","line2","pincode","city","shipping","sameAsBilling","editingId","customers","orgs","vendors","fetchData","collections","type","snapshot","data","docs","map","i","id","index","setState","handleChange","field","value","keys","split","prev","newFormData","length","handleSameAsBilling","updatedShipping","handleSubmit","e","preventDefault","collectionName","alert","error","console","handleEdit","entry","renderTable","charAt","toUpperCase","slice","item","componentDidMount","renderInput","label","required","disabled","includes","target","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { db } from '../../firebase';\r\nimport { collection, addDoc, getDocs, doc, updateDoc } from 'firebase/firestore';\r\n\r\nclass CustomerForm extends Component {\r\n  state = {\r\n    formType: 'customer',\r\n    formData: {\r\n      company: '', gst: '', cin: '', name: '', phone: '', email: '', website: '',\r\n      billing: { line1: '', line2: '', pincode: '', city: '', state: '' },\r\n      shipping: { line1: '', line2: '', pincode: '', city: '', state: '', sameAsBilling: false }\r\n    },\r\n    editingId: null,\r\n    customers: [],\r\n    orgs: [],\r\n    vendors: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  fetchData = async () => {\r\n    const collections = ['customers', 'orgs', 'vendors'];\r\n    for (const type of collections) {\r\n      const snapshot = await getDocs(collection(db, type));\r\n      const data = snapshot.docs.map((doc, i) => ({ id: doc.id, index: i + 1, ...doc.data() }));\r\n      this.setState({ [type]: data });\r\n    }\r\n  };\r\n\r\n  handleChange = (field, value) => {\r\n    const keys = field.split('.');\r\n    this.setState(prev => {\r\n      const newFormData = { ...prev.formData };\r\n      if (keys.length === 1) newFormData[keys[0]] = value;\r\n      else newFormData[keys[0]][keys[1]] = value;\r\n      return { formData: newFormData };\r\n    });\r\n  };\r\n\r\n  handleSameAsBilling = () => {\r\n    this.setState(prev => {\r\n      const { billing, shipping } = prev.formData;\r\n      const updatedShipping = shipping.sameAsBilling\r\n        ? { line1: '', line2: '', pincode: '', city: '', state: '', sameAsBilling: false }\r\n        : { ...billing, sameAsBilling: true };\r\n      return {\r\n        formData: { ...prev.formData, shipping: updatedShipping }\r\n      };\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const collectionName = this.state.formType === 'customer' ? 'customers' : this.state.formType === 'organisation' ? 'orgs' : 'vendors';\r\n    try {\r\n      if (this.state.editingId) {\r\n        await updateDoc(doc(db, collectionName, this.state.editingId), this.state.formData);\r\n      } else {\r\n        await addDoc(collection(db, collectionName), this.state.formData);\r\n      }\r\n      alert('Saved successfully');\r\n      this.setState({ editingId: null });\r\n      this.fetchData();\r\n    } catch (error) {\r\n      console.error('Error saving data:', error);\r\n    }\r\n  };\r\n\r\n  handleEdit = (type, entry) => {\r\n    this.setState({\r\n      formType: type,\r\n      formData: { ...entry },\r\n      editingId: entry.id\r\n    });\r\n  };\r\n\r\n  renderInput(label, field, type = 'text', required = false, disabled = false) {\r\n    const value = field.includes('.')\r\n      ? this.state.formData[field.split('.')[0]][field.split('.')[1]]\r\n      : this.state.formData[field];\r\n    return (\r\n      <Form.Group className=\"row\">\r\n        <label className=\"col-sm-3 col-form-label\">{label}</label>\r\n        <div className=\"col-lg-3\">\r\n          <Form.Control\r\n            type={type}\r\n            value={value}\r\n            placeholder={`${label}${required ? '*' : ''}`}\r\n            onChange={(e) => this.handleChange(field, e.target.value)}\r\n            disabled={disabled}\r\n          />\r\n        </div>\r\n      </Form.Group>\r\n    );\r\n  }\r\n\r\n  renderTable = (data, type) => (\r\n    <div className=\"card mt-4\">\r\n      <div className=\"card-body\">\r\n        <h4 className=\"card-title\">{type.charAt(0).toUpperCase() + type.slice(1)} List</h4>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Company</th>\r\n                <th>Name</th>\r\n                <th>Phone</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((item, index) => (\r\n                <tr key={item.id}>\r\n                  <td>{type[0]}{index + 1}</td>\r\n                  <td>{item.company}</td>\r\n                  <td>{item.name}</td>\r\n                  <td>{item.phone}</td>\r\n                  <td>\r\n                    <button className=\"btn btn-sm btn-primary\" onClick={() => this.handleEdit(type === 'customers' ? 'customer' : type === 'orgs' ? 'organisation' : 'vendor', item)}>Edit</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  render() {\r\n    const { sameAsBilling } = this.state.formData.shipping;\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <h4 className=\"card-title\">Customer Form</h4>\r\n          <form className=\"form-sample\" onSubmit={this.handleSubmit}>\r\n            <Form.Group className=\"row\">\r\n              <label className=\"col-sm-3 col-form-label\">Entity Type</label>\r\n              <div className=\"col-sm-9 d-flex\">\r\n                {['customer', 'organisation', 'vendor'].map(type => (\r\n                  <div key={type} className=\"form-check form-check-inline\">\r\n                    <input\r\n                      className=\"form-check-input\"\r\n                      type=\"radio\"\r\n                      name=\"entityType\"\r\n                      value={type}\r\n                      checked={this.state.formType === type}\r\n                      onChange={() => this.setState({ formType: type })}\r\n                    />\r\n                    <label className=\"form-check-label text-capitalize\">{type}</label>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </Form.Group>\r\n            <p className=\"card-description\"> Organisation Details </p>\r\n            <div class=\"row\">\r\n                <div className='col-sm-3'>\r\n                 {this.renderInput('Company Name', 'company', 'text', true)}\r\n            {this.renderInput('GST IN', 'gst', 'text', true)}\r\n            {this.renderInput('CIN', 'cin', 'text', true)}\r\n            </div>\r\n            </div>\r\n           \r\n\r\n            <p className=\"card-description\"> Contact Details </p>\r\n            {this.renderInput('Name', 'name', 'text', true)}\r\n            {this.renderInput('Phone Number', 'phone', 'text', true)}\r\n            {this.renderInput('Email', 'email', 'email', true)}\r\n            {this.renderInput('Website', 'website', 'url')}\r\n\r\n            <p className=\"card-description\"> Billing Address </p>\r\n            {this.renderInput('Address Line 1', 'billing.line1', 'text', true)}\r\n            {this.renderInput('Address Line 2', 'billing.line2')}\r\n            {this.renderInput('Pincode', 'billing.pincode', 'text', true)}\r\n            {this.renderInput('City', 'billing.city', 'text', true)}\r\n            {this.renderInput('State', 'billing.state', 'text', true)}\r\n\r\n            <p className=\"card-description\"> Shipping Address </p>\r\n            <Form.Group className=\"row align-items-center\">\r\n              <label className=\"col-sm-3 col-form-label\">Same as Billing</label>\r\n              <div className=\"col-sm-9\">\r\n                <div className=\"form-check\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    checked={sameAsBilling}\r\n                    onChange={this.handleSameAsBilling}\r\n                  />\r\n                  <label className=\"form-check-label\">Yes</label>\r\n                </div>\r\n              </div>\r\n            </Form.Group>\r\n            {this.renderInput('Address Line 1', 'shipping.line1', 'text', false, sameAsBilling)}\r\n            {this.renderInput('Address Line 2', 'shipping.line2', 'text', false, sameAsBilling)}\r\n            {this.renderInput('Pincode', 'shipping.pincode', 'text', false, sameAsBilling)}\r\n            {this.renderInput('City', 'shipping.city', 'text', false, sameAsBilling)}\r\n            {this.renderInput('State', 'shipping.state', 'text', false, sameAsBilling)}\r\n\r\n            <div className=\"text-right mt-4\">\r\n              <button type=\"submit\" className=\"btn btn-success\">Save</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        {this.renderTable(this.state.customers, 'customers')}\r\n        {this.renderTable(this.state.orgs, 'orgs')}\r\n        {this.renderTable(this.state.vendors, 'vendors')}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomerForm;\r\n"]},"metadata":{},"sourceType":"module"}