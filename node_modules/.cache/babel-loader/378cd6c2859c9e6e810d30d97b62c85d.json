{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\panelone\\\\Quote.js\";\nimport React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport { db } from '../../firebase';\nimport { collection, getDocs, addDoc, doc, updateDoc } from 'firebase/firestore';\n\nclass Quote extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: 'co',\n      quotes: [],\n      editingId: null,\n      showForm: false\n    };\n    this.customerInputRef = React.createRef();\n    this.formData = {\n      quoteNo: '',\n      quoteDate: new Date().toISOString().split('T')[0],\n      quoteType: 'Standard',\n      customer: '',\n      status: 'Entered',\n      choose: 'Service',\n      refNo: '',\n      impExp: 'None',\n      currency: '',\n      conversionRate: '',\n      taxAmount: '',\n      quoteValue: '',\n      billTo: '',\n      shipTo: '',\n      despatchMode: 'By Air',\n      paymentTerms: '',\n      freightCharges: '',\n      taxPercent: '',\n      packingCharges: ''\n    };\n\n    this.fetchQuotes = async () => {\n      const snapshot = await getDocs(collection(db, 'quotes'));\n      const quotes = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        quotes: quotes.reverse()\n      });\n    };\n\n    this.handleInputChange = (field, value) => {\n      this.formData[field] = value;\n    };\n\n    this.loadQuoteForEdit = quote => {\n      this.formData = { ...quote\n      };\n      this.setState({\n        editingId: quote.id,\n        showForm: true,\n        activeTab: 'co'\n      });\n\n      if (this.customerInputRef.current) {\n        this.customerInputRef.current.value = quote.customer;\n      }\n    };\n\n    this.handleSubmit = async e => {\n      if (e) e.preventDefault();\n\n      try {\n        if (this.state.editingId) {\n          const docRef = doc(db, 'quotes', this.state.editingId);\n          await updateDoc(docRef, this.formData);\n        } else {\n          await addDoc(collection(db, 'quotes'), this.formData);\n        }\n\n        this.setState({\n          editingId: null,\n          showForm: false\n        });\n        this.fetchQuotes();\n      } catch (error) {\n        console.error('Error saving:', error);\n      }\n    };\n\n    this.renderQuoteTable = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, \"Quotes\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.setState({\n        showForm: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, \"+ Add Quote\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"Quote No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, \"Quote Value\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"Status\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, this.state.quotes.map((q, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-link p-0\",\n      onClick: () => this.loadQuoteForEdit(q),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, q.quoteNo)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }, q.customer), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }, q.quoteDate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, q.quoteValue), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"badge badge-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 23\n      }\n    }, q.status)))), this.state.quotes.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"5\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, \"No quotes found.\")))))));\n\n    this.renderQuoteForm = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, \"Quote Form\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-sample\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, \"Quote No\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      onChange: e => this.handleInputChange('quoteNo', e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"date\",\n      defaultValue: this.formData.quoteDate,\n      onChange: e => this.handleInputChange('quoteDate', e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      ref: this.customerInputRef,\n      readOnly: true,\n      placeholder: \"Select Customer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, \"Quote Value\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"number\",\n      onChange: e => this.handleInputChange('quoteValue', e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      defaultValue: this.formData.status,\n      onChange: e => this.handleInputChange('status', e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, \"Entered\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, \"On Process\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, \"Closed\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, \"Ref No\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      onChange: e => this.handleInputChange('refNo', e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      onClick: () => this.setState({\n        showForm: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, \"Cancel\")))));\n  }\n\n  componentDidMount() {\n    bsCustomFileInput.init();\n    this.fetchQuotes();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }, this.state.showForm ? this.renderQuoteForm() : this.renderQuoteTable());\n  }\n\n}\n\nexport default Quote;","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/panelone/Quote.js"],"names":["React","Component","Form","bsCustomFileInput","db","collection","getDocs","addDoc","doc","updateDoc","Quote","state","activeTab","quotes","editingId","showForm","customerInputRef","createRef","formData","quoteNo","quoteDate","Date","toISOString","split","quoteType","customer","status","choose","refNo","impExp","currency","conversionRate","taxAmount","quoteValue","billTo","shipTo","despatchMode","paymentTerms","freightCharges","taxPercent","packingCharges","fetchQuotes","snapshot","docs","map","id","data","setState","reverse","handleInputChange","field","value","loadQuoteForEdit","quote","current","handleSubmit","e","preventDefault","docRef","error","console","renderQuoteTable","fontSize","q","i","length","renderQuoteForm","target","componentDidMount","init","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport bsCustomFileInput from 'bs-custom-file-input';\r\nimport { db } from '../../firebase';\r\nimport { collection, getDocs, addDoc, doc, updateDoc } from 'firebase/firestore';\r\n\r\nclass Quote extends Component {\r\n  state = {\r\n    activeTab: 'co',\r\n    quotes: [],\r\n    editingId: null,\r\n    showForm: false\r\n  };\r\n\r\n  customerInputRef = React.createRef();\r\n\r\n  formData = {\r\n    quoteNo: '', quoteDate: new Date().toISOString().split('T')[0], quoteType: 'Standard', customer: '', status: 'Entered', choose: 'Service', refNo: '', impExp: 'None', currency: '', conversionRate: '', taxAmount: '', quoteValue: '', billTo: '', shipTo: '', despatchMode: 'By Air', paymentTerms: '', freightCharges: '', taxPercent: '', packingCharges: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    bsCustomFileInput.init();\r\n    this.fetchQuotes();\r\n  }\r\n\r\n  fetchQuotes = async () => {\r\n    const snapshot = await getDocs(collection(db, 'quotes'));\r\n    const quotes = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ quotes: quotes.reverse() });\r\n  };\r\n\r\n  handleInputChange = (field, value) => {\r\n    this.formData[field] = value;\r\n  };\r\n\r\n  loadQuoteForEdit = (quote) => {\r\n    this.formData = { ...quote };\r\n    this.setState({ editingId: quote.id, showForm: true, activeTab: 'co' });\r\n    if (this.customerInputRef.current) {\r\n      this.customerInputRef.current.value = quote.customer;\r\n    }\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    if (e) e.preventDefault();\r\n    try {\r\n      if (this.state.editingId) {\r\n        const docRef = doc(db, 'quotes', this.state.editingId);\r\n        await updateDoc(docRef, this.formData);\r\n      } else {\r\n        await addDoc(collection(db, 'quotes'), this.formData);\r\n      }\r\n      this.setState({ editingId: null, showForm: false });\r\n      this.fetchQuotes();\r\n    } catch (error) {\r\n      console.error('Error saving:', error);\r\n    }\r\n  };\r\n\r\n  renderQuoteTable = () => (\r\n    <div className=\"card mt-4\">\r\n      <div className=\"card-body\">\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n          <h4 className=\"card-title\">Quotes</h4>\r\n          <button className=\"btn btn-primary\" onClick={() => this.setState({ showForm: true })}>+ Add Quote</button>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-bordered table-hover\">\r\n            <thead className=\"thead-light\">\r\n              <tr style={{ fontSize: '14px' }}>\r\n                <th>Quote No</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Quote Value</th>\r\n                <th>Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.quotes.map((q, i) => (\r\n                <tr key={i} style={{ fontSize: '14px' }}>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-link p-0\"\r\n                      onClick={() => this.loadQuoteForEdit(q)}\r\n                    >\r\n                      {q.quoteNo}\r\n                    </button>\r\n                  </td>\r\n                  <td>{q.customer}</td>\r\n                  <td>{q.quoteDate}</td>\r\n                  <td>{q.quoteValue}</td>\r\n                  <td><label className=\"badge badge-info\">{q.status}</label></td>\r\n                </tr>\r\n              ))}\r\n              {this.state.quotes.length === 0 && (\r\n                <tr><td colSpan=\"5\" className=\"text-center\">No quotes found.</td></tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  renderQuoteForm = () => (\r\n    <div className=\"card mt-4\">\r\n      <div className=\"card-body\">\r\n        <h4 className=\"card-title\">Quote Form</h4>\r\n        <form className=\"form-sample\" onSubmit={this.handleSubmit}>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-4\">\r\n              <label>Quote No</label>\r\n              <input className=\"form-control\" type=\"text\" onChange={(e) => this.handleInputChange('quoteNo', e.target.value)} />\r\n            </div>\r\n            <div className=\"form-group col-md-4\">\r\n              <label>Date</label>\r\n              <input className=\"form-control\" type=\"date\" defaultValue={this.formData.quoteDate} onChange={(e) => this.handleInputChange('quoteDate', e.target.value)} />\r\n            </div>\r\n            <div className=\"form-group col-md-4\">\r\n              <label>Customer</label>\r\n              <input className=\"form-control\" type=\"text\" ref={this.customerInputRef} readOnly placeholder=\"Select Customer\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-4\">\r\n              <label>Quote Value</label>\r\n              <input className=\"form-control\" type=\"number\" onChange={(e) => this.handleInputChange('quoteValue', e.target.value)} />\r\n            </div>\r\n            <div className=\"form-group col-md-4\">\r\n              <label>Status</label>\r\n              <select className=\"form-control\" defaultValue={this.formData.status} onChange={(e) => this.handleInputChange('status', e.target.value)}>\r\n                <option>Entered</option>\r\n                <option>On Process</option>\r\n                <option>Closed</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group col-md-4\">\r\n              <label>Ref No</label>\r\n              <input className=\"form-control\" type=\"text\" onChange={(e) => this.handleInputChange('refNo', e.target.value)} />\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex justify-content-between\">\r\n            <button type=\"submit\" className=\"btn btn-success\">Save</button>\r\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={() => this.setState({ showForm: false })}>Cancel</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        {this.state.showForm ? this.renderQuoteForm() : this.renderQuoteTable()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quote;\r\n"]},"metadata":{},"sourceType":"module"}