{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\inventory\\\\invstockdetails\\\\StockLedger.js\";\n//const InvStockLedger=lazy(()=>import('./inventory/invstockdetails/StockLedger'));\nimport React, { Component } from \"react\";\nimport { db } from \"../../../firebase\";\nimport { collection, getDocs, query, orderBy } from \"firebase/firestore\";\nimport \"../../../assets/styles/components/_custom-table.scss\";\n\nclass StockLedger extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ledger: []\n    };\n\n    this.fetchLedger = async () => {\n      const snap = await getDocs(query(collection(db, \"stockLedger\"), orderBy(\"date\", \"desc\")));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        ledger: data\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchLedger();\n  }\n\n  render() {\n    const {\n      ledger\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card full-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, \"Stock Ledger\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }\n    }, \"Product\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }\n    }, \"Transaction\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }\n    }, \"Qty In\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 19\n      }\n    }, \"Qty Out\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }\n    }, \"Balance\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }\n    }, \"Reference\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }, ledger.map((row, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, new Date(row.date).toLocaleString()), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, row.productName), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, row.transactionType), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        color: \"green\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, row.qtyIn), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, row.qtyOut), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, row.balance), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, row.reference || \"-\"))))))));\n  }\n\n}\n\nexport default StockLedger;","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/inventory/invstockdetails/StockLedger.js"],"names":["React","Component","db","collection","getDocs","query","orderBy","StockLedger","state","ledger","fetchLedger","snap","data","docs","map","doc","id","setState","componentDidMount","render","row","i","Date","date","toLocaleString","productName","transactionType","color","qtyIn","qtyOut","balance","reference"],"mappings":"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","sourcesContent":["//const InvStockLedger=lazy(()=>import('./inventory/invstockdetails/StockLedger'));\r\nimport React, { Component } from \"react\";\r\nimport { db } from \"../../../firebase\";\r\nimport { collection, getDocs, query, orderBy } from \"firebase/firestore\";\r\nimport \"../../../assets/styles/components/_custom-table.scss\";\r\n\r\nclass StockLedger extends Component {\r\n  state = {\r\n    ledger: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchLedger();\r\n  }\r\n\r\n  fetchLedger = async () => {\r\n    const snap = await getDocs(query(collection(db, \"stockLedger\"), orderBy(\"date\", \"desc\")));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ ledger: data });\r\n  };\r\n\r\n  render() {\r\n    const { ledger } = this.state;\r\n\r\n    return (\r\n      <div className=\"card full-height\">\r\n        <div className=\"card-body\">\r\n          <h4 className=\"card-title\">Stock Ledger</h4>\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Date</th>\r\n                  <th>Product</th>\r\n                  <th>Transaction</th>\r\n                  <th>Qty In</th>\r\n                  <th>Qty Out</th>\r\n                  <th>Balance</th>\r\n                  <th>Reference</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {ledger.map((row, i) => (\r\n                  <tr key={i}>\r\n                    <td>{new Date(row.date).toLocaleString()}</td>\r\n                    <td>{row.productName}</td>\r\n                    <td>{row.transactionType}</td>\r\n                    <td style={{ color: \"green\" }}>{row.qtyIn}</td>\r\n                    <td style={{ color: \"red\" }}>{row.qtyOut}</td>\r\n                    <td>{row.balance}</td>\r\n                    <td>{row.reference || \"-\"}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StockLedger;\r\n"]},"metadata":{},"sourceType":"module"}