{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\panelone\\\\ProspectForm.js\";\n// ✅ Fixed ProspectForm.js (preserving all fields)\n// - Keeps original fields like amount, representative, etc.\n// - Supports conversion from Lead → Prospect with prefill\n// - Converts Prospect → Quote correctly using customer.name\nimport React, { Component } from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport { db } from '../../firebase';\nimport { collection, getDocs, addDoc, deleteDoc, doc } from 'firebase/firestore';\n\nclass ProspectForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      prospects: [],\n      customers: [],\n      showForm: false,\n      overlayType: '',\n      overlaySearch: '',\n      formData: {\n        prospectNo: '',\n        customerName: '',\n        amount: '',\n        representative: '',\n        stage: 'New',\n        status: 'Open'\n      }\n    };\n\n    this.fetchProspects = async () => {\n      const snap = await getDocs(collection(db, 'prospects'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        prospects: data\n      });\n    };\n\n    this.fetchCustomers = async () => {\n      const snap = await getDocs(collection(db, 'customers'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        customers: data\n      });\n    };\n\n    this.handleChange = (field, value) => {\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          [field]: value\n        }\n      }));\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        formData,\n        prospects\n      } = this.state;\n\n      if (!formData.prospectNo) {\n        formData.prospectNo = `PR${1000 + prospects.length}`;\n      }\n\n      await addDoc(collection(db, 'prospects'), formData);\n      this.setState({\n        showForm: false,\n        formData: {\n          prospectNo: '',\n          customerName: '',\n          amount: '',\n          representative: '',\n          stage: 'New',\n          status: 'Open'\n        }\n      });\n      this.fetchProspects();\n    };\n\n    this.convertToQuote = prospect => {\n      const params = new URLSearchParams();\n      params.set('org', prospect.customerName); // ✅ matches with Quote.js expectation\n\n      params.set('prospect', prospect.prospectNo);\n      window.location.href = `/panelone/QuoteForm?${params.toString()}`;\n    };\n\n    this.showOverlay = () => this.setState({\n      overlayType: 'customer',\n      overlaySearch: ''\n    });\n\n    this.hideOverlay = () => this.setState({\n      overlayType: '',\n      overlaySearch: ''\n    });\n\n    this.selectOverlayValue = value => {\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          customerName: value.name\n        },\n        overlayType: '',\n        overlaySearch: ''\n      }));\n    };\n\n    this.renderOverlay = () => {\n      const {\n        overlaySearch,\n        customers\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }, \"Select Customer\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Search customer\",\n        value: overlaySearch,\n        onChange: e => this.setState({\n          overlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 34\n        }\n      }, \"Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 47\n        }\n      }, \"Short Name\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }\n      }, customers.filter(c => (c.name || '').toLowerCase().includes(overlaySearch.toLowerCase())).map((c, i) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        onClick: () => this.selectOverlayValue(c),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }, c.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 38\n        }\n      }, c.code), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 55\n        }\n      }, c.shortName)))))), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm mt-2\",\n        onClick: this.hideOverlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }\n      }, \"Cancel\")));\n    };\n  }\n\n  componentDidMount() {\n    this.fetchProspects();\n    this.fetchCustomers(); // ✅ Prefill from Lead\n\n    const params = new URLSearchParams(window.location.search);\n    const org = params.get('org');\n    const client = params.get('client');\n\n    if (org || client) {\n      this.setState(prev => ({\n        showForm: true,\n        formData: { ...prev.formData,\n          customerName: org || '',\n          representative: client || ''\n        }\n      }));\n    }\n  }\n\n  render() {\n    const {\n      formData,\n      showForm,\n      overlayType,\n      prospects\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }\n    }, showForm ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, \"Prospect Form\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, \"Prospect No\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      value: formData.prospectNo || '',\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      value: formData.customerName || '',\n      readOnly: true,\n      onClick: this.showOverlay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-secondary\",\n      onClick: this.showOverlay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"mdi mdi-magnify\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 27\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      value: formData.amount || '',\n      onChange: e => this.handleChange('amount', e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, \"Representative\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      value: formData.representative || '',\n      onChange: e => this.handleChange('representative', e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success btn-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, \"Save\")), overlayType && this.renderOverlay())) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, \"Prospects\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-sm\",\n      onClick: () => this.setState({\n        showForm: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, \"+ Add Prospect\")), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, \"Prospect No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }, \"Representative\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }, prospects.map((p, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 23\n      }\n    }, p.prospectNo), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 23\n      }\n    }, p.customerName), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 23\n      }\n    }, p.amount), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 23\n      }\n    }, p.representative), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 23\n      }\n    }, p.status), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      variant: \"outline-primary\",\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 27\n      }\n    }, \"Action\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n      onClick: () => this.convertToQuote(p),\n      disabled: !p.customerName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 29\n      }\n    }, \"Convert to Quote\")))))), prospects.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"6\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 25\n      }\n    }, \"No records found\")))))));\n  }\n\n}\n\nexport default ProspectForm;","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/panelone/ProspectForm.js"],"names":["React","Component","Dropdown","db","collection","getDocs","addDoc","deleteDoc","doc","ProspectForm","state","prospects","customers","showForm","overlayType","overlaySearch","formData","prospectNo","customerName","amount","representative","stage","status","fetchProspects","snap","data","docs","map","id","setState","fetchCustomers","handleChange","field","value","prev","handleSubmit","e","preventDefault","length","convertToQuote","prospect","params","URLSearchParams","set","window","location","href","toString","showOverlay","hideOverlay","selectOverlayValue","name","renderOverlay","target","maxHeight","overflowY","filter","c","toLowerCase","includes","i","code","shortName","componentDidMount","search","org","get","client","render","p"],"mappings":"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","sourcesContent":["// ✅ Fixed ProspectForm.js (preserving all fields)\r\n// - Keeps original fields like amount, representative, etc.\r\n// - Supports conversion from Lead → Prospect with prefill\r\n// - Converts Prospect → Quote correctly using customer.name\r\n\r\nimport React, { Component } from 'react';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { db } from '../../firebase';\r\nimport { collection, getDocs, addDoc, deleteDoc, doc } from 'firebase/firestore';\r\n\r\nclass ProspectForm extends Component {\r\n  state = {\r\n    prospects: [],\r\n    customers: [],\r\n    showForm: false,\r\n    overlayType: '',\r\n    overlaySearch: '',\r\n    formData: {\r\n      prospectNo: '',\r\n      customerName: '',\r\n      amount: '',\r\n      representative: '',\r\n      stage: 'New',\r\n      status: 'Open'\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchProspects();\r\n    this.fetchCustomers();\r\n\r\n    // ✅ Prefill from Lead\r\n    const params = new URLSearchParams(window.location.search);\r\n    const org = params.get('org');\r\n    const client = params.get('client');\r\n    if (org || client) {\r\n      this.setState(prev => ({\r\n        showForm: true,\r\n        formData: {\r\n          ...prev.formData,\r\n          customerName: org || '',\r\n          representative: client || ''\r\n        }\r\n      }));\r\n    }\r\n  }\r\n\r\n  fetchProspects = async () => {\r\n    const snap = await getDocs(collection(db, 'prospects'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ prospects: data });\r\n  };\r\n\r\n  fetchCustomers = async () => {\r\n    const snap = await getDocs(collection(db, 'customers'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ customers: data });\r\n  };\r\n\r\n  handleChange = (field, value) => {\r\n    this.setState(prev => ({\r\n      formData: { ...prev.formData, [field]: value }\r\n    }));\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { formData, prospects } = this.state;\r\n    if (!formData.prospectNo) {\r\n      formData.prospectNo = `PR${1000 + prospects.length}`;\r\n    }\r\n    await addDoc(collection(db, 'prospects'), formData);\r\n    this.setState({ showForm: false, formData: { prospectNo: '', customerName: '', amount: '', representative: '', stage: 'New', status: 'Open' } });\r\n    this.fetchProspects();\r\n  };\r\n\r\n  convertToQuote = (prospect) => {\r\n    const params = new URLSearchParams();\r\n    params.set('org', prospect.customerName); // ✅ matches with Quote.js expectation\r\n    params.set('prospect', prospect.prospectNo);\r\n    window.location.href = `/panelone/QuoteForm?${params.toString()}`;\r\n  };\r\n\r\n  showOverlay = () => this.setState({ overlayType: 'customer', overlaySearch: '' });\r\n  hideOverlay = () => this.setState({ overlayType: '', overlaySearch: '' });\r\n\r\n  selectOverlayValue = (value) => {\r\n    this.setState(prev => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        customerName: value.name\r\n      },\r\n      overlayType: '',\r\n      overlaySearch: ''\r\n    }));\r\n  };\r\n\r\n  renderOverlay = () => {\r\n    const { overlaySearch, customers } = this.state;\r\n    return (\r\n      <div className=\"custom-overlay\">\r\n        <div className=\"custom-overlay-content\">\r\n          <div className=\"custom-overlay-title\">Select Customer</div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search customer\"\r\n            value={overlaySearch}\r\n            onChange={e => this.setState({ overlaySearch: e.target.value })}\r\n          />\r\n          <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n            <table className=\"table table-bordered table-sm\">\r\n              <thead>\r\n                <tr><th>Name</th><th>Code</th><th>Short Name</th></tr>\r\n              </thead>\r\n              <tbody>\r\n                {customers.filter(c =>\r\n                  (c.name || '').toLowerCase().includes(overlaySearch.toLowerCase())\r\n                ).map((c, i) => (\r\n                  <tr key={i} onClick={() => this.selectOverlayValue(c)}>\r\n                    <td>{c.name}</td><td>{c.code}</td><td>{c.shortName}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <button className=\"btn btn-secondary btn-sm mt-2\" onClick={this.hideOverlay}>Cancel</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { formData, showForm, overlayType, prospects } = this.state;\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        {showForm ? (\r\n          <div className=\"card mt-4\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">Prospect Form</h4>\r\n              <form onSubmit={this.handleSubmit}>\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group col-md-3\">\r\n                    <label>Prospect No</label>\r\n                    <input className=\"form-control\" value={formData.prospectNo || ''} readOnly />\r\n                  </div>\r\n                  <div className=\"form-group col-md-6\">\r\n                    <label>Customer</label>\r\n                    <div className=\"input-group\">\r\n                      <input\r\n                        className=\"form-control\"\r\n                        value={formData.customerName || ''}\r\n                        readOnly\r\n                        onClick={this.showOverlay}\r\n                      />\r\n                      <div className=\"input-group-append\">\r\n                        <button type=\"button\" className=\"btn btn-outline-secondary\" onClick={this.showOverlay}>\r\n                          <i className=\"mdi mdi-magnify\"></i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>Amount</label>\r\n                    <input className=\"form-control\" value={formData.amount || ''} onChange={e => this.handleChange('amount', e.target.value)} />\r\n                  </div>\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>Representative</label>\r\n                    <input className=\"form-control\" value={formData.representative || ''} onChange={e => this.handleChange('representative', e.target.value)} />\r\n                  </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-success btn-sm\">Save</button>\r\n              </form>\r\n              {overlayType && this.renderOverlay()}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"card mt-4\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex justify-content-between mb-3\">\r\n                <h4 className=\"card-title\">Prospects</h4>\r\n                <button className=\"btn btn-primary btn-sm\" onClick={() => this.setState({ showForm: true })}>+ Add Prospect</button>\r\n              </div>\r\n              <table className=\"table table-bordered table-sm\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Prospect No</th>\r\n                    <th>Customer</th>\r\n                    <th>Amount</th>\r\n                    <th>Representative</th>\r\n                    <th>Status</th>\r\n                    <th>Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {prospects.map((p, i) => (\r\n                    <tr key={i}>\r\n                      <td>{p.prospectNo}</td>\r\n                      <td>{p.customerName}</td>\r\n                      <td>{p.amount}</td>\r\n                      <td>{p.representative}</td>\r\n                      <td>{p.status}</td>\r\n                      <td>\r\n                        <Dropdown>\r\n                          <Dropdown.Toggle variant=\"outline-primary\" size=\"sm\">Action</Dropdown.Toggle>\r\n                          <Dropdown.Menu>\r\n                            <Dropdown.Item onClick={() => this.convertToQuote(p)} disabled={!p.customerName}>Convert to Quote</Dropdown.Item>\r\n                          </Dropdown.Menu>\r\n                        </Dropdown>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                  {prospects.length === 0 && (\r\n                    <tr><td colSpan=\"6\" className=\"text-center\">No records found</td></tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProspectForm;\r\n"]},"metadata":{},"sourceType":"module"}