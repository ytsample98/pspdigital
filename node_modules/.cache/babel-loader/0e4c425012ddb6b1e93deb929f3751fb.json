{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\sales\\\\salestransactions\\\\servicecontract\\\\servicecontractbilling.js\";\nimport React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { db } from '../../../../firebase';\nimport { Modal, Button } from 'react-bootstrap';\nimport { collection, query, where, getDocs, addDoc, updateDoc, doc, serverTimestamp } from 'firebase/firestore';\nimport { format } from 'date-fns';\n\nclass ContractBilling extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contracts: [],\n      customers: [],\n      products: [],\n      taxGroups: [],\n      users: [],\n      isOneYear: '',\n      showTaxOverlay: false,\n      activeTab: 0,\n      showForm: false,\n      editingId: null,\n      durationFrom: null,\n      durationTo: null,\n      billingType: 'yearly',\n      autobill: false,\n      paymentMode: 'monthly',\n      tillDate: '',\n      repeat: false,\n      canAddItems: false,\n      showProductOverlay: false,\n      productOverlaySearch: '',\n      selectedProductIds: [],\n      formData: this.getEmptyContractForm(),\n      notes: '',\n      searchTerm: '',\n      nameofwrk: '',\n      showCustomerOrderOverlay: false,\n      customerOrderOverlaySearch: '',\n      selectedCustomerOrders: [],\n      customerOrders: [],\n      customerOrderLineItems: [],\n      showAlert: false,\n      alertMsg: ''\n    };\n\n    this.fetchContracts = async () => {\n      const snap = await getDocs(collection(db, 'contracts'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        contracts: data.reverse()\n      });\n    };\n\n    this.fetchCustomers = async () => {\n      const snap = await getDocs(collection(db, 'customers'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        customers: data\n      });\n    };\n\n    this.fetchCustomerOrders = async customerName => {\n      if (!customerName) return this.setState({\n        customerOrders: []\n      });\n      const snap = await getDocs(collection(db, 'orders'));\n      const orders = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      const filtered = orders.filter(o => (o.customer === customerName || o.customerName === customerName) && o.status === \"Approved\");\n      this.setState({\n        customerOrders: filtered\n      });\n    };\n\n    this.fetchProducts = async () => {\n      const snap = await getDocs(collection(db, 'products'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        products: data\n      });\n    };\n\n    this.fetchUsers = async () => {\n      const snap = await getDocs(collection(db, 'users'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        users: data\n      });\n    };\n\n    this.fetchTaxGroups = async () => {\n      const snap = await getDocs(collection(db, 'taxGroups'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        taxGroups: data\n      });\n    };\n\n    this.checkDurationSelected = () => {\n      const {\n        durationFrom,\n        durationTo\n      } = this.state;\n      this.setState({\n        canAddItems: !!(durationFrom && durationTo)\n      });\n    };\n\n    this.showProductOverlay = () => this.setState({\n      showProductOverlay: true,\n      productOverlaySearch: '',\n      selectedProductIds: []\n    });\n\n    this.hideProductOverlay = () => this.setState({\n      showProductOverlay: false,\n      productOverlaySearch: '',\n      selectedProductIds: []\n    });\n\n    this.toggleProductSelection = (productId, checked) => {\n      this.setState(prev => ({\n        selectedProductIds: checked ? [...prev.selectedProductIds, productId] : prev.selectedProductIds.filter(id => id !== productId)\n      }));\n    };\n\n    this.addSelectedProductsToLineItems = () => {\n      const selectedProducts = this.state.products.filter(p => this.state.selectedProductIds.includes(p.id));\n      const newItems = selectedProducts.map(product => ({\n        itemCode: product.productId || '',\n        itemDesc: product.ptdescription || '',\n        hsnCode: product.hsnCode || '',\n        qty: 1,\n        unitPrice: product.price || 0,\n        months: 1,\n        taxGroupNames: [],\n        taxAmt: 0,\n        itemTotal: 0\n      }));\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          lineItems: [...prev.formData.lineItems, ...newItems]\n        },\n        showProductOverlay: false,\n        selectedProductIds: []\n      }), this.recalculateContractTotals);\n    };\n\n    this.getDurationInfo = () => {\n      const {\n        durationFrom,\n        durationTo\n      } = this.state.formData;\n      if (!durationFrom || !durationTo) return {\n        months: 0,\n        days: 0,\n        billingType: ''\n      };\n      const from = new Date(durationFrom);\n      const to = new Date(durationTo); // Months difference\n\n      let months = (to.getFullYear() - from.getFullYear()) * 12 + (to.getMonth() - from.getMonth()) + 1; // Days difference\n\n      let days = (to - from) / (1000 * 60 * 60 * 24) + 1; // Billing type\n\n      let billingType = '';\n      if (months >= 12) billingType = 'yearly';else if (months === 6) billingType = 'half-yearly';else if (months <= 3) billingType = 'quarterly';\n      return {\n        months,\n        days,\n        billingType\n      };\n    };\n\n    this.formatAddress = addr => {\n      if (!addr) return '';\n      if (typeof addr === 'string') return addr;\n      return [addr.address, [addr.city, addr.state, addr.country].filter(Boolean).join(', '), addr.zip].filter(Boolean).join('\\n');\n    };\n\n    this.formatDate = d => {\n      if (!d) return '';\n\n      try {\n        return format(new Date(d), 'dd-MMM-yy');\n      } catch {\n        return d;\n      }\n    };\n\n    this.selectCustomer = customer => {\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          customer: customer.custname,\n          currency: customer.currency || '',\n          billTo: this.formatAddress(customer.billTo),\n          shipTo: this.formatAddress(customer.shipTo),\n          despatchMode: customer.despatchMode || '',\n          paymentTerms: customer.paymentTerms || '',\n          customerOrderId: '',\n          lineItems: []\n        },\n        showCustomerOverlay: false,\n        customerOrderLineItems: [],\n        customerOrders: []\n      }), () => {\n        this.fetchCustomerOrders(customer.custname);\n      });\n    };\n\n    this.selectCustomerOrder = order => {\n      const lineItems = (order.lineItems || []).map(item => ({\n        itemCode: item.itemCode || '',\n        itemDesc: item.itemDescription || '',\n        hsnCode: item.hsnCode || '',\n        uom: item.uom || '',\n        qty: item.qty || 1,\n        unitPrice: item.unitPrice || 0,\n        months: 1,\n        taxGroupNames: [],\n        taxAmt: 0,\n        itemTotal: 0\n      }));\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          customerOrderId: order.orderNo,\n          lineItems\n        },\n        showCustomerOrderOverlay: false,\n        customerOrderLineItems: lineItems\n      }), this.recalculateContractTotals);\n    };\n\n    this.selectProductForLineItem = product => {\n      const newItem = {\n        itemCode: product.code || '',\n        itemDesc: product.name || '',\n        hsnCode: product.hsn || '',\n        uom: product.uom || '',\n        qty: 1,\n        unitPrice: product.price || 0,\n        months: 1,\n        taxGroupNames: [],\n        taxAmt: 0,\n        itemTotal: 0\n      };\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          lineItems: [...prev.formData.lineItems, newItem]\n        },\n        showProductOverlay: false\n      }), this.recalculateContractTotals);\n    };\n\n    this.handleInputChange = (field, value) => {\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          [field]: value\n        }\n      }), () => {\n        if (field === 'durationFrom' || field === 'durationTo') {\n          const {\n            billingType\n          } = this.getDurationInfo();\n          this.setState({\n            billingType\n          });\n        }\n\n        if (['freightCharges', 'freightTaxPercent', 'packingCharges', 'amtAgreed', 'conversionRate'].includes(field)) {\n          this.recalculateContractTotals();\n        }\n      });\n    };\n\n    this.handleAddItemsClick = () => {\n      const {\n        formData\n      } = this.state;\n\n      if (!formData.customer) {\n        this.setState({\n          showAlert: true,\n          alertMsg: \"Select customer first!\"\n        });\n        return;\n      }\n\n      if (!formData.durationFrom || !formData.durationTo) {\n        this.setState({\n          showAlert: true,\n          alertMsg: \"Select contract duration first!\"\n        });\n        return;\n      }\n\n      if (!formData.customerOrderId) {\n        // Filter products for Bundle category\n        const bundleProducts = this.state.products.filter(p => p.category === \"Bundle\");\n        this.setState({\n          filteredProducts: bundleProducts,\n          showProductOverlay: true\n        });\n      } else {\n        this.setState({\n          showAlert: true,\n          alertMsg: \"Line items are already filled from selected order.\"\n        });\n      }\n    };\n\n    this.handleLineItemChange = (idx, field, value) => {\n      const updatedItems = [...this.state.formData.lineItems];\n      updatedItems[idx] = { ...updatedItems[idx],\n        [field]: value\n      }; // Calculate baseTotal and tax\n\n      let percent = 0;\n      let amount = 0;\n      (updatedItems[idx].taxGroupNames || []).forEach(groupName => {\n        const group = this.state.taxGroups.find(t => t.groupName === groupName);\n\n        if (group && Array.isArray(group.lineItems)) {\n          group.lineItems.forEach(comp => {\n            const val = parseFloat(comp.percentOrAmt || 0);\n            if (comp.type === 'Percentage') percent += val;\n            if (comp.type === 'Amount') amount += val;\n          });\n        }\n      });\n      const qty = parseFloat(updatedItems[idx].qty || 0);\n      const unitPrice = parseFloat(updatedItems[idx].unitPrice || 0);\n      const months = parseFloat(updatedItems[idx].months || 1);\n      const baseTotal = qty * unitPrice * months;\n      const taxAmt = baseTotal * percent / 100 + amount;\n      updatedItems[idx].taxAmt = taxAmt.toFixed(2);\n      updatedItems[idx].itemTotal = (baseTotal + taxAmt).toFixed(2);\n      updatedItems[idx].baseTotal = baseTotal.toFixed(2);\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          lineItems: updatedItems\n        }\n      }), this.recalculateContractTotals);\n    };\n\n    this.toggleTaxGroupSelection = (groupName, lineIdx, isChecked) => {\n      const formData = { ...this.state.formData\n      };\n      const item = formData.lineItems[lineIdx];\n      if (!item.taxGroupNames) item.taxGroupNames = [];\n\n      if (isChecked) {\n        if (!item.taxGroupNames.includes(groupName)) {\n          item.taxGroupNames.push(groupName);\n        }\n      } else {\n        item.taxGroupNames = item.taxGroupNames.filter(g => g !== groupName);\n      } // recalculate taxAmt and total\n\n\n      let percent = 0;\n      let amount = 0;\n      (item.taxGroupNames || []).forEach(groupName => {\n        const group = this.state.taxGroups.find(t => t.groupName === groupName);\n\n        if (group && Array.isArray(group.lineItems)) {\n          group.lineItems.forEach(comp => {\n            const val = parseFloat(comp.percentOrAmt || 0);\n            if (comp.type === 'Percentage') percent += val;\n            if (comp.type === 'Amount') amount += val;\n          });\n        }\n      });\n      const qty = parseFloat(item.qty || 0);\n      const unitPrice = parseFloat(item.unitPrice || 0);\n      const months = parseFloat(item.months || 1);\n      const baseTotal = qty * unitPrice * months;\n      const taxAmt = baseTotal * percent / 100 + amount;\n      item.taxAmt = taxAmt.toFixed(2);\n      item.itemTotal = (baseTotal + taxAmt).toFixed(2);\n      item.baseTotal = baseTotal.toFixed(2);\n      this.setState({\n        formData\n      }, this.recalculateContractTotals);\n    };\n\n    this.recalculateContractTotals = () => {\n      const {\n        lineItems,\n        freightCharges,\n        freightTaxPercent,\n        packingCharges,\n        conversionRate\n      } = this.state.formData;\n      let amtAgreed = 0;\n      (lineItems || []).forEach(item => {\n        amtAgreed += parseFloat(item.itemTotal || 0);\n      }); // Freight + packing\n\n      const freightTaxAmt = parseFloat(freightCharges || 0) * parseFloat(freightTaxPercent || 0) / 100;\n      amtAgreed += parseFloat(packingCharges || 0) + freightTaxAmt; // Apply conversion rate if needed\n\n      let finalValue = amtAgreed;\n\n      if (conversionRate) {\n        finalValue = amtAgreed * parseFloat(conversionRate);\n      }\n\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          amtAgreed: finalValue.toFixed(2),\n          contractValue: finalValue.toFixed(2),\n          freightTaxAmt: freightTaxAmt.toFixed(2)\n        }\n      }));\n    };\n\n    this.handleTabChange = idx => this.setState({\n      activeTab: idx\n    });\n\n    this.handleNotesChange = e => this.setState({\n      notes: e.target.value\n    });\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        editingId,\n        formData,\n        contracts,\n        notes\n      } = this.state;\n      if (!formData.customer) return alert(\"Customer is required\");\n      if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\n      const saveData = { ...formData,\n        notes,\n        status: \"Awaiting Approval\",\n        createdAt: serverTimestamp()\n      };\n\n      if (editingId) {\n        await updateDoc(doc(db, \"contracts\", editingId), saveData);\n      } else {\n        saveData.contractNo = `SC${1000 + contracts.length}`;\n        await addDoc(collection(db, \"contracts\"), saveData);\n      }\n\n      this.setState({\n        showForm: false,\n        editingId: null,\n        formData: this.getEmptyContractForm(),\n        notes: ''\n      });\n      this.fetchContracts();\n    };\n\n    this.renderAlert = () => /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showAlert,\n      onHide: () => this.setState({\n        showAlert: false\n      }),\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }\n    }, this.state.alertMsg)), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.setState({\n        showAlert: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }\n    }, \"OK\")));\n\n    this.renderTaxOverlay = () => {\n      const {\n        taxGroups,\n        currentTaxLineIdx,\n        formData\n      } = this.state;\n      if (currentTaxLineIdx === null) return null;\n      const item = formData.lineItems[currentTaxLineIdx];\n      const selected = new Set(item.taxGroupNames || []);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }\n      }, \"Select Tax Groups\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary btn-sm mr-2\",\n        onClick: () => this.setState({\n          showTaxOverlay: false\n        }),\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }\n      }, \"Submit\"), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"mdi mdi-close-box-outline\",\n        style: {\n          fontSize: \"24px\",\n          color: \"#2196F3\",\n          cursor: \"pointer\"\n        },\n        onClick: this.handleOverlayClose,\n        \"aria-label\": \"Close\",\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-sm table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        style: {\n          background: '#f4f6fa'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 13\n        }\n      }, \"Group\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 13\n        }\n      }, \"Components\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }\n      }, \"% / Amount\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 9\n        }\n      }, taxGroups.map(tg => /*#__PURE__*/React.createElement(\"tr\", {\n        key: tg.groupName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: selected.has(tg.groupName),\n        onChange: e => this.toggleTaxGroupSelection(tg.groupName, currentTaxLineIdx, e.target.checked),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 15\n        }\n      }, tg.groupName), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 15\n        }\n      }, tg.lineItems.map(li => li.component).join(', ')), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 15\n        }\n      }, tg.lineItems.map(li => li.type).join(', ')), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 15\n        }\n      }, tg.lineItems.map(li => li.percentOrAmt).join(', '))))))));\n    };\n\n    this.renderContractNoField = () => {\n      const {\n        formData\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 9\n        }\n      }, \"Contract No\"), formData.contractType === \"Standard\" ? /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.contractNo,\n        readOnly: true,\n        placeholder: \"Auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }\n      }) : /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.contractNo,\n        onChange: e => this.handleInputChange('contractNo', e.target.value),\n        placeholder: \"Enter Contract No\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }\n      }));\n    };\n\n    this.showCustomerOverlay = () => this.setState({\n      showCustomerOverlay: true,\n      customerOverlaySearch: ''\n    });\n\n    this.hideCustomerOverlay = () => this.setState({\n      showCustomerOverlay: false,\n      customerOverlaySearch: ''\n    });\n\n    this.renderCustomerOverlay = () => {\n      const {\n        customers,\n        customerOverlaySearch\n      } = this.state;\n      const filtered = customers.filter(c => (c.custname || '').toLowerCase().includes(customerOverlaySearch.toLowerCase()) || (c.custcode || '').toLowerCase().includes(customerOverlaySearch.toLowerCase()) || (c.custshortName || '').toLowerCase().includes(customerOverlaySearch.toLowerCase()));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 9\n        }\n      }, \"Select Customer\"), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"mdi mdi-close-box-outline\",\n        style: {\n          fontSize: \"24px\",\n          color: \"#2196F3\",\n          cursor: \"pointer\"\n        },\n        onClick: () => this.setState({\n          showCustomerOverlay: false,\n          customerOverlaySearch: ''\n        }),\n        \"aria-label\": \"Close\",\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: `Search customer`,\n        value: customerOverlaySearch,\n        onChange: e => this.setState({\n          customerOverlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 17\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 17\n        }\n      }, \"Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 17\n        }\n      }, \"Short Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 17\n        }\n      }, \"Select\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 13\n        }\n      }, filtered.map((c, i) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: c.id || i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 19\n        }\n      }, c.custname), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 19\n        }\n      }, c.custcode), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 19\n        }\n      }, c.custshortName), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-success\",\n        onClick: () => this.selectCustomer(c),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 21\n        }\n      }, \"Select\")))), filtered.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: 4,\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 19\n        }\n      }, \"No customers found\")))))));\n    };\n\n    this.showCustomerOrderOverlay = () => this.setState({\n      showCustomerOrderOverlay: true,\n      customerOrderOverlaySearch: ''\n    });\n\n    this.hideCustomerOrderOverlay = () => this.setState({\n      showCustomerOrderOverlay: false,\n      customerOrderOverlaySearch: ''\n    });\n\n    this.renderCustomerOrderOverlay = () => {\n      const {\n        customerOrders,\n        customerOrderOverlaySearch\n      } = this.state;\n      const filtered = customerOrders.filter(o => (o.orderNo || '').toLowerCase().includes(customerOrderOverlaySearch.toLowerCase()));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 9\n        }\n      }, \"Select Customer Order\"), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"mdi mdi-close-box-outline\",\n        style: {\n          fontSize: \"24px\",\n          color: \"#2196F3\",\n          cursor: \"pointer\"\n        },\n        onClick: () => this.setState({\n          showCustomerOrderOverlay: false,\n          customerOrderOverlaySearch: ''\n        }),\n        \"aria-label\": \"Close\",\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: `Search Customer Orders`,\n        value: customerOrderOverlaySearch,\n        onChange: e => this.setState({\n          customerOrderOverlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 17\n        }\n      }, \"Order No\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 17\n        }\n      }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 17\n        }\n      }, \"Value\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 17\n        }\n      }, \"Select\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 13\n        }\n      }, filtered.map((o, i) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: o.id || i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 19\n        }\n      }, o.orderNo), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 19\n        }\n      }, o.orderDate), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 19\n        }\n      }, o.orderValue), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-success\",\n        onClick: () => this.selectCustomerOrder(o),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 21\n        }\n      }, \"Select\")))), filtered.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: 4,\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 19\n        }\n      }, \"No approved orders found\")))))));\n    };\n\n    this.renderProductOverlay = () => {\n      const {\n        products,\n        productOverlaySearch,\n        selectedProductIds,\n        currentPage = 1\n      } = this.state;\n      const filtered = products.filter(p => (p.ptshortName || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) || (p.ptdescription || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) || (p.itemCode || '').toLowerCase().includes(productOverlaySearch.toLowerCase()));\n      const itemsPerPage = 10;\n      const totalPages = Math.ceil(filtered.length / itemsPerPage);\n      const paginated = filtered.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 11\n        }\n      }, \"Select Products\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"mdi mdi-close-box-outline\",\n        style: {\n          fontSize: \"24px\",\n          color: \"#2196F3\",\n          cursor: \"pointer\"\n        },\n        onClick: this.hideProductOverlay,\n        \"aria-label\": \"Close\",\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: \"Search by code or name...\",\n        value: productOverlaySearch,\n        onChange: e => this.setState({\n          productOverlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 19\n        }\n      }, \"Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 19\n        }\n      }, \"Item Desc\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 19\n        }\n      }, \"Select\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 15\n        }\n      }, paginated.map((p, i) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: p.id || i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 21\n        }\n      }, p.productId), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 21\n        }\n      }, p.ptdescription), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-success\",\n        onClick: () => this.selectProductForLineItem(p),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 23\n        }\n      }, \"Select\")))), paginated.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: 3,\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 21\n        }\n      }, \"No products found\"))))), /*#__PURE__*/React.createElement(\"nav\", {\n        \"aria-label\": \"Product pagination example\",\n        style: {\n          marginTop: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"pagination justify-content-end mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: `page-item ${currentPage === 1 ? \"disabled\" : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"page-link\",\n        \"aria-label\": \"Previous\",\n        onClick: () => this.setState({\n          currentPage: Math.max(currentPage - 1, 1)\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 17\n        }\n      }, \"\\xAB\"))), [...Array(totalPages)].map((_, idx) => /*#__PURE__*/React.createElement(\"li\", {\n        key: idx,\n        className: `page-item ${currentPage === idx + 1 ? \"active\" : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"page-link\",\n        onClick: () => this.setState({\n          currentPage: idx + 1\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 17\n        }\n      }, idx + 1))), /*#__PURE__*/React.createElement(\"li\", {\n        className: `page-item ${currentPage === totalPages ? \"disabled\" : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"page-link\",\n        \"aria-label\": \"Next\",\n        onClick: () => this.setState({\n          currentPage: Math.min(currentPage + 1, totalPages)\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 17\n        }\n      }, \"\\xBB\"))))), \"  \")));\n    };\n\n    this.renderTabs = () => {\n      const {\n        activeTab\n      } = this.state;\n      const tabNames = ['Lines', 'Terms', 'Notes'];\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"nav nav-tabs mb-3\",\n        style: {\n          fontSize: '16px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 7\n        }\n      }, tabNames.map((tab, idx) => /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        key: tab,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link${activeTab === idx ? ' active' : ''}`,\n        onClick: () => this.handleTabChange(idx),\n        style: {\n          color: '#007bff',\n          background: activeTab === idx ? '#e9ecef' : '#fff',\n          border: '1px solid #dee2e6',\n          borderBottom: activeTab === idx ? 'none' : undefined,\n          fontWeight: activeTab === idx ? 'bold' : 'normal'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 13\n        }\n      }, tab))));\n    };\n\n    this.isOneYear = (from, to) => {\n      if (!from || !to) return false;\n      const d1 = new Date(from);\n      const d2 = new Date(to);\n      return d2.getFullYear() - d1.getFullYear() === 1 && d2.getMonth() === d1.getMonth() && d2.getDate() === d1.getDate();\n    };\n\n    this.renderBillingTypeSection = () => {\n      const {\n        billingType\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 7\n        }\n      }, \"Billing Type:\"), ['quarterly', 'half-yearly', 'yearly'].map(type => /*#__PURE__*/React.createElement(\"div\", {\n        key: type,\n        className: \"form-check form-check-inline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-check-input\",\n        type: \"radio\",\n        name: \"billingType\",\n        checked: billingType === type,\n        onChange: () => this.setState({\n          billingType: type\n        }, () => {\n          // Set months in line items accordingly\n          this.updateMonthsForBillingType(type);\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 11\n        }\n      }, type.replace('-', ' ').replace('yearly', 'Yearly').replace('half', 'Half').replace('quarterly', 'Quarterly')))));\n    };\n\n    this.updateMonthsForBillingType = type => {\n      let months = 1;\n      if (type === 'yearly') months = 12;else if (type === 'half-yearly') months = 6;else if (type === 'quarterly') months = 3;\n      const updatedItems = (this.state.formData.lineItems || []).map(item => ({ ...item,\n        months\n      }));\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          lineItems: updatedItems\n        }\n      }), this.recalculateContractTotals);\n    };\n\n    this.renderPaymentModeSection = () => {\n      const {\n        paymentMode,\n        autoBill\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 7\n        }\n      }, \"Auto Bill:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: autoBill,\n        onChange: e => this.setState({\n          autoBill: e.target.checked\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 7\n        }\n      }), autoBill && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"ml-3 mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 11\n        }\n      }, \"Payment Mode:\"), ['prorate', 'monthly', 'one-time'].map(mode => /*#__PURE__*/React.createElement(\"div\", {\n        key: mode,\n        className: \"form-check form-check-inline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-check-input\",\n        type: \"radio\",\n        name: \"paymentMode\",\n        checked: paymentMode === mode,\n        onChange: () => this.setState({\n          paymentMode: mode\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 15\n        }\n      }, mode.charAt(0).toUpperCase() + mode.slice(1))))));\n    };\n\n    this.updateLineItemsForAutoBill = () => {\n      const {\n        paymentMode,\n        formData\n      } = this.state;\n      const {\n        durationFrom,\n        durationTo\n      } = formData;\n      const from = new Date(durationFrom);\n      const to = new Date(durationTo);\n      let days = 0,\n          months = 1;\n\n      if (paymentMode === 'prorate') {\n        // Prorate: days = days in first/last month\n        days = new Date(from.getFullYear(), from.getMonth() + 1, 0).getDate() - from.getDate() + 1;\n        months = 1;\n      } else if (paymentMode === 'monthly') {\n        // Monthly: months = total months\n        months = (to.getFullYear() - from.getFullYear()) * 12 + (to.getMonth() - from.getMonth()) + 1;\n        days = 0;\n      } else if (paymentMode === 'one-time') {\n        months = 1;\n        days = 0;\n      }\n\n      const updatedItems = (formData.lineItems || []).map(item => ({ ...item,\n        days,\n        months\n      }));\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          lineItems: updatedItems\n        }\n      }), this.recalculateContractTotals);\n    };\n\n    this.renderLinesTab = () => {\n      const months = this.state.formData.repeat && this.isOneYear(this.state.formData.durationFrom, this.state.formData.durationTo) ? 12 : 1;\n      const {\n        formData,\n        showProductOverlay\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 5\n        }\n      }, this.renderBillingTypeSection(), this.renderPaymentModeSection(), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-sm mr-2\",\n        onClick: this.handleAddItemsClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 907,\n          columnNumber: 9\n        }\n      }, \"Add Items\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-responsive\",\n        style: {\n          overflowX: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        style: {\n          minWidth: 1200\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 917,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 918,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 15\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 920,\n          columnNumber: 15\n        }\n      }, \"Item Desc\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 921,\n          columnNumber: 15\n        }\n      }, \"HSN\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 15\n        }\n      }, \"UOM\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 15\n        }\n      }, \"Duration\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 15\n        }\n      }, \"Qty\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 15\n        }\n      }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 15\n        }\n      }, \"Days\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 927,\n          columnNumber: 15\n        }\n      }, \"Months\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 928,\n          columnNumber: 15\n        }\n      }, \"Tax\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 929,\n          columnNumber: 15\n        }\n      }, \"Tax Amt\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 930,\n          columnNumber: 15\n        }\n      }, \"Item Total\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 933,\n          columnNumber: 11\n        }\n      }, (formData.lineItems || []).map((item, idx) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 17\n        }\n      }, item.itemCode), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 17\n        }\n      }, item.itemDesc), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 17\n        }\n      }, item.hsnCode), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 939,\n          columnNumber: 17\n        }\n      }, item.uom), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 940,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: item.duration || `${formData.durationFrom} to ${formData.durationTo}`,\n        onChange: e => this.handleLineItemChange(idx, 'duration', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 941,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 948,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: item.qty,\n        min: \"1\",\n        style: {\n          width: 80\n        },\n        onChange: e => this.handleLineItemChange(idx, 'qty', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 949,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 958,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: item.unitPrice,\n        min: \"0\",\n        style: {\n          width: 100\n        },\n        onChange: e => this.handleLineItemChange(idx, 'unitPrice', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 959,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: item.days || '',\n        min: \"0\",\n        style: {\n          width: 80\n        },\n        onChange: e => this.handleLineItemChange(idx, 'days', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 969,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: item.months,\n        min: \"1\",\n        style: {\n          width: 80\n        },\n        onChange: e => this.handleLineItemChange(idx, 'months', e.target.value),\n        readOnly: this.state.formData.repeat && this.isOneYear(this.state.formData.durationFrom, this.state.formData.durationTo),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 979,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 989,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-link btn-sm\",\n        onClick: () => this.setState({\n          showTaxOverlay: true,\n          currentTaxLineIdx: idx\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 990,\n          columnNumber: 19\n        }\n      }, item.taxGroupNames && item.taxGroupNames.length > 0 ? item.taxGroupNames.join(', ') : 'Select Tax')), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1000,\n          columnNumber: 17\n        }\n      }, item.taxAmt), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1001,\n          columnNumber: 17\n        }\n      }, item.itemTotal))), (!formData.lineItems || formData.lineItems.length === 0) && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1005,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"12\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1006,\n          columnNumber: 17\n        }\n      }, \"No items\"))))), showProductOverlay && this.renderProductOverlay());\n    };\n\n    this.renderTermsTab = () => {\n      const {\n        formData\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1020,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1021,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1023,\n          columnNumber: 13\n        }\n      }, \"Despatch Mode\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.despatchMode,\n        onChange: e => this.handleInputChange('despatchMode', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1024,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1026,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1027,\n          columnNumber: 13\n        }\n      }, \"Payment Terms\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.paymentTerms,\n        onChange: e => this.handleInputChange('paymentTerms', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1028,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1031,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1032,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1033,\n          columnNumber: 13\n        }\n      }, \"Bill To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"2\",\n        value: formData.billTo,\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1036,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1037,\n          columnNumber: 13\n        }\n      }, \"Ship To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"2\",\n        value: formData.shipTo,\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1038,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1041,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1042,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1043,\n          columnNumber: 13\n        }\n      }, \"Freight Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.freightCharges,\n        onChange: e => this.handleInputChange('freightCharges', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1044,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1046,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1047,\n          columnNumber: 13\n        }\n      }, \"Freight Tax %\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.freightTaxPercent,\n        onChange: e => this.handleInputChange('freightTaxPercent', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1048,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1050,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1051,\n          columnNumber: 13\n        }\n      }, \"Freight Tax Amt\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.freightTaxAmt,\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1052,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1054,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1055,\n          columnNumber: 13\n        }\n      }, \"Packing Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.packingCharges,\n        onChange: e => this.handleInputChange('packingCharges', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1056,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1059,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1060,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1061,\n          columnNumber: 13\n        }\n      }, \"Amount Limit\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.amountLimit,\n        onChange: e => this.handleInputChange('amountLimit', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1062,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1064,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1065,\n          columnNumber: 13\n        }\n      }, \"Minimum Release\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.minimumRelease,\n        onChange: e => this.handleInputChange('minimumRelease', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1066,\n          columnNumber: 13\n        }\n      }))));\n    };\n\n    this.renderNotesTab = () => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1074,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1075,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1076,\n        columnNumber: 9\n      }\n    }, \"Notes / Remarks\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"form-control form-control-sm\",\n      rows: \"4\",\n      value: this.state.notes,\n      onChange: this.handleNotesChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1077,\n        columnNumber: 9\n      }\n    })));\n\n    this.renderForm = () => {\n      const {\n        activeTab,\n        formData\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card full-height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1085,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        className: \"form-sample\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1086,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: 'auto',\n          padding: '24px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1087,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1088,\n          columnNumber: 13\n        }\n      }, \"Service Contract Creation/Update\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1089,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1090,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1091,\n          columnNumber: 17\n        }\n      }, \"Contract Type\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.contractType,\n        onChange: e => this.handleInputChange('contractType', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1092,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Standard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1097,\n          columnNumber: 19\n        }\n      }, \"Standard\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Manual\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1098,\n          columnNumber: 19\n        }\n      }, \"Manual\"))), this.renderContractNoField(), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1102,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1103,\n          columnNumber: 17\n        }\n      }, \"Created Date\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"date\",\n        className: \"form-control form-control-sm\",\n        value: formData.createdDate,\n        onChange: e => this.handleInputChange('createdDate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1104,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1111,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1112,\n          columnNumber: 17\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.status,\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1113,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1115,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1116,\n          columnNumber: 17\n        }\n      }, \"Name of Work\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.nameofwrk,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1117,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1123,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1124,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1125,\n          columnNumber: 17\n        }\n      }, \"Customer\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1126,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Choose Customer\",\n        value: formData.customer,\n        readOnly: true,\n        onClick: this.showCustomerOverlay,\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1127,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1136,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        onClick: this.showCustomerOverlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1137,\n          columnNumber: 21\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1141,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1142,\n          columnNumber: 17\n        }\n      }, \"Customer Order\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1143,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Select Order\",\n        value: formData.customerOrderId || '',\n        readOnly: true,\n        onClick: this.showCustomerOrderOverlay,\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1144,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1153,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        onClick: this.showCustomerOrderOverlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1154,\n          columnNumber: 21\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1158,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1159,\n          columnNumber: 17\n        }\n      }, \"Ref No\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.refNo,\n        onChange: e => this.handleInputChange('refNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1160,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1162,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1163,\n          columnNumber: 17\n        }\n      }, \"Currency\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.currency,\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1164,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1166,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1167,\n          columnNumber: 17\n        }\n      }, \"Conversion Rate\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.conversionRate,\n        onChange: e => this.handleInputChange('conversionRate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1168,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1171,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1172,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1173,\n          columnNumber: 5\n        }\n      }, \"Contr.Duration From\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"date\",\n        value: this.state.formData.durationFrom || '',\n        onChange: e => this.handleInputChange('durationFrom', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1174,\n          columnNumber: 5\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1180,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1181,\n          columnNumber: 5\n        }\n      }, \"Contr.Duration To\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"date\",\n        value: this.state.formData.durationTo || '',\n        onChange: e => this.handleInputChange('durationTo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1182,\n          columnNumber: 5\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1188,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1189,\n          columnNumber: 5\n        }\n      }, \"Till Date\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"date\",\n        value: this.state.formData.tillDate || '',\n        onChange: e => this.handleInputChange('tillDate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1190,\n          columnNumber: 5\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-2 d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1196,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1197,\n          columnNumber: 5\n        }\n      }, \"Repeat\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: this.state.formData.repeat || false,\n        onChange: e => this.handleInputChange('repeat', e.target.checked),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1198,\n          columnNumber: 5\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1205,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1206,\n          columnNumber: 17\n        }\n      }, \"Amt.Agreed\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.amtAgreed,\n        onChange: e => this.handleInputChange('amtAgreed', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1207,\n          columnNumber: 17\n        }\n      }))), this.renderTabs(), activeTab === 0 && this.renderLinesTab(), activeTab === 1 && this.renderTermsTab(), activeTab === 2 && this.renderNotesTab(), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fixed-card-footer text-right p-3 border-top bg-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1214,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1215,\n          columnNumber: 15\n        }\n      }, this.state.editingId ? \"Update\" : \"Create\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: () => this.setState({\n          showForm: false,\n          editingId: null,\n          formData: this.getEmptyContractForm(),\n          notes: ''\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1218,\n          columnNumber: 15\n        }\n      }, \"Cancel\")))), this.state.showAlert && this.renderAlert(), this.state.showCustomerOrderOverlay && this.renderCustomerOrderOverlay());\n    };\n\n    this.renderTable = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-4 full-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1231,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1232,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1233,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1234,\n        columnNumber: 9\n      }\n    }, \"Service Contracts\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.setState({\n        showForm: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1235,\n        columnNumber: 9\n      }\n    }, \"+ Create Contract\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1237,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1238,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1239,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1240,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1241,\n        columnNumber: 15\n      }\n    }, \"Contract No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1242,\n        columnNumber: 15\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1243,\n        columnNumber: 15\n      }\n    }, \"Ref No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1244,\n        columnNumber: 15\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1245,\n        columnNumber: 15\n      }\n    }, \"Currency\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1246,\n        columnNumber: 15\n      }\n    }, \"Duration\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1247,\n        columnNumber: 15\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1248,\n        columnNumber: 15\n      }\n    }, \"Value\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1251,\n        columnNumber: 11\n      }\n    }, this.state.contracts.map((c, i) => {\n      let statusClass = \"badge-secondary\";\n      if (c.status === \"Awaiting Approval\") statusClass = \"badge-warning\";else if (c.status === \"Approved\") statusClass = \"badge-success\";else if (c.status === \"Partial\") statusClass = \"badge-secondary\"; // you need to define css .badge-purple { background:#6f42c1; }\n      else if (c.status === \"Completed\") statusClass = \"badge-info\";\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1260,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1261,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-link p-0\",\n        onClick: () => this.setState({\n          showForm: true,\n          editingId: c.id,\n          formData: { ...c\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1262,\n          columnNumber: 21\n        }\n      }, c.contractNo)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1273,\n          columnNumber: 19\n        }\n      }, this.formatDate(c.createdDate)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1274,\n          columnNumber: 19\n        }\n      }, c.refNo), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1275,\n          columnNumber: 19\n        }\n      }, c.customer), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1276,\n          columnNumber: 19\n        }\n      }, c.currency), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1277,\n          columnNumber: 19\n        }\n      }, this.formatDate(c.contrDurationFrom), \" - \", this.formatDate(c.contrDurationTo)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1280,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: `badge ${statusClass}`,\n        style: {\n          fontSize: '14px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1281,\n          columnNumber: 21\n        }\n      }, c.status)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1283,\n          columnNumber: 19\n        }\n      }, c.contractValue));\n    }))))));\n  }\n\n  getEmptyContractForm() {\n    return {\n      contractType: 'Standard',\n      contractNo: '',\n      createdDate: new Date().toISOString().split('T')[0],\n      status: 'Entered',\n      refNo: '',\n      customer: '',\n      currency: '',\n      conversionRate: '',\n      amtAgreed: '',\n      nameofwrk: '',\n      durationFrom: '',\n      durationTo: '',\n      lineItems: [],\n      despatchMode: '',\n      paymentTerms: '',\n      billTo: '',\n      shipTo: '',\n      freightCharges: '',\n      freightTaxPercent: '',\n      freightTaxAmt: '',\n      packingCharges: '',\n      amountLimit: '',\n      minimumRelease: '',\n      contractValue: '',\n      notes: ''\n    };\n  }\n\n  componentDidMount() {\n    this.fetchContracts();\n    this.fetchCustomers();\n    this.fetchProducts();\n    this.fetchTaxGroups();\n    this.fetchUsers();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.paymentMode !== this.state.paymentMode || prevState.autoBill !== this.state.autoBill) {\n      if (this.state.autoBill) {\n        this.updateLineItemsForAutoBill();\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1297,\n        columnNumber: 7\n      }\n    }, this.state.showCustomerOverlay && this.renderCustomerOverlay(), this.state.showProductOverlay && this.renderProductOverlay(), this.state.showForm ? this.renderForm() : this.renderTable(), this.state.showTaxOverlay && this.renderTaxOverlay());\n  }\n\n}\n\nexport default ContractBilling;","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/sales/salestransactions/servicecontract/servicecontractbilling.js"],"names":["React","Component","Form","DatePicker","db","Modal","Button","collection","query","where","getDocs","addDoc","updateDoc","doc","serverTimestamp","format","ContractBilling","state","contracts","customers","products","taxGroups","users","isOneYear","showTaxOverlay","activeTab","showForm","editingId","durationFrom","durationTo","billingType","autobill","paymentMode","tillDate","repeat","canAddItems","showProductOverlay","productOverlaySearch","selectedProductIds","formData","getEmptyContractForm","notes","searchTerm","nameofwrk","showCustomerOrderOverlay","customerOrderOverlaySearch","selectedCustomerOrders","customerOrders","customerOrderLineItems","showAlert","alertMsg","fetchContracts","snap","data","docs","map","id","setState","reverse","fetchCustomers","fetchCustomerOrders","customerName","orders","filtered","filter","o","customer","status","fetchProducts","fetchUsers","fetchTaxGroups","checkDurationSelected","hideProductOverlay","toggleProductSelection","productId","checked","prev","addSelectedProductsToLineItems","selectedProducts","p","includes","newItems","product","itemCode","itemDesc","ptdescription","hsnCode","qty","unitPrice","price","months","taxGroupNames","taxAmt","itemTotal","lineItems","recalculateContractTotals","getDurationInfo","days","from","Date","to","getFullYear","getMonth","formatAddress","addr","address","city","country","Boolean","join","zip","formatDate","d","selectCustomer","custname","currency","billTo","shipTo","despatchMode","paymentTerms","customerOrderId","showCustomerOverlay","selectCustomerOrder","order","item","itemDescription","uom","orderNo","selectProductForLineItem","newItem","code","name","hsn","handleInputChange","field","value","handleAddItemsClick","bundleProducts","category","filteredProducts","handleLineItemChange","idx","updatedItems","percent","amount","forEach","groupName","group","find","t","Array","isArray","comp","val","parseFloat","percentOrAmt","type","baseTotal","toFixed","toggleTaxGroupSelection","lineIdx","isChecked","push","g","freightCharges","freightTaxPercent","packingCharges","conversionRate","amtAgreed","freightTaxAmt","finalValue","contractValue","handleTabChange","handleNotesChange","e","target","handleSubmit","preventDefault","alert","length","saveData","createdAt","contractNo","renderAlert","renderTaxOverlay","currentTaxLineIdx","selected","Set","fontSize","color","cursor","handleOverlayClose","background","tg","has","li","component","renderContractNoField","contractType","customerOverlaySearch","hideCustomerOverlay","renderCustomerOverlay","c","toLowerCase","custcode","custshortName","maxHeight","overflowY","i","hideCustomerOrderOverlay","renderCustomerOrderOverlay","orderDate","orderValue","renderProductOverlay","currentPage","ptshortName","itemsPerPage","totalPages","Math","ceil","paginated","slice","display","alignItems","justifyContent","marginTop","max","_","min","renderTabs","tabNames","tab","border","borderBottom","undefined","fontWeight","d1","d2","getDate","renderBillingTypeSection","updateMonthsForBillingType","replace","renderPaymentModeSection","autoBill","mode","charAt","toUpperCase","updateLineItemsForAutoBill","renderLinesTab","overflowX","minWidth","duration","width","renderTermsTab","amountLimit","minimumRelease","renderNotesTab","renderForm","flex","padding","createdDate","refNo","renderTable","statusClass","contrDurationFrom","contrDurationTo","toISOString","split","componentDidMount","componentDidUpdate","prevProps","prevState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { db } from '../../../../firebase';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport { collection, query, where,getDocs, addDoc, updateDoc, doc, serverTimestamp } from 'firebase/firestore';\r\nimport { format } from 'date-fns';  \r\nclass ContractBilling extends Component {\r\n  \r\n  state = {\r\n    contracts: [],\r\n    customers: [],\r\n    products: [],\r\n    taxGroups: [],\r\n    users: [],\r\n    isOneYear: '',\r\n    showTaxOverlay: false,\r\n    activeTab: 0,\r\n    showForm: false,\r\n    editingId: null,\r\n    durationFrom: null,\r\n    durationTo: null,\r\n    billingType: 'yearly',\r\n    autobill: false,\r\n    paymentMode:'monthly',\r\n    tillDate: '', \r\n    repeat: false, \r\n    canAddItems: false,\r\n    showProductOverlay: false,\r\n    productOverlaySearch: '',\r\n    selectedProductIds:[],\r\n    formData: this.getEmptyContractForm(),\r\n    notes: '',\r\n    searchTerm:'',\r\n    nameofwrk:'',\r\n    showCustomerOrderOverlay: false,\r\n    customerOrderOverlaySearch: '',\r\n    selectedCustomerOrders: [],\r\n    customerOrders: [],\r\n    customerOrderLineItems: [],\r\n    showAlert: false,\r\n    alertMsg: '',\r\n  };\r\n\r\n  getEmptyContractForm() {\r\n    return {\r\n      contractType: 'Standard',\r\n      contractNo: '',\r\n      createdDate: new Date().toISOString().split('T')[0],\r\n      status: 'Entered',\r\n      refNo: '',\r\n      customer: '',\r\n      currency: '',\r\n      conversionRate: '',\r\n      amtAgreed: '',\r\n      nameofwrk:'',\r\n      durationFrom: '',\r\n      durationTo: '',\r\n      lineItems: [],\r\n      despatchMode: '',\r\n      paymentTerms: '',\r\n      billTo: '',\r\n      shipTo: '',\r\n      freightCharges: '',\r\n      freightTaxPercent: '',\r\n      freightTaxAmt: '',\r\n      packingCharges: '',\r\n      amountLimit: '',\r\n      minimumRelease: '',\r\n      contractValue: '',\r\n      notes: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchContracts();\r\n    this.fetchCustomers();\r\n    this.fetchProducts();\r\n    this.fetchTaxGroups();\r\n    this.fetchUsers();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n  if (\r\n    prevState.paymentMode !== this.state.paymentMode ||\r\n    prevState.autoBill !== this.state.autoBill\r\n  ) {\r\n    if (this.state.autoBill) {\r\n      this.updateLineItemsForAutoBill();\r\n    }\r\n  }\r\n}\r\n\r\n  fetchContracts = async () => {\r\n    const snap = await getDocs(collection(db, 'contracts'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ contracts: data.reverse() });\r\n  };\r\n\r\n  fetchCustomers = async () => {\r\n    const snap = await getDocs(collection(db, 'customers'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ customers: data });\r\n  };\r\nfetchCustomerOrders = async (customerName) => {\r\n  if (!customerName) return this.setState({ customerOrders: [] });\r\n  const snap = await getDocs(collection(db, 'orders'));\r\n  const orders = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  const filtered = orders.filter(\r\n    o => (o.customer === customerName || o.customerName === customerName) && o.status === \"Approved\"\r\n  );\r\n  this.setState({ customerOrders: filtered });\r\n};\r\n\r\n  fetchProducts = async () => {\r\n    const snap = await getDocs(collection(db, 'products'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ products: data });\r\n  };\r\nfetchUsers = async () => {\r\n  const snap = await getDocs(collection(db, 'users'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ users: data });\r\n};\r\n  fetchTaxGroups = async () => {\r\n    const snap = await getDocs(collection(db, 'taxGroups'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ taxGroups: data });\r\n  };\r\n  \r\n  checkDurationSelected = () => {\r\n  const { durationFrom, durationTo } = this.state;\r\n  this.setState({ canAddItems: !!(durationFrom && durationTo) });\r\n};\r\n\r\n\r\n  showProductOverlay = () => this.setState({ showProductOverlay: true, productOverlaySearch: '', selectedProductIds: [] });\r\n  hideProductOverlay = () => this.setState({ showProductOverlay: false, productOverlaySearch: '', selectedProductIds: [] });\r\n\r\ntoggleProductSelection = (productId, checked) => {\r\n  this.setState(prev => ({\r\n    selectedProductIds: checked\r\n      ? [...prev.selectedProductIds, productId]\r\n      : prev.selectedProductIds.filter(id => id !== productId)\r\n  }));\r\n};\r\naddSelectedProductsToLineItems = () => {\r\n  const selectedProducts = this.state.products.filter(p => this.state.selectedProductIds.includes(p.id));\r\n  const newItems = selectedProducts.map(product => ({\r\n    itemCode: product.productId || '',\r\n    itemDesc: product.ptdescription || '',\r\n    hsnCode: product.hsnCode || '',\r\n    qty: 1,\r\n    unitPrice: product.price || 0,\r\n    months: 1,\r\n    taxGroupNames: [],\r\n    taxAmt: 0,\r\n    itemTotal: 0\r\n  }));\r\n  this.setState(prev => ({\r\n    formData: {\r\n      ...prev.formData,\r\n      lineItems: [...prev.formData.lineItems, ...newItems]\r\n    },\r\n    showProductOverlay: false,\r\n    selectedProductIds: []\r\n  }), this.recalculateContractTotals);\r\n};\r\n\r\ngetDurationInfo = () => {\r\n  const { durationFrom, durationTo } = this.state.formData;\r\n  if (!durationFrom || !durationTo) return { months: 0, days: 0, billingType: '' };\r\n  const from = new Date(durationFrom);\r\n  const to = new Date(durationTo);\r\n  // Months difference\r\n  let months = (to.getFullYear() - from.getFullYear()) * 12 + (to.getMonth() - from.getMonth()) + 1;\r\n  // Days difference\r\n  let days = (to - from) / (1000 * 60 * 60 * 24) + 1;\r\n  // Billing type\r\n  let billingType = '';\r\n  if (months >= 12) billingType = 'yearly';\r\n  else if (months === 6) billingType = 'half-yearly';\r\n  else if (months <= 3) billingType = 'quarterly';\r\n  return { months, days, billingType };\r\n};\r\n\r\nformatAddress = (addr) => {\r\n  if (!addr) return '';\r\n  if (typeof addr === 'string') return addr;\r\n  return [\r\n    addr.address,\r\n    [addr.city, addr.state, addr.country].filter(Boolean).join(', '),\r\n    addr.zip\r\n  ].filter(Boolean).join('\\n');\r\n};\r\n\r\nformatDate = (d) => {\r\n  if (!d) return '';\r\n  try {\r\n    return format(new Date(d), 'dd-MMM-yy');\r\n  } catch {\r\n    return d;\r\n  }\r\n};\r\n\r\n  selectCustomer = (customer) => {\r\n  this.setState(prev => ({\r\n    formData: {\r\n      ...prev.formData,\r\n      customer: customer.custname,\r\n      currency: customer.currency || '',\r\n      billTo: this.formatAddress(customer.billTo),\r\n      shipTo: this.formatAddress(customer.shipTo),\r\n      despatchMode: customer.despatchMode || '',\r\n      paymentTerms: customer.paymentTerms || '',\r\n      customerOrderId: '',\r\n      lineItems: [] \r\n    },\r\n    showCustomerOverlay: false,\r\n    customerOrderLineItems: [],\r\n    customerOrders: []\r\n  }), () => {\r\n    this.fetchCustomerOrders(customer.custname); \r\n  });\r\n};\r\n\r\nselectCustomerOrder = (order) => {\r\n  const lineItems = (order.lineItems || []).map(item => ({\r\n    itemCode: item.itemCode || '',\r\n    itemDesc: item.itemDescription || '',\r\n    hsnCode: item.hsnCode || '',\r\n    uom: item.uom || '',\r\n    qty: item.qty || 1,\r\n    unitPrice: item.unitPrice || 0,\r\n    months: 1,\r\n    taxGroupNames: [],\r\n    taxAmt: 0,\r\n    itemTotal: 0\r\n  }));\r\n  this.setState(prev => ({\r\n    formData: {\r\n      ...prev.formData,\r\n      customerOrderId: order.orderNo,\r\n      lineItems,\r\n    },\r\n    showCustomerOrderOverlay: false,\r\n    customerOrderLineItems: lineItems,\r\n  }), this.recalculateContractTotals);\r\n};\r\n\r\n  selectProductForLineItem = (product) => {\r\n    const newItem = {\r\n      itemCode: product.code || '',\r\n      itemDesc: product.name || '',\r\n      hsnCode: product.hsn || '',\r\n      uom: product.uom || '',\r\n      qty: 1,\r\n      unitPrice: product.price || 0,\r\n      months: 1,\r\n      taxGroupNames: [],\r\n      taxAmt: 0,\r\n      itemTotal: 0\r\n    };\r\n    this.setState(prev => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        lineItems: [...prev.formData.lineItems, newItem]\r\n      },\r\n      showProductOverlay: false\r\n    }), this.recalculateContractTotals);\r\n  };\r\n\r\nhandleInputChange = (field, value) => {\r\n  this.setState(prev => ({\r\n    formData: { ...prev.formData, [field]: value }\r\n  }), () => {\r\n    if (field === 'durationFrom' || field === 'durationTo') {\r\n      const { billingType } = this.getDurationInfo();\r\n      this.setState({ billingType });\r\n    }\r\n    if (['freightCharges', 'freightTaxPercent', 'packingCharges', 'amtAgreed', 'conversionRate'].includes(field)) {\r\n      this.recalculateContractTotals();\r\n    }\r\n  });\r\n};\r\n\r\nhandleAddItemsClick = () => {\r\n  const { formData } = this.state;\r\n  if (!formData.customer) {\r\n    this.setState({ showAlert: true, alertMsg: \"Select customer first!\" });\r\n    return;\r\n  }\r\n  if (!formData.durationFrom || !formData.durationTo) {\r\n    this.setState({ showAlert: true, alertMsg: \"Select contract duration first!\" });\r\n    return;\r\n  }\r\n  if (!formData.customerOrderId) {\r\n    // Filter products for Bundle category\r\n    const bundleProducts = this.state.products.filter(p => p.category === \"Bundle\");\r\n    this.setState({ filteredProducts: bundleProducts, showProductOverlay: true });\r\n  } else {\r\n    this.setState({ showAlert: true, alertMsg: \"Line items are already filled from selected order.\" });\r\n  }\r\n};\r\n\r\nhandleLineItemChange = (idx, field, value) => {\r\n    const updatedItems = [...this.state.formData.lineItems];\r\n    updatedItems[idx] = { ...updatedItems[idx], [field]: value };\r\n    // Calculate baseTotal and tax\r\n    let percent = 0;\r\n    let amount = 0;\r\n    (updatedItems[idx].taxGroupNames || []).forEach(groupName => {\r\n      const group = this.state.taxGroups.find(t => t.groupName === groupName);\r\n      if (group && Array.isArray(group.lineItems)) {\r\n        group.lineItems.forEach(comp => {\r\n          const val = parseFloat(comp.percentOrAmt || 0);\r\n          if (comp.type === 'Percentage') percent += val;\r\n          if (comp.type === 'Amount') amount += val;\r\n        });\r\n      }\r\n    });\r\n    const qty = parseFloat(updatedItems[idx].qty || 0);\r\n    const unitPrice = parseFloat(updatedItems[idx].unitPrice || 0);\r\n    const months = parseFloat(updatedItems[idx].months || 1);\r\n    const baseTotal = qty * unitPrice * months;\r\n    const taxAmt = ((baseTotal * percent) / 100 + amount);\r\n    updatedItems[idx].taxAmt = taxAmt.toFixed(2);\r\n    updatedItems[idx].itemTotal = (baseTotal + taxAmt).toFixed(2);\r\n    updatedItems[idx].baseTotal = baseTotal.toFixed(2);\r\n\r\n    this.setState(prev => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        lineItems: updatedItems\r\n      }\r\n    }), this.recalculateContractTotals);\r\n  };\r\n\r\n toggleTaxGroupSelection = (groupName, lineIdx, isChecked) => {\r\n    const formData = { ...this.state.formData };\r\n    const item = formData.lineItems[lineIdx];\r\n    if (!item.taxGroupNames) item.taxGroupNames = [];\r\n    if (isChecked) {\r\n      if (!item.taxGroupNames.includes(groupName)) {\r\n        item.taxGroupNames.push(groupName);\r\n      }\r\n    } else {\r\n      item.taxGroupNames = item.taxGroupNames.filter(g => g !== groupName);\r\n    }\r\n    // recalculate taxAmt and total\r\n    let percent = 0;\r\n    let amount = 0;\r\n    (item.taxGroupNames || []).forEach(groupName => {\r\n      const group = this.state.taxGroups.find(t => t.groupName === groupName);\r\n      if (group && Array.isArray(group.lineItems)) {\r\n        group.lineItems.forEach(comp => {\r\n          const val = parseFloat(comp.percentOrAmt || 0);\r\n          if (comp.type === 'Percentage') percent += val;\r\n          if (comp.type === 'Amount') amount += val;\r\n        });\r\n      }\r\n    });\r\n    const qty = parseFloat(item.qty || 0);\r\n    const unitPrice = parseFloat(item.unitPrice || 0);\r\n    const months = parseFloat(item.months || 1);\r\n    const baseTotal = qty * unitPrice * months;\r\n    const taxAmt = ((baseTotal * percent) / 100 + amount);\r\n    item.taxAmt = taxAmt.toFixed(2);\r\n    item.itemTotal = (baseTotal + taxAmt).toFixed(2);\r\n    item.baseTotal = baseTotal.toFixed(2);\r\n    this.setState({ formData }, this.recalculateContractTotals);\r\n  };\r\n\r\nrecalculateContractTotals = () => {\r\n    const { lineItems, freightCharges, freightTaxPercent, packingCharges, conversionRate } = this.state.formData;\r\n    let amtAgreed = 0;\r\n    (lineItems || []).forEach(item => {\r\n      amtAgreed += parseFloat(item.itemTotal || 0);\r\n    });\r\n\r\n    // Freight + packing\r\n    const freightTaxAmt = (parseFloat(freightCharges || 0) * parseFloat(freightTaxPercent || 0)) / 100;\r\n    amtAgreed += parseFloat(packingCharges || 0) + freightTaxAmt;\r\n\r\n    // Apply conversion rate if needed\r\n    let finalValue = amtAgreed;\r\n    if (conversionRate) {\r\n      finalValue = amtAgreed * parseFloat(conversionRate);\r\n    }\r\n\r\n    this.setState(prev => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        amtAgreed: finalValue.toFixed(2),\r\n        contractValue: finalValue.toFixed(2),\r\n        freightTaxAmt: freightTaxAmt.toFixed(2)\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleTabChange = (idx) => this.setState({ activeTab: idx });\r\n\r\n  handleNotesChange = (e) => this.setState({ notes: e.target.value });\r\n\r\n  handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  const { editingId, formData, contracts, notes } = this.state;\r\n  if (!formData.customer) return alert(\"Customer is required\");\r\n  if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\r\n\r\n  const saveData = {\r\n    ...formData,\r\n    notes,\r\n    status: \"Awaiting Approval\",\r\n    createdAt: serverTimestamp()\r\n  };\r\n\r\n  if (editingId) {\r\n    await updateDoc(doc(db, \"contracts\", editingId), saveData);\r\n  } else {\r\n    saveData.contractNo = `SC${1000 + contracts.length}`;\r\n    await addDoc(collection(db, \"contracts\"), saveData);\r\n  }\r\n\r\n  this.setState({\r\n    showForm: false,\r\n    editingId: null,\r\n    formData: this.getEmptyContractForm(),\r\n    notes: ''\r\n  });\r\n  this.fetchContracts();\r\n};\r\nrenderAlert = () => (\r\n    <Modal show={this.state.showAlert} onHide={() => this.setState({ showAlert: false })} centered>\r\n      <Modal.Body>\r\n        <div className=\"text-center\">{this.state.alertMsg}</div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"primary\" onClick={() => this.setState({ showAlert: false })}>OK</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n\r\nrenderTaxOverlay = () => {\r\n  const { taxGroups, currentTaxLineIdx, formData } = this.state;\r\n  if (currentTaxLineIdx === null) return null;\r\n\r\n  const item = formData.lineItems[currentTaxLineIdx];\r\n  const selected = new Set(item.taxGroupNames || []);\r\n\r\n  return ( \r\n  <div className=\"custom-overlay\">\r\n      <div className=\"custom-overlay-content\">\r\n        <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n          <div className=\"custom-overlay-title\">Select Tax Groups</div>\r\n          <div>\r\n            <button\r\n              className=\"btn btn-primary btn-sm mr-2\"\r\n              onClick={() => this.setState({ showTaxOverlay: false })}\r\n              type=\"button\"\r\n            >\r\n              Submit\r\n            </button>\r\n            <i className=\"mdi mdi-close-box-outline\"\r\n              style={{ fontSize: \"24px\", color: \"#2196F3\", cursor: \"pointer\" }} \r\n              onClick={this.handleOverlayClose}\r\n              aria-label=\"Close\"\r\n              type=\"button\"\r\n            >\r\n            </i>\r\n          </div>\r\n          </div>\r\n      <table className=\"table table-sm table-bordered\">\r\n        <thead style={{ background: '#f4f6fa' }}>\r\n          <tr>\r\n            <th></th>\r\n            <th>Group</th>\r\n            <th>Components</th>\r\n            <th>Type</th>\r\n            <th>% / Amount</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {taxGroups.map(tg => (\r\n            <tr key={tg.groupName}>\r\n              <td>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selected.has(tg.groupName)}\r\n                  onChange={e =>\r\n                    this.toggleTaxGroupSelection(tg.groupName, currentTaxLineIdx, e.target.checked)\r\n                  }\r\n                />\r\n              </td>\r\n              <td >{tg.groupName}</td>\r\n              <td>{tg.lineItems.map(li => li.component).join(', ')}</td>\r\n              <td>{tg.lineItems.map(li => li.type).join(', ')}</td>\r\n              <td>{tg.lineItems.map(li => li.percentOrAmt).join(', ')}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n renderContractNoField = () => {\r\n    const { formData } = this.state;\r\n    return (\r\n      <div className=\"form-group col-md-2\">\r\n        <label>Contract No</label>\r\n        {formData.contractType === \"Standard\" ? (\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control form-control-sm\"\r\n            value={formData.contractNo}\r\n            readOnly\r\n            placeholder=\"Auto\"\r\n          />\r\n        ) : (\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control form-control-sm\"\r\n            value={formData.contractNo}\r\n            onChange={e => this.handleInputChange('contractNo', e.target.value)}\r\n            placeholder=\"Enter Contract No\"\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\nshowCustomerOverlay = () => this.setState({ showCustomerOverlay: true, customerOverlaySearch: '' });\r\nhideCustomerOverlay = () => this.setState({ showCustomerOverlay: false, customerOverlaySearch: '' });\r\n\r\nrenderCustomerOverlay = () => {\r\n  const { customers, customerOverlaySearch } = this.state;\r\n  const filtered = customers.filter(c =>\r\n    (c.custname || '').toLowerCase().includes(customerOverlaySearch.toLowerCase()) ||\r\n    (c.custcode || '').toLowerCase().includes(customerOverlaySearch.toLowerCase()) ||\r\n    (c.custshortName || '').toLowerCase().includes(customerOverlaySearch.toLowerCase())\r\n  );\r\n  return (\r\n     <div className=\"custom-overlay\">\r\n      <div className=\"custom-overlay-content\">\r\n        <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n        <div className=\"custom-overlay-title\">Select Customer</div>\r\n        <i className='mdi mdi-close-box-outline'\r\n        style={{ fontSize: \"24px\", color: \"#2196F3\", cursor: \"pointer\" }} \r\n            onClick={()=> this.setState({ showCustomerOverlay: false, customerOverlaySearch: '' })}\r\n            aria-label=\"Close\"\r\n            type=\"button\"\r\n          >\r\n          </i>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control mb-2\"\r\n          placeholder={`Search customer`}\r\n          value={customerOverlaySearch}\r\n          onChange={e => this.setState({ customerOverlaySearch: e.target.value })}\r\n        />\r\n        <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n          <table className=\"table table-bordered table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Code</th>\r\n                <th>Short Name</th>\r\n                <th>Select</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filtered.map((c, i) => (\r\n                <tr key={c.id || i}>\r\n                  <td>{c.custname}</td>\r\n                  <td>{c.custcode}</td>\r\n                  <td>{c.custshortName}</td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-sm btn-success\"\r\n                      onClick={() => this.selectCustomer(c)}\r\n                    >Select</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n              {filtered.length === 0 && (\r\n                <tr>\r\n                  <td colSpan={4} className=\"text-center\">No customers found</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nshowCustomerOrderOverlay = () => this.setState({ showCustomerOrderOverlay: true, customerOrderOverlaySearch: '' });\r\nhideCustomerOrderOverlay = () => this.setState({ showCustomerOrderOverlay: false, customerOrderOverlaySearch: '' });\r\n\r\nrenderCustomerOrderOverlay = () => {\r\n  const { customerOrders, customerOrderOverlaySearch } = this.state;\r\n  const filtered = customerOrders.filter(o =>\r\n    (o.orderNo || '').toLowerCase().includes(customerOrderOverlaySearch.toLowerCase())\r\n  );\r\n  return (\r\n     <div className=\"custom-overlay\">\r\n      <div className=\"custom-overlay-content\">\r\n        <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n        <div className=\"custom-overlay-title\">Select Customer Order</div>\r\n        <i className='mdi mdi-close-box-outline'\r\n        style={{ fontSize: \"24px\", color: \"#2196F3\", cursor: \"pointer\" }} \r\n            onClick={()=> this.setState({ showCustomerOrderOverlay: false, customerOrderOverlaySearch: '' })}\r\n            aria-label=\"Close\"\r\n            type=\"button\"\r\n          >\r\n          </i>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control mb-2\"\r\n          placeholder={`Search Customer Orders`}\r\n          value={customerOrderOverlaySearch}\r\n          onChange={e => this.setState({ customerOrderOverlaySearch: e.target.value })}\r\n        />\r\n        <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n          <table className=\"table table-bordered table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>Order No</th>\r\n                <th>Date</th>\r\n                <th>Value</th>\r\n                <th>Select</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filtered.map((o, i) => (\r\n                <tr key={o.id || i}>\r\n                  <td>{o.orderNo}</td>\r\n                  <td>{o.orderDate}</td>\r\n                  <td>{o.orderValue}</td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-sm btn-success\"\r\n                      onClick={() => this.selectCustomerOrder(o)}\r\n                    >Select</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n              {filtered.length === 0 && (\r\n                <tr>\r\n                  <td colSpan={4} className=\"text-center\">No approved orders found</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n renderProductOverlay = () => {\r\n    const { products, productOverlaySearch, selectedProductIds,currentPage=1 } = this.state;\r\n    const filtered = products.filter(p =>\r\n      (p.ptshortName || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) ||\r\n      (p.ptdescription || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) ||\r\n      (p.itemCode || '').toLowerCase().includes(productOverlaySearch.toLowerCase())\r\n    );\r\n    const itemsPerPage=10;\r\n    const totalPages = Math.ceil(filtered.length / itemsPerPage);\r\n  const paginated = filtered.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\r\n\r\n    return (\r\n      <div className=\"custom-overlay\" \r\n    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n      <div\r\n        className=\"custom-overlay-content\"\r\n      >\r\n        <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n          <div className=\"custom-overlay-title\">Select Products</div>\r\n           <div className=\"d-flex align-items-center\">\r\n            <i\r\n              className=\"mdi mdi-close-box-outline\"\r\n              style={{ fontSize: \"24px\", color: \"#2196F3\", cursor: \"pointer\" }}\r\n              onClick={this.hideProductOverlay}\r\n              aria-label=\"Close\"\r\n              type=\"button\"\r\n            ></i>\r\n           </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Search by code or name...\"\r\n            value={productOverlaySearch}\r\n            onChange={e => this.setState({ productOverlaySearch: e.target.value })}\r\n          />\r\n           <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n            <table className=\"table table-bordered table-sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Code</th>\r\n                  <th>Item Desc</th>\r\n                  <th>Select</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {paginated.map((p, i) => (\r\n                  <tr key={p.id || i}>\r\n                    <td>{p.productId}</td>\r\n                    <td>{p.ptdescription}</td>\r\n                    <td>\r\n                      <button\r\n                        className=\"btn btn-sm btn-success\"\r\n                        onClick={() => this.selectProductForLineItem(p)}\r\n                      >Select</button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n {paginated.length === 0 && (\r\n                  <tr>\r\n                    <td colSpan={3} className=\"text-center\">No products found</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n               <nav aria-label=\"Product pagination example\" style={{ marginTop: 12 }}>\r\n          <ul className=\"pagination justify-content-end mb-0\">\r\n            <li className={`page-item ${currentPage === 1 ? \"disabled\" : \"\"}`}>\r\n              <button\r\n                className=\"page-link\"\r\n                aria-label=\"Previous\"\r\n                onClick={() => this.setState({ currentPage: Math.max(currentPage - 1, 1) })}\r\n              >\r\n                <span aria-hidden=\"true\">&laquo;</span>\r\n              </button>\r\n            </li>\r\n            {[...Array(totalPages)].map((_, idx) => (\r\n              <li key={idx} className={`page-item ${currentPage === idx + 1 ? \"active\" : \"\"}`}>\r\n                <button\r\n                  className=\"page-link\"\r\n                  onClick={() => this.setState({ currentPage: idx + 1 })}\r\n                >\r\n                  {idx + 1}\r\n                </button>\r\n              </li>\r\n            ))}\r\n            <li className={`page-item ${currentPage === totalPages ? \"disabled\" : \"\"}`}>\r\n              <button\r\n                className=\"page-link\"\r\n                aria-label=\"Next\"\r\n                onClick={() => this.setState({ currentPage: Math.min(currentPage + 1, totalPages) })}\r\n              >\r\n                <span aria-hidden=\"true\">&raquo;</span>\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </nav>  </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  \r\n  renderTabs = () => {\r\n    const { activeTab } = this.state;\r\n    const tabNames = ['Lines', 'Terms', 'Notes'];\r\n    return (\r\n      <ul className=\"nav nav-tabs mb-3\" style={{ fontSize: '16px' }}>\r\n        {tabNames.map((tab, idx) => (\r\n          <li className=\"nav-item\" key={tab}>\r\n            <button\r\n              type=\"button\"\r\n              className={`nav-link${activeTab === idx ? ' active' : ''}`}\r\n              onClick={() => this.handleTabChange(idx)}\r\n              style={{\r\n                color: '#007bff',\r\n                background: activeTab === idx ? '#e9ecef' : '#fff',\r\n                border: '1px solid #dee2e6',\r\n                borderBottom: activeTab === idx ? 'none' : undefined,\r\n                fontWeight: activeTab === idx ? 'bold' : 'normal'\r\n              }}\r\n            >\r\n              {tab}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  };\r\nisOneYear = (from, to) => {\r\n  if (!from || !to) return false;\r\n  const d1 = new Date(from);\r\n  const d2 = new Date(to);\r\n  return d2.getFullYear() - d1.getFullYear() === 1 &&\r\n         d2.getMonth() === d1.getMonth() &&\r\n         d2.getDate() === d1.getDate();\r\n};\r\n\r\nrenderBillingTypeSection = () => {\r\n  const { billingType } = this.state;\r\n  return (\r\n    <div className=\"form-row mb-2\">\r\n      <label className=\"mr-2\">Billing Type:</label>\r\n      {['quarterly', 'half-yearly', 'yearly'].map(type => (\r\n        <div key={type} className=\"form-check form-check-inline\">\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"radio\"\r\n            name=\"billingType\"\r\n            checked={billingType === type}\r\n            onChange={() => this.setState({ billingType: type }, () => {\r\n              // Set months in line items accordingly\r\n              this.updateMonthsForBillingType(type);\r\n            })}\r\n          />\r\n          <label className=\"form-check-label\">{type.replace('-', ' ').replace('yearly', 'Yearly').replace('half', 'Half').replace('quarterly', 'Quarterly')}</label>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nupdateMonthsForBillingType = (type) => {\r\n  let months = 1;\r\n  if (type === 'yearly') months = 12;\r\n  else if (type === 'half-yearly') months = 6;\r\n  else if (type === 'quarterly') months = 3;\r\n  const updatedItems = (this.state.formData.lineItems || []).map(item => ({\r\n    ...item,\r\n    months\r\n  }));\r\n  this.setState(prev => ({\r\n    formData: { ...prev.formData, lineItems: updatedItems }\r\n  }), this.recalculateContractTotals);\r\n};\r\nrenderPaymentModeSection = () => {\r\n  const { paymentMode, autoBill } = this.state;\r\n  return (\r\n    <div className=\"form-row mb-2\">\r\n      <label className=\"mr-2\">Auto Bill:</label>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={autoBill}\r\n        onChange={e => this.setState({ autoBill: e.target.checked })}\r\n      />\r\n      {autoBill && (\r\n        <>\r\n          <label className=\"ml-3 mr-2\">Payment Mode:</label>\r\n          {['prorate', 'monthly', 'one-time'].map(mode => (\r\n            <div key={mode} className=\"form-check form-check-inline\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"paymentMode\"\r\n                checked={paymentMode === mode}\r\n                onChange={() => this.setState({ paymentMode: mode })}\r\n              />\r\n              <label className=\"form-check-label\">{mode.charAt(0).toUpperCase() + mode.slice(1)}</label>\r\n            </div>\r\n          ))}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nupdateLineItemsForAutoBill = () => {\r\n  const { paymentMode, formData } = this.state;\r\n  const { durationFrom, durationTo } = formData;\r\n  const from = new Date(durationFrom);\r\n  const to = new Date(durationTo);\r\n  let days = 0, months = 1;\r\n  if (paymentMode === 'prorate') {\r\n    // Prorate: days = days in first/last month\r\n    days = new Date(from.getFullYear(), from.getMonth() + 1, 0).getDate() - from.getDate() + 1;\r\n    months = 1;\r\n  } else if (paymentMode === 'monthly') {\r\n    // Monthly: months = total months\r\n    months = (to.getFullYear() - from.getFullYear()) * 12 + (to.getMonth() - from.getMonth()) + 1;\r\n    days = 0;\r\n  } else if (paymentMode === 'one-time') {\r\n    months = 1;\r\n    days = 0;\r\n  }\r\n  const updatedItems = (formData.lineItems || []).map(item => ({\r\n    ...item,\r\n    days,\r\n    months\r\n  }));\r\n  this.setState(prev => ({\r\n    formData: { ...prev.formData, lineItems: updatedItems }\r\n  }), this.recalculateContractTotals);\r\n};\r\n\r\n\r\nrenderLinesTab = () => {\r\n  const months = this.state.formData.repeat && this.isOneYear(this.state.formData.durationFrom, this.state.formData.durationTo) ? 12 : 1;\r\n  const { formData, showProductOverlay } = this.state;\r\n  return (\r\n    <div>\r\n      {this.renderBillingTypeSection()}\r\n      {this.renderPaymentModeSection()}\r\n      <div className=\"form-row mb-2\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-sm mr-2\"\r\n          onClick={this.handleAddItemsClick}\r\n        >\r\n          Add Items\r\n        </button>\r\n      </div>\r\n      <div className=\"table-responsive\" style={{ overflowX: 'auto' }}>\r\n        <table className=\"table table-bordered\" style={{ minWidth: 1200 }}>\r\n          <thead>\r\n            <tr>\r\n              <th>Item Code</th>\r\n              <th>Item Desc</th>\r\n              <th>HSN</th>\r\n              <th>UOM</th>\r\n              <th>Duration</th>\r\n              <th>Qty</th>\r\n              <th>Unit Price</th>\r\n              <th>Days</th>\r\n              <th>Months</th>\r\n              <th>Tax</th>\r\n              <th>Tax Amt</th>\r\n              <th>Item Total</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {(formData.lineItems || []).map((item, idx) => (\r\n              <tr key={idx}>\r\n                <td>{item.itemCode}</td>\r\n                <td>{item.itemDesc}</td>\r\n                <td>{item.hsnCode}</td>\r\n                <td>{item.uom}</td>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-sm\"\r\n                    value={item.duration || `${formData.durationFrom} to ${formData.durationTo}`}\r\n                    onChange={e => this.handleLineItemChange(idx, 'duration', e.target.value)}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control form-control-sm\"\r\n                    value={item.qty}\r\n                    min=\"1\"\r\n                    style={{ width: 80 }}\r\n                    onChange={e => this.handleLineItemChange(idx, 'qty', e.target.value)}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control form-control-sm\"\r\n                    value={item.unitPrice}\r\n                    min=\"0\"\r\n                    style={{ width: 100 }}\r\n                    onChange={e => this.handleLineItemChange(idx, 'unitPrice', e.target.value)}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control form-control-sm\"\r\n                    value={item.days || ''}\r\n                    min=\"0\"\r\n                    style={{ width: 80 }}\r\n                    onChange={e => this.handleLineItemChange(idx, 'days', e.target.value)}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control form-control-sm\"\r\n                    value={item.months}\r\n                    min=\"1\"\r\n                    style={{ width: 80 }}\r\n                    onChange={e => this.handleLineItemChange(idx, 'months', e.target.value)}\r\n                    readOnly={this.state.formData.repeat && this.isOneYear(this.state.formData.durationFrom, this.state.formData.durationTo)}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-link btn-sm\"\r\n                    onClick={() => this.setState({ showTaxOverlay: true, currentTaxLineIdx: idx })}\r\n                  >\r\n                    {item.taxGroupNames && item.taxGroupNames.length > 0\r\n                      ? item.taxGroupNames.join(', ')\r\n                      : 'Select Tax'}\r\n                  </button>\r\n                </td>\r\n                <td>{item.taxAmt}</td>\r\n                <td>{item.itemTotal}</td>\r\n              </tr>\r\n            ))}\r\n            {(!formData.lineItems || formData.lineItems.length === 0) && (\r\n              <tr>\r\n                <td colSpan=\"12\" className=\"text-center\">No items</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {showProductOverlay && this.renderProductOverlay()}\r\n    </div>\r\n  );\r\n};\r\n\r\n  renderTermsTab = () => {\r\n    const { formData } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-4\">\r\n            <label>Despatch Mode</label>\r\n            <input type=\"text\" className=\"form-control form-control-sm\" value={formData.despatchMode} onChange={e => this.handleInputChange('despatchMode', e.target.value)} />\r\n          </div>\r\n          <div className=\"form-group col-md-4\">\r\n            <label>Payment Terms</label>\r\n            <input type=\"text\" className=\"form-control form-control-sm\" value={formData.paymentTerms} onChange={e => this.handleInputChange('paymentTerms', e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-6\">\r\n            <label>Bill To</label>\r\n            <textarea className=\"form-control form-control-sm\" rows=\"2\" value={formData.billTo} readOnly />\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n            <label>Ship To</label>\r\n            <textarea className=\"form-control form-control-sm\" rows=\"2\" value={formData.shipTo} readOnly />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-3\">\r\n            <label>Freight Charges</label>\r\n            <input type=\"number\" className=\"form-control form-control-sm\" value={formData.freightCharges} onChange={e => this.handleInputChange('freightCharges', e.target.value)} />\r\n          </div>\r\n          <div className=\"form-group col-md-3\">\r\n            <label>Freight Tax %</label>\r\n            <input type=\"number\" className=\"form-control form-control-sm\" value={formData.freightTaxPercent} onChange={e => this.handleInputChange('freightTaxPercent', e.target.value)} />\r\n          </div>\r\n          <div className=\"form-group col-md-3\">\r\n            <label>Freight Tax Amt</label>\r\n            <input type=\"number\" className=\"form-control form-control-sm\" value={formData.freightTaxAmt} readOnly />\r\n          </div>\r\n          <div className=\"form-group col-md-3\">\r\n            <label>Packing Charges</label>\r\n            <input type=\"number\" className=\"form-control form-control-sm\" value={formData.packingCharges} onChange={e => this.handleInputChange('packingCharges', e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-3\">\r\n            <label>Amount Limit</label>\r\n            <input type=\"number\" className=\"form-control form-control-sm\" value={formData.amountLimit} onChange={e => this.handleInputChange('amountLimit', e.target.value)} />\r\n          </div>\r\n          <div className=\"form-group col-md-3\">\r\n            <label>Minimum Release</label>\r\n            <input type=\"number\" className=\"form-control form-control-sm\" value={formData.minimumRelease} onChange={e => this.handleInputChange('minimumRelease', e.target.value)} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderNotesTab = () => (\r\n    <div>\r\n      <div className=\"form-group\">\r\n        <label>Notes / Remarks</label>\r\n        <textarea className=\"form-control form-control-sm\" rows=\"4\" value={this.state.notes} onChange={this.handleNotesChange} />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  renderForm = () => {\r\n    const { activeTab, formData } = this.state;\r\n    return (\r\n      <div className=\"card full-height\">\r\n        <form className=\"form-sample\" onSubmit={this.handleSubmit}>\r\n          <div style={{ flex: 1, overflowY: 'auto', padding: '24px' }}>\r\n            <h4 className=\"mb-3\">Service Contract Creation/Update</h4>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-3\">\r\n                <label>Contract Type</label>\r\n                <select\r\n                  className=\"form-control form-control-sm\"\r\n                  value={formData.contractType}\r\n                  onChange={e => this.handleInputChange('contractType', e.target.value)}\r\n                >\r\n                  <option value=\"Standard\">Standard</option>\r\n                  <option value=\"Manual\">Manual</option>\r\n                </select>\r\n              </div>\r\n                {this.renderContractNoField()}\r\n              <div className=\"form-group col-md-2\">\r\n                <label>Created Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control form-control-sm\"\r\n                  value={formData.createdDate}\r\n                  onChange={e => this.handleInputChange('createdDate', e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group col-md-2\">\r\n                <label>Status</label>\r\n                <input type=\"text\" className=\"form-control form-control-sm\" value={formData.status} readOnly />\r\n              </div>\r\n              <div className=\"form-group col-md-2\">\r\n                <label>Name of Work</label>\r\n                <input type=\"text\" className=\"form-control form-control-sm\" value={formData.nameofwrk}/>\r\n              </div>\r\n             \r\n\r\n              \r\n            </div>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-3\">\r\n                <label>Customer</label>\r\n                <div className=\"input-group input-group-sm\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Choose Customer\"\r\n                    value={formData.customer}\r\n                    readOnly\r\n                    onClick={this.showCustomerOverlay}\r\n                    style={{ cursor: 'pointer' }}\r\n                  />\r\n                  <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-outline-secondary btn-sm\" type=\"button\" onClick={this.showCustomerOverlay}>Select</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group col-md-3\">\r\n                <label>Customer Order</label>\r\n                <div className=\"input-group input-group-sm\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Select Order\"\r\n                    value={formData.customerOrderId || ''}\r\n                    readOnly\r\n                    onClick={this.showCustomerOrderOverlay}\r\n                    style={{ cursor: 'pointer' }}\r\n                  />\r\n                  <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-outline-secondary btn-sm\" type=\"button\" onClick={this.showCustomerOrderOverlay}>Select</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n               <div className=\"form-group col-md-2\">\r\n                <label>Ref No</label>\r\n                <input type=\"text\" className=\"form-control form-control-sm\" value={formData.refNo} onChange={e => this.handleInputChange('refNo', e.target.value)} />\r\n              </div>\r\n              <div className=\"form-group col-md-2\">\r\n                <label>Currency</label>\r\n                <input type=\"text\" className=\"form-control form-control-sm\" value={formData.currency} readOnly />\r\n              </div>\r\n              <div className=\"form-group col-md-2\">\r\n                <label>Conversion Rate</label>\r\n                <input type=\"number\" className=\"form-control form-control-sm\" value={formData.conversionRate} onChange={e => this.handleInputChange('conversionRate', e.target.value)} />\r\n              </div>\r\n              </div>\r\n              <div className=\"form-row\">\r\n  <div className=\"form-group col-md-3\">\r\n    <label>Contr.Duration From</label>\r\n    <Form.Control\r\n      type=\"date\"\r\n      value={this.state.formData.durationFrom || ''}\r\n      onChange={e => this.handleInputChange('durationFrom', e.target.value)}\r\n    />\r\n  </div>\r\n  <div className=\"form-group col-md-3\">\r\n    <label>Contr.Duration To</label>\r\n    <Form.Control\r\n      type=\"date\"\r\n      value={this.state.formData.durationTo || ''}\r\n      onChange={e => this.handleInputChange('durationTo', e.target.value)}\r\n    />\r\n  </div>\r\n  <div className=\"form-group col-md-3\">\r\n    <label>Till Date</label>\r\n    <Form.Control\r\n      type=\"date\"\r\n      value={this.state.formData.tillDate || ''}\r\n      onChange={e => this.handleInputChange('tillDate', e.target.value)}\r\n    />\r\n  </div>\r\n  <div className=\"form-group col-md-2 d-flex align-items-center\">\r\n    <label className=\"mr-2\">Repeat</label>\r\n    <input\r\n      type=\"checkbox\"\r\n      checked={this.state.formData.repeat || false}\r\n      onChange={e => this.handleInputChange('repeat', e.target.checked)}\r\n    />\r\n  </div>\r\n\r\n              <div className=\"form-group col-md-2\">\r\n                <label>Amt.Agreed</label>\r\n                <input type=\"number\" className=\"form-control form-control-sm\" value={formData.amtAgreed} onChange={e => this.handleInputChange('amtAgreed', e.target.value)} />\r\n              </div>\r\n            </div>\r\n            {this.renderTabs()}\r\n            {activeTab === 0 && this.renderLinesTab()}\r\n            {activeTab === 1 && this.renderTermsTab()}\r\n            {activeTab === 2 && this.renderNotesTab()}\r\n            <div className=\"fixed-card-footer text-right p-3 border-top bg-white\">\r\n              <button type=\"submit\" className=\"btn btn-success mr-2\">\r\n                {this.state.editingId ? \"Update\" : \"Create\"}\r\n              </button>\r\n              <button type=\"button\" className=\"btn btn-secondary\" onClick={() => this.setState({ showForm: false, editingId: null, formData: this.getEmptyContractForm(), notes: '' })}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n         {this.state.showAlert && this.renderAlert()}\r\n        {this.state.showCustomerOrderOverlay && this.renderCustomerOrderOverlay()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n\r\nrenderTable = () => (\r\n  <div className=\"card mt-4 full-height\">\r\n    <div className=\"card-body\">\r\n      <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n        <h4 className=\"card-title\">Service Contracts</h4>\r\n        <button className=\"btn btn-primary\" onClick={() => this.setState({ showForm: true })}>+ Create Contract</button>\r\n      </div>\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table table-bordered table-hover\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>Contract No</th>\r\n              <th>Date</th>\r\n              <th>Ref No</th>\r\n              <th>Customer</th>\r\n              <th>Currency</th>\r\n              <th>Duration</th>\r\n              <th>Status</th>\r\n              <th>Value</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.contracts.map((c, i) => {\r\n              let statusClass = \"badge-secondary\";\r\n              if (c.status === \"Awaiting Approval\") statusClass = \"badge-warning\";\r\n              else if (c.status === \"Approved\") statusClass = \"badge-success\";\r\n              else if (c.status === \"Partial\") statusClass = \"badge-secondary\"; // you need to define css .badge-purple { background:#6f42c1; }\r\n              else if (c.status === \"Completed\") statusClass = \"badge-info\";\r\n\r\n              return (\r\n                <tr key={i}>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-link p-0\"\r\n                      onClick={() => this.setState({\r\n                        showForm: true,\r\n                        editingId: c.id,\r\n                        formData: { ...c }\r\n                      })}\r\n                    >\r\n                      {c.contractNo}\r\n                    </button>\r\n                  </td>\r\n                  <td>{this.formatDate(c.createdDate)}</td>\r\n                  <td>{c.refNo}</td>\r\n                  <td>{c.customer}</td>\r\n                  <td>{c.currency}</td>\r\n                  <td>\r\n                    {this.formatDate(c.contrDurationFrom)} - {this.formatDate(c.contrDurationTo)}\r\n                  </td>\r\n                  <td>\r\n                    <label className={`badge ${statusClass}`} style={{ fontSize: '14px' }}>{c.status}</label>\r\n                  </td>\r\n                  <td>{c.contractValue}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        {this.state.showCustomerOverlay && this.renderCustomerOverlay()}\r\n        {this.state.showProductOverlay && this.renderProductOverlay()}\r\n        {this.state.showForm ? this.renderForm() : this.renderTable()}\r\n        {this.state.showTaxOverlay && this.renderTaxOverlay()}\r\n      </div>\r\n         );\r\n  }\r\n}\r\n\r\nexport default ContractBilling;"]},"metadata":{},"sourceType":"module"}