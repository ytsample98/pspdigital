{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\crm\\\\Activity.js\";\nimport React, { Component } from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { Table, Button, Form, Card, InputGroup, Modal, Row, Col } from \"react-bootstrap\";\nimport { db } from \"../../firebase\";\nimport { collection, getDocs, addDoc, deleteDoc, doc, updateDoc, query, orderBy } from \"firebase/firestore\";\n\nclass Activity extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activities: [],\n      accounts: [],\n      contactOptions: [],\n      // modal control\n      showModal: false,\n      modalMode: \"new\",\n      // 'new' or 'edit'\n      selectedId: null,\n      form: {\n        acname: \"\",\n        contact: \"\",\n        phone: \"\",\n        email: \"\",\n        source: \"\",\n        remarks: \"\",\n        date: new Date().toISOString().split(\"T\")[0]\n      },\n      searchQuery: \"\",\n      currentPage: 1,\n      pageSize: 10\n    };\n\n    this.fetchActivities = async () => {\n      const q = query(collection(db, \"activities\"), orderBy(\"date\", \"desc\"));\n      const snap = await getDocs(q);\n      const activities = snap.docs.map((docSnap, idx) => ({\n        id: docSnap.id,\n        no: idx + 1,\n        ...docSnap.data()\n      }));\n      this.setState({\n        activities\n      });\n    };\n\n    this.fetchAccounts = async () => {\n      const snap = await getDocs(collection(db, \"accounts\")); // sort alphabetically by acname for datalist\n\n      const accounts = snap.docs.map(d => ({\n        id: d.id,\n        ...d.data()\n      })).sort((a, b) => {\n        if (!a.acname) return 1;\n        if (!b.acname) return -1;\n        return a.acname.localeCompare(b.acname);\n      });\n      this.setState({\n        accounts\n      });\n    };\n\n    this.handleSelectRow = id => {\n      this.setState({\n        selectedId: id\n      });\n    };\n\n    this.handleSaveAndAddNew = async () => {\n      const {\n        form\n      } = this.state;\n\n      if (!form.acname) {\n        alert(\"Please select Account Name.\");\n        return;\n      }\n\n      if (!form.contact) {\n        alert(\"Please select Contact Person.\");\n        return;\n      }\n\n      await addDoc(collection(db, \"activities\"), form);\n      await this.fetchActivities();\n      this.setState({\n        form: {\n          acname: \"\",\n          contact: \"\",\n          phone: \"\",\n          email: \"\",\n          source: \"\",\n          remarks: \"\",\n          date: new Date().toISOString().split(\"T\")[0]\n        },\n        contactOptions: []\n      });\n    };\n\n    this.openModal = mode => {\n      if (mode === \"edit\") {\n        const {\n          selectedId,\n          activities\n        } = this.state;\n        if (!selectedId) return; // edit requires selection\n\n        const activity = activities.find(a => a.id === selectedId);\n        if (!activity) return; // prepare contactOptions for the selected account\n\n        const account = this.state.accounts.find(acc => acc.acname === activity.acname);\n        let contactOptions = [];\n\n        if (account) {\n          if (account.contact) {\n            contactOptions.push({\n              name: account.contact,\n              designation: \"Main\",\n              phone: account.phone || \"\",\n              email: account.email || \"\"\n            });\n          }\n\n          if (account.contactPersons && account.contactPersons.length > 0) {\n            contactOptions = contactOptions.concat(account.contactPersons);\n          }\n        }\n\n        this.setState({\n          modalMode: \"edit\",\n          showModal: true,\n          form: {\n            acname: activity.acname || \"\",\n            contact: activity.contact || \"\",\n            phone: activity.phone || \"\",\n            email: activity.email || \"\",\n            source: activity.source || \"\",\n            remarks: activity.remarks || \"\",\n            date: activity.date || new Date().toISOString().split(\"T\")[0]\n          },\n          contactOptions\n        });\n      } else {\n        // new\n        this.setState({\n          modalMode: \"new\",\n          showModal: true,\n          form: {\n            acname: \"\",\n            contact: \"\",\n            phone: \"\",\n            email: \"\",\n            source: \"\",\n            remarks: \"\",\n            date: new Date().toISOString().split(\"T\")[0]\n          },\n          contactOptions: []\n        });\n      }\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.handleFormChange = (field, value) => {\n      let updatedForm = { ...this.state.form,\n        [field]: value\n      };\n\n      if (field === \"acname\") {\n        // find account by name and populate contactOptions\n        const acc = this.state.accounts.find(a => a.acname === value);\n        let contactOptions = [];\n\n        if (acc) {\n          if (acc.contact) {\n            contactOptions.push({\n              name: acc.contact,\n              designation: \"Main\",\n              phone: acc.phone || \"\",\n              email: acc.email || \"\"\n            });\n          }\n\n          if (acc.contactPersons && acc.contactPersons.length > 0) {\n            contactOptions = contactOptions.concat(acc.contactPersons);\n          }\n        }\n\n        updatedForm.contact = \"\";\n        updatedForm.phone = \"\";\n        updatedForm.email = \"\";\n        this.setState({\n          contactOptions,\n          form: updatedForm\n        });\n        return;\n      }\n\n      if (field === \"contact\") {\n        const cp = this.state.contactOptions.find(c => c.name === value);\n\n        if (cp) {\n          updatedForm.phone = cp.phone || \"\";\n          updatedForm.email = cp.email || \"\";\n        } else {\n          updatedForm.phone = \"\";\n          updatedForm.email = \"\";\n        }\n      }\n\n      if (field === \"remarks\") {\n        if (value.length > 500) {\n          // ignore extra input beyond 500\n          return;\n        }\n      }\n\n      this.setState({\n        form: updatedForm\n      });\n    };\n\n    this.handleSave = async () => {\n      const {\n        modalMode,\n        form,\n        selectedId\n      } = this.state; // basic validation\n\n      if (!form.acname) {\n        alert(\"Please select Account Name.\");\n        return;\n      }\n\n      if (!form.contact) {\n        alert(\"Please select Contact Person.\");\n        return;\n      }\n\n      if (modalMode === \"new\") {\n        await addDoc(collection(db, \"activities\"), form);\n      } else {\n        // update\n        const ref = doc(db, \"activities\", selectedId);\n        await updateDoc(ref, form);\n      } // refresh & close\n\n\n      await this.fetchActivities();\n      this.closeModal();\n    };\n\n    this.deleteSelected = async () => {\n      const {\n        selectedId\n      } = this.state;\n      if (!selectedId) return;\n      if (!window.confirm(\"Delete selected entry?\")) return;\n      await deleteDoc(doc(db, \"activities\", selectedId));\n      this.setState({\n        selectedId: null\n      });\n      this.fetchActivities();\n    };\n\n    this.handleSearch = e => {\n      this.setState({\n        searchQuery: e.target.value,\n        currentPage: 1\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchActivities();\n    this.fetchAccounts();\n  }\n\n  render() {\n    const {\n      activities,\n      accounts,\n      contactOptions,\n      showModal,\n      modalMode,\n      form,\n      selectedId,\n      searchQuery,\n      currentPage,\n      pageSize\n    } = this.state; // --- Filter activities ---\n\n    const filtered = activities.filter(a => {\n      var _a$acname, _a$contact;\n\n      return ((_a$acname = a.acname) === null || _a$acname === void 0 ? void 0 : _a$acname.toLowerCase().includes(searchQuery.toLowerCase())) || ((_a$contact = a.contact) === null || _a$contact === void 0 ? void 0 : _a$contact.toLowerCase().includes(searchQuery.toLowerCase())) || (a.remarks || \"\").toLowerCase().includes(searchQuery.toLowerCase());\n    }); // --- Pagination logic ---\n\n    const startIndex = (currentPage - 1) * pageSize;\n    const paginated = filtered.slice(startIndex, startIndex + pageSize);\n    const totalPages = Math.max(1, Math.ceil(filtered.length / pageSize));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"p-3 shadow-sm bg-white border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }\n    }, \"Activities\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flex: \"0 0 50%\",\n        maxWidth: \"50%\",\n        marginRight: \"10px\"\n      },\n      className: \"me-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      style: {\n        minWidth: 300\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Search by account, contact, remarks\",\n      value: searchQuery,\n      onChange: this.handleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex \",\n      style: {\n        gap: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: () => this.openModal(\"new\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 15\n      }\n    }, \"New\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: () => this.openModal(\"edit\"),\n      disabled: !selectedId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 15\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.deleteSelected,\n      disabled: !selectedId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 15\n      }\n    }, \"Delete\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      bordered: true,\n      hover: true,\n      className: \"w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      style: {\n        width: 40\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 19\n      }\n    }, \"Created Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 19\n      }\n    }, \"Account Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 19\n      }\n    }, \"Contact Person\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 19\n      }\n    }, \"Phone\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 19\n      }\n    }, \"Mail\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 19\n      }\n    }, \"Activity\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 19\n      }\n    }, \"Remarks\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 15\n      }\n    }, paginated.map(act => /*#__PURE__*/React.createElement(\"tr\", {\n      key: act.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"radio\",\n      name: \"selectedRow\",\n      checked: selectedId === act.id,\n      onChange: () => this.handleSelectRow(act.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 21\n      }\n    }, act.date), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 21\n      }\n    }, act.acname), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 21\n      }\n    }, act.contact), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 21\n      }\n    }, act.phone), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }\n    }, act.email), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 21\n      }\n    }, act.source), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        maxWidth: \"300px\",\n        whiteSpace: \"pre-wrap\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 21\n      }\n    }, act.remarks)))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Pagination, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Pagination.First, {\n      onClick: () => this.handlePageChange(1),\n      disabled: currentPage === 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Pagination.Prev, {\n      onClick: () => this.handlePageChange(currentPage - 1),\n      disabled: currentPage === 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 13\n      }\n    }), Array.from({\n      length: totalPages\n    }, (_, i) => /*#__PURE__*/React.createElement(Pagination.Item, {\n      key: i + 1,\n      active: i + 1 === currentPage,\n      onClick: () => this.handlePageChange(i + 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 15\n      }\n    }, i + 1)), /*#__PURE__*/React.createElement(Pagination.Next, {\n      onClick: () => this.handlePageChange(currentPage + 1),\n      disabled: currentPage === totalPages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Pagination.Last, {\n      onClick: () => this.handlePageChange(totalPages),\n      disabled: currentPage === totalPages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 13\n      }\n    })))), /*#__PURE__*/React.createElement(Modal, {\n      show: showModal,\n      onHide: this.closeModal,\n      style: {\n        backgroundColor: \"transparent\"\n      },\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content\",\n      style: {\n        backgroundColor: \"#fff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 13\n      }\n    }, modalMode === \"new\" ? \"New Entry\" : \"Edit Entry\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 21\n      }\n    }, \"Created Date\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      value: form.date,\n      onChange: e => this.handleFormChange(\"date\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formSource\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 21\n      }\n    }, \"Activity *\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      value: form.source,\n      onChange: e => this.handleFormChange(\"source\", e.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 23\n      }\n    }, \"Select Activity\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Call\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 23\n      }\n    }, \"Call\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Meeting\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 23\n      }\n    }, \"Meeting\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Demo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 23\n      }\n    }, \"Demo\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Mail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 23\n      }\n    }, \"Mail\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Whatsapp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 23\n      }\n    }, \"Whatsapp\"))))), /*#__PURE__*/React.createElement(Row, {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formAccount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 19\n      }\n    }, \"Account Name *\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      value: form.acname,\n      onChange: e => this.handleFormChange(\"acname\", e.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 21\n      }\n    }, \"Select Account\"), accounts.map(acc => /*#__PURE__*/React.createElement(\"option\", {\n      key: acc.id,\n      value: acc.acname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 23\n      }\n    }, acc.acname))))), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formContact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 21\n      }\n    }, \"Contact Person *\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      value: form.contact,\n      onChange: e => this.handleFormChange(\"contact\", e.target.value),\n      disabled: !form.acname,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 23\n      }\n    }, \"Select Contact\"), contactOptions.map((cp, idx) => /*#__PURE__*/React.createElement(\"option\", {\n      key: idx,\n      value: cp.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 25\n      }\n    }, cp.name, cp.designation ? ` (${cp.designation})` : \"\")))))), /*#__PURE__*/React.createElement(Row, {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formPhone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 21\n      }\n    }, \"Phone\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      value: form.phone,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 21\n      }\n    }, \"Mail\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      value: form.email,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formRemarks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 21\n      }\n    }, \"Remarks\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: 4,\n      value: form.remarks,\n      onChange: e => this.handleFormChange(\"remarks\", e.target.value),\n      placeholder: \"Remarks (max 500 chars)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 21\n      }\n    }, form.remarks.length, \"/500\")))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 3\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.handleSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 5\n      }\n    }, modalMode === \"new\" ? \"Create\" : \"Update\"), modalMode === \"new\" && /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-primary\",\n      className: \"ml-2\",\n      onClick: this.handleSaveAndAddNew,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 7\n      }\n    }, \"Create & Add New\"))))));\n  }\n\n}\n\nexport default Activity;","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/crm/Activity.js"],"names":["React","Component","Pagination","Table","Button","Form","Card","InputGroup","Modal","Row","Col","db","collection","getDocs","addDoc","deleteDoc","doc","updateDoc","query","orderBy","Activity","state","activities","accounts","contactOptions","showModal","modalMode","selectedId","form","acname","contact","phone","email","source","remarks","date","Date","toISOString","split","searchQuery","currentPage","pageSize","fetchActivities","q","snap","docs","map","docSnap","idx","id","no","data","setState","fetchAccounts","d","sort","a","b","localeCompare","handleSelectRow","handleSaveAndAddNew","alert","openModal","mode","activity","find","account","acc","push","name","designation","contactPersons","length","concat","closeModal","handleFormChange","field","value","updatedForm","cp","c","handleSave","ref","deleteSelected","window","confirm","handleSearch","e","target","handlePageChange","page","componentDidMount","render","filtered","filter","toLowerCase","includes","startIndex","paginated","slice","totalPages","Math","max","ceil","flex","maxWidth","marginRight","minWidth","gap","marginTop","width","act","whiteSpace","Array","from","_","i","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Form,\r\n  Card,\r\n  InputGroup,\r\n  Modal,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport { db } from \"../../firebase\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  addDoc,\r\n  deleteDoc,\r\n  doc,\r\n  updateDoc,\r\n  query,\r\n  orderBy\r\n} from \"firebase/firestore\";\r\n\r\nclass Activity extends Component {\r\n  state = {\r\n    activities: [],\r\n    accounts: [],\r\n    contactOptions: [],\r\n    // modal control\r\n    showModal: false,\r\n    modalMode: \"new\", // 'new' or 'edit'\r\n    selectedId: null,\r\n\r\n    form: {\r\n      acname: \"\",\r\n      contact: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      source: \"\",\r\n      remarks: \"\",\r\n      date: new Date().toISOString().split(\"T\")[0],\r\n    },\r\n\r\n    searchQuery: \"\",\r\n    currentPage: 1,\r\n    pageSize: 10,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchActivities();\r\n    this.fetchAccounts();\r\n  }\r\n\r\n  fetchActivities = async () => {\r\n  const q = query(collection(db, \"activities\"), orderBy(\"date\", \"desc\"));\r\n  const snap = await getDocs(q);\r\n  const activities = snap.docs.map((docSnap, idx) => ({\r\n    id: docSnap.id,\r\n    no: idx + 1,\r\n    ...docSnap.data(),\r\n  }));\r\n  this.setState({ activities });\r\n};\r\n\r\n  // fetch accounts (and later used to populate contactOptions)\r\n  fetchAccounts = async () => {\r\n    const snap = await getDocs(collection(db, \"accounts\"));\r\n    // sort alphabetically by acname for datalist\r\n    const accounts = snap.docs\r\n      .map((d) => ({ id: d.id, ...d.data() }))\r\n      .sort((a, b) => {\r\n        if (!a.acname) return 1;\r\n        if (!b.acname) return -1;\r\n        return a.acname.localeCompare(b.acname);\r\n      });\r\n    this.setState({ accounts });\r\n  };\r\n\r\n  // radio select a row\r\n  handleSelectRow = (id) => {\r\n    this.setState({ selectedId: id });\r\n  };\r\n  handleSaveAndAddNew = async () => {\r\n  const { form } = this.state;\r\n\r\n  if (!form.acname) {\r\n    alert(\"Please select Account Name.\");\r\n    return;\r\n  }\r\n  if (!form.contact) {\r\n    alert(\"Please select Contact Person.\");\r\n    return;\r\n  }\r\n\r\n  await addDoc(collection(db, \"activities\"), form);\r\n\r\n  await this.fetchActivities();\r\n  this.setState({\r\n    form: {\r\n      acname: \"\",\r\n      contact: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      source: \"\",\r\n      remarks: \"\",\r\n      date: new Date().toISOString().split(\"T\")[0],\r\n    },\r\n    contactOptions: [],\r\n  });\r\n};\r\n\r\n\r\n  // open modal (new or edit)\r\n  openModal = (mode) => {\r\n    if (mode === \"edit\") {\r\n      const { selectedId, activities } = this.state;\r\n      if (!selectedId) return; // edit requires selection\r\n      const activity = activities.find((a) => a.id === selectedId);\r\n      if (!activity) return;\r\n      // prepare contactOptions for the selected account\r\n      const account = this.state.accounts.find((acc) => acc.acname === activity.acname);\r\n      let contactOptions = [];\r\n      if (account) {\r\n        if (account.contact) {\r\n          contactOptions.push({\r\n            name: account.contact,\r\n            designation: \"Main\",\r\n            phone: account.phone || \"\",\r\n            email: account.email || \"\",\r\n          });\r\n        }\r\n        if (account.contactPersons && account.contactPersons.length > 0) {\r\n          contactOptions = contactOptions.concat(account.contactPersons);\r\n        }\r\n      }\r\n      this.setState({\r\n        modalMode: \"edit\",\r\n        showModal: true,\r\n        form: {\r\n          acname: activity.acname || \"\",\r\n          contact: activity.contact || \"\",\r\n          phone: activity.phone || \"\",\r\n          email: activity.email || \"\",\r\n          source: activity.source || \"\",\r\n          remarks: activity.remarks || \"\",\r\n          date: activity.date || new Date().toISOString().split(\"T\")[0],\r\n        },\r\n        contactOptions,\r\n      });\r\n    } else {\r\n      // new\r\n      this.setState({\r\n        modalMode: \"new\",\r\n        showModal: true,\r\n        form: {\r\n          acname: \"\",\r\n          contact: \"\",\r\n          phone: \"\",\r\n          email: \"\",\r\n          source: \"\",\r\n          remarks: \"\",\r\n          date: new Date().toISOString().split(\"T\")[0],\r\n        },\r\n        contactOptions: [],\r\n      });\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ showModal: false });\r\n  };\r\n\r\n  // handle form field changes inside modal\r\n  handleFormChange = (field, value) => {\r\n    let updatedForm = { ...this.state.form, [field]: value };\r\n\r\n    if (field === \"acname\") {\r\n      // find account by name and populate contactOptions\r\n      const acc = this.state.accounts.find((a) => a.acname === value);\r\n      let contactOptions = [];\r\n      if (acc) {\r\n        if (acc.contact) {\r\n          contactOptions.push({\r\n            name: acc.contact,\r\n            designation: \"Main\",\r\n            phone: acc.phone || \"\",\r\n            email: acc.email || \"\",\r\n          });\r\n        }\r\n        if (acc.contactPersons && acc.contactPersons.length > 0) {\r\n          contactOptions = contactOptions.concat(acc.contactPersons);\r\n        }\r\n      }\r\n      updatedForm.contact = \"\";\r\n      updatedForm.phone = \"\";\r\n      updatedForm.email = \"\";\r\n      this.setState({ contactOptions, form: updatedForm });\r\n      return;\r\n    }\r\n\r\n    if (field === \"contact\") {\r\n      const cp = this.state.contactOptions.find((c) => c.name === value);\r\n      if (cp) {\r\n        updatedForm.phone = cp.phone || \"\";\r\n        updatedForm.email = cp.email || \"\";\r\n      } else {\r\n        updatedForm.phone = \"\";\r\n        updatedForm.email = \"\";\r\n      }\r\n    }\r\n\r\n    if (field === \"remarks\") {\r\n      if (value.length > 500) {\r\n        // ignore extra input beyond 500\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.setState({ form: updatedForm });\r\n  };\r\n\r\n  // save modal (new or edit)\r\n  handleSave = async () => {\r\n    const { modalMode, form, selectedId } = this.state;\r\n\r\n    // basic validation\r\n    if (!form.acname) {\r\n      alert(\"Please select Account Name.\");\r\n      return;\r\n    }\r\n    if (!form.contact) {\r\n      alert(\"Please select Contact Person.\");\r\n      return;\r\n    }\r\n\r\n    if (modalMode === \"new\") {\r\n      await addDoc(collection(db, \"activities\"), form);\r\n    } else {\r\n      // update\r\n      const ref = doc(db, \"activities\", selectedId);\r\n      await updateDoc(ref, form);\r\n    }\r\n\r\n    // refresh & close\r\n    await this.fetchActivities();\r\n    this.closeModal();\r\n  };\r\n\r\n  deleteSelected = async () => {\r\n    const { selectedId } = this.state;\r\n    if (!selectedId) return;\r\n    if (!window.confirm(\"Delete selected entry?\")) return;\r\n    await deleteDoc(doc(db, \"activities\", selectedId));\r\n    this.setState({ selectedId: null });\r\n    this.fetchActivities();\r\n  };\r\n\r\n  // Search filter\r\n  handleSearch = (e) => {\r\n    this.setState({ searchQuery: e.target.value, currentPage: 1 });\r\n  };\r\n\r\n  // Pagination controls\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      activities,\r\n      accounts,\r\n      contactOptions,\r\n      showModal,\r\n      modalMode,\r\n      form,\r\n      selectedId,\r\n      searchQuery,\r\n      currentPage,\r\n      pageSize,\r\n    } = this.state;\r\n\r\n    // --- Filter activities ---\r\n    const filtered = activities.filter(\r\n      (a) =>\r\n        a.acname?.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        a.contact?.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        (a.remarks || \"\").toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n\r\n    // --- Pagination logic ---\r\n    const startIndex = (currentPage - 1) * pageSize;\r\n    const paginated = filtered.slice(startIndex, startIndex + pageSize);\r\n    const totalPages = Math.max(1, Math.ceil(filtered.length / pageSize));\r\n\r\n    return (\r\n      <div className=\"container-fluid mt-4\">\r\n        <Card className=\"p-3 shadow-sm bg-white border-0\">\r\n          <div className=\"mb-6\">\r\n          <h4>Activities</h4>\r\n          <div className=\"d-flex align-items-center\">\r\n            \r\n            {/* Search box (fixed half width with right margin) */}\r\n            <div style={{ flex: \"0 0 50%\", maxWidth: \"50%\" ,marginRight: \"10px\"}} className=\"me-3\">\r\n              <InputGroup style={{ minWidth: 300 }}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Search by account, contact, remarks\"\r\n                  value={searchQuery}\r\n                  onChange={this.handleSearch}\r\n                />\r\n              </InputGroup>\r\n              </div>\r\n              <div className=\"d-flex \" style={{ gap: \"10px\" }}>\r\n              <Button              \r\n                 variant=\"secondary\"\r\n                 onClick={() => this.openModal(\"new\")}>\r\n                New\r\n              </Button>\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={() => this.openModal(\"edit\")}\r\n                disabled={!selectedId}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={this.deleteSelected}\r\n                disabled={!selectedId}\r\n              >\r\n                Delete\r\n              </Button>\r\n\r\n              {/* Search box */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"table-responsive\" style={{marginTop:\"10px\"}}>\r\n            <Table bordered hover className=\"w-100\">\r\n              <thead className=\"thead-light\">\r\n                <tr>\r\n                  <th style={{ width: 40 }}></th>\r\n                  <th>Created Date</th>\r\n                  <th>Account Name</th>\r\n                  <th>Contact Person</th>\r\n                  <th>Phone</th>\r\n                  <th>Mail</th>\r\n                  <th>Activity</th>\r\n                  <th>Remarks</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {paginated.map((act) => (\r\n                  <tr key={act.id}>\r\n                    <td className=\"text-center\">\r\n                      <Form.Check\r\n                        type=\"radio\"\r\n                        name=\"selectedRow\"\r\n                        checked={selectedId === act.id}\r\n                        onChange={() => this.handleSelectRow(act.id)}\r\n                      />\r\n                    </td>\r\n                    <td>{act.date}</td>\r\n                    <td>{act.acname}</td>\r\n                    <td>{act.contact}</td>\r\n                    <td>{act.phone}</td>\r\n                    <td>{act.email}</td>\r\n                    <td>{act.source}</td>\r\n                    <td style={{ maxWidth: \"300px\", whiteSpace: \"pre-wrap\" }}>\r\n                      {act.remarks}\r\n                    </td>\r\n                    \r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n\r\n          <div className=\"d-flex justify-content-center mt-3\">\r\n          <Pagination>\r\n            <Pagination.First onClick={() => this.handlePageChange(1)} disabled={currentPage === 1} />\r\n            <Pagination.Prev onClick={() => this.handlePageChange(currentPage - 1)} disabled={currentPage === 1} />\r\n\r\n            {Array.from({ length: totalPages }, (_, i) => (\r\n              <Pagination.Item\r\n                key={i + 1}\r\n                active={i + 1 === currentPage}\r\n                onClick={() => this.handlePageChange(i + 1)}\r\n              >\r\n                {i + 1}\r\n              </Pagination.Item>\r\n            ))}\r\n\r\n            <Pagination.Next onClick={() => this.handlePageChange(currentPage + 1)} disabled={currentPage === totalPages} />\r\n            <Pagination.Last onClick={() => this.handlePageChange(totalPages)} disabled={currentPage === totalPages} />\r\n          </Pagination>\r\n        </div>\r\n        </Card>\r\n\r\n        {/* Modal for New / Edit */}\r\n        <Modal \r\n        show={showModal} \r\n        onHide={this.closeModal} \r\n        style={{ backgroundColor: \"transparent\" }}\r\n        centered >\r\n           <div\r\n    className=\"modal-content\"\r\n    style={{\r\n      backgroundColor: \"#fff\",  \r\n    }}\r\n  >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{modalMode === \"new\" ? \"New Entry\" : \"Edit Entry\"}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body >\r\n            <Form>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Form.Group controlId=\"formDate\">\r\n                    <Form.Label>Created Date</Form.Label>\r\n                    <Form.Control\r\n                      type=\"date\"\r\n                      value={form.date}\r\n                      onChange={(e) => this.handleFormChange(\"date\", e.target.value)}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n\r\n                <Col md={6}>\r\n                  <Form.Group controlId=\"formSource\">\r\n                    <Form.Label>Activity *</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={form.source}\r\n                      onChange={(e) => this.handleFormChange(\"source\", e.target.value)}\r\n                      required\r\n                    >\r\n                      <option value=\"\">Select Activity</option>\r\n                      <option value=\"Call\">Call</option>\r\n                      <option value=\"Meeting\">Meeting</option>\r\n                      <option value=\"Demo\">Demo</option>\r\n                      <option value=\"Mail\">Mail</option>\r\n                      <option value=\"Whatsapp\">Whatsapp</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mt-3\">\r\n                <Col md={6}>\r\n                <Form.Group controlId=\"formAccount\">\r\n                  <Form.Label>Account Name *</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    value={form.acname}\r\n                    onChange={(e) => this.handleFormChange(\"acname\", e.target.value)}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select Account</option>\r\n                    {accounts.map((acc) => (\r\n                      <option key={acc.id} value={acc.acname}>\r\n                        {acc.acname}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n\r\n\r\n                <Col md={6}>\r\n                  <Form.Group controlId=\"formContact\">\r\n                    <Form.Label>Contact Person *</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={form.contact}\r\n                      onChange={(e) => this.handleFormChange(\"contact\", e.target.value)}\r\n                      disabled={!form.acname}\r\n                      required\r\n                    >\r\n                      <option value=\"\">Select Contact</option>\r\n                      {contactOptions.map((cp, idx) => (\r\n                        <option key={idx} value={cp.name}>\r\n                          {cp.name}\r\n                          {cp.designation ? ` (${cp.designation})` : \"\"}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mt-3\">\r\n                <Col md={6}>\r\n                  <Form.Group controlId=\"formPhone\">\r\n                    <Form.Label>Phone</Form.Label>\r\n                    <Form.Control type=\"text\" value={form.phone} readOnly />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Form.Group controlId=\"formEmail\">\r\n                    <Form.Label>Mail</Form.Label>\r\n                    <Form.Control type=\"text\" value={form.email} readOnly />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mt-3\">\r\n                <Col>\r\n                  <Form.Group controlId=\"formRemarks\">\r\n                    <Form.Label>Remarks</Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={4}\r\n                      value={form.remarks}\r\n                      onChange={(e) => this.handleFormChange(\"remarks\", e.target.value)}\r\n                      placeholder=\"Remarks (max 500 chars)\"\r\n                    />\r\n                    <small>{form.remarks.length}/500</small>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </Modal.Body>\r\n          \r\n          <Modal.Footer className=\"d-flex justify-content-between\">\r\n  {/* Left corner - Cancel */}\r\n  <Button variant=\"secondary\" onClick={this.closeModal}>\r\n    Cancel\r\n  </Button>\r\n\r\n  {/* Right side - Create & Create+AddNew */}\r\n  <div>\r\n    <Button variant=\"primary\" onClick={this.handleSave}>\r\n      {modalMode === \"new\" ? \"Create\" : \"Update\"}\r\n    </Button>\r\n    {modalMode === \"new\" && (\r\n      <Button\r\n        variant=\"outline-primary\"\r\n        className=\"ml-2\"\r\n        onClick={this.handleSaveAndAddNew}\r\n      >\r\n        Create & Add New\r\n      </Button>\r\n    )}\r\n  </div>\r\n</Modal.Footer>\r\n\r\n          </div>\r\n        </Modal>\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Activity;\r\n"]},"metadata":{},"sourceType":"module"}