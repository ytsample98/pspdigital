{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\panelone\\\\Quote.js\";\nimport React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport { db } from '../../firebase';\nimport { collection, getDocs, addDoc, doc, updateDoc, serverTimestamp } from 'firebase/firestore';\nimport { withRouter } from 'react-router-dom';\nimport html2canvas from 'html2canvas';\nimport { jsPDF } from 'jspdf';\nimport { recalculateTotals, getTaxDetailsFromGroup } from './calculation';\nimport { toWords } from 'number-to-words';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Paper from '@material-ui/core/Paper';\nimport TableContainer from '@material-ui/core/TableContainer';\nconst amount = 12345678;\nconst amountWords = `INR ${toWords(amount)} Only`;\nconsole.log(amountWords);\n\nclass Quote extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: 'co',\n      quotes: [],\n      customers: [],\n      products: [],\n      despatchModes: [],\n      paymentTerms: [],\n      showForm: false,\n      showTaxOverlay: false,\n      currentTaxLineIdx: null,\n      editingId: null,\n      overlayType: '',\n      overlaySearch: '',\n      productOverlayVisible: false,\n      productOverlaySearch: '',\n      selectedProductIds: [],\n      selectedTaxGroups: [],\n      taxComponents: [],\n      taxGroups: [],\n      previewMode: false,\n      selectedQuote: null,\n      breakdownItems: [],\n      breakdownType: 'Percentage',\n      breakdownSelectAll: false,\n      showSubProductDialog: false,\n      currentBreakdownIdx: null,\n      subProductForm: {\n        name: '',\n        value: '',\n        type: 'Amount',\n        dueDate: ''\n      },\n      formData: {\n        quoteNo: '',\n        quoteDate: new Date().toISOString().split('T')[0],\n        quoteType: 'Standard',\n        customer: '',\n        status: 'Entered',\n        // Static 'Entered'\n        choose: 'Service',\n        qrefNo: '',\n        impExp: 'None',\n        currency: '',\n        conversionRate: '',\n        taxAmount: '',\n        quoteValue: '',\n        billTo: '',\n        shipTo: '',\n        despatchMode: 'By Air',\n        paymentTerms: '',\n        freightCharges: '',\n        freighttaxAmount: '',\n        taxPercent: '',\n        packingCharges: '',\n        lineItems: []\n      }\n    };\n    this.customerInputRef = React.createRef();\n\n    this.formatAddress = addr => {\n      if (!addr) return '';\n      if (typeof addr === 'string') return addr;\n      return [addr.address, [addr.city, addr.state, addr.country].filter(Boolean).join(', '), addr.zip].filter(Boolean).join('\\n');\n    };\n\n    this.handleLineItemChange = (idx, field, value) => {\n      const updatedItems = [...this.state.formData.lineItems];\n      updatedItems[idx] = { ...updatedItems[idx],\n        [field]: value\n      };\n      const {\n        updatedLineItems,\n        freighttaxAmount,\n        taxAmount,\n        quoteValue\n      } = recalculateTotals({\n        lineItems: updatedItems,\n        freightCharges: this.state.formData.freightCharges,\n        packingCharges: this.state.formData.packingCharges,\n        taxPercent: this.state.formData.taxPercent,\n        taxGroups: this.state.taxGroups\n      });\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          lineItems: updatedLineItems,\n          freighttaxAmount,\n          taxAmount,\n          quoteValue\n        }\n      }));\n    };\n\n    this.fetchTaxGroups = async () => {\n      const snap = await getDocs(collection(db, 'taxGroups'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        taxGroups: data\n      });\n    };\n\n    this.fetchQuotes = async () => {\n      const snap = await getDocs(collection(db, 'quotes'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        quotes: data.reverse()\n      });\n    };\n\n    this.fetchCustomers = async () => {\n      const snap = await getDocs(collection(db, 'customers'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        customers: data\n      });\n    };\n\n    this.fetchProducts = async () => {\n      const snap = await getDocs(collection(db, 'products'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        products: data\n      });\n    };\n\n    this.fetchDespatchModes = async () => {\n      const snap = await getDocs(collection(db, 'modes'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        despatchModes: data\n      });\n    };\n\n    this.fetchPaymentTerms = async () => {\n      const snap = await getDocs(collection(db, 'paymentTerms'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        paymentTerms: data\n      });\n    };\n\n    this.toggleTaxGroupSelection = (groupName, lineIdx, checked) => {\n      this.setState(prev => {\n        const lineItems = [...prev.formData.lineItems];\n        const item = { ...lineItems[lineIdx]\n        };\n        let taxGroupNames = Array.isArray(item.taxGroupNames) ? [...item.taxGroupNames] : [];\n\n        if (checked) {\n          if (!taxGroupNames.includes(groupName)) taxGroupNames.push(groupName);\n        } else {\n          taxGroupNames = taxGroupNames.filter(g => g !== groupName);\n        }\n\n        item.taxGroupNames = taxGroupNames;\n        item.taxGroupName = taxGroupNames.join(', ');\n        lineItems[lineIdx] = item;\n        const {\n          updatedLineItems,\n          freighttaxAmount,\n          taxAmount,\n          quoteValue\n        } = recalculateTotals({\n          lineItems,\n          freightCharges: prev.formData.freightCharges,\n          packingCharges: prev.formData.packingCharges,\n          taxPercent: prev.formData.taxPercent,\n          taxGroups: prev.taxGroups\n        });\n        return {\n          formData: { ...prev.formData,\n            lineItems: updatedLineItems,\n            freighttaxAmount,\n            taxAmount,\n            quoteValue\n          }\n        };\n      });\n    };\n\n    this.handleInputChange = (field, value) => {\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          [field]: value\n        }\n      }), () => {\n        if (['freightCharges', 'taxPercent', 'packingCharges'].includes(field)) {\n          const {\n            updatedLineItems,\n            freighttaxAmount,\n            taxAmount,\n            quoteValue\n          } = recalculateTotals({\n            lineItems: this.state.formData.lineItems,\n            freightCharges: this.state.formData.freightCharges,\n            packingCharges: this.state.formData.packingCharges,\n            taxPercent: this.state.formData.taxPercent,\n            taxGroups: this.state.taxGroups\n          });\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              lineItems: updatedLineItems,\n              freighttaxAmount,\n              taxAmount,\n              quoteValue\n            }\n          }));\n        }\n      });\n    };\n\n    this.handleBreakdownSelectAll = checked => {\n      this.setState(prev => ({\n        breakdownSelectAll: checked,\n        breakdownItems: prev.breakdownItems.map(item => ({ ...item,\n          selected: checked\n        }))\n      }));\n    };\n\n    this.handleBreakdownRowSelect = (idx, checked) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        items[idx].selected = checked;\n        return {\n          breakdownItems: items\n        };\n      });\n    };\n\n    this.handleBreakdownTypeChange = type => {\n      this.setState({\n        breakdownType: type\n      });\n    };\n\n    this.handleBreakdownValueChange = (idx, value) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        items[idx].value = value;\n        return {\n          breakdownItems: items\n        };\n      });\n    };\n\n    this.handleBreakdownDateChange = (idx, value) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        items[idx].lastDate = value;\n        return {\n          breakdownItems: items\n        };\n      });\n    };\n\n    this.saveBreakdownToSession = () => {\n      sessionStorage.setItem('breakdownItems', JSON.stringify(this.state.breakdownItems));\n    };\n\n    this.loadBreakdownFromSession = () => {\n      const data = sessionStorage.getItem('breakdownItems');\n      if (data) this.setState({\n        breakdownItems: JSON.parse(data)\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        editingId,\n        formData,\n        quotes\n      } = this.state;\n      if (!formData.customer) return alert(\"Customer is required\");\n      if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\n\n      if (editingId) {\n        await updateDoc(doc(db, 'quotes', editingId), formData);\n      } else {\n        formData.quoteNo = `QT${1000 + quotes.length}`;\n        await addDoc(collection(db, \"quotes\"), { ...this.state.formData,\n          status: \"Entered\",\n          createdAt: serverTimestamp()\n        });\n      }\n\n      if (!this.isBreakdownValid()) {\n        return alert('Please complete the breakdown: each product\\'s subproduct totals must match the product total.');\n      }\n\n      this.setState({\n        showForm: false,\n        editingId: null\n      });\n      this.fetchQuotes();\n    };\n\n    this.loadQuotePreview = q => {\n      this.setState({\n        selectedQuote: q,\n        previewMode: true\n      });\n    };\n\n    this.loadQuoteForEdit = quote => {\n      this.setState({\n        formData: { ...quote,\n          lineItems: Array.isArray(quote.lineItems) ? quote.lineItems : []\n        },\n        editingId: quote.id,\n        showForm: true,\n        previewMode: false,\n        activeTab: 'co'\n      }, () => {\n        if (this.customerInputRef.current) {\n          this.customerInputRef.current.value = quote.customer;\n        }\n      });\n    };\n\n    this.convertToOrder = async quote => {\n      await updateDoc(doc(db, \"quotes\", quote.id), {\n        className: \"btn btn-secondary mr-2\",\n        status: \"ConvertedToOrder\"\n      });\n      sessionStorage.setItem('quoteToConvert', JSON.stringify(quote));\n      this.props.history.push('/panelone/Order');\n    };\n\n    this.showQuotePDFWithOrg = async quote => {\n      var _orgSnap$docs$, _quote$billTo, _quote$shipTo;\n\n      if (!quote || !Array.isArray(quote.lineItems) || quote.lineItems.length === 0) {\n        alert(\"Quote data is incomplete.\");\n        return;\n      } // 1. Fetch org and customer data\n\n\n      const orgSnap = await getDocs(collection(db, 'businessGroups'));\n      const org = ((_orgSnap$docs$ = orgSnap.docs[0]) === null || _orgSnap$docs$ === void 0 ? void 0 : _orgSnap$docs$.data()) || {};\n      const customer = this.state.customers.find(c => c.custshortName === quote.customer || c.custname === quote.customer) || {}; // GST State Map for Place of Supply\n\n      const gstStateMap = {\n        \"01\": \"Jammu & Kashmir\",\n        \"02\": \"Himachal Pradesh\",\n        \"03\": \"Punjab\",\n        \"04\": \"Chandigarh\",\n        \"05\": \"Uttarakhand\",\n        \"06\": \"Haryana\",\n        \"07\": \"Delhi\",\n        \"08\": \"Rajasthan\",\n        \"09\": \"Uttar Pradesh\",\n        \"10\": \"Bihar\",\n        \"11\": \"Sikkim\",\n        \"12\": \"Arunachal Pradesh\",\n        \"13\": \"Nagaland\",\n        \"14\": \"Manipur\",\n        \"15\": \"Mizoram\",\n        \"16\": \"Tripura\",\n        \"17\": \"Meghalaya\",\n        \"18\": \"Assam\",\n        \"19\": \"West Bengal\",\n        \"20\": \"Jharkhand\",\n        \"21\": \"Odisha\",\n        \"22\": \"Chhattisgarh\",\n        \"23\": \"Madhya Pradesh\",\n        \"24\": \"Gujarat\",\n        \"25\": \"Daman and Diu\",\n        \"26\": \"Dadra and Nagar Haveli\",\n        \"27\": \"Maharashtra\",\n        \"28\": \"Andhra Pradesh (Old)\",\n        \"29\": \"Karnataka\",\n        \"30\": \"Goa\",\n        \"31\": \"Lakshadweep\",\n        \"32\": \"Kerala\",\n        \"33\": \"Tamil Nadu\",\n        \"34\": \"Puducherry\",\n        \"35\": \"Andaman and Nicobar Islands\",\n        \"36\": \"Telangana\",\n        \"37\": \"Andhra Pradesh\",\n        \"97\": \"Other Territory\"\n      }; // Helper for Place of Supply\n\n      const getPlaceOfSupply = gstin => {\n        if (!gstin || gstin.length < 2) return '';\n        const code = gstin.substring(0, 2);\n        const state = gstStateMap[code];\n        return state ? `${code} - ${state}` : '';\n      }; // 2. Enrich line items\n\n\n      const enrichedItems = quote.lineItems.map(item => {\n        const product = this.state.products.find(p => p.productId === item.itemCode) || {};\n        return { ...item,\n          ptshortName: product.ptshortName || '',\n          hsnCode: product.hsnCode || '',\n          uom: product.stockingUOM || '',\n          cgst: item.cgst || 0,\n          sgst: item.sgst || 0,\n          igst: item.igst || 0,\n          taxGroupNames: item.taxGroupNames || (item.taxGroupName ? item.taxGroupName.split(',').map(s => s.trim()) : [])\n        };\n      }); // 3. Subtotal (without tax)\n\n      const subtotal = enrichedItems.reduce((sum, item) => sum + (parseFloat(item.unitPrice) || 0) * (parseFloat(item.qty) || 0), 0);\n      const freightCharges = parseFloat(quote.freightCharges || 0);\n      const freightTax = parseFloat(quote.freighttaxAmount || 0);\n      const totalTaxAmount = parseFloat(quote.taxAmount || 0);\n      const grandTotal = parseFloat(quote.quoteValue || subtotal + totalTaxAmount);\n      const amountWords = `INR ${toWords(Math.floor(grandTotal))} Only`; // 4. Tax breakdown by group\n\n      let taxBreakdown = {};\n      let taxGroupDetails = [];\n      let sno = 1;\n      enrichedItems.forEach(item => {\n        const qty = parseFloat(item.qty || 0);\n        const unitPrice = parseFloat(item.unitPrice || 0);\n        const base = qty * unitPrice;\n        (item.taxGroupNames || []).forEach(tgName => {\n          // Find group in taxGroups\n          const group = (this.state.taxGroups || []).find(g => g.groupName === tgName);\n\n          if (group) {\n            group.lineItems.forEach(li => {\n              const key = `${tgName} - ${li.component} (${li.percentOrAmt}${li.type === 'Amount' ? '' : '%'})`;\n              let taxAmt = 0;\n              if (li.type === 'Amount') taxAmt = parseFloat(li.percentOrAmt || 0);else taxAmt = base * parseFloat(li.percentOrAmt || 0) / 100;\n              taxBreakdown[key] = (taxBreakdown[key] || 0) + taxAmt;\n              taxGroupDetails.push({\n                sno: sno++,\n                group: tgName,\n                peramt: `${li.percentOrAmt}${li.type === 'Amount' ? '' : '%'}`,\n                taxAmt: taxAmt.toFixed(2)\n              });\n            });\n          }\n        }); // Legacy support for cgst/sgst/igst\n\n        if (item.cgst) {\n          const key = `CGST ${item.cgst}%`;\n          const taxAmt = base * item.cgst / 100;\n          taxBreakdown[key] = (taxBreakdown[key] || 0) + taxAmt;\n          taxGroupDetails.push({\n            sno: sno++,\n            group: key,\n            peramt: `${item.cgst}%`,\n            taxAmt: taxAmt.toFixed(2)\n          });\n        }\n\n        if (item.sgst) {\n          const key = `SGST ${item.sgst}%`;\n          const taxAmt = base * item.sgst / 100;\n          taxBreakdown[key] = (taxBreakdown[key] || 0) + taxAmt;\n          taxGroupDetails.push({\n            sno: sno++,\n            group: key,\n            peramt: `${item.sgst}%`,\n            taxAmt: taxAmt.toFixed(2)\n          });\n        }\n\n        if (item.igst) {\n          const key = `IGST ${item.igst}%`;\n          const taxAmt = base * item.igst / 100;\n          taxBreakdown[key] = (taxBreakdown[key] || 0) + taxAmt;\n          taxGroupDetails.push({\n            sno: sno++,\n            group: key,\n            peramt: `${item.igst}%`,\n            taxAmt: taxAmt.toFixed(2)\n          });\n        }\n      });\n\n      if (freightTax > 0) {\n        taxBreakdown[\"Freight Tax\"] = freightTax;\n        taxGroupDetails.push({\n          sno: sno++,\n          group: \"Freight Tax\",\n          peramt: \"-\",\n          taxAmt: freightTax.toFixed(2)\n        });\n      } // 5. Milestone breakdown (with subproducts)\n\n\n      const {\n        breakdownItems,\n        breakdownType\n      } = this.state; // 6. Build HTML for PDF\n\n      const container = document.createElement('div');\n      container.id = 'pdf-preview-container';\n      container.style.width = '794px';\n      container.style.padding = '40px';\n      container.style.fontFamily = 'Arial'; // 7. Main PDF content\n\n      container.innerHTML = `\n    <div style=\"display:flex; justify-content:space-between; align-items:center;\">\n      <img src=\"${org.logoUrl || ''}\" style=\"height:50px;\" />\n      <div style=\"font-size:18px; font-weight:bold;\">QUOTATION</div>\n    </div>\n    <hr/>\n    <div style=\"display:flex; justify-content:space-between; font-size:11px;\">\n      <div style=\"line-height:1.5; width:50%;\">\n        <b>${org.bgName || ''}</b><br/>\n        ${org.address || ''}<br/>\n        <b>Email:</b> ${org.email || ''}<br/>\n        <b>Website:</b> ${org.website || ''}<br/>\n        <b>GSTIN:</b> ${org.gstin || ''}<br/>\n        <b>Mobile:</b> ${org.mobile || ''}<br/>\n        <b>CIN:</b> ${org.cin || ''}\n      </div>\n      <table style=\"font-size:11px; text-align:left;\">\n        <tr><td><b>Quote No</b></td><td>: ${quote.quoteNo}</td></tr>\n        <tr><td><b>Quote Date</b></td><td>: ${quote.quoteDate}</td></tr>\n        <tr><td><b>Currency</b></td><td>: ${quote.currency || 'INR'}</td></tr>\n        <tr><td><b>Despatch</b></td><td>: ${quote.despatchMode || ''}</td></tr>\n      </table>\n    </div>\n\n    <div style=\"margin-top:15px; display:flex; justify-content:space-between; font-size:11px;\">\n      <div style=\"width:48%;\">\n        <b style=\"background:#011b56; color:#fff; display:block; padding:4px;\">Bill To</b>\n        <div style=\"border:1px solid #ccc; padding:6px;\">\n         <b>${quote.customer || ''}</b><br/>\n          ${((_quote$billTo = quote.billTo) === null || _quote$billTo === void 0 ? void 0 : _quote$billTo.replace(/\\n/g, '<br/>')) || ''}\n        </div>\n        <div style=\"font-size:10px; margin-top:6px;\">\n            <b>GSTIN:</b> ${customer.gstin || ''}<br/>\n            <b>Email:</b> ${customer.email || ''}<br/>\n            <b>Contact:</b> ${customer.contactPerson || ''}<br/>\n            <b>Phone:</b> ${customer.phone || ''}\n        </div>\n      </div>\n      <div style=\"width:48%;\">\n        <b style=\"background:#011b56; color:#fff; display:block; padding:4px;\">Ship To</b>\n        <div style=\"border:1px solid #ccc; padding:6px;\">\n         <b>${quote.customer || ''}</b><br/>\n          ${((_quote$shipTo = quote.shipTo) === null || _quote$shipTo === void 0 ? void 0 : _quote$shipTo.replace(/\\n/g, '<br/>')) || ''}\n        </div>\n        <div style=\"font-size:10px; margin-top:6px;\">\n          <b>Place of Supply:</b> ${getPlaceOfSupply(customer.gstin || '')}\n        </div>\n      </div>\n    </div>\n\n    <table style=\"width:100%; border-collapse:collapse; margin-top:20px; font-size:10px;\">\n      <thead>\n        <tr style=\"background:#f4f6fa;\">\n          <th style=\"border:1px solid #011b56;\">Item Code</th>\n          <th style=\"border:1px solid #011b56;\">Description</th>\n          <th style=\"border:1px solid #011b56;\">HSN</th>\n          <th style=\"border:1px solid #011b56;\">UOM</th>\n          <th style=\"border:1px solid #011b56;\">Qty</th>\n          <th style=\"border:1px solid #011b56;\">Unit Price</th>\n          <th style=\"border:1px solid #011b56;\">GST%</th>\n          <th style=\"border:1px solid #011b56;\">Item Total</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${enrichedItems.map(item => {\n        const gstLabel = item.taxGroupNames && item.taxGroupNames.length ? item.taxGroupNames.join(', ') : item.taxGroupName || item.taxId || '-';\n        return `\n            <tr>\n              <td style=\"border:1px solid #011b56;\">${item.itemCode}</td>\n              <td style=\"border:1px solid #011b56;\">${item.itemDescription}</td>\n              <td style=\"border:1px solid #011b56;\">${item.hsnCode}</td>\n              <td style=\"border:1px solid #011b56;\">${item.uom}</td>\n              <td style=\"border:1px solid #011b56;\">${item.qty}</td>\n              <td style=\"border:1px solid #011b56;\">${item.unitPrice}</td>\n              <td style=\"border:1px solid #011b56;\">${gstLabel}</td>\n              <td style=\"border:1px solid #011b56;\">${item.total}</td>\n            </tr>`;\n      }).join('')}\n        <tr>\n          <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>Subtotal</b></td>\n          <td style=\"border:1px solid #011b56;\"><b>${subtotal.toFixed(2)}</b></td>\n        </tr>\n        ${Object.entries(taxBreakdown).map(([key, val]) => `\n          <tr>\n            <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>${key}</b></td>\n            <td style=\"border:1px solid #011b56;\">${val.toFixed(2)}</td>\n          </tr>\n        `).join('')}\n        <tr>\n          <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>Total Tax Amount</b></td>\n          <td style=\"border:1px solid #011b56;\"><b>${totalTaxAmount.toFixed(2)}</b></td>\n        </tr>\n        <tr>\n          <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>Grand Total</b></td>\n          <td style=\"border:1px solid #011b56;\"><b>${grandTotal.toFixed(2)}</b></td>\n        </tr>\n      </tbody>\n    </table>\n    <div style=\"margin-top:8px; font-size:11px;\"><b>Amount in Words:</b> ${amountWords}</div>\n    <div style=\"margin-top:20px; text-align:right; font-size:10px;\">Printed on ${new Date().toLocaleString()}</div>\n  `;\n      document.body.appendChild(container);\n      const canvas = await html2canvas(container, {\n        scale: 2,\n        useCORS: true\n      });\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'pt', 'a4');\n      const width = 595.28;\n      const height = canvas.height * width / canvas.width;\n      pdf.addImage(imgData, 'PNG', 0, 0, width, height);\n      document.body.removeChild(container); // ...existing code...\n      // 8. Milestone breakdown and tax breakdown on the same page, same style as quote table\n\n      if (breakdownItems && breakdownItems.length > 0) {\n        pdf.addPage();\n        let milestoneRows = breakdownItems.filter(bi => bi.selected !== false).map((item, idx) => {\n          const mainItem = enrichedItems.find(li => li.itemCode === item.productId);\n          const mainItemTotal = mainItem ? parseFloat(mainItem.total) || 0 : 0;\n          return `\n      <tr>\n        <td style=\"border:1px solid #011b56;\">${item.sno}</td>\n        <td style=\"border:1px solid #011b56;\">${item.productId}</td>\n        <td style=\"border:1px solid #011b56;\">${item.desc}</td>\n        <td style=\"border:1px solid #011b56;\">${item.value} ${breakdownType === 'Percentage' ? '%' : '₹'}</td>\n        <td style=\"border:1px solid #011b56;\">${item.lastDate}</td>\n        <td style=\"border:1px solid #011b56;\">${mainItemTotal.toFixed(2)}</td>\n      </tr>\n      ${(item.subProducts || []).map(sp => {\n            let spTotal = 0;\n            if (sp.type === 'Amount') spTotal = parseFloat(sp.value || 0);else if (sp.type === 'Percentage') spTotal = mainItemTotal * parseFloat(sp.value || 0) / 100;\n            return `\n          <tr style=\"background: #f9f9f9;\">\n            <td style=\"border:1px solid #011b56;\"></td>\n            <td style=\"border:1px solid #011b56;\" colspan=\"2\" style=\"padding-left: 40px;\">→ ${sp.name}</td>\n            <td style=\"border:1px solid #011b56;\">${sp.type === 'Amount' ? `₹${sp.value}` : `${sp.value}%`}</td>\n            <td style=\"border:1px solid #011b56;\">${sp.dueDate}</td>\n            <td style=\"border:1px solid #011b56;\">${spTotal.toFixed(2)}</td>\n          </tr>\n        `;\n          }).join('')}\n    `;\n        }).join('');\n        let taxRows = taxGroupDetails.map(row => {\n          return `\n    <tr>\n      <td style=\"border:1px solid #011b56;\">${row.sno}</td>\n      <td style=\"border:1px solid #011b56;\">${row.group}</td>\n      <td style=\"border:1px solid #011b56;\">${row.peramt}</td>\n      <td style=\"border:1px solid #011b56;\">${row.taxAmt}</td>\n    </tr>\n  `;\n        }).join('');\n        let combinedHtml = `\n    <div style=\"font-family:Arial; padding:40px; width:100%;\">\n      <h3 style=\"margin-bottom:10px; font-size:16px;\">Milestone Breakdown</h3>\n      <table style=\"width:100%; border-collapse:collapse; margin-top:20px; font-size:10px;\">\n        <thead>\n          <tr style=\"background:#f4f6fa;\">\n            <th style=\"border:1px solid #011b56;\">S.No</th>\n            <th style=\"border:1px solid #011b56;\">Item ID</th>\n            <th style=\"border:1px solid #011b56;\">Desc</th>\n            <th style=\"border:1px solid #011b56;\">${breakdownType}</th>\n            <th style=\"border:1px solid #011b56;\">Last Date</th>\n            <th style=\"border:1px solid #011b56;\">Item Total</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${milestoneRows}\n        </tbody>\n      </table>\n      <h3 style=\"margin-bottom:10px; margin-top:30px; font-size:16px;\">Tax Breakdown</h3>\n      <table style=\"width:100%; border-collapse:collapse; margin-top:20px; font-size:10px;\">\n        <thead>\n          <tr style=\"background:#f4f6fa;\">\n            <th style=\"border:1px solid #011b56;\">S.No</th>\n            <th style=\"border:1px solid #011b56;\">Tax Group</th>\n            <th style=\"border:1px solid #011b56;\">Per/Amt</th>\n            <th style=\"border:1px solid #011b56;\">Tax Amt</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${taxRows}\n          <tr>\n            <td colspan=\"3\" style=\"text-align:right; border:1px solid #011b56;\"><b>Total Tax Amount</b></td>\n            <td style=\"border:1px solid #011b56;\"><b>${totalTaxAmount.toFixed(2)}</b></td>\n          </tr>\n        </tbody>\n      </table>\n      <div style=\"margin-top:40px; text-align:right; font-size:11px;\">\n        For ${org.bgName || ''}<br/>\n        Authorized Signatory\n      </div>\n    </div>\n  `;\n        const combinedContainer = document.createElement('div');\n        combinedContainer.id = 'pdf-preview-container';\n        combinedContainer.style.width = '794px';\n        combinedContainer.style.padding = '40px';\n        combinedContainer.style.fontFamily = 'Arial';\n        combinedContainer.style.fontSize = '10px'; // Ensure same font size as first page\n\n        combinedContainer.innerHTML = combinedHtml;\n        document.body.appendChild(combinedContainer);\n        const combinedCanvas = await html2canvas(combinedContainer, {\n          scale: 2,\n          useCORS: true\n        });\n        const combinedImg = combinedCanvas.toDataURL('image/png');\n        pdf.addImage(combinedImg, 'PNG', 0, 0, width, combinedCanvas.height * width / combinedCanvas.width);\n        document.body.removeChild(combinedContainer);\n      }\n\n      pdf.setFontSize(11);\n      pdf.text(`For ${org.bgName || ''}`, width - 200, 780);\n      pdf.text('Authorized Signatory', width - 200, 800); // 11. Show PDF\n\n      const blob = pdf.output('blob');\n      const url = URL.createObjectURL(blob);\n      const newWin = window.open();\n      newWin.document.write(`\n    <html><head><title>Quote PDF Preview</title></head>\n    <body style=\"margin:0;\">\n      <iframe width=\"100%\" height=\"100%\" style=\"border:none;\" src=\"${url}\"></iframe>\n      <button onclick=\"document.querySelector('iframe').contentWindow.print()\" style=\"position:fixed;top:10px;right:110px;\"></button>\n      <a href=\"${url}\" download=\"Quote_${quote.quoteNo || 'PDF'}.pdf\" style=\"position:fixed;top:10px;right:10px;\"></a>\n    </body></html>\n  `);\n      newWin.document.close();\n    };\n\n    this.showOverlay = type => this.setState({\n      overlayType: type,\n      overlaySearch: ''\n    });\n\n    this.hideOverlay = () => this.setState({\n      overlayType: '',\n      overlaySearch: ''\n    });\n\n    this.selectOverlayValue = value => {\n      if (this.state.overlayType === 'customer') {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            customer: value.custname || value.custcode || '',\n            // Use custname or custcode\n            billTo: this.formatAddress(value.billTo),\n            shipTo: this.formatAddress(value.shipTo),\n            currency: value.currency || '' // despatchMode: value.despatchMode || '', // No auto-fill for despatch mode\n            // paymentTerms: value.paymentTerms || '' // No auto-fill for payment terms\n\n          },\n          overlayType: '',\n          overlaySearch: ''\n        }), () => {\n          if (this.customerInputRef.current) {\n            this.customerInputRef.current.value = value.custname || value.custcode || '';\n          }\n        });\n      }\n    };\n\n    this.renderTaxOverlay = () => {\n      const {\n        taxGroups,\n        currentTaxLineIdx,\n        formData\n      } = this.state;\n      if (currentTaxLineIdx === null) return null;\n      const item = formData.lineItems[currentTaxLineIdx];\n      const selected = new Set(item.taxGroupNames || []);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          zIndex: 9999,\n          top: '10%',\n          left: '20%',\n          background: '#fff',\n          border: '1px solid #ccc',\n          padding: '20px',\n          boxShadow: '0 0 10px rgba(0,0,0,0.3)',\n          width: '800px',\n          maxHeight: '60vh',\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 7\n        }\n      }, \"Select Tax Groups\"), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-sm table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 24\n        }\n      }, \"Group\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 38\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 51\n        }\n      }, \"%\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 9\n        }\n      }, taxGroups.map(tg => /*#__PURE__*/React.createElement(\"tr\", {\n        key: tg.groupName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: selected.has(tg.groupName),\n        onChange: e => this.toggleTaxGroupSelection(tg.groupName, currentTaxLineIdx, e.target.checked),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 15\n        }\n      }, tg.groupName), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 15\n        }\n      }, tg.lineItems.map(li => li.component).join(', ')), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 15\n        }\n      }, tg.lineItems.map(li => li.percentOrAmt).join(', ')))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 786,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-sm btn-primary\",\n        onClick: () => this.setState({\n          showTaxOverlay: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 9\n        }\n      }, \"Done\")));\n    };\n\n    this.renderOverlay = () => {\n      const {\n        overlayType,\n        overlaySearch,\n        customers,\n        despatchModes,\n        paymentTerms\n      } = this.state;\n\n      const getFilteredRows = (list, nameKey = 'name', codeKey = 'shortName') => list.filter(item => (item[nameKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()) || (item[codeKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()));\n\n      const handleSelect = item => {\n        if (overlayType === 'customer') {\n          this.selectOverlayValue(item);\n        } else if (overlayType === 'despatchMode') {\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              despatchMode: item.name\n            },\n            overlayType: '',\n            overlaySearch: ''\n          }));\n        } else if (overlayType === 'paymentTerms') {\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              paymentTerms: item.name\n            },\n            overlayType: '',\n            overlaySearch: ''\n          }));\n        }\n      };\n\n      let title = '';\n      let headers = [];\n      let rows = [];\n\n      if (overlayType === 'customer') {\n        title = 'Select Customer';\n        headers = ['Name', 'Code', 'Short Name'];\n        rows = getFilteredRows(customers, 'custname', 'custcode');\n      } else if (overlayType === 'despatchMode') {\n        title = 'Select Despatch Mode';\n        headers = ['Name', 'Short Name'];\n        rows = getFilteredRows(despatchModes);\n      } else if (overlayType === 'paymentTerms') {\n        title = 'Select Payment Terms';\n        headers = ['Name', 'Short Name'];\n        rows = getFilteredRows(paymentTerms);\n      } else {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 9\n        }\n      }, title), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: `Search ${overlayType}...`,\n        value: overlaySearch,\n        onChange: e => this.setState({\n          overlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 15\n        }\n      }, headers.map((h, i) => /*#__PURE__*/React.createElement(\"th\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 40\n        }\n      }, h)))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 13\n        }\n      }, rows.map((item, i) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id || i,\n        onClick: () => handleSelect(item),\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 17\n        }\n      }, headers.map((h, j) => /*#__PURE__*/React.createElement(\"td\", {\n        key: j,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 21\n        }\n      }, overlayType === 'customer' ? h === 'Name' ? item.custname : h === 'Code' ? item.custcode : item.custshortName : h === 'Name' ? item.name : item.shortName)))), rows.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: headers.length,\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 885,\n          columnNumber: 19\n        }\n      }, \"No records found\"))))), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm mt-2\",\n        onClick: this.hideOverlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 891,\n          columnNumber: 9\n        }\n      }, \"Cancel\")));\n    };\n\n    this.renderProductOverlay = () => {\n      const {\n        products,\n        productOverlaySearch,\n        selectedProductIds\n      } = this.state;\n      const filtered = products.filter(p => (p.ptshortName || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) || (p.ptdescription || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) || (p.itemCode || '').toLowerCase().includes(productOverlaySearch.toLowerCase()));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 905,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 907,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 908,\n          columnNumber: 13\n        }\n      }, \"Select Products\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-success btn-sm\",\n        onClick: () => {\n          const selectedProducts = products.filter(p => this.state.selectedProductIds.includes(p.id));\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              lineItems: [...prev.formData.lineItems, ...selectedProducts.filter(p => !prev.formData.lineItems.some(item => item.id === p.id)).map(p => ({\n                id: p.id,\n                itemCode: p.productId || '',\n                itemDescription: p.ptdescription || '',\n                itemType: p.itemType || '',\n                materialType: p.materialType || '',\n                onHand: p.onHand || 0,\n                taxGroup: p.taxGroup || '',\n                taxGroupName: p.taxGroup || '',\n                custPartNo: p.custPartNo || '',\n                hsnNo: p.hsnNo || '',\n                unitPrice: p.unitPrice || 0,\n                qty: 1,\n                total: (p.unitPrice || 0).toFixed(2)\n              }))]\n            },\n            productOverlayVisible: false,\n            selectedProductIds: []\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 13\n        }\n      }, \"Add Selected\")), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: \"Search products...\",\n        value: productOverlaySearch,\n        onChange: e => this.setState({\n          productOverlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 952,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 953,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 954,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 955,\n          columnNumber: 19\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 19\n        }\n      }, \"Item Desc\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 957,\n          columnNumber: 19\n        }\n      }, \"Item Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 958,\n          columnNumber: 19\n        }\n      }, \"Material Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 959,\n          columnNumber: 19\n        }\n      }, \"On Hand\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 960,\n          columnNumber: 19\n        }\n      }, \"Tax Grp\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 19\n        }\n      }, \"Cust Part No\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 964,\n          columnNumber: 15\n        }\n      }, filtered.map(p => /*#__PURE__*/React.createElement(\"tr\", {\n        key: p.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 966,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 967,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: selectedProductIds.includes(p.id),\n        onChange: e => {\n          const checked = e.target.checked;\n          this.setState(prev => ({\n            selectedProductIds: checked ? [...prev.selectedProductIds, p.id] : prev.selectedProductIds.filter(id => id !== p.id)\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 981,\n          columnNumber: 21\n        }\n      }, p.productId), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 982,\n          columnNumber: 21\n        }\n      }, p.ptdescription || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 983,\n          columnNumber: 21\n        }\n      }, p.itemType || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 984,\n          columnNumber: 21\n        }\n      }, p.materialType || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 985,\n          columnNumber: 21\n        }\n      }, p.onHand || 0), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 986,\n          columnNumber: 21\n        }\n      }, p.taxGroup || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 987,\n          columnNumber: 21\n        }\n      }, p.custPartNo || ''))), filtered.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 991,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"8\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 992,\n          columnNumber: 21\n        }\n      }, \"No products found\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 999,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1000,\n          columnNumber: 13\n        }\n      }, \"Page 1 of 1\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        onClick: () => this.setState({\n          productOverlayVisible: false,\n          selectedProductIds: []\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1001,\n          columnNumber: 13\n        }\n      }, \"Cancel\"))));\n    };\n\n    this.renderBreakdownTab = () => {\n      const {\n        breakdownItems,\n        breakdownType,\n        formData\n      } = this.state; // map item totals from lineItems (main product totals)\n\n      const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\n        acc[li.itemCode] = parseFloat(li.total || 0) || 0;\n        return acc;\n      }, {});\n      const sumOfItemTotals = Object.values(itemTotals).reduce((sum, val) => sum + val, 0); // helper to compute subproducts sum for a given breakdownItem\n\n      const getSubProductsSum = bi => {\n        const mainTotal = itemTotals[bi.productId] || 0;\n        const subs = Array.isArray(bi.subProducts) ? bi.subProducts : [];\n        return subs.reduce((s, sp) => {\n          const val = parseFloat(sp.value || 0) || 0;\n\n          if (breakdownType === 'Percentage') {\n            return s + mainTotal * val / 100;\n          }\n\n          return s + val;\n        }, 0);\n      };\n\n      const canSave = this.isBreakdownValid();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1035,\n          columnNumber: 7\n        }\n      }, \"Milestone Breakdown\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1037,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1038,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1038,\n          columnNumber: 30\n        }\n      }, \"Quote Value:\"), \" \", formData.quoteValue), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1039,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1039,\n          columnNumber: 30\n        }\n      }, \"Tax Amount:\"), \" \", formData.taxAmount), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1040,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1040,\n          columnNumber: 30\n        }\n      }, \"Sum of Item Totals:\"), \" \", sumOfItemTotals.toFixed(2))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1043,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1044,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1045,\n          columnNumber: 11\n        }\n      }, \"Subproduct Mode\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: breakdownType,\n        onChange: e => this.handleBreakdownTypeChange(e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1046,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Amount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1051,\n          columnNumber: 13\n        }\n      }, \"Amount\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Percentage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1052,\n          columnNumber: 13\n        }\n      }, \"Percentage\")))), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1057,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1058,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1059,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1060,\n          columnNumber: 13\n        }\n      }, \"S.No\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1061,\n          columnNumber: 13\n        }\n      }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1062,\n          columnNumber: 13\n        }\n      }, \"Desc / Subproduct Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1063,\n          columnNumber: 13\n        }\n      }, \"Subproduct Value (\", breakdownType === 'Percentage' ? '%' : '₹', \")\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1064,\n          columnNumber: 13\n        }\n      }, \"Total\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1065,\n          columnNumber: 13\n        }\n      }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1068,\n          columnNumber: 9\n        }\n      }, breakdownItems.map((item, idx) => {\n        const mainItemTotal = itemTotals[item.productId] || 0;\n        const subSum = getSubProductsSum(item);\n        const remaining = mainItemTotal - subSum;\n        const subs = Array.isArray(item.subProducts) ? item.subProducts : [];\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          key: idx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1076,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"tr\", {\n          style: {\n            background: '#eef4ff'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1078,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1079,\n            columnNumber: 19\n          }\n        }, item.sno), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1080,\n            columnNumber: 19\n          }\n        }, item.productId), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1081,\n            columnNumber: 19\n          }\n        }, item.desc), /*#__PURE__*/React.createElement(\"td\", {\n          colSpan: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1082,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex justify-content-between align-items-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1083,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1084,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"small\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1085,\n            columnNumber: 25\n          }\n        }, \"Subproducts sum: \", /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1085,\n            columnNumber: 49\n          }\n        }, subSum.toFixed(2))), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1086,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"small\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1087,\n            columnNumber: 25\n          }\n        }, \"Remaining: \", /*#__PURE__*/React.createElement(\"b\", {\n          style: {\n            color: remaining > 0.01 ? 'red' : 'green'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1087,\n            columnNumber: 43\n          }\n        }, remaining.toFixed(2)))), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1089,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm btn-outline-primary mr-2\",\n          onClick: () => this.handleAddInlineSubProduct(idx),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1090,\n            columnNumber: 25\n          }\n        }, \"+ Add\"), /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm btn-outline-secondary\",\n          onClick: () => {\n            // quick auto-fill remainder as one subproduct (useful)\n            if (remaining <= 0) return;\n            this.handleAddInlineSubProduct(idx, {\n              name: 'Remainder',\n              value: breakdownType === 'Percentage' ? (remaining * 100 / (mainItemTotal || 1)).toFixed(2) : remaining.toFixed(2)\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1095,\n            columnNumber: 25\n          }\n        }, \"Auto-fill\")))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1107,\n            columnNumber: 20\n          }\n        }, mainItemTotal.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1108,\n            columnNumber: 20\n          }\n        })), subs.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n          key: `notice-${idx}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1113,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          colSpan: \"7\",\n          className: \"text-center text-muted\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1114,\n            columnNumber: 21\n          }\n        }, \"No subproducts added for this item.\")), subs.map((sp, spIdx) => {\n          const spId = `${item.productId}_${spIdx + 1}`;\n          let spTotal = 0;\n          const rawVal = parseFloat(sp.value || 0) || 0;\n          if (breakdownType === 'Percentage') spTotal = mainItemTotal * rawVal / 100;else spTotal = rawVal;\n          return /*#__PURE__*/React.createElement(\"tr\", {\n            key: spId,\n            style: {\n              background: '#f9f9f9'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1126,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1127,\n              columnNumber: 23\n            }\n          }, spIdx + 1), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1128,\n              columnNumber: 23\n            }\n          }, spId), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1129,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            type: \"text\",\n            className: \"form-control form-control-sm\",\n            value: sp.name || '',\n            onChange: e => this.handleSubProductChange(idx, spIdx, 'name', e.target.value),\n            placeholder: \"Enter name\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1130,\n              columnNumber: 25\n            }\n          })), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1138,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            type: \"number\",\n            step: \"any\",\n            min: \"0\",\n            className: \"form-control form-control-sm\",\n            value: sp.value || '',\n            onChange: e => this.handleSubProductChange(idx, spIdx, 'value', e.target.value),\n            style: {\n              width: '120px'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1139,\n              columnNumber: 25\n            }\n          })), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1149,\n              columnNumber: 23\n            }\n          }, spTotal.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1150,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            className: \"btn btn-sm btn-danger\",\n            onClick: () => this.handleRemoveSubProduct(idx, spIdx),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1151,\n              columnNumber: 25\n            }\n          }, \"-\")));\n        }));\n      }))), !canSave && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1167,\n          columnNumber: 9\n        }\n      }, \"Breakdown incomplete \\u2014 for each product the sum of subproduct totals must equal the product total. Save disabled until fixed.\"));\n    };\n\n    this.renderSubProductDialog = () => {\n      const {\n        showSubProductDialog,\n        subProductForm\n      } = this.state;\n      if (!showSubProductDialog) return null;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        onClick: e => e.stopPropagation(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1181,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        style: {\n          width: 400\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1182,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1183,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1184,\n          columnNumber: 11\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control\",\n        value: subProductForm.name,\n        onChange: e => this.setState({\n          subProductForm: { ...subProductForm,\n            name: e.target.value\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1185,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1187,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1188,\n          columnNumber: 11\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control\",\n        value: subProductForm.type,\n        onChange: e => this.setState({\n          subProductForm: { ...subProductForm,\n            type: e.target.value\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1189,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Amount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1190,\n          columnNumber: 13\n        }\n      }, \"Amount\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Percentage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1191,\n          columnNumber: 13\n        }\n      }, \"Percentage\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1194,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1195,\n          columnNumber: 11\n        }\n      }, subProductForm.type), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"number\",\n        value: subProductForm.value,\n        onChange: e => this.setState({\n          subProductForm: { ...subProductForm,\n            value: e.target.value\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1196,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1198,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1199,\n          columnNumber: 11\n        }\n      }, \"Due Date\"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"date\",\n        value: subProductForm.dueDate,\n        onChange: e => this.setState({\n          subProductForm: { ...subProductForm,\n            dueDate: e.target.value\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1200,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1202,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary mr-2\",\n        onClick: () => this.setState({\n          showSubProductDialog: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1203,\n          columnNumber: 11\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: e => {\n          e.preventDefault(); //  this prevents the form submission\n\n          this.handleAddSubProduct();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1205,\n          columnNumber: 11\n        }\n      }, \"Add\"))));\n    };\n\n    this.handleAddInlineSubProduct = (breakdownIdx, initial = null) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        const item = { ...items[breakdownIdx]\n        };\n        const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\n        const defaultSP = {\n          name: '',\n          value: '',\n          dueDate: ''\n        };\n        subProducts.push(initial ? { ...defaultSP,\n          ...initial\n        } : defaultSP);\n        item.subProducts = subProducts;\n        items[breakdownIdx] = item;\n        return {\n          breakdownItems: items\n        };\n      }, this.saveBreakdownToSession);\n    };\n\n    this.handleRemoveSubProduct = (biIdx, spIdx) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        const item = { ...items[biIdx]\n        };\n        const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\n        subProducts.splice(spIdx, 1);\n        item.subProducts = subProducts;\n        items[biIdx] = item;\n        return {\n          breakdownItems: items\n        };\n      }, this.saveBreakdownToSession);\n    };\n\n    this.handleSubProductChange = (biIdx, spIdx, field, value) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        const item = { ...items[biIdx]\n        };\n        const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\n        const sp = { ...subProducts[spIdx],\n          [field]: value\n        };\n        subProducts[spIdx] = sp;\n        item.subProducts = subProducts;\n        items[biIdx] = item;\n        return {\n          breakdownItems: items\n        };\n      }, this.saveBreakdownToSession);\n    };\n\n    this.getSubProductsSum = bi => {\n      const {\n        breakdownType,\n        formData\n      } = this.state;\n      const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\n        acc[li.itemCode] = parseFloat(li.total || 0) || 0;\n        return acc;\n      }, {});\n      const mainTotal = itemTotals[bi.productId] || 0;\n      const subs = Array.isArray(bi.subProducts) ? bi.subProducts : [];\n      return subs.reduce((s, sp) => {\n        const val = parseFloat(sp.value || 0) || 0;\n\n        if (breakdownType === 'Percentage') {\n          return s + mainTotal * val / 100;\n        }\n\n        return s + val;\n      }, 0);\n    };\n\n    this.isBreakdownValid = () => {\n      const {\n        breakdownItems,\n        formData\n      } = this.state;\n      const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\n        acc[li.itemCode] = parseFloat(li.total || 0) || 0;\n        return acc;\n      }, {});\n      const TOL = 0.01;\n\n      for (let bi of breakdownItems) {\n        const mainTotal = itemTotals[bi.productId] || 0; // require at least one subproduct for products with non-zero mainTotal\n\n        if (mainTotal > 0) {\n          const subSum = this.getSubProductsSum(bi);\n          if (Math.abs(subSum - mainTotal) > TOL) return false;\n        }\n      }\n\n      return true;\n    };\n\n    this.handleAddSubProduct = () => {\n      const {\n        currentBreakdownIdx,\n        subProductForm,\n        breakdownItems\n      } = this.state;\n      if (!subProductForm.name || !subProductForm.value) return; // Clone breakdownItems and subProducts for immutability\n\n      const items = breakdownItems.map((item, idx) => {\n        if (idx === currentBreakdownIdx) {\n          const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\n          subProducts.push({ ...subProductForm\n          });\n          return { ...item,\n            subProducts\n          };\n        }\n\n        return item;\n      });\n      this.setState({\n        breakdownItems: items,\n        showSubProductDialog: false,\n        subProductForm: {\n          name: '',\n          value: '',\n          type: 'Amount',\n          dueDate: ''\n        }\n      }, this.saveBreakdownToSession);\n    };\n\n    this.renderQuoteTable = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-4 full-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1310,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1311,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1312,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1313,\n        columnNumber: 11\n      }\n    }, \"Quotes\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.setState({\n        showForm: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1314,\n        columnNumber: 11\n      }\n    }, \"+ Add Quote\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1316,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1317,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1318,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1319,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1320,\n        columnNumber: 17\n      }\n    }, \"Quote No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1321,\n        columnNumber: 17\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1322,\n        columnNumber: 17\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1323,\n        columnNumber: 17\n      }\n    }, \"Quote Value\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1324,\n        columnNumber: 17\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1325,\n        columnNumber: 17\n      }\n    }, \"Print\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1328,\n        columnNumber: 13\n      }\n    }, this.state.quotes.map((q, i) => {\n      let statusClass = \"badge-secondary\";\n      if (q.status === \"Entered\") statusClass = \"badge-warning\";else if (q.status === \"Submitted\") statusClass = \"badge-info\";else if (q.status === \"ConvertedToOrder\") statusClass = \"badge-success\";else if (q.status === \"Cancelled\") statusClass = \"badge-danger\";\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        style: {\n          fontSize: '14px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1337,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1338,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-link p-0\",\n        onClick: () => this.loadQuotePreview(q),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1339,\n          columnNumber: 23\n        }\n      }, q.quoteNo)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1346,\n          columnNumber: 21\n        }\n      }, q.customer), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1347,\n          columnNumber: 21\n        }\n      }, q.quoteDate), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1348,\n          columnNumber: 21\n        }\n      }, q.quoteValue), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1349,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: `badge ${statusClass}`,\n        style: {\n          fontSize: '14px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1350,\n          columnNumber: 23\n        }\n      }, q.status)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1354,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"mdi mdi-printer menu-icon\",\n        onClick: () => this.showQuotePDFWithOrg(q),\n        style: {\n          fontSize: '24px',\n          color: '#2196F3',\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1355,\n          columnNumber: 23\n        }\n      })));\n    }), this.state.quotes.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1365,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"6\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1365,\n        columnNumber: 21\n      }\n    }, \"No quotes found.\")))))));\n\n    this.renderQuoteForm = () => {\n      const {\n        formData,\n        overlayType,\n        productOverlayVisible,\n        showTaxOverlay,\n        taxGroups,\n        recalculateTotals\n      } = this.state;\n      const isFOB = formData.impExp === 'FOB';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1379,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card full-height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1380,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: 'auto',\n          padding: '24px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1381,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1382,\n          columnNumber: 13\n        }\n      }, \"Quote Form\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"nav nav-tabs\",\n        role: \"tablist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1383,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1384,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'co' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'co'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1385,\n          columnNumber: 17\n        }\n      }, \"CO Details\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1387,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'breakdown' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'breakdown'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1388,\n          columnNumber: 15\n        }\n      }, \"Breakdown\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1390,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'commercial'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1391,\n          columnNumber: 17\n        }\n      }, \"Commercial Terms\"))), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"form-sample\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1394,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tab-content pt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1395,\n          columnNumber: 15\n        }\n      }, this.state.activeTab === 'co' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1398,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1399,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1400,\n          columnNumber: 25\n        }\n      }, \"Quote No\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.quoteNo,\n        onChange: e => this.handleInputChange('quoteNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1401,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1403,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1404,\n          columnNumber: 25\n        }\n      }, \"Quote Date\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"date\",\n        className: \"form-control form-control-sm\",\n        value: formData.quoteDate,\n        onChange: e => this.handleInputChange('quoteDate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1405,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1407,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1408,\n          columnNumber: 25\n        }\n      }, \"Quote Type\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.quoteType,\n        onChange: e => this.handleInputChange('quoteType', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1409,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1410,\n          columnNumber: 27\n        }\n      }, \"Standard\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1411,\n          columnNumber: 27\n        }\n      }, \"Manual\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1414,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1415,\n          columnNumber: 25\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.status,\n        style: {\n          backgroundColor: '#fff'\n        },\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1416,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1419,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1420,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1421,\n          columnNumber: 25\n        }\n      }, \"Customer\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1422,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Choose Customer\",\n        ref: this.customerInputRef,\n        value: formData.customer,\n        readOnly: true,\n        onClick: () => this.showOverlay('customer'),\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1423,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1433,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        onClick: () => this.showOverlay('customer'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1434,\n          columnNumber: 29\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1438,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1439,\n          columnNumber: 25\n        }\n      }, \"IMP/EXP\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.impExp,\n        onChange: e => this.handleInputChange('impExp', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1440,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1445,\n          columnNumber: 27\n        }\n      }, \"None\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1446,\n          columnNumber: 27\n        }\n      }, \"COB\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1447,\n          columnNumber: 27\n        }\n      }, \"FOB\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1448,\n          columnNumber: 27\n        }\n      }, \"CIF\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1451,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1452,\n          columnNumber: 25\n        }\n      }, \"Ref No.\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.qrefNo,\n        onChange: e => this.handleInputChange('qrefNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1453,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1460,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1461,\n          columnNumber: 25\n        }\n      }, \"Choose\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1462,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check mr-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1463,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        className: \"form-check-input\",\n        name: \"choose\",\n        id: \"chooseService\",\n        value: \"Service\",\n        checked: formData.choose === 'Service',\n        onChange: e => this.handleInputChange('choose', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1464,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"chooseService\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1465,\n          columnNumber: 29\n        }\n      }, \"Service\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1467,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        className: \"form-check-input\",\n        name: \"choose\",\n        id: \"chooseProduct\",\n        value: \"Product\",\n        checked: formData.choose === 'Product',\n        onChange: e => this.handleInputChange('choose', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1468,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"chooseProduct\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1469,\n          columnNumber: 29\n        }\n      }, \"Product\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1474,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1475,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1476,\n          columnNumber: 25\n        }\n      }, \"Currency\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.currency,\n        style: {\n          backgroundColor: '#fff'\n        },\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1477,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1485,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1486,\n          columnNumber: 25\n        }\n      }, \"Conversion Rate\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.conversionRate,\n        onChange: e => this.handleInputChange('conversionRate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1487,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1494,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1495,\n          columnNumber: 25\n        }\n      }, \"Tax Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxAmount,\n        onChange: e => this.handleInputChange('taxAmount', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1496,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1504,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1505,\n          columnNumber: 25\n        }\n      }, \"Quote Value\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.quoteValue,\n        onChange: e => this.handleInputChange('quoteValue', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1506,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1516,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1517,\n          columnNumber: 29\n        }\n      }, \"Line Item\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-sm\",\n        onClick: () => this.setState({\n          productOverlayVisible: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1518,\n          columnNumber: 29\n        }\n      }, \"+ Add Product\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-responsive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1522,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1523,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1524,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1525,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1526,\n          columnNumber: 15\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1527,\n          columnNumber: 15\n        }\n      }, \"Item Desc\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1528,\n          columnNumber: 15\n        }\n      }, \"Cust Part No\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1529,\n          columnNumber: 15\n        }\n      }, \"HSN No\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1530,\n          columnNumber: 15\n        }\n      }, \"UOM\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1531,\n          columnNumber: 15\n        }\n      }, \"On Hand\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1532,\n          columnNumber: 15\n        }\n      }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1533,\n          columnNumber: 15\n        }\n      }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1534,\n          columnNumber: 15\n        }\n      }, \"Tax Id\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1535,\n          columnNumber: 15\n        }\n      }, \"Item Total\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1538,\n          columnNumber: 11\n        }\n      }, formData.lineItems.map((item, idx) => {\n        const itemTotal = item.unitPrice * item.qty;\n        const taxDetails = getTaxDetailsFromGroup(item.taxGroupName, this.state.taxGroups);\n        const taxAmt = itemTotal * taxDetails.totalPercent / 100 + itemTotal * taxDetails.totalAmount;\n        const totalWithTax = itemTotal + taxAmt;\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: item.id || idx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1547,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1548,\n            columnNumber: 19\n          }\n        }, item.itemCode), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1549,\n            columnNumber: 19\n          }\n        }, item.itemDescription), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1550,\n            columnNumber: 19\n          }\n        }, item.custPartNo), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1551,\n            columnNumber: 19\n          }\n        }, item.hsnNo), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1552,\n            columnNumber: 19\n          }\n        }, item.uom), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1553,\n            columnNumber: 19\n          }\n        }, item.onHand), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1554,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          value: item.unitPrice,\n          onChange: e => this.handleLineItemChange(idx, 'unitPrice', e.target.value),\n          style: {\n            width: 80\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1555,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1562,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          value: item.qty,\n          onChange: e => this.handleLineItemChange(idx, 'qty', e.target.value),\n          style: {\n            width: 60\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1563,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1571,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-outline-secondary btn-sm btn-rounded btn-icon\",\n          style: {\n            padding: '2px 6px',\n            fontSize: '12px',\n            lineHeight: '1'\n          },\n          onClick: () => this.setState({\n            showTaxOverlay: true,\n            currentTaxLineIdx: idx\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1572,\n            columnNumber: 19\n          }\n        }, \"+\"), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            fontSize: '13px',\n            marginTop: '4px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1580,\n            columnNumber: 19\n          }\n        }, (item.taxGroupNames || []).join(', ') || '-')), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1584,\n            columnNumber: 15\n          }\n        }, parseFloat(item.total || 0).toFixed(2)));\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1595,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1596,\n          columnNumber: 29\n        }\n      }, \"Page 1 of 1\"))), this.state.activeTab === 'commercial' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1603,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1604,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1605,\n          columnNumber: 25\n        }\n      }, \"Bill To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"3\",\n        value: formData.billTo,\n        onChange: e => this.handleInputChange('billTo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1606,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1613,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1614,\n          columnNumber: 25\n        }\n      }, \"Ship To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"3\",\n        value: formData.shipTo,\n        onChange: e => this.handleInputChange('shipTo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1615,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1623,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1624,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1625,\n          columnNumber: 3\n        }\n      }, \"Despatch Mode\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1626,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: formData.despatchMode,\n        readOnly: true,\n        onClick: () => !isFOB && this.showOverlay('despatchMode'),\n        style: {\n          cursor: isFOB ? 'not-allowed' : 'pointer',\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1627,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1635,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        disabled: isFOB,\n        onClick: () => this.showOverlay('despatchMode'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1636,\n          columnNumber: 7\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1648,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1649,\n          columnNumber: 3\n        }\n      }, \"Payment Terms\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1650,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: formData.paymentTerms,\n        readOnly: true,\n        onClick: () => !isFOB && this.showOverlay('paymentTerms'),\n        style: {\n          cursor: isFOB ? 'not-allowed' : 'pointer',\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1651,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1659,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        disabled: isFOB,\n        onClick: () => this.showOverlay('paymentTerms'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1660,\n          columnNumber: 7\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1672,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1673,\n          columnNumber: 25\n        }\n      }, \"Freight Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.freightCharges,\n        onChange: e => this.handleInputChange('freightCharges', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1674,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1683,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1684,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1685,\n          columnNumber: 25\n        }\n      }, \"Tax %\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxPercent,\n        onChange: e => this.handleInputChange('taxPercent', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1686,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1694,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1695,\n          columnNumber: 25\n        }\n      }, \"Freight Tax Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.freighttaxAmount,\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1696,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1703,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1704,\n          columnNumber: 25\n        }\n      }, \"Packing Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.packingCharges,\n        onChange: e => this.handleInputChange('packingCharges', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1705,\n          columnNumber: 25\n        }\n      })))), this.state.activeTab === 'breakdown' && this.renderBreakdownTab()), this.renderSubProductDialog(), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fixed-card-footer text-right p-3 border-top bg-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1720,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1721,\n          columnNumber: 17\n        }\n      }, \"Save All Details\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: () => this.setState({\n          showForm: false,\n          editingId: null\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1722,\n          columnNumber: 17\n        }\n      }, \"Cancel\"))), overlayType && this.renderOverlay(), productOverlayVisible && this.renderProductOverlay(), this.state.showTaxOverlay && this.renderTaxOverlay())));\n    };\n\n    this.renderQuotePreview = () => {\n      var _q$lineItems;\n\n      const q = this.state.selectedQuote;\n      if (!q) return null;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card mt-4 full-height p-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1746,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1747,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1748,\n          columnNumber: 9\n        }\n      }, \"Quote Preview - \", q.quoteNo), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1749,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-info mr-2\",\n        onClick: () => this.loadQuoteForEdit(q),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1750,\n          columnNumber: 11\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-success\",\n        onClick: () => this.convertToOrder(q),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1751,\n          columnNumber: 11\n        }\n      }, \"Convert to Order\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1754,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1755,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1755,\n          columnNumber: 35\n        }\n      }, \"Customer:\"), \" \", q.customer), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1756,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1756,\n          columnNumber: 35\n        }\n      }, \"Date:\"), \" \", q.quoteDate), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1757,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1757,\n          columnNumber: 35\n        }\n      }, \"Status:\"), \" \", q.status)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1759,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1760,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1760,\n          columnNumber: 35\n        }\n      }, \"Bill To:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1760,\n          columnNumber: 50\n        }\n      }), q.billTo), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1761,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1761,\n          columnNumber: 35\n        }\n      }, \"Ship To:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1761,\n          columnNumber: 50\n        }\n      }), q.shipTo)), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1763,\n          columnNumber: 7\n        }\n      }, \"Line Items\"), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1764,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1765,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1766,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1767,\n          columnNumber: 13\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1767,\n          columnNumber: 31\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1767,\n          columnNumber: 51\n        }\n      }, \"Qty\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1767,\n          columnNumber: 63\n        }\n      }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1767,\n          columnNumber: 82\n        }\n      }, \"Total\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1770,\n          columnNumber: 9\n        }\n      }, (_q$lineItems = q.lineItems) === null || _q$lineItems === void 0 ? void 0 : _q$lineItems.map((item, i) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1772,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1773,\n          columnNumber: 15\n        }\n      }, item.itemCode), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1774,\n          columnNumber: 15\n        }\n      }, item.itemDescription), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1775,\n          columnNumber: 15\n        }\n      }, item.qty), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1776,\n          columnNumber: 15\n        }\n      }, item.unitPrice), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1777,\n          columnNumber: 15\n        }\n      }, item.total))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1782,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1782,\n          columnNumber: 35\n        }\n      }, \"Total:\"), \" \", q.quoteValue), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary mt-3\",\n        onClick: () => this.setState({\n          previewMode: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1783,\n          columnNumber: 7\n        }\n      }, \"Back to List\"));\n    };\n  }\n\n  componentDidMount() {\n    bsCustomFileInput.init();\n    this.fetchQuotes();\n    this.fetchCustomers();\n    this.fetchProducts();\n    this.fetchDespatchModes();\n    this.fetchPaymentTerms();\n    this.fetchTaxGroups();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevLineItems = prevState.formData.lineItems || [];\n    const currLineItems = this.state.formData.lineItems || [];\n\n    if (prevLineItems.length !== currLineItems.length) {\n      const prevBreakdownMap = {};\n      (this.state.breakdownItems || []).forEach(bi => {\n        prevBreakdownMap[bi.productId] = bi;\n      });\n      this.setState({\n        breakdownItems: currLineItems.map((li, idx) => {\n          var _prevBreakdownMap$li$, _prevBreakdownMap$li$2, _prevBreakdownMap$li$3;\n\n          return {\n            sno: idx + 1,\n            productId: li.itemCode,\n            desc: li.itemDescription,\n            value: ((_prevBreakdownMap$li$ = prevBreakdownMap[li.itemCode]) === null || _prevBreakdownMap$li$ === void 0 ? void 0 : _prevBreakdownMap$li$.value) || '',\n            lastDate: ((_prevBreakdownMap$li$2 = prevBreakdownMap[li.itemCode]) === null || _prevBreakdownMap$li$2 === void 0 ? void 0 : _prevBreakdownMap$li$2.lastDate) || '',\n            subProducts: ((_prevBreakdownMap$li$3 = prevBreakdownMap[li.itemCode]) === null || _prevBreakdownMap$li$3 === void 0 ? void 0 : _prevBreakdownMap$li$3.subProducts) || []\n          };\n        })\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1790,\n        columnNumber: 7\n      }\n    }, this.state.previewMode ? this.renderQuotePreview() : this.state.showForm ? this.renderQuoteForm() : this.renderQuoteTable());\n  }\n\n}\n\nexport default withRouter(Quote);","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/panelone/Quote.js"],"names":["React","Component","Form","bsCustomFileInput","db","collection","getDocs","addDoc","doc","updateDoc","serverTimestamp","withRouter","html2canvas","jsPDF","recalculateTotals","getTaxDetailsFromGroup","toWords","Box","Typography","Table","TableHead","TableBody","TableRow","TableCell","Paper","TableContainer","amount","amountWords","console","log","Quote","state","activeTab","quotes","customers","products","despatchModes","paymentTerms","showForm","showTaxOverlay","currentTaxLineIdx","editingId","overlayType","overlaySearch","productOverlayVisible","productOverlaySearch","selectedProductIds","selectedTaxGroups","taxComponents","taxGroups","previewMode","selectedQuote","breakdownItems","breakdownType","breakdownSelectAll","showSubProductDialog","currentBreakdownIdx","subProductForm","name","value","type","dueDate","formData","quoteNo","quoteDate","Date","toISOString","split","quoteType","customer","status","choose","qrefNo","impExp","currency","conversionRate","taxAmount","quoteValue","billTo","shipTo","despatchMode","freightCharges","freighttaxAmount","taxPercent","packingCharges","lineItems","customerInputRef","createRef","formatAddress","addr","address","city","country","filter","Boolean","join","zip","handleLineItemChange","idx","field","updatedItems","updatedLineItems","setState","prev","fetchTaxGroups","snap","data","docs","map","id","fetchQuotes","reverse","fetchCustomers","fetchProducts","fetchDespatchModes","fetchPaymentTerms","toggleTaxGroupSelection","groupName","lineIdx","checked","item","taxGroupNames","Array","isArray","includes","push","g","taxGroupName","handleInputChange","handleBreakdownSelectAll","selected","handleBreakdownRowSelect","items","handleBreakdownTypeChange","handleBreakdownValueChange","handleBreakdownDateChange","lastDate","saveBreakdownToSession","sessionStorage","setItem","JSON","stringify","loadBreakdownFromSession","getItem","parse","handleSubmit","e","preventDefault","alert","length","createdAt","isBreakdownValid","loadQuotePreview","q","loadQuoteForEdit","quote","current","convertToOrder","className","props","history","showQuotePDFWithOrg","orgSnap","org","find","c","custshortName","custname","gstStateMap","getPlaceOfSupply","gstin","code","substring","enrichedItems","product","p","productId","itemCode","ptshortName","hsnCode","uom","stockingUOM","cgst","sgst","igst","s","trim","subtotal","reduce","sum","parseFloat","unitPrice","qty","freightTax","totalTaxAmount","grandTotal","Math","floor","taxBreakdown","taxGroupDetails","sno","forEach","base","tgName","group","li","key","component","percentOrAmt","taxAmt","peramt","toFixed","container","document","createElement","style","width","padding","fontFamily","innerHTML","logoUrl","bgName","email","website","mobile","cin","replace","contactPerson","phone","gstLabel","taxId","itemDescription","total","Object","entries","val","toLocaleString","body","appendChild","canvas","scale","useCORS","imgData","toDataURL","pdf","height","addImage","removeChild","addPage","milestoneRows","bi","mainItem","mainItemTotal","desc","subProducts","sp","spTotal","taxRows","row","combinedHtml","combinedContainer","fontSize","combinedCanvas","combinedImg","setFontSize","text","blob","output","url","URL","createObjectURL","newWin","window","open","write","close","showOverlay","hideOverlay","selectOverlayValue","custcode","renderTaxOverlay","Set","position","zIndex","top","left","background","border","boxShadow","maxHeight","overflowY","tg","has","target","renderOverlay","getFilteredRows","list","nameKey","codeKey","toLowerCase","handleSelect","title","headers","rows","h","i","cursor","j","shortName","renderProductOverlay","filtered","ptdescription","selectedProducts","some","itemType","materialType","onHand","taxGroup","custPartNo","hsnNo","renderBreakdownTab","itemTotals","acc","sumOfItemTotals","values","getSubProductsSum","mainTotal","subs","canSave","subSum","remaining","color","handleAddInlineSubProduct","spIdx","spId","rawVal","handleSubProductChange","handleRemoveSubProduct","renderSubProductDialog","stopPropagation","handleAddSubProduct","breakdownIdx","initial","defaultSP","biIdx","splice","TOL","abs","renderQuoteTable","statusClass","renderQuoteForm","isFOB","flex","backgroundColor","itemTotal","taxDetails","totalPercent","totalAmount","totalWithTax","lineHeight","marginTop","renderQuotePreview","componentDidMount","init","componentDidUpdate","prevProps","prevState","prevLineItems","currLineItems","prevBreakdownMap","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AACA,SAASC,EAAT,QAAmB,gBAAnB;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,MAA9B,EAAsCC,GAAtC,EAA2CC,SAA3C,EAAqDC,eAArD,QAA4E,oBAA5E;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,OAAtB;AACA,SAASC,iBAAT,EAA4BC,sBAA5B,QAA0D,eAA1D;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAGA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,WAAW,GAAI,OAAMX,OAAO,CAACU,MAAD,CAAS,OAA3C;AAEAE,OAAO,CAACC,GAAR,CAAYF,WAAZ;;AAGA,MAAMG,KAAN,SAAoB7B,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5B8B,KAD4B,GACpB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,SAAS,EAAE,EAHL;AAINC,MAAAA,QAAQ,EAAE,EAJJ;AAKNC,MAAAA,aAAa,EAAE,EALT;AAMNC,MAAAA,YAAY,EAAE,EANR;AAONC,MAAAA,QAAQ,EAAE,KAPJ;AAQNC,MAAAA,cAAc,EAAE,KARV;AASNC,MAAAA,iBAAiB,EAAE,IATb;AAUNC,MAAAA,SAAS,EAAE,IAVL;AAWNC,MAAAA,WAAW,EAAE,EAXP;AAYNC,MAAAA,aAAa,EAAE,EAZT;AAaNC,MAAAA,qBAAqB,EAAE,KAbjB;AAcNC,MAAAA,oBAAoB,EAAE,EAdhB;AAeNC,MAAAA,kBAAkB,EAAE,EAfd;AAgBNC,MAAAA,iBAAiB,EAAE,EAhBb;AAiBNC,MAAAA,aAAa,EAAE,EAjBT;AAkBNC,MAAAA,SAAS,EAAC,EAlBJ;AAmBNC,MAAAA,WAAW,EAAE,KAnBP;AAoBNC,MAAAA,aAAa,EAAE,IApBT;AAqBNC,MAAAA,cAAc,EAAE,EArBV;AAsBNC,MAAAA,aAAa,EAAE,YAtBT;AAuBNC,MAAAA,kBAAkB,EAAE,KAvBd;AAwBNC,MAAAA,oBAAoB,EAAE,KAxBhB;AAyBNC,MAAAA,mBAAmB,EAAE,IAzBf;AA0BNC,MAAAA,cAAc,EAAE;AAAEC,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,KAAK,EAAE,EAAnB;AAAuBC,QAAAA,IAAI,EAAE,QAA7B;AAAuCC,QAAAA,OAAO,EAAE;AAAhD,OA1BV;AA2BNC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,OAAO,EAAE,EADD;AAERC,QAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,WAAX,GAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAFH;AAGRC,QAAAA,SAAS,EAAE,UAHH;AAIRC,QAAAA,QAAQ,EAAE,EAJF;AAKRC,QAAAA,MAAM,EAAE,SALA;AAKW;AACnBC,QAAAA,MAAM,EAAE,SANA;AAORC,QAAAA,MAAM,EAAE,EAPA;AAQRC,QAAAA,MAAM,EAAE,MARA;AASRC,QAAAA,QAAQ,EAAE,EATF;AAURC,QAAAA,cAAc,EAAE,EAVR;AAWRC,QAAAA,SAAS,EAAE,EAXH;AAYRC,QAAAA,UAAU,EAAE,EAZJ;AAaRC,QAAAA,MAAM,EAAE,EAbA;AAcRC,QAAAA,MAAM,EAAE,EAdA;AAeRC,QAAAA,YAAY,EAAE,QAfN;AAgBR3C,QAAAA,YAAY,EAAE,EAhBN;AAiBR4C,QAAAA,cAAc,EAAE,EAjBR;AAkBRC,QAAAA,gBAAgB,EAAE,EAlBV;AAmBRC,QAAAA,UAAU,EAAE,EAnBJ;AAoBRC,QAAAA,cAAc,EAAE,EApBR;AAqBRC,QAAAA,SAAS,EAAE;AArBH;AA3BJ,KADoB;AAAA,SAoD5BC,gBApD4B,GAoDTtF,KAAK,CAACuF,SAAN,EApDS;;AAAA,SAuD5BC,aAvD4B,GAuDXC,IAAD,IAAU;AACxB,UAAI,CAACA,IAAL,EAAW,OAAO,EAAP;AACX,UAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B,OAAOA,IAAP;AAC9B,aAAO,CACLA,IAAI,CAACC,OADA,EAEL,CAACD,IAAI,CAACE,IAAN,EAAYF,IAAI,CAAC1D,KAAjB,EAAwB0D,IAAI,CAACG,OAA7B,EAAsCC,MAAtC,CAA6CC,OAA7C,EAAsDC,IAAtD,CAA2D,IAA3D,CAFK,EAGLN,IAAI,CAACO,GAHA,EAILH,MAJK,CAIEC,OAJF,EAIWC,IAJX,CAIgB,IAJhB,CAAP;AAKD,KA/D2B;;AAAA,SA0E9BE,oBA1E8B,GA0EP,CAACC,GAAD,EAAMC,KAAN,EAAaxC,KAAb,KAAuB;AAC5C,YAAMyC,YAAY,GAAG,CAAC,GAAG,KAAKrE,KAAL,CAAW+B,QAAX,CAAoBuB,SAAxB,CAArB;AACAe,MAAAA,YAAY,CAACF,GAAD,CAAZ,GAAoB,EAAE,GAAGE,YAAY,CAACF,GAAD,CAAjB;AAAwB,SAACC,KAAD,GAASxC;AAAjC,OAApB;AACA,YAAM;AAAE0C,QAAAA,gBAAF;AAAoBnB,QAAAA,gBAApB;AAAsCN,QAAAA,SAAtC;AAAiDC,QAAAA;AAAjD,UAAgE/D,iBAAiB,CAAC;AACtFuE,QAAAA,SAAS,EAAEe,YAD2E;AAEtFnB,QAAAA,cAAc,EAAE,KAAKlD,KAAL,CAAW+B,QAAX,CAAoBmB,cAFkD;AAGtFG,QAAAA,cAAc,EAAE,KAAKrD,KAAL,CAAW+B,QAAX,CAAoBsB,cAHkD;AAItFD,QAAAA,UAAU,EAAE,KAAKpD,KAAL,CAAW+B,QAAX,CAAoBqB,UAJsD;AAKtFlC,QAAAA,SAAS,EAAE,KAAKlB,KAAL,CAAWkB;AALgE,OAAD,CAAvF;AAOA,WAAKqD,QAAL,CAAcC,IAAI,KAAK;AACrBzC,QAAAA,QAAQ,EAAE,EACR,GAAGyC,IAAI,CAACzC,QADA;AAERuB,UAAAA,SAAS,EAAEgB,gBAFH;AAGRnB,UAAAA,gBAHQ;AAIRN,UAAAA,SAJQ;AAKRC,UAAAA;AALQ;AADW,OAAL,CAAlB;AASD,KA7F6B;;AAAA,SAoH9B2B,cApH8B,GAoHb,YAAY;AAC3B,YAAMC,IAAI,GAAG,MAAMnG,OAAO,CAACD,UAAU,CAACD,EAAD,EAAK,WAAL,CAAX,CAA1B;AACA,YAAMsG,IAAI,GAAGD,IAAI,CAACE,IAAL,CAAUC,GAAV,CAAcpG,GAAG,KAAK;AAAEqG,QAAAA,EAAE,EAAErG,GAAG,CAACqG,EAAV;AAAc,WAAGrG,GAAG,CAACkG,IAAJ;AAAjB,OAAL,CAAjB,CAAb;AACA,WAAKJ,QAAL,CAAc;AAAErD,QAAAA,SAAS,EAAEyD;AAAb,OAAd;AACD,KAxH6B;;AAAA,SA2H5BI,WA3H4B,GA2Hd,YAAY;AACxB,YAAML,IAAI,GAAG,MAAMnG,OAAO,CAACD,UAAU,CAACD,EAAD,EAAK,QAAL,CAAX,CAA1B;AACA,YAAMsG,IAAI,GAAGD,IAAI,CAACE,IAAL,CAAUC,GAAV,CAAcpG,GAAG,KAAK;AAAEqG,QAAAA,EAAE,EAAErG,GAAG,CAACqG,EAAV;AAAc,WAAGrG,GAAG,CAACkG,IAAJ;AAAjB,OAAL,CAAjB,CAAb;AACA,WAAKJ,QAAL,CAAc;AAAErE,QAAAA,MAAM,EAAEyE,IAAI,CAACK,OAAL;AAAV,OAAd;AACD,KA/H2B;;AAAA,SAiI5BC,cAjI4B,GAiIX,YAAY;AAC3B,YAAMP,IAAI,GAAG,MAAMnG,OAAO,CAACD,UAAU,CAACD,EAAD,EAAK,WAAL,CAAX,CAA1B;AACA,YAAMsG,IAAI,GAAGD,IAAI,CAACE,IAAL,CAAUC,GAAV,CAAcpG,GAAG,KAAK;AAAEqG,QAAAA,EAAE,EAAErG,GAAG,CAACqG,EAAV;AAAc,WAAGrG,GAAG,CAACkG,IAAJ;AAAjB,OAAL,CAAjB,CAAb;AACA,WAAKJ,QAAL,CAAc;AAAEpE,QAAAA,SAAS,EAAEwE;AAAb,OAAd;AACD,KArI2B;;AAAA,SAuI5BO,aAvI4B,GAuIZ,YAAY;AAC1B,YAAMR,IAAI,GAAG,MAAMnG,OAAO,CAACD,UAAU,CAACD,EAAD,EAAK,UAAL,CAAX,CAA1B;AACA,YAAMsG,IAAI,GAAGD,IAAI,CAACE,IAAL,CAAUC,GAAV,CAAcpG,GAAG,KAAK;AAAEqG,QAAAA,EAAE,EAAErG,GAAG,CAACqG,EAAV;AAAc,WAAGrG,GAAG,CAACkG,IAAJ;AAAjB,OAAL,CAAjB,CAAb;AACA,WAAKJ,QAAL,CAAc;AAAEnE,QAAAA,QAAQ,EAAEuE;AAAZ,OAAd;AACD,KA3I2B;;AAAA,SA4I5BQ,kBA5I4B,GA4IP,YAAY;AACjC,YAAMT,IAAI,GAAG,MAAMnG,OAAO,CAACD,UAAU,CAACD,EAAD,EAAK,OAAL,CAAX,CAA1B;AACA,YAAMsG,IAAI,GAAGD,IAAI,CAACE,IAAL,CAAUC,GAAV,CAAcpG,GAAG,KAAK;AAAEqG,QAAAA,EAAE,EAAErG,GAAG,CAACqG,EAAV;AAAc,WAAGrG,GAAG,CAACkG,IAAJ;AAAjB,OAAL,CAAjB,CAAb;AACA,WAAKJ,QAAL,CAAc;AAAElE,QAAAA,aAAa,EAAEsE;AAAjB,OAAd;AACD,KAhJ6B;;AAAA,SAkJ9BS,iBAlJ8B,GAkJV,YAAY;AAC9B,YAAMV,IAAI,GAAG,MAAMnG,OAAO,CAACD,UAAU,CAACD,EAAD,EAAK,cAAL,CAAX,CAA1B;AACA,YAAMsG,IAAI,GAAGD,IAAI,CAACE,IAAL,CAAUC,GAAV,CAAcpG,GAAG,KAAK;AAAEqG,QAAAA,EAAE,EAAErG,GAAG,CAACqG,EAAV;AAAc,WAAGrG,GAAG,CAACkG,IAAJ;AAAjB,OAAL,CAAjB,CAAb;AACA,WAAKJ,QAAL,CAAc;AAAEjE,QAAAA,YAAY,EAAEqE;AAAhB,OAAd;AACD,KAtJ6B;;AAAA,SAuJ9BU,uBAvJ8B,GAuJJ,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,OAArB,KAAiC;AACzD,WAAKjB,QAAL,CAAcC,IAAI,IAAI;AACpB,cAAMlB,SAAS,GAAG,CAAC,GAAGkB,IAAI,CAACzC,QAAL,CAAcuB,SAAlB,CAAlB;AACA,cAAMmC,IAAI,GAAG,EAAE,GAAGnC,SAAS,CAACiC,OAAD;AAAd,SAAb;AACA,YAAIG,aAAa,GAAGC,KAAK,CAACC,OAAN,CAAcH,IAAI,CAACC,aAAnB,IAAoC,CAAC,GAAGD,IAAI,CAACC,aAAT,CAApC,GAA8D,EAAlF;;AACA,YAAIF,OAAJ,EAAa;AACX,cAAI,CAACE,aAAa,CAACG,QAAd,CAAuBP,SAAvB,CAAL,EAAwCI,aAAa,CAACI,IAAd,CAAmBR,SAAnB;AACzC,SAFD,MAEO;AACLI,UAAAA,aAAa,GAAGA,aAAa,CAAC5B,MAAd,CAAqBiC,CAAC,IAAIA,CAAC,KAAKT,SAAhC,CAAhB;AACD;;AACDG,QAAAA,IAAI,CAACC,aAAL,GAAqBA,aAArB;AACAD,QAAAA,IAAI,CAACO,YAAL,GAAoBN,aAAa,CAAC1B,IAAd,CAAmB,IAAnB,CAApB;AACAV,QAAAA,SAAS,CAACiC,OAAD,CAAT,GAAqBE,IAArB;AACA,cAAM;AAAEnB,UAAAA,gBAAF;AAAoBnB,UAAAA,gBAApB;AAAsCN,UAAAA,SAAtC;AAAiDC,UAAAA;AAAjD,YAAgE/D,iBAAiB,CAAC;AACtFuE,UAAAA,SADsF;AAEtFJ,UAAAA,cAAc,EAAEsB,IAAI,CAACzC,QAAL,CAAcmB,cAFwD;AAGtFG,UAAAA,cAAc,EAAEmB,IAAI,CAACzC,QAAL,CAAcsB,cAHwD;AAItFD,UAAAA,UAAU,EAAEoB,IAAI,CAACzC,QAAL,CAAcqB,UAJ4D;AAKtFlC,UAAAA,SAAS,EAAEsD,IAAI,CAACtD;AALsE,SAAD,CAAvF;AAQA,eAAO;AACLa,UAAAA,QAAQ,EAAE,EACR,GAAGyC,IAAI,CAACzC,QADA;AAERuB,YAAAA,SAAS,EAAEgB,gBAFH;AAGRnB,YAAAA,gBAHQ;AAIRN,YAAAA,SAJQ;AAKRC,YAAAA;AALQ;AADL,SAAP;AASD,OA7BD;AA8BD,KAtL6B;;AAAA,SAwL9BmD,iBAxL8B,GAwLV,CAAC7B,KAAD,EAAQxC,KAAR,KAAkB;AACpC,WAAK2C,QAAL,CAAcC,IAAI,KAAK;AACrBzC,QAAAA,QAAQ,EAAE,EAAE,GAAGyC,IAAI,CAACzC,QAAV;AAAoB,WAACqC,KAAD,GAASxC;AAA7B;AADW,OAAL,CAAlB,EAEI,MAAM;AACR,YAAI,CAAC,gBAAD,EAAmB,YAAnB,EAAiC,gBAAjC,EAAmDiE,QAAnD,CAA4DzB,KAA5D,CAAJ,EAAwE;AACtE,gBAAM;AAAEE,YAAAA,gBAAF;AAAoBnB,YAAAA,gBAApB;AAAsCN,YAAAA,SAAtC;AAAiDC,YAAAA;AAAjD,cAAgE/D,iBAAiB,CAAC;AACtFuE,YAAAA,SAAS,EAAE,KAAKtD,KAAL,CAAW+B,QAAX,CAAoBuB,SADuD;AAEtFJ,YAAAA,cAAc,EAAE,KAAKlD,KAAL,CAAW+B,QAAX,CAAoBmB,cAFkD;AAGtFG,YAAAA,cAAc,EAAE,KAAKrD,KAAL,CAAW+B,QAAX,CAAoBsB,cAHkD;AAItFD,YAAAA,UAAU,EAAE,KAAKpD,KAAL,CAAW+B,QAAX,CAAoBqB,UAJsD;AAKtFlC,YAAAA,SAAS,EAAE,KAAKlB,KAAL,CAAWkB;AALgE,WAAD,CAAvF;AAOA,eAAKqD,QAAL,CAAcC,IAAI,KAAK;AACrBzC,YAAAA,QAAQ,EAAE,EACR,GAAGyC,IAAI,CAACzC,QADA;AAERuB,cAAAA,SAAS,EAAEgB,gBAFH;AAGRnB,cAAAA,gBAHQ;AAIRN,cAAAA,SAJQ;AAKRC,cAAAA;AALQ;AADW,WAAL,CAAlB;AASD;AACF,OArBD;AAsBD,KA/M6B;;AAAA,SAiN9BoD,wBAjN8B,GAiNFV,OAAD,IAAa;AACtC,WAAKjB,QAAL,CAAcC,IAAI,KAAK;AACrBjD,QAAAA,kBAAkB,EAAEiE,OADC;AAErBnE,QAAAA,cAAc,EAAEmD,IAAI,CAACnD,cAAL,CAAoBwD,GAApB,CAAwBY,IAAI,KAAK,EAAE,GAAGA,IAAL;AAAWU,UAAAA,QAAQ,EAAEX;AAArB,SAAL,CAA5B;AAFK,OAAL,CAAlB;AAID,KAtN6B;;AAAA,SAuN9BY,wBAvN8B,GAuNH,CAACjC,GAAD,EAAMqB,OAAN,KAAkB;AAC3C,WAAKjB,QAAL,CAAcC,IAAI,IAAI;AACpB,cAAM6B,KAAK,GAAG,CAAC,GAAG7B,IAAI,CAACnD,cAAT,CAAd;AACAgF,QAAAA,KAAK,CAAClC,GAAD,CAAL,CAAWgC,QAAX,GAAsBX,OAAtB;AACA,eAAO;AAAEnE,UAAAA,cAAc,EAAEgF;AAAlB,SAAP;AACD,OAJD;AAKD,KA7N6B;;AAAA,SAgO9BC,yBAhO8B,GAgODzE,IAAD,IAAU;AACpC,WAAK0C,QAAL,CAAc;AAAEjD,QAAAA,aAAa,EAAEO;AAAjB,OAAd;AACD,KAlO6B;;AAAA,SAqO9B0E,0BArO8B,GAqOD,CAACpC,GAAD,EAAMvC,KAAN,KAAgB;AAC3C,WAAK2C,QAAL,CAAcC,IAAI,IAAI;AACpB,cAAM6B,KAAK,GAAG,CAAC,GAAG7B,IAAI,CAACnD,cAAT,CAAd;AACAgF,QAAAA,KAAK,CAAClC,GAAD,CAAL,CAAWvC,KAAX,GAAmBA,KAAnB;AACA,eAAO;AAAEP,UAAAA,cAAc,EAAEgF;AAAlB,SAAP;AACD,OAJD;AAKD,KA3O6B;;AAAA,SA8O9BG,yBA9O8B,GA8OF,CAACrC,GAAD,EAAMvC,KAAN,KAAgB;AAC1C,WAAK2C,QAAL,CAAcC,IAAI,IAAI;AACpB,cAAM6B,KAAK,GAAG,CAAC,GAAG7B,IAAI,CAACnD,cAAT,CAAd;AACAgF,QAAAA,KAAK,CAAClC,GAAD,CAAL,CAAWsC,QAAX,GAAsB7E,KAAtB;AACA,eAAO;AAAEP,UAAAA,cAAc,EAAEgF;AAAlB,SAAP;AACD,OAJD;AAKD,KApP6B;;AAAA,SAqP9BK,sBArP8B,GAqPL,MAAM;AAC7BC,MAAAA,cAAc,CAACC,OAAf,CAAuB,gBAAvB,EAAyCC,IAAI,CAACC,SAAL,CAAe,KAAK9G,KAAL,CAAWqB,cAA1B,CAAzC;AACD,KAvP6B;;AAAA,SAwP9B0F,wBAxP8B,GAwPH,MAAM;AAC/B,YAAMpC,IAAI,GAAGgC,cAAc,CAACK,OAAf,CAAuB,gBAAvB,CAAb;AACA,UAAIrC,IAAJ,EAAU,KAAKJ,QAAL,CAAc;AAAElD,QAAAA,cAAc,EAAEwF,IAAI,CAACI,KAAL,CAAWtC,IAAX;AAAlB,OAAd;AACX,KA3P6B;;AAAA,SA8P5BuC,YA9P4B,GA8Pb,MAAOC,CAAP,IAAa;AAC1BA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAM;AAAE1G,QAAAA,SAAF;AAAaqB,QAAAA,QAAb;AAAuB7B,QAAAA;AAAvB,UAAkC,KAAKF,KAA7C;AACA,UAAI,CAAC+B,QAAQ,CAACO,QAAd,EAAwB,OAAO+E,KAAK,CAAC,sBAAD,CAAZ;AACxB,UAAItF,QAAQ,CAACuB,SAAT,CAAmBgE,MAAnB,KAA8B,CAAlC,EAAqC,OAAOD,KAAK,CAAC,oCAAD,CAAZ;;AAErC,UAAI3G,SAAJ,EAAe;AACb,cAAMhC,SAAS,CAACD,GAAG,CAACJ,EAAD,EAAK,QAAL,EAAeqC,SAAf,CAAJ,EAA+BqB,QAA/B,CAAf;AACD,OAFD,MAEO;AACLA,QAAAA,QAAQ,CAACC,OAAT,GAAoB,KAAI,OAAO9B,MAAM,CAACoH,MAAO,EAA7C;AACA,cAAM9I,MAAM,CAACF,UAAU,CAACD,EAAD,EAAK,QAAL,CAAX,EAA2B,EACrC,GAAG,KAAK2B,KAAL,CAAW+B,QADuB;AAErCQ,UAAAA,MAAM,EAAE,SAF6B;AAGrCgF,UAAAA,SAAS,EAAE5I,eAAe;AAHW,SAA3B,CAAZ;AAMD;;AACA,UAAI,CAAC,KAAK6I,gBAAL,EAAL,EAA8B;AAC/B,eAAOH,KAAK,CAAC,gGAAD,CAAZ;AACA;;AACA,WAAK9C,QAAL,CAAc;AAAEhE,QAAAA,QAAQ,EAAE,KAAZ;AAAmBG,QAAAA,SAAS,EAAE;AAA9B,OAAd;AACA,WAAKqE,WAAL;AACD,KApR2B;;AAAA,SAqR9B0C,gBArR8B,GAqRVC,CAAD,IAAO;AACxB,WAAKnD,QAAL,CAAc;AACZnD,QAAAA,aAAa,EAAEsG,CADH;AAEZvG,QAAAA,WAAW,EAAE;AAFD,OAAd;AAID,KA1R6B;;AAAA,SA6R5BwG,gBA7R4B,GA6RRC,KAAD,IAAW;AAC5B,WAAKrD,QAAL,CAAc;AACZxC,QAAAA,QAAQ,EAAE,EACR,GAAG6F,KADK;AAERtE,UAAAA,SAAS,EAAEqC,KAAK,CAACC,OAAN,CAAcgC,KAAK,CAACtE,SAApB,IAAiCsE,KAAK,CAACtE,SAAvC,GAAmD;AAFtD,SADE;AAKZ5C,QAAAA,SAAS,EAAEkH,KAAK,CAAC9C,EALL;AAMZvE,QAAAA,QAAQ,EAAE,IANE;AAOZY,QAAAA,WAAW,EAAE,KAPD;AAQZlB,QAAAA,SAAS,EAAE;AARC,OAAd,EASG,MAAM;AACP,YAAI,KAAKsD,gBAAL,CAAsBsE,OAA1B,EAAmC;AACjC,eAAKtE,gBAAL,CAAsBsE,OAAtB,CAA8BjG,KAA9B,GAAsCgG,KAAK,CAACtF,QAA5C;AACD;AACF,OAbD;AAcD,KA5S2B;;AAAA,SA+S9BwF,cA/S8B,GA+Sb,MAAOF,KAAP,IAAiB;AAChC,YAAMlJ,SAAS,CAACD,GAAG,CAACJ,EAAD,EAAK,QAAL,EAAeuJ,KAAK,CAAC9C,EAArB,CAAJ,EAA8B;AAC3CiD,QAAAA,SAAS,EAAC,wBADiC;AAE3CxF,QAAAA,MAAM,EAAE;AAFmC,OAA9B,CAAf;AAIAoE,MAAAA,cAAc,CAACC,OAAf,CAAuB,gBAAvB,EAAyCC,IAAI,CAACC,SAAL,CAAec,KAAf,CAAzC;AACD,WAAKI,KAAL,CAAWC,OAAX,CAAmBnC,IAAnB,CAAwB,iBAAxB;AACA,KAtT6B;;AAAA,SAwT9BoC,mBAxT8B,GAwTR,MAAON,KAAP,IAAiB;AAAA;;AACrC,UAAI,CAACA,KAAD,IAAU,CAACjC,KAAK,CAACC,OAAN,CAAcgC,KAAK,CAACtE,SAApB,CAAX,IAA6CsE,KAAK,CAACtE,SAAN,CAAgBgE,MAAhB,KAA2B,CAA5E,EAA+E;AAC7ED,QAAAA,KAAK,CAAC,2BAAD,CAAL;AACA;AACD,OAJoC,CAMrC;;;AACA,YAAMc,OAAO,GAAG,MAAM5J,OAAO,CAACD,UAAU,CAACD,EAAD,EAAK,gBAAL,CAAX,CAA7B;AACA,YAAM+J,GAAG,GAAG,mBAAAD,OAAO,CAACvD,IAAR,CAAa,CAAb,mEAAiBD,IAAjB,OAA2B,EAAvC;AACA,YAAMrC,QAAQ,GAAG,KAAKtC,KAAL,CAAWG,SAAX,CAAqBkI,IAArB,CACfC,CAAC,IAAIA,CAAC,CAACC,aAAF,KAAoBX,KAAK,CAACtF,QAA1B,IAAsCgG,CAAC,CAACE,QAAF,KAAeZ,KAAK,CAACtF,QADjD,KAEZ,EAFL,CATqC,CAarC;;AACA,YAAMmG,WAAW,GAAG;AAClB,cAAM,iBADY;AACO,cAAM,kBADb;AACiC,cAAM,QADvC;AACiD,cAAM,YADvD;AAElB,cAAM,aAFY;AAEG,cAAM,SAFT;AAEoB,cAAM,OAF1B;AAEmC,cAAM,WAFzC;AAEsD,cAAM,eAF5D;AAGlB,cAAM,OAHY;AAGH,cAAM,QAHH;AAGa,cAAM,mBAHnB;AAGwC,cAAM,UAH9C;AAG0D,cAAM,SAHhE;AAIlB,cAAM,SAJY;AAID,cAAM,SAJL;AAIgB,cAAM,WAJtB;AAImC,cAAM,OAJzC;AAIkD,cAAM,aAJxD;AAKlB,cAAM,WALY;AAKC,cAAM,QALP;AAKiB,cAAM,cALvB;AAKuC,cAAM,gBAL7C;AAK+D,cAAM,SALrE;AAMlB,cAAM,eANY;AAMK,cAAM,wBANX;AAMqC,cAAM,aAN3C;AAM0D,cAAM,sBANhE;AAOlB,cAAM,WAPY;AAOC,cAAM,KAPP;AAOc,cAAM,aAPpB;AAOmC,cAAM,QAPzC;AAOmD,cAAM,YAPzD;AAQlB,cAAM,YARY;AAQE,cAAM,6BARR;AAQuC,cAAM,WAR7C;AAQ0D,cAAM,gBARhE;AASlB,cAAM;AATY,OAApB,CAdqC,CA0BrC;;AACA,YAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,YAAI,CAACA,KAAD,IAAUA,KAAK,CAACrB,MAAN,GAAe,CAA7B,EAAgC,OAAO,EAAP;AAChC,cAAMsB,IAAI,GAAGD,KAAK,CAACE,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAb;AACA,cAAM7I,KAAK,GAAGyI,WAAW,CAACG,IAAD,CAAzB;AACA,eAAO5I,KAAK,GAAI,GAAE4I,IAAK,MAAK5I,KAAM,EAAtB,GAA0B,EAAtC;AACD,OALD,CA3BqC,CAkCrC;;;AACA,YAAM8I,aAAa,GAAGlB,KAAK,CAACtE,SAAN,CAAgBuB,GAAhB,CAAoBY,IAAI,IAAI;AAChD,cAAMsD,OAAO,GAAG,KAAK/I,KAAL,CAAWI,QAAX,CAAoBiI,IAApB,CAAyBW,CAAC,IAAIA,CAAC,CAACC,SAAF,KAAgBxD,IAAI,CAACyD,QAAnD,KAAgE,EAAhF;AACA,eAAO,EACL,GAAGzD,IADE;AAEL0D,UAAAA,WAAW,EAAEJ,OAAO,CAACI,WAAR,IAAuB,EAF/B;AAGLC,UAAAA,OAAO,EAAEL,OAAO,CAACK,OAAR,IAAmB,EAHvB;AAILC,UAAAA,GAAG,EAAEN,OAAO,CAACO,WAAR,IAAuB,EAJvB;AAKLC,UAAAA,IAAI,EAAE9D,IAAI,CAAC8D,IAAL,IAAa,CALd;AAMLC,UAAAA,IAAI,EAAE/D,IAAI,CAAC+D,IAAL,IAAa,CANd;AAOLC,UAAAA,IAAI,EAAEhE,IAAI,CAACgE,IAAL,IAAa,CAPd;AAQL/D,UAAAA,aAAa,EAAED,IAAI,CAACC,aAAL,KAAuBD,IAAI,CAACO,YAAL,GAAoBP,IAAI,CAACO,YAAL,CAAkB5D,KAAlB,CAAwB,GAAxB,EAA6ByC,GAA7B,CAAiC6E,CAAC,IAAIA,CAAC,CAACC,IAAF,EAAtC,CAApB,GAAsE,EAA7F;AARV,SAAP;AAUD,OAZqB,CAAtB,CAnCqC,CAiDrC;;AACA,YAAMC,QAAQ,GAAGd,aAAa,CAACe,MAAd,CAAqB,CAACC,GAAD,EAAMrE,IAAN,KAAeqE,GAAG,GAAI,CAACC,UAAU,CAACtE,IAAI,CAACuE,SAAN,CAAV,IAA8B,CAA/B,KAAqCD,UAAU,CAACtE,IAAI,CAACwE,GAAN,CAAV,IAAwB,CAA7D,CAA3C,EAA6G,CAA7G,CAAjB;AACA,YAAM/G,cAAc,GAAG6G,UAAU,CAACnC,KAAK,CAAC1E,cAAN,IAAwB,CAAzB,CAAjC;AACA,YAAMgH,UAAU,GAAGH,UAAU,CAACnC,KAAK,CAACzE,gBAAN,IAA0B,CAA3B,CAA7B;AACA,YAAMgH,cAAc,GAAGJ,UAAU,CAACnC,KAAK,CAAC/E,SAAN,IAAmB,CAApB,CAAjC;AACA,YAAMuH,UAAU,GAAGL,UAAU,CAACnC,KAAK,CAAC9E,UAAN,IAAqB8G,QAAQ,GAAGO,cAAjC,CAA7B;AACA,YAAMvK,WAAW,GAAI,OAAMX,OAAO,CAACoL,IAAI,CAACC,KAAL,CAAWF,UAAX,CAAD,CAAyB,OAA3D,CAvDqC,CAyDrC;;AACA,UAAIG,YAAY,GAAG,EAAnB;AACA,UAAIC,eAAe,GAAG,EAAtB;AACA,UAAIC,GAAG,GAAG,CAAV;AACA3B,MAAAA,aAAa,CAAC4B,OAAd,CAAsBjF,IAAI,IAAI;AAC5B,cAAMwE,GAAG,GAAGF,UAAU,CAACtE,IAAI,CAACwE,GAAL,IAAY,CAAb,CAAtB;AACA,cAAMD,SAAS,GAAGD,UAAU,CAACtE,IAAI,CAACuE,SAAL,IAAkB,CAAnB,CAA5B;AACA,cAAMW,IAAI,GAAGV,GAAG,GAAGD,SAAnB;AACA,SAACvE,IAAI,CAACC,aAAL,IAAsB,EAAvB,EAA2BgF,OAA3B,CAAmCE,MAAM,IAAI;AAC3C;AACA,gBAAMC,KAAK,GAAG,CAAC,KAAK7K,KAAL,CAAWkB,SAAX,IAAwB,EAAzB,EAA6BmH,IAA7B,CAAkCtC,CAAC,IAAIA,CAAC,CAACT,SAAF,KAAgBsF,MAAvD,CAAd;;AACA,cAAIC,KAAJ,EAAW;AACTA,YAAAA,KAAK,CAACvH,SAAN,CAAgBoH,OAAhB,CAAwBI,EAAE,IAAI;AAC5B,oBAAMC,GAAG,GAAI,GAAEH,MAAO,MAAKE,EAAE,CAACE,SAAU,KAAIF,EAAE,CAACG,YAAa,GAAEH,EAAE,CAACjJ,IAAH,KAAY,QAAZ,GAAuB,EAAvB,GAA4B,GAAI,GAA9F;AACA,kBAAIqJ,MAAM,GAAG,CAAb;AACA,kBAAIJ,EAAE,CAACjJ,IAAH,KAAY,QAAhB,EAA0BqJ,MAAM,GAAGnB,UAAU,CAACe,EAAE,CAACG,YAAH,IAAmB,CAApB,CAAnB,CAA1B,KACKC,MAAM,GAAIP,IAAI,GAAGZ,UAAU,CAACe,EAAE,CAACG,YAAH,IAAmB,CAApB,CAAlB,GAA4C,GAArD;AACLV,cAAAA,YAAY,CAACQ,GAAD,CAAZ,GAAoB,CAACR,YAAY,CAACQ,GAAD,CAAZ,IAAqB,CAAtB,IAA2BG,MAA/C;AACAV,cAAAA,eAAe,CAAC1E,IAAhB,CAAqB;AACnB2E,gBAAAA,GAAG,EAAEA,GAAG,EADW;AAEnBI,gBAAAA,KAAK,EAAED,MAFY;AAGnBO,gBAAAA,MAAM,EAAG,GAAEL,EAAE,CAACG,YAAa,GAAEH,EAAE,CAACjJ,IAAH,KAAY,QAAZ,GAAuB,EAAvB,GAA4B,GAAI,EAH1C;AAInBqJ,gBAAAA,MAAM,EAAEA,MAAM,CAACE,OAAP,CAAe,CAAf;AAJW,eAArB;AAMD,aAZD;AAaD;AACF,SAlBD,EAJ4B,CAuB5B;;AACA,YAAI3F,IAAI,CAAC8D,IAAT,EAAe;AACb,gBAAMwB,GAAG,GAAI,QAAOtF,IAAI,CAAC8D,IAAK,GAA9B;AACA,gBAAM2B,MAAM,GAAIP,IAAI,GAAGlF,IAAI,CAAC8D,IAAb,GAAqB,GAApC;AACAgB,UAAAA,YAAY,CAACQ,GAAD,CAAZ,GAAoB,CAACR,YAAY,CAACQ,GAAD,CAAZ,IAAqB,CAAtB,IAA2BG,MAA/C;AACAV,UAAAA,eAAe,CAAC1E,IAAhB,CAAqB;AACnB2E,YAAAA,GAAG,EAAEA,GAAG,EADW;AAEnBI,YAAAA,KAAK,EAAEE,GAFY;AAGnBI,YAAAA,MAAM,EAAG,GAAE1F,IAAI,CAAC8D,IAAK,GAHF;AAInB2B,YAAAA,MAAM,EAAEA,MAAM,CAACE,OAAP,CAAe,CAAf;AAJW,WAArB;AAMD;;AACD,YAAI3F,IAAI,CAAC+D,IAAT,EAAe;AACb,gBAAMuB,GAAG,GAAI,QAAOtF,IAAI,CAAC+D,IAAK,GAA9B;AACA,gBAAM0B,MAAM,GAAIP,IAAI,GAAGlF,IAAI,CAAC+D,IAAb,GAAqB,GAApC;AACAe,UAAAA,YAAY,CAACQ,GAAD,CAAZ,GAAoB,CAACR,YAAY,CAACQ,GAAD,CAAZ,IAAqB,CAAtB,IAA2BG,MAA/C;AACAV,UAAAA,eAAe,CAAC1E,IAAhB,CAAqB;AACnB2E,YAAAA,GAAG,EAAEA,GAAG,EADW;AAEnBI,YAAAA,KAAK,EAAEE,GAFY;AAGnBI,YAAAA,MAAM,EAAG,GAAE1F,IAAI,CAAC+D,IAAK,GAHF;AAInB0B,YAAAA,MAAM,EAAEA,MAAM,CAACE,OAAP,CAAe,CAAf;AAJW,WAArB;AAMD;;AACD,YAAI3F,IAAI,CAACgE,IAAT,EAAe;AACb,gBAAMsB,GAAG,GAAI,QAAOtF,IAAI,CAACgE,IAAK,GAA9B;AACA,gBAAMyB,MAAM,GAAIP,IAAI,GAAGlF,IAAI,CAACgE,IAAb,GAAqB,GAApC;AACAc,UAAAA,YAAY,CAACQ,GAAD,CAAZ,GAAoB,CAACR,YAAY,CAACQ,GAAD,CAAZ,IAAqB,CAAtB,IAA2BG,MAA/C;AACAV,UAAAA,eAAe,CAAC1E,IAAhB,CAAqB;AACnB2E,YAAAA,GAAG,EAAEA,GAAG,EADW;AAEnBI,YAAAA,KAAK,EAAEE,GAFY;AAGnBI,YAAAA,MAAM,EAAG,GAAE1F,IAAI,CAACgE,IAAK,GAHF;AAInByB,YAAAA,MAAM,EAAEA,MAAM,CAACE,OAAP,CAAe,CAAf;AAJW,WAArB;AAMD;AACF,OAzDD;;AA0DA,UAAIlB,UAAU,GAAG,CAAjB,EAAoB;AAClBK,QAAAA,YAAY,CAAC,aAAD,CAAZ,GAA8BL,UAA9B;AACAM,QAAAA,eAAe,CAAC1E,IAAhB,CAAqB;AACnB2E,UAAAA,GAAG,EAAEA,GAAG,EADW;AAEnBI,UAAAA,KAAK,EAAE,aAFY;AAGnBM,UAAAA,MAAM,EAAE,GAHW;AAInBD,UAAAA,MAAM,EAAEhB,UAAU,CAACkB,OAAX,CAAmB,CAAnB;AAJW,SAArB;AAMD,OA/HoC,CAiIrC;;;AACA,YAAM;AAAE/J,QAAAA,cAAF;AAAkBC,QAAAA;AAAlB,UAAoC,KAAKtB,KAA/C,CAlIqC,CAoIrC;;AACA,YAAMqL,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAlB;AACAF,MAAAA,SAAS,CAACvG,EAAV,GAAe,uBAAf;AACAuG,MAAAA,SAAS,CAACG,KAAV,CAAgBC,KAAhB,GAAwB,OAAxB;AACAJ,MAAAA,SAAS,CAACG,KAAV,CAAgBE,OAAhB,GAA0B,MAA1B;AACAL,MAAAA,SAAS,CAACG,KAAV,CAAgBG,UAAhB,GAA6B,OAA7B,CAzIqC,CA2IrC;;AACAN,MAAAA,SAAS,CAACO,SAAV,GAAuB;;kBAEPxD,GAAG,CAACyD,OAAJ,IAAe,EAAG;;;;;;aAMvBzD,GAAG,CAAC0D,MAAJ,IAAc,EAAG;UACpB1D,GAAG,CAACzE,OAAJ,IAAe,EAAG;wBACJyE,GAAG,CAAC2D,KAAJ,IAAa,EAAG;0BACd3D,GAAG,CAAC4D,OAAJ,IAAe,EAAG;wBACpB5D,GAAG,CAACO,KAAJ,IAAa,EAAG;yBACfP,GAAG,CAAC6D,MAAJ,IAAc,EAAG;sBACpB7D,GAAG,CAAC8D,GAAJ,IAAW,EAAG;;;4CAGQtE,KAAK,CAAC5F,OAAQ;8CACZ4F,KAAK,CAAC3F,SAAU;4CAClB2F,KAAK,CAACjF,QAAN,IAAkB,KAAM;4CACxBiF,KAAK,CAAC3E,YAAN,IAAsB,EAAG;;;;;;;;cAQvD2E,KAAK,CAACtF,QAAN,IAAkB,EAAG;YACvB,kBAAAsF,KAAK,CAAC7E,MAAN,gEAAcoJ,OAAd,CAAsB,KAAtB,EAA6B,OAA7B,MAAyC,EAAG;;;4BAG5B7J,QAAQ,CAACqG,KAAT,IAAkB,EAAG;4BACrBrG,QAAQ,CAACyJ,KAAT,IAAkB,EAAG;8BACnBzJ,QAAQ,CAAC8J,aAAT,IAA0B,EAAG;4BAC/B9J,QAAQ,CAAC+J,KAAT,IAAkB,EAAG;;;;;;cAMnCzE,KAAK,CAACtF,QAAN,IAAkB,EAAG;YACvB,kBAAAsF,KAAK,CAAC5E,MAAN,gEAAcmJ,OAAd,CAAsB,KAAtB,EAA6B,OAA7B,MAAyC,EAAG;;;oCAGpBzD,gBAAgB,CAACpG,QAAQ,CAACqG,KAAT,IAAkB,EAAnB,CAAuB;;;;;;;;;;;;;;;;;;;UAmBjEG,aAAa,CAACjE,GAAd,CAAkBY,IAAI,IAAI;AAC1B,cAAM6G,QAAQ,GAAI7G,IAAI,CAACC,aAAL,IAAsBD,IAAI,CAACC,aAAL,CAAmB4B,MAA1C,GACb7B,IAAI,CAACC,aAAL,CAAmB1B,IAAnB,CAAwB,IAAxB,CADa,GAEZyB,IAAI,CAACO,YAAL,IAAqBP,IAAI,CAAC8G,KAA1B,IAAmC,GAFxC;AAGA,eAAQ;;sDAEoC9G,IAAI,CAACyD,QAAS;sDACdzD,IAAI,CAAC+G,eAAgB;sDACrB/G,IAAI,CAAC2D,OAAQ;sDACb3D,IAAI,CAAC4D,GAAI;sDACT5D,IAAI,CAACwE,GAAI;sDACTxE,IAAI,CAACuE,SAAU;sDACfsC,QAAS;sDACT7G,IAAI,CAACgH,KAAM;kBATvD;AAWD,OAfC,EAeCzI,IAfD,CAeM,EAfN,CAeU;;;qDAGiC4F,QAAQ,CAACwB,OAAT,CAAiB,CAAjB,CAAoB;;UAE/DsB,MAAM,CAACC,OAAP,CAAepC,YAAf,EAA6B1F,GAA7B,CAAiC,CAAC,CAACkG,GAAD,EAAM6B,GAAN,CAAD,KAAiB;;qFAEyB7B,GAAI;oDACrC6B,GAAG,CAACxB,OAAJ,CAAY,CAAZ,CAAe;;SAHzD,EAKCpH,IALD,CAKM,EALN,CAKU;;;qDAGiCmG,cAAc,CAACiB,OAAf,CAAuB,CAAvB,CAA0B;;;;qDAI1BhB,UAAU,CAACgB,OAAX,CAAmB,CAAnB,CAAsB;;;;2EAIAxL,WAAY;iFACN,IAAIsC,IAAJ,GAAW2K,cAAX,EAA4B;GArG3G;AAwGAvB,MAAAA,QAAQ,CAACwB,IAAT,CAAcC,WAAd,CAA0B1B,SAA1B;AACA,YAAM2B,MAAM,GAAG,MAAMnO,WAAW,CAACwM,SAAD,EAAY;AAAE4B,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,OAAO,EAAE;AAArB,OAAZ,CAAhC;AACA,YAAMC,OAAO,GAAGH,MAAM,CAACI,SAAP,CAAiB,WAAjB,CAAhB;AACA,YAAMC,GAAG,GAAG,IAAIvO,KAAJ,CAAU,GAAV,EAAe,IAAf,EAAqB,IAArB,CAAZ;AACA,YAAM2M,KAAK,GAAG,MAAd;AACA,YAAM6B,MAAM,GAAGN,MAAM,CAACM,MAAP,GAAgB7B,KAAhB,GAAwBuB,MAAM,CAACvB,KAA9C;AACA4B,MAAAA,GAAG,CAACE,QAAJ,CAAaJ,OAAb,EAAsB,KAAtB,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC1B,KAAnC,EAA0C6B,MAA1C;AACAhC,MAAAA,QAAQ,CAACwB,IAAT,CAAcU,WAAd,CAA0BnC,SAA1B,EA3PqC,CA6PrC;AAEF;;AACA,UAAIhK,cAAc,IAAIA,cAAc,CAACiG,MAAf,GAAwB,CAA9C,EAAiD;AAC/C+F,QAAAA,GAAG,CAACI,OAAJ;AAEA,YAAIC,aAAa,GAAGrM,cAAc,CAACyC,MAAf,CAAsB6J,EAAE,IAAIA,EAAE,CAACxH,QAAH,KAAgB,KAA5C,EAAmDtB,GAAnD,CAAuD,CAACY,IAAD,EAAOtB,GAAP,KAAe;AACxF,gBAAMyJ,QAAQ,GAAG9E,aAAa,CAACT,IAAd,CAAmByC,EAAE,IAAIA,EAAE,CAAC5B,QAAH,KAAgBzD,IAAI,CAACwD,SAA9C,CAAjB;AACA,gBAAM4E,aAAa,GAAGD,QAAQ,GAAI7D,UAAU,CAAC6D,QAAQ,CAACnB,KAAV,CAAV,IAA8B,CAAlC,GAAuC,CAArE;AACA,iBAAQ;;gDAEoChH,IAAI,CAACgF,GAAI;gDACThF,IAAI,CAACwD,SAAU;gDACfxD,IAAI,CAACqI,IAAK;gDACVrI,IAAI,CAAC7D,KAAM,IAAGN,aAAa,KAAK,YAAlB,GAAiC,GAAjC,GAAuC,GAAI;gDACzDmE,IAAI,CAACgB,QAAS;gDACdoH,aAAa,CAACzC,OAAd,CAAsB,CAAtB,CAAyB;;QAEjE,CAAC3F,IAAI,CAACsI,WAAL,IAAoB,EAArB,EAAyBlJ,GAAzB,CAA6BmJ,EAAE,IAAI;AACnC,gBAAIC,OAAO,GAAG,CAAd;AACA,gBAAID,EAAE,CAACnM,IAAH,KAAY,QAAhB,EAA0BoM,OAAO,GAAGlE,UAAU,CAACiE,EAAE,CAACpM,KAAH,IAAY,CAAb,CAApB,CAA1B,KACK,IAAIoM,EAAE,CAACnM,IAAH,KAAY,YAAhB,EAA8BoM,OAAO,GAAGJ,aAAa,GAAG9D,UAAU,CAACiE,EAAE,CAACpM,KAAH,IAAY,CAAb,CAA1B,GAA4C,GAAtD;AACnC,mBAAQ;;;8FAG8EoM,EAAE,CAACrM,IAAK;oDAClDqM,EAAE,CAACnM,IAAH,KAAY,QAAZ,GAAwB,IAAGmM,EAAE,CAACpM,KAAM,EAApC,GAAyC,GAAEoM,EAAE,CAACpM,KAAM,GAAG;oDACvDoM,EAAE,CAAClM,OAAQ;oDACXmM,OAAO,CAAC7C,OAAR,CAAgB,CAAhB,CAAmB;;SAN/D;AASD,WAbC,EAaCpH,IAbD,CAaM,EAbN,CAaU;KAtBd;AAwBD,SA3BmB,EA2BjBA,IA3BiB,CA2BZ,EA3BY,CAApB;AA4BA,YAAIkK,OAAO,GAAG1D,eAAe,CAAC3F,GAAhB,CAAoBsJ,GAAG,IAAI;AACzC,iBAAQ;;8CAEoCA,GAAG,CAAC1D,GAAI;8CACR0D,GAAG,CAACtD,KAAM;8CACVsD,GAAG,CAAChD,MAAO;8CACXgD,GAAG,CAACjD,MAAO;;GALvD;AAQD,SATe,EASblH,IATa,CASR,EATQ,CAAd;AAYA,YAAIoK,YAAY,GAAI;;;;;;;;;oDAS8B9M,aAAc;;;;;;YAMtDoM,aAAc;;;;;;;;;;;;;;YAcdQ,OAAQ;;;uDAGmC/D,cAAc,CAACiB,OAAf,CAAuB,CAAvB,CAA0B;;;;;cAKnEhD,GAAG,CAAC0D,MAAJ,IAAc,EAAG;;;;GArC7B;AA2CA,cAAMuC,iBAAiB,GAAG/C,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAA1B;AACA8C,QAAAA,iBAAiB,CAACvJ,EAAlB,GAAuB,uBAAvB;AACAuJ,QAAAA,iBAAiB,CAAC7C,KAAlB,CAAwBC,KAAxB,GAAgC,OAAhC;AACA4C,QAAAA,iBAAiB,CAAC7C,KAAlB,CAAwBE,OAAxB,GAAkC,MAAlC;AACA2C,QAAAA,iBAAiB,CAAC7C,KAAlB,CAAwBG,UAAxB,GAAqC,OAArC;AACA0C,QAAAA,iBAAiB,CAAC7C,KAAlB,CAAwB8C,QAAxB,GAAmC,MAAnC,CA3F+C,CA2FJ;;AAC3CD,QAAAA,iBAAiB,CAACzC,SAAlB,GAA8BwC,YAA9B;AACA9C,QAAAA,QAAQ,CAACwB,IAAT,CAAcC,WAAd,CAA0BsB,iBAA1B;AAEA,cAAME,cAAc,GAAG,MAAM1P,WAAW,CAACwP,iBAAD,EAAoB;AAAEpB,UAAAA,KAAK,EAAE,CAAT;AAAYC,UAAAA,OAAO,EAAE;AAArB,SAApB,CAAxC;AACA,cAAMsB,WAAW,GAAGD,cAAc,CAACnB,SAAf,CAAyB,WAAzB,CAApB;AACAC,QAAAA,GAAG,CAACE,QAAJ,CAAaiB,WAAb,EAA0B,KAA1B,EAAiC,CAAjC,EAAoC,CAApC,EAAuC/C,KAAvC,EAA8C8C,cAAc,CAACjB,MAAf,GAAwB7B,KAAxB,GAAgC8C,cAAc,CAAC9C,KAA7F;AAEAH,QAAAA,QAAQ,CAACwB,IAAT,CAAcU,WAAd,CAA0Ba,iBAA1B;AAED;;AAEChB,MAAAA,GAAG,CAACoB,WAAJ,CAAgB,EAAhB;AACApB,MAAAA,GAAG,CAACqB,IAAJ,CAAU,OAAMtG,GAAG,CAAC0D,MAAJ,IAAc,EAAG,EAAjC,EAAoCL,KAAK,GAAG,GAA5C,EAAiD,GAAjD;AACA4B,MAAAA,GAAG,CAACqB,IAAJ,CAAS,sBAAT,EAAiCjD,KAAK,GAAG,GAAzC,EAA8C,GAA9C,EAzWqC,CA2WrC;;AACA,YAAMkD,IAAI,GAAGtB,GAAG,CAACuB,MAAJ,CAAW,MAAX,CAAb;AACA,YAAMC,GAAG,GAAGC,GAAG,CAACC,eAAJ,CAAoBJ,IAApB,CAAZ;AACA,YAAMK,MAAM,GAAGC,MAAM,CAACC,IAAP,EAAf;AACAF,MAAAA,MAAM,CAAC1D,QAAP,CAAgB6D,KAAhB,CAAuB;;;qEAG4CN,GAAI;;iBAExDA,GAAI,qBAAoBjH,KAAK,CAAC5F,OAAN,IAAiB,KAAM;;GAL9D;AAQAgN,MAAAA,MAAM,CAAC1D,QAAP,CAAgB8D,KAAhB;AACD,KAhrB6B;;AAAA,SAkrB5BC,WAlrB4B,GAkrBbxN,IAAD,IAAU,KAAK0C,QAAL,CAAc;AAAE5D,MAAAA,WAAW,EAAEkB,IAAf;AAAqBjB,MAAAA,aAAa,EAAE;AAApC,KAAd,CAlrBI;;AAAA,SAmrB5B0O,WAnrB4B,GAmrBd,MAAM,KAAK/K,QAAL,CAAc;AAAE5D,MAAAA,WAAW,EAAE,EAAf;AAAmBC,MAAAA,aAAa,EAAE;AAAlC,KAAd,CAnrBQ;;AAAA,SAsrB5B2O,kBAtrB4B,GAsrBN3N,KAAD,IAAW;AAC9B,UAAI,KAAK5B,KAAL,CAAWW,WAAX,KAA2B,UAA/B,EAA2C;AACzC,aAAK4D,QAAL,CAAcC,IAAI,KAAK;AACrBzC,UAAAA,QAAQ,EAAE,EACR,GAAGyC,IAAI,CAACzC,QADA;AAERO,YAAAA,QAAQ,EAAEV,KAAK,CAAC4G,QAAN,IAAkB5G,KAAK,CAAC4N,QAAxB,IAAoC,EAFtC;AAE0C;AAClDzM,YAAAA,MAAM,EAAE,KAAKU,aAAL,CAAmB7B,KAAK,CAACmB,MAAzB,CAHA;AAIRC,YAAAA,MAAM,EAAE,KAAKS,aAAL,CAAmB7B,KAAK,CAACoB,MAAzB,CAJA;AAKRL,YAAAA,QAAQ,EAAEf,KAAK,CAACe,QAAN,IAAkB,EALpB,CAMR;AACA;;AAPQ,WADW;AAUrBhC,UAAAA,WAAW,EAAE,EAVQ;AAWrBC,UAAAA,aAAa,EAAE;AAXM,SAAL,CAAlB,EAYI,MAAM;AACR,cAAI,KAAK2C,gBAAL,CAAsBsE,OAA1B,EAAmC;AACjC,iBAAKtE,gBAAL,CAAsBsE,OAAtB,CAA8BjG,KAA9B,GAAsCA,KAAK,CAAC4G,QAAN,IAAkB5G,KAAK,CAAC4N,QAAxB,IAAoC,EAA1E;AACD;AACF,SAhBD;AAiBD;AACF,KA1sB2B;;AAAA,SA2sB9BC,gBA3sB8B,GA2sBX,MAAM;AACvB,YAAM;AAAEvO,QAAAA,SAAF;AAAaT,QAAAA,iBAAb;AAAgCsB,QAAAA;AAAhC,UAA6C,KAAK/B,KAAxD;AACA,UAAIS,iBAAiB,KAAK,IAA1B,EAAgC,OAAO,IAAP;AAEhC,YAAMgF,IAAI,GAAG1D,QAAQ,CAACuB,SAAT,CAAmB7C,iBAAnB,CAAb;AACA,YAAM0F,QAAQ,GAAG,IAAIuJ,GAAJ,CAAQjK,IAAI,CAACC,aAAL,IAAsB,EAA9B,CAAjB;AAEA,0BACE;AAAK,QAAA,KAAK,EAAE;AACViK,UAAAA,QAAQ,EAAE,UADA;AAEVC,UAAAA,MAAM,EAAE,IAFE;AAGVC,UAAAA,GAAG,EAAE,KAHK;AAIVC,UAAAA,IAAI,EAAE,KAJI;AAKVC,UAAAA,UAAU,EAAE,MALF;AAMVC,UAAAA,MAAM,EAAE,gBANE;AAOVtE,UAAAA,OAAO,EAAE,MAPC;AAQVuE,UAAAA,SAAS,EAAE,0BARD;AASVxE,UAAAA,KAAK,EAAE,OATG;AAUVyE,UAAAA,SAAS,EAAE,MAVD;AAWVC,UAAAA,SAAS,EAAE;AAXD,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAbF,eAcE;AAAO,QAAA,SAAS,EAAC,+BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,eAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAb,eAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA3B,eAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAxC,CADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGjP,SAAS,CAAC2D,GAAV,CAAcuL,EAAE,iBACf;AAAI,QAAA,GAAG,EAAEA,EAAE,CAAC9K,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,OAAO,EAAEa,QAAQ,CAACkK,GAAT,CAAaD,EAAE,CAAC9K,SAAhB,CAFX;AAGE,QAAA,QAAQ,EAAE6B,CAAC,IAAI,KAAK9B,uBAAL,CAA6B+K,EAAE,CAAC9K,SAAhC,EAA2C7E,iBAA3C,EAA8D0G,CAAC,CAACmJ,MAAF,CAAS9K,OAAvE,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK4K,EAAE,CAAC9K,SAAR,CARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK8K,EAAE,CAAC9M,SAAH,CAAauB,GAAb,CAAiBiG,EAAE,IAAIA,EAAE,CAACE,SAA1B,EAAqChH,IAArC,CAA0C,IAA1C,CAAL,CATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKoM,EAAE,CAAC9M,SAAH,CAAauB,GAAb,CAAiBiG,EAAE,IAAIA,EAAE,CAACG,YAA1B,EAAwCjH,IAAxC,CAA6C,IAA7C,CAAL,CAVF,CADD,CADH,CAJF,CAdF,eAmCE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,wBAAhC;AAAyD,QAAA,OAAO,EAAE,MAAM,KAAKO,QAAL,CAAc;AAAE/D,UAAAA,cAAc,EAAE;AAAlB,SAAd,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAnCF,CADF;AA2CD,KA7vB6B;;AAAA,SAiwB7B+P,aAjwB6B,GAiwBb,MAAM;AACrB,YAAM;AAAE5P,QAAAA,WAAF;AAAeC,QAAAA,aAAf;AAA8BT,QAAAA,SAA9B;AAAyCE,QAAAA,aAAzC;AAAwDC,QAAAA;AAAxD,UAAyE,KAAKN,KAApF;;AAEA,YAAMwQ,eAAe,GAAG,CAACC,IAAD,EAAOC,OAAO,GAAG,MAAjB,EAAyBC,OAAO,GAAG,WAAnC,KACtBF,IAAI,CAAC3M,MAAL,CAAY2B,IAAI,IACd,CAACA,IAAI,CAACiL,OAAD,CAAJ,IAAiB,EAAlB,EAAsBE,WAAtB,GAAoC/K,QAApC,CAA6C,CAACjF,aAAa,IAAI,EAAlB,EAAsBgQ,WAAtB,EAA7C,KACA,CAACnL,IAAI,CAACkL,OAAD,CAAJ,IAAiB,EAAlB,EAAsBC,WAAtB,GAAoC/K,QAApC,CAA6C,CAACjF,aAAa,IAAI,EAAlB,EAAsBgQ,WAAtB,EAA7C,CAFF,CADF;;AAMA,YAAMC,YAAY,GAAIpL,IAAD,IAAU;AAC7B,YAAI9E,WAAW,KAAK,UAApB,EAAgC;AAC9B,eAAK4O,kBAAL,CAAwB9J,IAAxB;AACD,SAFD,MAEO,IAAI9E,WAAW,KAAK,cAApB,EAAoC;AACzC,eAAK4D,QAAL,CAAcC,IAAI,KAAK;AACrBzC,YAAAA,QAAQ,EAAE,EACR,GAAGyC,IAAI,CAACzC,QADA;AAERkB,cAAAA,YAAY,EAAEwC,IAAI,CAAC9D;AAFX,aADW;AAKrBhB,YAAAA,WAAW,EAAE,EALQ;AAMrBC,YAAAA,aAAa,EAAE;AANM,WAAL,CAAlB;AAQD,SATM,MASA,IAAID,WAAW,KAAK,cAApB,EAAoC;AACzC,eAAK4D,QAAL,CAAcC,IAAI,KAAK;AACrBzC,YAAAA,QAAQ,EAAE,EACR,GAAGyC,IAAI,CAACzC,QADA;AAERzB,cAAAA,YAAY,EAAEmF,IAAI,CAAC9D;AAFX,aADW;AAKrBhB,YAAAA,WAAW,EAAE,EALQ;AAMrBC,YAAAA,aAAa,EAAE;AANM,WAAL,CAAlB;AAQD;AACF,OAtBD;;AAwBA,UAAIkQ,KAAK,GAAG,EAAZ;AACA,UAAIC,OAAO,GAAG,EAAd;AACA,UAAIC,IAAI,GAAG,EAAX;;AAEA,UAAIrQ,WAAW,KAAK,UAApB,EAAgC;AAC9BmQ,QAAAA,KAAK,GAAG,iBAAR;AACAC,QAAAA,OAAO,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,YAAjB,CAAV;AACAC,QAAAA,IAAI,GAAGR,eAAe,CAACrQ,SAAD,EAAY,UAAZ,EAAwB,UAAxB,CAAtB;AACD,OAJD,MAIO,IAAIQ,WAAW,KAAK,cAApB,EAAoC;AACzCmQ,QAAAA,KAAK,GAAG,sBAAR;AACAC,QAAAA,OAAO,GAAG,CAAC,MAAD,EAAS,YAAT,CAAV;AACAC,QAAAA,IAAI,GAAGR,eAAe,CAACnQ,aAAD,CAAtB;AACD,OAJM,MAIA,IAAIM,WAAW,KAAK,cAApB,EAAoC;AACzCmQ,QAAAA,KAAK,GAAG,sBAAR;AACAC,QAAAA,OAAO,GAAG,CAAC,MAAD,EAAS,YAAT,CAAV;AACAC,QAAAA,IAAI,GAAGR,eAAe,CAAClQ,YAAD,CAAtB;AACD,OAJM,MAIA;AACL,eAAO,IAAP;AACD;;AAED,0BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuCwQ,KAAvC,CADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,mBAFZ;AAGE,QAAA,WAAW,EAAG,UAASnQ,WAAY,KAHrC;AAIE,QAAA,KAAK,EAAEC,aAJT;AAKE,QAAA,QAAQ,EAAEuG,CAAC,IAAI,KAAK5C,QAAL,CAAc;AAAE3D,UAAAA,aAAa,EAAEuG,CAAC,CAACmJ,MAAF,CAAS1O;AAA1B,SAAd,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eASE;AAAK,QAAA,KAAK,EAAE;AAAEsO,UAAAA,SAAS,EAAE,GAAb;AAAkBC,UAAAA,SAAS,EAAE;AAA7B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,SAAS,EAAC,+BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGY,OAAO,CAAClM,GAAR,CAAY,CAACoM,CAAD,EAAIC,CAAJ,kBAAU;AAAI,QAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaD,CAAb,CAAtB,CADH,CADF,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IAAI,CAACnM,GAAL,CAAS,CAACY,IAAD,EAAOyL,CAAP,kBACR;AAAI,QAAA,GAAG,EAAEzL,IAAI,CAACX,EAAL,IAAWoM,CAApB;AAAuB,QAAA,OAAO,EAAE,MAAML,YAAY,CAACpL,IAAD,CAAlD;AAA0D,QAAA,KAAK,EAAE;AAAE0L,UAAAA,MAAM,EAAE;AAAV,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGJ,OAAO,CAAClM,GAAR,CAAY,CAACoM,CAAD,EAAIG,CAAJ,kBACX;AAAI,QAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGzQ,WAAW,KAAK,UAAhB,GACGsQ,CAAC,KAAK,MAAN,GAAexL,IAAI,CAAC+C,QAApB,GACEyI,CAAC,KAAK,MAAN,GAAexL,IAAI,CAAC+J,QAApB,GACA/J,IAAI,CAAC8C,aAHV,GAIG0I,CAAC,KAAK,MAAN,GAAexL,IAAI,CAAC9D,IAApB,GACE8D,IAAI,CAAC4L,SANb,CADD,CADH,CADD,CADH,EAeGL,IAAI,CAAC1J,MAAL,KAAgB,CAAhB,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,OAAO,EAAEyJ,OAAO,CAACzJ,MAArB;AAA6B,QAAA,SAAS,EAAC,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CAhBJ,CANF,CADF,CATF,eAuCE;AAAQ,QAAA,SAAS,EAAC,+BAAlB;AAAkD,QAAA,OAAO,EAAE,KAAKgI,WAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvCF,CADF,CADF;AA6CD,KAn2B6B;;AAAA,SAq2B5BgC,oBAr2B4B,GAq2BL,MAAM;AAC3B,YAAM;AAAElR,QAAAA,QAAF;AAAYU,QAAAA,oBAAZ;AAAkCC,QAAAA;AAAlC,UAAyD,KAAKf,KAApE;AACA,YAAMuR,QAAQ,GAAGnR,QAAQ,CAAC0D,MAAT,CAAgBkF,CAAC,IAChC,CAACA,CAAC,CAACG,WAAF,IAAiB,EAAlB,EAAsByH,WAAtB,GAAoC/K,QAApC,CAA6C/E,oBAAoB,CAAC8P,WAArB,EAA7C,KACA,CAAC5H,CAAC,CAACwI,aAAF,IAAmB,EAApB,EAAwBZ,WAAxB,GAAsC/K,QAAtC,CAA+C/E,oBAAoB,CAAC8P,WAArB,EAA/C,CADA,IAEA,CAAC5H,CAAC,CAACE,QAAF,IAAc,EAAf,EAAmB0H,WAAnB,GAAiC/K,QAAjC,CAA0C/E,oBAAoB,CAAC8P,WAArB,EAA1C,CAHe,CAAjB;AAKA,0BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,wDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE;AACE,QAAA,SAAS,EAAC,wBADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACb,gBAAMa,gBAAgB,GAAGrR,QAAQ,CAAC0D,MAAT,CAAgBkF,CAAC,IAAI,KAAKhJ,KAAL,CAAWe,kBAAX,CAA8B8E,QAA9B,CAAuCmD,CAAC,CAAClE,EAAzC,CAArB,CAAzB;AACA,eAAKP,QAAL,CAAcC,IAAI,KAAK;AACrBzC,YAAAA,QAAQ,EAAE,EACR,GAAGyC,IAAI,CAACzC,QADA;AAERuB,cAAAA,SAAS,EAAE,CACT,GAAGkB,IAAI,CAACzC,QAAL,CAAcuB,SADR,EAET,GAAGmO,gBAAgB,CAChB3N,MADA,CACOkF,CAAC,IAAI,CAACxE,IAAI,CAACzC,QAAL,CAAcuB,SAAd,CAAwBoO,IAAxB,CAA6BjM,IAAI,IAAIA,IAAI,CAACX,EAAL,KAAYkE,CAAC,CAAClE,EAAnD,CADb,EAEAD,GAFA,CAEImE,CAAC,KAAK;AACTlE,gBAAAA,EAAE,EAAEkE,CAAC,CAAClE,EADG;AAEToE,gBAAAA,QAAQ,EAAEF,CAAC,CAACC,SAAF,IAAe,EAFhB;AAGTuD,gBAAAA,eAAe,EAAExD,CAAC,CAACwI,aAAF,IAAmB,EAH3B;AAITG,gBAAAA,QAAQ,EAAE3I,CAAC,CAAC2I,QAAF,IAAc,EAJf;AAKTC,gBAAAA,YAAY,EAAE5I,CAAC,CAAC4I,YAAF,IAAkB,EALvB;AAMTC,gBAAAA,MAAM,EAAE7I,CAAC,CAAC6I,MAAF,IAAY,CANX;AAOTC,gBAAAA,QAAQ,EAAE9I,CAAC,CAAC8I,QAAF,IAAc,EAPf;AAQT9L,gBAAAA,YAAY,EAAEgD,CAAC,CAAC8I,QAAF,IAAc,EARnB;AASTC,gBAAAA,UAAU,EAAE/I,CAAC,CAAC+I,UAAF,IAAgB,EATnB;AAUTC,gBAAAA,KAAK,EAAEhJ,CAAC,CAACgJ,KAAF,IAAW,EAVT;AAWThI,gBAAAA,SAAS,EAAEhB,CAAC,CAACgB,SAAF,IAAe,CAXjB;AAYTC,gBAAAA,GAAG,EAAE,CAZI;AAaTwC,gBAAAA,KAAK,EAAE,CAACzD,CAAC,CAACgB,SAAF,IAAe,CAAhB,EAAmBoB,OAAnB,CAA2B,CAA3B;AAbE,eAAL,CAFL,CAFM;AAFH,aADW;AAwBrBvK,YAAAA,qBAAqB,EAAE,KAxBF;AAyBrBE,YAAAA,kBAAkB,EAAE;AAzBC,WAAL,CAAlB;AA2BD,SA/BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,CADF,eAqCE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,mBAFZ;AAGE,QAAA,WAAW,EAAC,oBAHd;AAIE,QAAA,KAAK,EAAED,oBAJT;AAKE,QAAA,QAAQ,EAAEqG,CAAC,IAAI,KAAK5C,QAAL,CAAc;AAAEzD,UAAAA,oBAAoB,EAAEqG,CAAC,CAACmJ,MAAF,CAAS1O;AAAjC,SAAd,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArCF,eA4CE;AAAK,QAAA,KAAK,EAAE;AAAEsO,UAAAA,SAAS,EAAE,GAAb;AAAkBC,UAAAA,SAAS,EAAE;AAA7B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,SAAS,EAAC,+BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARF,CADF,CADF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGoB,QAAQ,CAAC1M,GAAT,CAAamE,CAAC,iBACb;AAAI,QAAA,GAAG,EAAEA,CAAC,CAAClE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,OAAO,EAAE/D,kBAAkB,CAAC8E,QAAnB,CAA4BmD,CAAC,CAAClE,EAA9B,CAFX;AAGE,QAAA,QAAQ,EAAEqC,CAAC,IAAI;AACb,gBAAM3B,OAAO,GAAG2B,CAAC,CAACmJ,MAAF,CAAS9K,OAAzB;AACA,eAAKjB,QAAL,CAAcC,IAAI,KAAK;AACrBzD,YAAAA,kBAAkB,EAAEyE,OAAO,GACvB,CAAC,GAAGhB,IAAI,CAACzD,kBAAT,EAA6BiI,CAAC,CAAClE,EAA/B,CADuB,GAEvBN,IAAI,CAACzD,kBAAL,CAAwB+C,MAAxB,CAA+BgB,EAAE,IAAIA,EAAE,KAAKkE,CAAC,CAAClE,EAA9C;AAHiB,WAAL,CAAlB;AAKD,SAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKkE,CAAC,CAACC,SAAP,CAfF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,CAAC,CAACwI,aAAF,IAAmB,EAAxB,CAhBF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKxI,CAAC,CAAC2I,QAAF,IAAc,EAAnB,CAjBF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK3I,CAAC,CAAC4I,YAAF,IAAkB,EAAvB,CAlBF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK5I,CAAC,CAAC6I,MAAF,IAAY,CAAjB,CAnBF,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK7I,CAAC,CAAC8I,QAAF,IAAc,EAAnB,CApBF,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK9I,CAAC,CAAC+I,UAAF,IAAgB,EAArB,CArBF,CADD,CADH,EA0BGR,QAAQ,CAACjK,MAAT,KAAoB,CAApB,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAgB,QAAA,SAAS,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CA3BJ,CAbF,CADF,CA5CF,eA6FE;AAAK,QAAA,SAAS,EAAC,wDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAQ,QAAA,SAAS,EAAC,0BAAlB;AAA6C,QAAA,OAAO,EAAE,MAAM,KAAK/C,QAAL,CAAc;AAAE1D,UAAAA,qBAAqB,EAAE,KAAzB;AAAgCE,UAAAA,kBAAkB,EAAE;AAApD,SAAd,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CA7FF,CADF,CADF;AAsGD,KAl9B2B;;AAAA,SAo9B9BkR,kBAp9B8B,GAo9BT,MAAM;AACzB,YAAM;AAAE5Q,QAAAA,cAAF;AAAkBC,QAAAA,aAAlB;AAAiCS,QAAAA;AAAjC,UAA8C,KAAK/B,KAAzD,CADyB,CAGzB;;AACA,YAAMkS,UAAU,GAAG,CAACnQ,QAAQ,CAACuB,SAAT,IAAsB,EAAvB,EAA2BuG,MAA3B,CAAkC,CAACsI,GAAD,EAAMrH,EAAN,KAAa;AAChEqH,QAAAA,GAAG,CAACrH,EAAE,CAAC5B,QAAJ,CAAH,GAAmBa,UAAU,CAACe,EAAE,CAAC2B,KAAH,IAAY,CAAb,CAAV,IAA6B,CAAhD;AACA,eAAO0F,GAAP;AACD,OAHkB,EAGhB,EAHgB,CAAnB;AAIA,YAAMC,eAAe,GAAG1F,MAAM,CAAC2F,MAAP,CAAcH,UAAd,EAA0BrI,MAA1B,CAAiC,CAACC,GAAD,EAAM8C,GAAN,KAAc9C,GAAG,GAAG8C,GAArD,EAA0D,CAA1D,CAAxB,CARyB,CAUzB;;AACA,YAAM0F,iBAAiB,GAAI3E,EAAD,IAAQ;AAChC,cAAM4E,SAAS,GAAGL,UAAU,CAACvE,EAAE,CAAC1E,SAAJ,CAAV,IAA4B,CAA9C;AACA,cAAMuJ,IAAI,GAAG7M,KAAK,CAACC,OAAN,CAAc+H,EAAE,CAACI,WAAjB,IAAgCJ,EAAE,CAACI,WAAnC,GAAiD,EAA9D;AACA,eAAOyE,IAAI,CAAC3I,MAAL,CAAY,CAACH,CAAD,EAAIsE,EAAJ,KAAW;AAC5B,gBAAMpB,GAAG,GAAG7C,UAAU,CAACiE,EAAE,CAACpM,KAAH,IAAY,CAAb,CAAV,IAA6B,CAAzC;;AACA,cAAIN,aAAa,KAAK,YAAtB,EAAoC;AAClC,mBAAOoI,CAAC,GAAI6I,SAAS,GAAG3F,GAAZ,GAAkB,GAA9B;AACD;;AACD,iBAAOlD,CAAC,GAAGkD,GAAX;AACD,SANM,EAMJ,CANI,CAAP;AAOD,OAVD;;AAYA,YAAM6F,OAAO,GAAG,KAAKjL,gBAAL,EAAhB;AAEA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAGE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAArB,OAA0CzF,QAAQ,CAACe,UAAnD,CADF,eAEE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAArB,OAAyCf,QAAQ,CAACc,SAAlD,CAFF,eAGE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAArB,OAAiDuP,eAAe,CAAChH,OAAhB,CAAwB,CAAxB,CAAjD,CAHF,CAHF,eASE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE;AACE,QAAA,SAAS,EAAC,8BADZ;AAEE,QAAA,KAAK,EAAE9J,aAFT;AAGE,QAAA,QAAQ,EAAE6F,CAAC,IAAI,KAAKb,yBAAL,CAA+Ba,CAAC,CAACmJ,MAAF,CAAS1O,KAAxC,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAQ,QAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,CAFF,CADF,CATF,eAuBE;AAAO,QAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAuBN,aAAa,KAAK,YAAlB,GAAiC,GAAjC,GAAuC,GAA9D,MAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,CADF,CADF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,cAAc,CAACwD,GAAf,CAAmB,CAACY,IAAD,EAAOtB,GAAP,KAAe;AACjC,cAAM0J,aAAa,GAAGqE,UAAU,CAACzM,IAAI,CAACwD,SAAN,CAAV,IAA8B,CAApD;AACA,cAAMyJ,MAAM,GAAGJ,iBAAiB,CAAC7M,IAAD,CAAhC;AACA,cAAMkN,SAAS,GAAI9E,aAAa,GAAG6E,MAAnC;AACA,cAAMF,IAAI,GAAG7M,KAAK,CAACC,OAAN,CAAcH,IAAI,CAACsI,WAAnB,IAAkCtI,IAAI,CAACsI,WAAvC,GAAqD,EAAlE;AAEA,4BACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,UAAA,GAAG,EAAE5J,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEE;AAAI,UAAA,KAAK,EAAE;AAAE4L,YAAAA,UAAU,EAAE;AAAd,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKtK,IAAI,CAACgF,GAAV,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKhF,IAAI,CAACwD,SAAV,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKxD,IAAI,CAACqI,IAAV,CAHF,eAIE;AAAI,UAAA,OAAO,EAAE,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,SAAS,EAAC,mDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI4E,MAAM,CAACtH,OAAP,CAAe,CAAf,CAAJ,CAAxB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAkB;AAAG,UAAA,KAAK,EAAE;AAAEwH,YAAAA,KAAK,EAAED,SAAS,GAAG,IAAZ,GAAmB,KAAnB,GAA2B;AAApC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0DA,SAAS,CAACvH,OAAV,CAAkB,CAAlB,CAA1D,CAAlB,CAHF,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,qCAFZ;AAGE,UAAA,OAAO,EAAE,MAAM,KAAKyH,yBAAL,CAA+B1O,GAA/B,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAME;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,kCAFZ;AAGE,UAAA,OAAO,EAAE,MAAM;AACb;AACA,gBAAIwO,SAAS,IAAI,CAAjB,EAAoB;AACpB,iBAAKE,yBAAL,CAA+B1O,GAA/B,EAAoC;AAAExC,cAAAA,IAAI,EAAE,WAAR;AAAqBC,cAAAA,KAAK,EAAEN,aAAa,KAAK,YAAlB,GAAiC,CAACqR,SAAS,GAAG,GAAZ,IAAmB9E,aAAa,IAAI,CAApC,CAAD,EAAyCzC,OAAzC,CAAiD,CAAjD,CAAjC,GAAuFuH,SAAS,CAACvH,OAAV,CAAkB,CAAlB;AAAnH,aAApC;AACD,WAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANF,CANF,CADF,CAJF,eA6BG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKyC,aAAa,CAACzC,OAAd,CAAsB,CAAtB,CAAL,CA7BH,eA8BG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA9BH,CAFF,EAoCGoH,IAAI,CAAClL,MAAL,KAAgB,CAAhB,iBACC;AAAI,UAAA,GAAG,EAAG,UAASnD,GAAI,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAI,UAAA,OAAO,EAAC,GAAZ;AAAgB,UAAA,SAAS,EAAC,wBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADF,CArCJ,EA0CGqO,IAAI,CAAC3N,GAAL,CAAS,CAACmJ,EAAD,EAAK8E,KAAL,KAAe;AACvB,gBAAMC,IAAI,GAAI,GAAEtN,IAAI,CAACwD,SAAU,IAAG6J,KAAK,GAAG,CAAE,EAA5C;AACA,cAAI7E,OAAO,GAAG,CAAd;AACA,gBAAM+E,MAAM,GAAGjJ,UAAU,CAACiE,EAAE,CAACpM,KAAH,IAAY,CAAb,CAAV,IAA6B,CAA5C;AACA,cAAIN,aAAa,KAAK,YAAtB,EAAoC2M,OAAO,GAAIJ,aAAa,GAAGmF,MAAhB,GAAyB,GAApC,CAApC,KACK/E,OAAO,GAAG+E,MAAV;AAEL,8BACE;AAAI,YAAA,GAAG,EAAED,IAAT;AAAe,YAAA,KAAK,EAAE;AAAEhD,cAAAA,UAAU,EAAE;AAAd,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAK+C,KAAK,GAAG,CAAb,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKC,IAAL,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,SAAS,EAAC,8BAFZ;AAGE,YAAA,KAAK,EAAE/E,EAAE,CAACrM,IAAH,IAAW,EAHpB;AAIE,YAAA,QAAQ,EAAGwF,CAAD,IAAO,KAAK8L,sBAAL,CAA4B9O,GAA5B,EAAiC2O,KAAjC,EAAwC,MAAxC,EAAgD3L,CAAC,CAACmJ,MAAF,CAAS1O,KAAzD,CAJnB;AAKE,YAAA,WAAW,EAAC,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAHF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,IAAI,EAAC,KAFP;AAGE,YAAA,GAAG,EAAC,GAHN;AAIE,YAAA,SAAS,EAAC,8BAJZ;AAKE,YAAA,KAAK,EAAEoM,EAAE,CAACpM,KAAH,IAAY,EALrB;AAME,YAAA,QAAQ,EAAGuF,CAAD,IAAO,KAAK8L,sBAAL,CAA4B9O,GAA5B,EAAiC2O,KAAjC,EAAwC,OAAxC,EAAiD3L,CAAC,CAACmJ,MAAF,CAAS1O,KAA1D,CANnB;AAOE,YAAA,KAAK,EAAE;AAAE6J,cAAAA,KAAK,EAAE;AAAT,aAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAZF,eAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKwC,OAAO,CAAC7C,OAAR,CAAgB,CAAhB,CAAL,CAvBF,eAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAC,uBAFZ;AAGE,YAAA,OAAO,EAAE,MAAM,KAAK8H,sBAAL,CAA4B/O,GAA5B,EAAiC2O,KAAjC,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAxBF,CADF;AAkCD,SAzCA,CA1CH,CADF;AAuFD,OA7FA,CADH,CAXF,CAvBF,EAoIG,CAACL,OAAD,iBACC;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8IArIJ,CADF;AA6ID,KA1nC6B;;AAAA,SA6nC9BU,sBA7nC8B,GA6nCL,MAAM;AAC7B,YAAM;AAAE3R,QAAAA,oBAAF;AAAwBE,QAAAA;AAAxB,UAA2C,KAAK1B,KAAtD;AACA,UAAI,CAACwB,oBAAL,EAA2B,OAAO,IAAP;AAC3B,0BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,OAAO,EAAG2F,CAAD,IAAOA,CAAC,CAACiM,eAAF,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAwC,QAAA,KAAK,EAAE;AAAE3H,UAAAA,KAAK,EAAE;AAAT,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAgC,QAAA,KAAK,EAAE/J,cAAc,CAACC,IAAtD;AAA4D,QAAA,QAAQ,EAAEwF,CAAC,IAAI,KAAK5C,QAAL,CAAc;AAAE7C,UAAAA,cAAc,EAAE,EAAE,GAAGA,cAAL;AAAqBC,YAAAA,IAAI,EAAEwF,CAAC,CAACmJ,MAAF,CAAS1O;AAApC;AAAlB,SAAd,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,eAKE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,KAAK,EAAEF,cAAc,CAACG,IAAvD;AAA6D,QAAA,QAAQ,EAAEsF,CAAC,IAAI,KAAK5C,QAAL,CAAc;AAAE7C,UAAAA,cAAc,EAAE,EAAE,GAAGA,cAAL;AAAqBG,YAAAA,IAAI,EAAEsF,CAAC,CAACmJ,MAAF,CAAS1O;AAApC;AAAlB,SAAd,CAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,QAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CAFF,CALF,eAYE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQF,cAAc,CAACG,IAAvB,CADF,eAEE;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAgC,QAAA,IAAI,EAAC,QAArC;AAA8C,QAAA,KAAK,EAAEH,cAAc,CAACE,KAApE;AAA2E,QAAA,QAAQ,EAAEuF,CAAC,IAAI,KAAK5C,QAAL,CAAc;AAAE7C,UAAAA,cAAc,EAAE,EAAE,GAAGA,cAAL;AAAqBE,YAAAA,KAAK,EAAEuF,CAAC,CAACmJ,MAAF,CAAS1O;AAArC;AAAlB,SAAd,CAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAZF,eAgBE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAgC,QAAA,IAAI,EAAC,MAArC;AAA4C,QAAA,KAAK,EAAEF,cAAc,CAACI,OAAlE;AAA2E,QAAA,QAAQ,EAAEqF,CAAC,IAAI,KAAK5C,QAAL,CAAc;AAAE7C,UAAAA,cAAc,EAAE,EAAE,GAAGA,cAAL;AAAqBI,YAAAA,OAAO,EAAEqF,CAAC,CAACmJ,MAAF,CAAS1O;AAAvC;AAAlB,SAAd,CAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAhBF,eAoBE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,wBAAhC;AAAyD,QAAA,OAAO,EAAE,MAAM,KAAK2C,QAAL,CAAc;AAAE/C,UAAAA,oBAAoB,EAAE;AAAxB,SAAd,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAkD,QAAA,OAAO,EAAG2F,CAAD,IAAO;AAChEA,UAAAA,CAAC,CAACC,cAAF,GADgE,CAC3C;;AACrB,eAAKiM,mBAAL;AACD,SAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CApBF,CADF,CADF;AAkCD,KAlqC6B;;AAAA,SAoqC9BR,yBApqC8B,GAoqCF,CAACS,YAAD,EAAeC,OAAO,GAAG,IAAzB,KAAkC;AAC5D,WAAKhP,QAAL,CAAcC,IAAI,IAAI;AACpB,cAAM6B,KAAK,GAAG,CAAC,GAAG7B,IAAI,CAACnD,cAAT,CAAd;AACA,cAAMoE,IAAI,GAAG,EAAE,GAAGY,KAAK,CAACiN,YAAD;AAAV,SAAb;AACA,cAAMvF,WAAW,GAAGpI,KAAK,CAACC,OAAN,CAAcH,IAAI,CAACsI,WAAnB,IAAkC,CAAC,GAAGtI,IAAI,CAACsI,WAAT,CAAlC,GAA0D,EAA9E;AACA,cAAMyF,SAAS,GAAG;AAAE7R,UAAAA,IAAI,EAAE,EAAR;AAAYC,UAAAA,KAAK,EAAE,EAAnB;AAAuBE,UAAAA,OAAO,EAAE;AAAhC,SAAlB;AACAiM,QAAAA,WAAW,CAACjI,IAAZ,CAAiByN,OAAO,GAAG,EAAE,GAAGC,SAAL;AAAgB,aAAGD;AAAnB,SAAH,GAAkCC,SAA1D;AACA/N,QAAAA,IAAI,CAACsI,WAAL,GAAmBA,WAAnB;AACA1H,QAAAA,KAAK,CAACiN,YAAD,CAAL,GAAsB7N,IAAtB;AACA,eAAO;AAAEpE,UAAAA,cAAc,EAAEgF;AAAlB,SAAP;AACD,OATD,EASG,KAAKK,sBATR;AAUD,KA/qC6B;;AAAA,SAirC9BwM,sBAjrC8B,GAirCL,CAACO,KAAD,EAAQX,KAAR,KAAkB;AACzC,WAAKvO,QAAL,CAAcC,IAAI,IAAI;AACpB,cAAM6B,KAAK,GAAG,CAAC,GAAG7B,IAAI,CAACnD,cAAT,CAAd;AACA,cAAMoE,IAAI,GAAG,EAAE,GAAGY,KAAK,CAACoN,KAAD;AAAV,SAAb;AACA,cAAM1F,WAAW,GAAGpI,KAAK,CAACC,OAAN,CAAcH,IAAI,CAACsI,WAAnB,IAAkC,CAAC,GAAGtI,IAAI,CAACsI,WAAT,CAAlC,GAA0D,EAA9E;AACAA,QAAAA,WAAW,CAAC2F,MAAZ,CAAmBZ,KAAnB,EAA0B,CAA1B;AACArN,QAAAA,IAAI,CAACsI,WAAL,GAAmBA,WAAnB;AACA1H,QAAAA,KAAK,CAACoN,KAAD,CAAL,GAAehO,IAAf;AACA,eAAO;AAAEpE,UAAAA,cAAc,EAAEgF;AAAlB,SAAP;AACD,OARD,EAQG,KAAKK,sBARR;AASD,KA3rC6B;;AAAA,SA6rC9BuM,sBA7rC8B,GA6rCL,CAACQ,KAAD,EAAQX,KAAR,EAAe1O,KAAf,EAAsBxC,KAAtB,KAAgC;AACvD,WAAK2C,QAAL,CAAcC,IAAI,IAAI;AACpB,cAAM6B,KAAK,GAAG,CAAC,GAAG7B,IAAI,CAACnD,cAAT,CAAd;AACA,cAAMoE,IAAI,GAAG,EAAE,GAAGY,KAAK,CAACoN,KAAD;AAAV,SAAb;AACA,cAAM1F,WAAW,GAAGpI,KAAK,CAACC,OAAN,CAAcH,IAAI,CAACsI,WAAnB,IAAkC,CAAC,GAAGtI,IAAI,CAACsI,WAAT,CAAlC,GAA0D,EAA9E;AACA,cAAMC,EAAE,GAAG,EAAE,GAAGD,WAAW,CAAC+E,KAAD,CAAhB;AAAyB,WAAC1O,KAAD,GAASxC;AAAlC,SAAX;AACAmM,QAAAA,WAAW,CAAC+E,KAAD,CAAX,GAAqB9E,EAArB;AACAvI,QAAAA,IAAI,CAACsI,WAAL,GAAmBA,WAAnB;AACA1H,QAAAA,KAAK,CAACoN,KAAD,CAAL,GAAehO,IAAf;AACA,eAAO;AAAEpE,UAAAA,cAAc,EAAEgF;AAAlB,SAAP;AACD,OATD,EASG,KAAKK,sBATR;AAUD,KAxsC6B;;AAAA,SA2sC9B4L,iBA3sC8B,GA2sCT3E,EAAD,IAAQ;AAC1B,YAAM;AAAErM,QAAAA,aAAF;AAAiBS,QAAAA;AAAjB,UAA8B,KAAK/B,KAAzC;AACA,YAAMkS,UAAU,GAAG,CAACnQ,QAAQ,CAACuB,SAAT,IAAsB,EAAvB,EAA2BuG,MAA3B,CAAkC,CAACsI,GAAD,EAAMrH,EAAN,KAAa;AAChEqH,QAAAA,GAAG,CAACrH,EAAE,CAAC5B,QAAJ,CAAH,GAAmBa,UAAU,CAACe,EAAE,CAAC2B,KAAH,IAAY,CAAb,CAAV,IAA6B,CAAhD;AACA,eAAO0F,GAAP;AACD,OAHkB,EAGhB,EAHgB,CAAnB;AAIA,YAAMI,SAAS,GAAGL,UAAU,CAACvE,EAAE,CAAC1E,SAAJ,CAAV,IAA4B,CAA9C;AACA,YAAMuJ,IAAI,GAAG7M,KAAK,CAACC,OAAN,CAAc+H,EAAE,CAACI,WAAjB,IAAgCJ,EAAE,CAACI,WAAnC,GAAiD,EAA9D;AACA,aAAOyE,IAAI,CAAC3I,MAAL,CAAY,CAACH,CAAD,EAAIsE,EAAJ,KAAW;AAC5B,cAAMpB,GAAG,GAAG7C,UAAU,CAACiE,EAAE,CAACpM,KAAH,IAAY,CAAb,CAAV,IAA6B,CAAzC;;AACA,YAAIN,aAAa,KAAK,YAAtB,EAAoC;AAClC,iBAAOoI,CAAC,GAAI6I,SAAS,GAAG3F,GAAZ,GAAkB,GAA9B;AACD;;AACD,eAAOlD,CAAC,GAAGkD,GAAX;AACD,OANM,EAMJ,CANI,CAAP;AAOD,KA1tC6B;;AAAA,SA6tC9BpF,gBA7tC8B,GA6tCX,MAAM;AACvB,YAAM;AAAEnG,QAAAA,cAAF;AAAkBU,QAAAA;AAAlB,UAA+B,KAAK/B,KAA1C;AACA,YAAMkS,UAAU,GAAG,CAACnQ,QAAQ,CAACuB,SAAT,IAAsB,EAAvB,EAA2BuG,MAA3B,CAAkC,CAACsI,GAAD,EAAMrH,EAAN,KAAa;AAChEqH,QAAAA,GAAG,CAACrH,EAAE,CAAC5B,QAAJ,CAAH,GAAmBa,UAAU,CAACe,EAAE,CAAC2B,KAAH,IAAY,CAAb,CAAV,IAA6B,CAAhD;AACA,eAAO0F,GAAP;AACD,OAHkB,EAGhB,EAHgB,CAAnB;AAIA,YAAMwB,GAAG,GAAG,IAAZ;;AACA,WAAK,IAAIhG,EAAT,IAAetM,cAAf,EAA+B;AAC7B,cAAMkR,SAAS,GAAGL,UAAU,CAACvE,EAAE,CAAC1E,SAAJ,CAAV,IAA4B,CAA9C,CAD6B,CAE7B;;AACA,YAAIsJ,SAAS,GAAG,CAAhB,EAAmB;AACjB,gBAAMG,MAAM,GAAG,KAAKJ,iBAAL,CAAuB3E,EAAvB,CAAf;AACA,cAAItD,IAAI,CAACuJ,GAAL,CAASlB,MAAM,GAAGH,SAAlB,IAA+BoB,GAAnC,EAAwC,OAAO,KAAP;AACzC;AACF;;AACD,aAAO,IAAP;AACD,KA7uC6B;;AAAA,SA+uC9BN,mBA/uC8B,GA+uCR,MAAM;AAC1B,YAAM;AAAE5R,QAAAA,mBAAF;AAAuBC,QAAAA,cAAvB;AAAuCL,QAAAA;AAAvC,UAA0D,KAAKrB,KAArE;AACA,UAAI,CAAC0B,cAAc,CAACC,IAAhB,IAAwB,CAACD,cAAc,CAACE,KAA5C,EAAmD,OAFzB,CAG1B;;AACA,YAAMyE,KAAK,GAAGhF,cAAc,CAACwD,GAAf,CAAmB,CAACY,IAAD,EAAOtB,GAAP,KAAe;AAC9C,YAAIA,GAAG,KAAK1C,mBAAZ,EAAiC;AAC/B,gBAAMsM,WAAW,GAAGpI,KAAK,CAACC,OAAN,CAAcH,IAAI,CAACsI,WAAnB,IAAkC,CAAC,GAAGtI,IAAI,CAACsI,WAAT,CAAlC,GAA0D,EAA9E;AACAA,UAAAA,WAAW,CAACjI,IAAZ,CAAiB,EAAE,GAAGpE;AAAL,WAAjB;AACA,iBAAO,EAAE,GAAG+D,IAAL;AAAWsI,YAAAA;AAAX,WAAP;AACD;;AACD,eAAOtI,IAAP;AACD,OAPa,CAAd;AAQA,WAAKlB,QAAL,CAAc;AACZlD,QAAAA,cAAc,EAAEgF,KADJ;AAEZ7E,QAAAA,oBAAoB,EAAE,KAFV;AAGZE,QAAAA,cAAc,EAAE;AAAEC,UAAAA,IAAI,EAAE,EAAR;AAAYC,UAAAA,KAAK,EAAE,EAAnB;AAAuBC,UAAAA,IAAI,EAAE,QAA7B;AAAuCC,UAAAA,OAAO,EAAE;AAAhD;AAHJ,OAAd,EAIG,KAAK4E,sBAJR;AAKD,KAhwC6B;;AAAA,SAiwC5BmN,gBAjwC4B,GAiwCT,mBACjB;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,wDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,MAAM,KAAKtP,QAAL,CAAc;AAAEhE,QAAAA,QAAQ,EAAE;AAAZ,OAAd,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CADF,eAKE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,kCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,KAAK,EAAE;AAAE+N,QAAAA,QAAQ,EAAE;AAAZ,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,CADF,CADF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKtO,KAAL,CAAWE,MAAX,CAAkB2E,GAAlB,CAAsB,CAAC6C,CAAD,EAAIwJ,CAAJ,KAAU;AAC/B,UAAI4C,WAAW,GAAG,iBAAlB;AACA,UAAIpM,CAAC,CAACnF,MAAF,KAAa,SAAjB,EAA4BuR,WAAW,GAAG,eAAd,CAA5B,KACK,IAAIpM,CAAC,CAACnF,MAAF,KAAa,WAAjB,EAA8BuR,WAAW,GAAG,YAAd,CAA9B,KACA,IAAIpM,CAAC,CAACnF,MAAF,KAAa,kBAAjB,EAAqCuR,WAAW,GAAG,eAAd,CAArC,KACA,IAAIpM,CAAC,CAACnF,MAAF,KAAa,WAAjB,EAA8BuR,WAAW,GAAG,cAAd;AAEnC,0BACE;AAAI,QAAA,GAAG,EAAE5C,CAAT;AAAY,QAAA,KAAK,EAAE;AAAE5C,UAAAA,QAAQ,EAAE;AAAZ,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,OAAO,EAAE,MAAM,KAAK7G,gBAAL,CAAsBC,CAAtB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGA,CAAC,CAAC1F,OAJL,CADF,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK0F,CAAC,CAACpF,QAAP,CATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKoF,CAAC,CAACzF,SAAP,CAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKyF,CAAC,CAAC5E,UAAP,CAXF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACA,QAAA,SAAS,EAAG,SAAQgR,WAAY,EADhC;AAEA,QAAA,KAAK,EAAE;AAAExF,UAAAA,QAAQ,EAAE;AAAZ,SAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAE8B5G,CAAC,CAACnF,MAFhC,CADF,CAZF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,SAAS,EAAC,2BADZ;AAEE,QAAA,OAAO,EAAE,MAAM,KAAK2F,mBAAL,CAAyBR,CAAzB,CAFjB;AAGE,QAAA,KAAK,EAAE;AAAE4G,UAAAA,QAAQ,EAAE,MAAZ;AAAoBsE,UAAAA,KAAK,EAAE,SAA3B;AAAsCzB,UAAAA,MAAM,EAAE;AAA9C,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAjBF,CADF;AA2BD,KAlCA,CADH,EAoCG,KAAKnR,KAAL,CAAWE,MAAX,CAAkBoH,MAAlB,KAA6B,CAA7B,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAI,MAAA,OAAO,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAJ,CArCJ,CAXF,CADF,CALF,CADF,CAlwC0B;;AAAA,SAk0C5ByM,eAl0C4B,GAk0CV,MAAM;AACtB,YAAM;AAAEhS,QAAAA,QAAF;AAAYpB,QAAAA,WAAZ;AAAyBE,QAAAA,qBAAzB;AAAgDL,QAAAA,cAAhD;AAA+DU,QAAAA,SAA/D;AAAyEnC,QAAAA;AAAzE,UAA8F,KAAKiB,KAAzG;AACA,YAAMgU,KAAK,GAAGjS,QAAQ,CAACW,MAAT,KAAoB,KAAlC;AAEA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,KAAK,EAAE;AAAEuR,UAAAA,IAAI,EAAE,CAAR;AAAW9D,UAAAA,SAAS,EAAE,MAAtB;AAA8BzE,UAAAA,OAAO,EAAE;AAAvC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAI,QAAA,SAAS,EAAC,cAAd;AAA6B,QAAA,IAAI,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAG,YAAW,KAAK1L,KAAL,CAAWC,SAAX,KAAyB,IAAzB,GAAgC,QAAhC,GAA2C,EAAG,EAA3F;AAA8F,QAAA,OAAO,EAAE,MAAM,KAAKsE,QAAL,CAAc;AAAEtE,UAAAA,SAAS,EAAE;AAAb,SAAd,CAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,eAIE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAG,YAAW,KAAKD,KAAL,CAAWC,SAAX,KAAyB,WAAzB,GAAuC,QAAvC,GAAkD,EAAG,EAAlG;AAAqG,QAAA,OAAO,EAAE,MAAM,KAAKsE,QAAL,CAAc;AAAEtE,UAAAA,SAAS,EAAE;AAAb,SAAd,CAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,CAJF,eAOA;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAG,YAAW,KAAKD,KAAL,CAAWC,SAAX,KAAyB,YAAzB,GAAwC,QAAxC,GAAmD,EAAG,EAAnG;AAAsG,QAAA,OAAO,EAAE,MAAM,KAAKsE,QAAL,CAAc;AAAEtE,UAAAA,SAAS,EAAE;AAAb,SAAd,CAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CAPA,CAFF,eAaE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,QAAQ,EAAE,KAAKiH,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKlH,KAAL,CAAWC,SAAX,KAAyB,IAAzB,iBACC,uDACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,8BAA7B;AAA4D,QAAA,KAAK,EAAE8B,QAAQ,CAACC,OAA5E;AAAqF,QAAA,QAAQ,EAAGmF,CAAD,IAAO,KAAKlB,iBAAL,CAAuB,SAAvB,EAAkCkB,CAAC,CAACmJ,MAAF,CAAS1O,KAA3C,CAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,eAKE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,8BAA7B;AAA4D,QAAA,KAAK,EAAEG,QAAQ,CAACE,SAA5E;AAAuF,QAAA,QAAQ,EAAGkF,CAAD,IAAO,KAAKlB,iBAAL,CAAuB,WAAvB,EAAoCkB,CAAC,CAACmJ,MAAF,CAAS1O,KAA7C,CAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CALF,eASE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAQ,QAAA,SAAS,EAAC,8BAAlB;AAAiD,QAAA,KAAK,EAAEG,QAAQ,CAACM,SAAjE;AAA4E,QAAA,QAAQ,EAAG8E,CAAD,IAAO,KAAKlB,iBAAL,CAAuB,WAAvB,EAAoCkB,CAAC,CAACmJ,MAAF,CAAS1O,KAA7C,CAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CAFF,CATF,eAgBE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,8BAA7B;AAA4D,QAAA,KAAK,EAAEG,QAAQ,CAACQ,MAA5E;AAAsF,QAAA,KAAK,EAAE;AAAE2R,UAAAA,eAAe,EAAE;AAAnB,SAA7F;AAA0H,QAAA,QAAQ,MAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAhBF,CADF,eAsBE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,WAAW,EAAC,iBAHd;AAIE,QAAA,GAAG,EAAE,KAAK3Q,gBAJZ;AAKE,QAAA,KAAK,EAAExB,QAAQ,CAACO,QALlB;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,OAAO,EAAE,MAAM,KAAK+M,WAAL,CAAiB,UAAjB,CAPjB;AAQE,QAAA,KAAK,EAAE;AAAE8B,UAAAA,MAAM,EAAE;AAAV,SART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAWE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,SAAS,EAAC,kCAAlB;AAAqD,QAAA,IAAI,EAAC,QAA1D;AAAmE,QAAA,OAAO,EAAE,MAAM,KAAK9B,WAAL,CAAiB,UAAjB,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAXF,CAFF,CADF,eAmBE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AACE,QAAA,SAAS,EAAC,8BADZ;AAEE,QAAA,KAAK,EAAEtN,QAAQ,CAACW,MAFlB;AAGE,QAAA,QAAQ,EAAGyE,CAAD,IAAO,KAAKlB,iBAAL,CAAuB,QAAvB,EAAiCkB,CAAC,CAACmJ,MAAF,CAAS1O,KAA1C,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,CAFF,CAnBF,eAgCE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,8BAFZ;AAGE,QAAA,KAAK,EAAEG,QAAQ,CAACU,MAHlB;AAIE,QAAA,QAAQ,EAAG0E,CAAD,IAAO,KAAKlB,iBAAL,CAAuB,QAAvB,EAAiCkB,CAAC,CAACmJ,MAAF,CAAS1O,KAA1C,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAhCF,eAyCE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAC,kBAA9B;AAAiD,QAAA,IAAI,EAAC,QAAtD;AAA+D,QAAA,EAAE,EAAC,eAAlE;AAAkF,QAAA,KAAK,EAAC,SAAxF;AAAkG,QAAA,OAAO,EAAEG,QAAQ,CAACS,MAAT,KAAoB,SAA/H;AAA0I,QAAA,QAAQ,EAAG2E,CAAD,IAAO,KAAKlB,iBAAL,CAAuB,QAAvB,EAAiCkB,CAAC,CAACmJ,MAAF,CAAS1O,KAA1C,CAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAO,QAAA,SAAS,EAAC,kBAAjB;AAAoC,QAAA,OAAO,EAAC,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CADF,eAKE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAC,kBAA9B;AAAiD,QAAA,IAAI,EAAC,QAAtD;AAA+D,QAAA,EAAE,EAAC,eAAlE;AAAkF,QAAA,KAAK,EAAC,SAAxF;AAAkG,QAAA,OAAO,EAAEG,QAAQ,CAACS,MAAT,KAAoB,SAA/H;AAA0I,QAAA,QAAQ,EAAG2E,CAAD,IAAO,KAAKlB,iBAAL,CAAuB,QAAvB,EAAiCkB,CAAC,CAACmJ,MAAF,CAAS1O,KAA1C,CAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAO,QAAA,SAAS,EAAC,kBAAjB;AAAoC,QAAA,OAAO,EAAC,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CALF,CAFF,CAzCF,CAtBF,eA6EE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,8BAFZ;AAGE,QAAA,KAAK,EAAEG,QAAQ,CAACY,QAHlB;AAIE,QAAA,KAAK,EAAE;AAAEuR,UAAAA,eAAe,EAAE;AAAnB,SAJT;AAKE,QAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,eAWE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,8BAFZ;AAGE,QAAA,KAAK,EAAEnS,QAAQ,CAACa,cAHlB;AAIE,QAAA,QAAQ,EAAGuE,CAAD,IAAO,KAAKlB,iBAAL,CAAuB,gBAAvB,EAAyCkB,CAAC,CAACmJ,MAAF,CAAS1O,KAAlD,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAXF,eAoBE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,8BAFZ;AAGE,QAAA,KAAK,EAAEG,QAAQ,CAACc,SAHlB;AAIE,QAAA,QAAQ,EAAGsE,CAAD,IAAO,KAAKlB,iBAAL,CAAuB,WAAvB,EAAoCkB,CAAC,CAACmJ,MAAF,CAAS1O,KAA7C,CAJnB;AAKE,QAAA,QAAQ,EAAEoS,KALZ,CAKmB;AALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CApBF,eA8BE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,8BAFZ;AAGE,QAAA,KAAK,EAAEjS,QAAQ,CAACe,UAHlB;AAIE,QAAA,QAAQ,EAAGqE,CAAD,IAAO,KAAKlB,iBAAL,CAAuB,YAAvB,EAAqCkB,CAAC,CAACmJ,MAAF,CAAS1O,KAA9C,CAJnB;AAKE,QAAA,QAAQ,EAAEoS,KALZ,CAKmB;AALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CA9BF,CA7EF,eAuHQ;AAAK,QAAA,SAAS,EAAC,wDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,wBAAhC;AAAyD,QAAA,OAAO,EAAE,MAAM,KAAKzP,QAAL,CAAc;AAAE1D,UAAAA,qBAAqB,EAAE;AAAzB,SAAd,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,CAvHR,eA6HK;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACf;AAAO,QAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF,CADF,CADF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGkB,QAAQ,CAACuB,SAAT,CAAmBuB,GAAnB,CAAuB,CAACY,IAAD,EAAOtB,GAAP,KAAe;AACrC,cAAMgQ,SAAS,GAAG1O,IAAI,CAACuE,SAAL,GAAiBvE,IAAI,CAACwE,GAAxC;AACA,cAAMmK,UAAU,GAAGpV,sBAAsB,CAACyG,IAAI,CAACO,YAAN,EAAoB,KAAKhG,KAAL,CAAWkB,SAA/B,CAAzC;AACA,cAAMgK,MAAM,GAAIiJ,SAAS,GAAGC,UAAU,CAACC,YAAvB,GAAsC,GAAvC,GAA+CF,SAAS,GAAGC,UAAU,CAACE,WAArF;AACA,cAAMC,YAAY,GAAGJ,SAAS,GAAGjJ,MAAjC;AAGA,4BACE;AAAI,UAAA,GAAG,EAAEzF,IAAI,CAACX,EAAL,IAAWX,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKsB,IAAI,CAACyD,QAAV,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKzD,IAAI,CAAC+G,eAAV,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK/G,IAAI,CAACsM,UAAV,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKtM,IAAI,CAACuM,KAAV,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKvM,IAAI,CAAC4D,GAAV,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK5D,IAAI,CAACoM,MAAV,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,KAAK,EAAEpM,IAAI,CAACuE,SAFd;AAGE,UAAA,QAAQ,EAAE7C,CAAC,IAAI,KAAKjD,oBAAL,CAA0BC,GAA1B,EAA+B,WAA/B,EAA4CgD,CAAC,CAACmJ,MAAF,CAAS1O,KAArD,CAHjB;AAIE,UAAA,KAAK,EAAE;AAAE6J,YAAAA,KAAK,EAAE;AAAT,WAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAPF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,GAAG,EAAC,GAFN;AAGE,UAAA,KAAK,EAAEhG,IAAI,CAACwE,GAHd;AAIE,UAAA,QAAQ,EAAE9C,CAAC,IAAI,KAAKjD,oBAAL,CAA0BC,GAA1B,EAA+B,KAA/B,EAAsCgD,CAAC,CAACmJ,MAAF,CAAS1O,KAA/C,CAJjB;AAKE,UAAA,KAAK,EAAE;AAAE6J,YAAAA,KAAK,EAAE;AAAT,WALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAfF,eAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,uDAFZ;AAGE,UAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAE,SAAX;AAAsB4C,YAAAA,QAAQ,EAAE,MAAhC;AAAwCkG,YAAAA,UAAU,EAAE;AAApD,WAHT;AAIE,UAAA,OAAO,EAAE,MAAM,KAAKjQ,QAAL,CAAc;AAAE/D,YAAAA,cAAc,EAAE,IAAlB;AAAwBC,YAAAA,iBAAiB,EAAE0D;AAA3C,WAAd,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,eASA;AAAK,UAAA,KAAK,EAAE;AAAEmK,YAAAA,QAAQ,EAAE,MAAZ;AAAoBmG,YAAAA,SAAS,EAAE;AAA/B,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,CAAChP,IAAI,CAACC,aAAL,IAAsB,EAAvB,EAA2B1B,IAA3B,CAAgC,IAAhC,KAAyC,GAD5C,CATA,CAxBF,eAqCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK+F,UAAU,CAACtE,IAAI,CAACgH,KAAL,IAAc,CAAf,CAAV,CAA4BrB,OAA5B,CAAoC,CAApC,CAAL,CArCE,CADF;AA2CD,OAlDA,CADH,CAfF,CADe,CA7HL,eAsMQ;AAAK,QAAA,SAAS,EAAC,wDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAtMR,CAFJ,EA8MG,KAAKpL,KAAL,CAAWC,SAAX,KAAyB,YAAzB,iBACC,uDACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AACE,QAAA,SAAS,EAAC,8BADZ;AAEE,QAAA,IAAI,EAAC,GAFP;AAGE,QAAA,KAAK,EAAE8B,QAAQ,CAACgB,MAHlB;AAIE,QAAA,QAAQ,EAAGoE,CAAD,IAAO,KAAKlB,iBAAL,CAAuB,QAAvB,EAAiCkB,CAAC,CAACmJ,MAAF,CAAS1O,KAA1C,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,eAUE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AACE,QAAA,SAAS,EAAC,8BADZ;AAEE,QAAA,IAAI,EAAC,GAFP;AAGE,QAAA,KAAK,EAAEG,QAAQ,CAACiB,MAHlB;AAIE,QAAA,QAAQ,EAAGmE,CAAD,IAAO,KAAKlB,iBAAL,CAAuB,QAAvB,EAAiCkB,CAAC,CAACmJ,MAAF,CAAS1O,KAA1C,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAVF,CADF,eAqBE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADkB,eAElB;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,KAAK,EAAEG,QAAQ,CAACkB,YAHlB;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,OAAO,EAAE,MAAM,CAAC+Q,KAAD,IAAU,KAAK3E,WAAL,CAAiB,cAAjB,CAL3B;AAME,QAAA,KAAK,EAAE;AAAE8B,UAAAA,MAAM,EAAE6C,KAAK,GAAG,aAAH,GAAmB,SAAlC;AAA6CE,UAAAA,eAAe,EAAE;AAA9D,SANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eASE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,SAAS,EAAC,kCADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,QAAQ,EAAEF,KAHZ;AAIE,QAAA,OAAO,EAAE,MAAM,KAAK3E,WAAL,CAAiB,cAAjB,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CATF,CAFkB,CADA,eAyBpB;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,KAAK,EAAEtN,QAAQ,CAACzB,YAHlB;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,OAAO,EAAE,MAAM,CAAC0T,KAAD,IAAU,KAAK3E,WAAL,CAAiB,cAAjB,CAL3B;AAME,QAAA,KAAK,EAAE;AAAE8B,UAAAA,MAAM,EAAE6C,KAAK,GAAG,aAAH,GAAmB,SAAlC;AAA6CE,UAAAA,eAAe,EAAE;AAA9D,SANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eASE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,SAAS,EAAC,kCADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,QAAQ,EAAEF,KAHZ;AAIE,QAAA,OAAO,EAAE,MAAM,KAAK3E,WAAL,CAAiB,cAAjB,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CATF,CAFF,CAzBoB,eAiDE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,8BAFZ;AAGE,QAAA,KAAK,EAAEtN,QAAQ,CAACmB,cAHlB;AAIE,QAAA,QAAQ,EAAGiE,CAAD,IAAO,KAAKlB,iBAAL,CAAuB,gBAAvB,EAAyCkB,CAAC,CAACmJ,MAAF,CAAS1O,KAAlD,CAJnB;AAKE,QAAA,QAAQ,EAAEoS,KALZ,CAKmB;AALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAjDF,CArBF,eAiFE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,8BAFZ;AAGE,QAAA,KAAK,EAAEjS,QAAQ,CAACqB,UAHlB;AAIE,QAAA,QAAQ,EAAG+D,CAAD,IAAO,KAAKlB,iBAAL,CAAuB,YAAvB,EAAqCkB,CAAC,CAACmJ,MAAF,CAAS1O,KAA9C,CAJnB;AAKE,QAAA,QAAQ,EAAEoS,KALZ,CAKmB;AALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,eAWE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,8BAFZ;AAGE,QAAA,KAAK,EAAEjS,QAAQ,CAACoB,gBAHlB;AAIE,QAAA,QAAQ,EAAE6Q,KAJZ,CAImB;AAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAXF,eAoBE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,8BAFZ;AAGE,QAAA,KAAK,EAAEjS,QAAQ,CAACsB,cAHlB;AAIE,QAAA,QAAQ,EAAG8D,CAAD,IAAO,KAAKlB,iBAAL,CAAuB,gBAAvB,EAAyCkB,CAAC,CAACmJ,MAAF,CAAS1O,KAAlD,CAJnB;AAKE,QAAA,QAAQ,EAAEoS,KALZ,CAKmB;AALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CApBF,CAjFF,CA/MJ,EAkUG,KAAKhU,KAAL,CAAWC,SAAX,KAAyB,WAAzB,IAAyC,KAAKgS,kBAAL,EAlU5C,CADF,EAqUG,KAAKkB,sBAAL,EArUH,eAsUE;AAAK,QAAA,SAAS,EAAC,sDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,mBAFZ;AAGE,QAAA,OAAO,EAAE,MAAM,KAAK5O,QAAL,CAAc;AAAEhE,UAAAA,QAAQ,EAAE,KAAZ;AAAmBG,UAAAA,SAAS,EAAE;AAA9B,SAAd,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CAtUF,CAbF,EA8VGC,WAAW,IAAI,KAAK4P,aAAL,EA9VlB,EA+VG1P,qBAAqB,IAAI,KAAKyQ,oBAAL,EA/V5B,EAgWG,KAAKtR,KAAL,CAAWQ,cAAX,IAA6B,KAAKiP,gBAAL,EAhWhC,CADF,CADF,CADF;AA0WD,KAhrD2B;;AAAA,SAirD9BiF,kBAjrD8B,GAirDT,MAAM;AAAA;;AACzB,YAAMhN,CAAC,GAAG,KAAK1H,KAAL,CAAWoB,aAArB;AACA,UAAI,CAACsG,CAAL,EAAQ,OAAO,IAAP;AAER,0BACE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA4CA,CAAC,CAAC1F,OAA9C,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,SAAS,EAAC,0BAAlB;AAA6C,QAAA,OAAO,EAAE,MAAM,KAAK2F,gBAAL,CAAsBD,CAAtB,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,QAAA,SAAS,EAAC,wBAAlB;AAA2C,QAAA,OAAO,EAAE,MAAM,KAAKI,cAAL,CAAoBJ,CAApB,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,CAFF,CADF,eAQE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA1B,OAA4CA,CAAC,CAACpF,QAA9C,CADF,eAEE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA1B,OAAwCoF,CAAC,CAACzF,SAA1C,CAFF,eAGE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA1B,OAA0CyF,CAAC,CAACnF,MAA5C,CAHF,CARF,eAaE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA1B,eAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzC,EAAgDmF,CAAC,CAAC3E,MAAlD,CADF,eAEE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA1B,eAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzC,EAAgD2E,CAAC,CAAC1E,MAAlD,CAFF,CAbF,eAiBE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjBF,eAkBE;AAAO,QAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eACoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADpB,eACwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADxC,eACoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADpD,eACuE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADvE,CADF,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACG0E,CAAC,CAACpE,SADL,iDACG,aAAauB,GAAb,CAAiB,CAACY,IAAD,EAAOyL,CAAP,kBAChB;AAAI,QAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKzL,IAAI,CAACyD,QAAV,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKzD,IAAI,CAAC+G,eAAV,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK/G,IAAI,CAACwE,GAAV,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKxE,IAAI,CAACuE,SAAV,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKvE,IAAI,CAACgH,KAAV,CALF,CADD,CADH,CANF,CAlBF,eAoCE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA5B,OAA2C/E,CAAC,CAAC5E,UAA7C,CApCF,eAqCE;AAAQ,QAAA,SAAS,EAAC,wBAAlB;AAA2C,QAAA,OAAO,EAAE,MAAM,KAAKyB,QAAL,CAAc;AAAEpD,UAAAA,WAAW,EAAE;AAAf,SAAd,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBArCF,CADF;AAyCD,KA9tD6B;AAAA;;AAiE5BwT,EAAAA,iBAAiB,GAAG;AAClBvW,IAAAA,iBAAiB,CAACwW,IAAlB;AACA,SAAK7P,WAAL;AACA,SAAKE,cAAL;AACA,SAAKC,aAAL;AACA,SAAKC,kBAAL;AACA,SAAKC,iBAAL;AACA,SAAKX,cAAL;AACD;;AAsBHoQ,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,UAAMC,aAAa,GAAGD,SAAS,CAAChT,QAAV,CAAmBuB,SAAnB,IAAgC,EAAtD;AACA,UAAM2R,aAAa,GAAG,KAAKjV,KAAL,CAAW+B,QAAX,CAAoBuB,SAApB,IAAiC,EAAvD;;AACA,QAAI0R,aAAa,CAAC1N,MAAd,KAAyB2N,aAAa,CAAC3N,MAA3C,EAAmD;AACjD,YAAM4N,gBAAgB,GAAG,EAAzB;AACA,OAAC,KAAKlV,KAAL,CAAWqB,cAAX,IAA6B,EAA9B,EAAkCqJ,OAAlC,CAA0CiD,EAAE,IAAI;AAC9CuH,QAAAA,gBAAgB,CAACvH,EAAE,CAAC1E,SAAJ,CAAhB,GAAiC0E,EAAjC;AACD,OAFD;AAGA,WAAKpJ,QAAL,CAAc;AACZlD,QAAAA,cAAc,EAAE4T,aAAa,CAACpQ,GAAd,CAAkB,CAACiG,EAAD,EAAK3G,GAAL;AAAA;;AAAA,iBAAc;AAC9CsG,YAAAA,GAAG,EAAEtG,GAAG,GAAG,CADmC;AAE9C8E,YAAAA,SAAS,EAAE6B,EAAE,CAAC5B,QAFgC;AAG9C4E,YAAAA,IAAI,EAAEhD,EAAE,CAAC0B,eAHqC;AAI9C5K,YAAAA,KAAK,EAAE,0BAAAsT,gBAAgB,CAACpK,EAAE,CAAC5B,QAAJ,CAAhB,gFAA+BtH,KAA/B,KAAwC,EAJD;AAK9C6E,YAAAA,QAAQ,EAAE,2BAAAyO,gBAAgB,CAACpK,EAAE,CAAC5B,QAAJ,CAAhB,kFAA+BzC,QAA/B,KAA2C,EALP;AAM9CsH,YAAAA,WAAW,EAAE,2BAAAmH,gBAAgB,CAACpK,EAAE,CAAC5B,QAAJ,CAAhB,kFAA+B6E,WAA/B,KAA8C;AANb,WAAd;AAAA,SAAlB;AADJ,OAAd;AAUD;AACF;;AA8mDCoH,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKnV,KAAL,CAAWmB,WAAX,GAAwB,KAAKuT,kBAAL,EAAxB,GAAmD,KAAK1U,KAAL,CAAWO,QAAX,GAAsB,KAAKwT,eAAL,EAAtB,GAA+C,KAAKF,gBAAL,EADrG,CADF;AAOD;;AAxuD2B;;AA2uD9B,eAAejV,UAAU,CAACmB,KAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport bsCustomFileInput from 'bs-custom-file-input';\r\nimport { db } from '../../firebase';\r\nimport { collection, getDocs, addDoc, doc, updateDoc,serverTimestamp } from 'firebase/firestore';\r\nimport { withRouter } from 'react-router-dom';\r\nimport html2canvas from 'html2canvas';\r\nimport { jsPDF } from 'jspdf';\r\nimport { recalculateTotals, getTaxDetailsFromGroup } from './calculation';\r\nimport { toWords } from 'number-to-words';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\n\r\n\r\nconst amount = 12345678;\r\nconst amountWords = `INR ${toWords(amount)} Only`;\r\n\r\nconsole.log(amountWords);\r\n\r\n\r\nclass Quote extends Component {\r\n  state = {\r\n    activeTab: 'co',\r\n    quotes: [],\r\n    customers: [],\r\n    products: [],\r\n    despatchModes: [],\r\n    paymentTerms: [],\r\n    showForm: false,\r\n    showTaxOverlay: false,\r\n    currentTaxLineIdx: null,\r\n    editingId: null,\r\n    overlayType: '',\r\n    overlaySearch: '',\r\n    productOverlayVisible: false,\r\n    productOverlaySearch: '',\r\n    selectedProductIds: [],\r\n    selectedTaxGroups: [],\r\n    taxComponents: [],\r\n    taxGroups:[],\r\n    previewMode: false,\r\n    selectedQuote: null,\r\n    breakdownItems: [], \r\n    breakdownType: 'Percentage',\r\n    breakdownSelectAll: false,\r\n    showSubProductDialog: false,\r\n    currentBreakdownIdx: null,\r\n    subProductForm: { name: '', value: '', type: 'Amount', dueDate: '' },\r\n    formData: {\r\n      quoteNo: '',\r\n      quoteDate: new Date().toISOString().split('T')[0],\r\n      quoteType: 'Standard',\r\n      customer: '',\r\n      status: 'Entered', // Static 'Entered'\r\n      choose: 'Service',\r\n      qrefNo: '',\r\n      impExp: 'None',\r\n      currency: '',\r\n      conversionRate: '',\r\n      taxAmount: '',\r\n      quoteValue: '',\r\n      billTo: '',\r\n      shipTo: '',\r\n      despatchMode: 'By Air',\r\n      paymentTerms: '',\r\n      freightCharges: '',\r\n      freighttaxAmount: '',\r\n      taxPercent: '',\r\n      packingCharges: '',\r\n      lineItems: [],\r\n    }\r\n  };\r\n  customerInputRef = React.createRef();\r\n\r\n  // Helper to format address for Bill To / Ship To\r\n  formatAddress = (addr) => {\r\n    if (!addr) return '';\r\n    if (typeof addr === 'string') return addr;\r\n    return [\r\n      addr.address,\r\n      [addr.city, addr.state, addr.country].filter(Boolean).join(', '),\r\n      addr.zip\r\n    ].filter(Boolean).join('\\n');\r\n  };\r\n\r\n  componentDidMount() {\r\n    bsCustomFileInput.init();\r\n    this.fetchQuotes();\r\n    this.fetchCustomers();\r\n    this.fetchProducts();\r\n    this.fetchDespatchModes();\r\n    this.fetchPaymentTerms();\r\n    this.fetchTaxGroups();\r\n  }\r\nhandleLineItemChange = (idx, field, value) => {\r\n  const updatedItems = [...this.state.formData.lineItems];\r\n  updatedItems[idx] = { ...updatedItems[idx], [field]: value };\r\n  const { updatedLineItems, freighttaxAmount, taxAmount, quoteValue } = recalculateTotals({\r\n    lineItems: updatedItems,\r\n    freightCharges: this.state.formData.freightCharges,\r\n    packingCharges: this.state.formData.packingCharges,\r\n    taxPercent: this.state.formData.taxPercent,\r\n    taxGroups: this.state.taxGroups\r\n  });\r\n  this.setState(prev => ({\r\n    formData: {\r\n      ...prev.formData,\r\n      lineItems: updatedLineItems,\r\n      freighttaxAmount,\r\n      taxAmount,\r\n      quoteValue\r\n    }\r\n  }));\r\n};\r\n\r\ncomponentDidUpdate(prevProps, prevState) {\r\n  const prevLineItems = prevState.formData.lineItems || [];\r\n  const currLineItems = this.state.formData.lineItems || [];\r\n  if (prevLineItems.length !== currLineItems.length) {\r\n    const prevBreakdownMap = {};\r\n    (this.state.breakdownItems || []).forEach(bi => {\r\n      prevBreakdownMap[bi.productId] = bi;\r\n    });\r\n    this.setState({\r\n      breakdownItems: currLineItems.map((li, idx) => ({\r\n        sno: idx + 1,\r\n        productId: li.itemCode,\r\n        desc: li.itemDescription,\r\n        value: prevBreakdownMap[li.itemCode]?.value || '',\r\n        lastDate: prevBreakdownMap[li.itemCode]?.lastDate || '',\r\n        subProducts: prevBreakdownMap[li.itemCode]?.subProducts || []\r\n      }))\r\n    });\r\n  }\r\n}\r\n\r\nfetchTaxGroups = async () => {\r\n  const snap = await getDocs(collection(db, 'taxGroups'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ taxGroups: data });\r\n};\r\n\r\n\r\n  fetchQuotes = async () => {\r\n    const snap = await getDocs(collection(db, 'quotes'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ quotes: data.reverse() });\r\n  };\r\n\r\n  fetchCustomers = async () => {\r\n    const snap = await getDocs(collection(db, 'customers'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ customers: data });\r\n  };\r\n\r\n  fetchProducts = async () => {\r\n    const snap = await getDocs(collection(db, 'products'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ products: data });\r\n  };\r\n  fetchDespatchModes = async () => {\r\n  const snap = await getDocs(collection(db, 'modes'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ despatchModes: data });\r\n};\r\n\r\nfetchPaymentTerms = async () => {\r\n  const snap = await getDocs(collection(db, 'paymentTerms'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ paymentTerms: data });\r\n};\r\ntoggleTaxGroupSelection = (groupName, lineIdx, checked) => {\r\n  this.setState(prev => {\r\n    const lineItems = [...prev.formData.lineItems];\r\n    const item = { ...lineItems[lineIdx] };\r\n    let taxGroupNames = Array.isArray(item.taxGroupNames) ? [...item.taxGroupNames] : [];\r\n    if (checked) {\r\n      if (!taxGroupNames.includes(groupName)) taxGroupNames.push(groupName);\r\n    } else {\r\n      taxGroupNames = taxGroupNames.filter(g => g !== groupName);\r\n    }\r\n    item.taxGroupNames = taxGroupNames;\r\n    item.taxGroupName = taxGroupNames.join(', ');\r\n    lineItems[lineIdx] = item;\r\n    const { updatedLineItems, freighttaxAmount, taxAmount, quoteValue } = recalculateTotals({\r\n      lineItems,\r\n      freightCharges: prev.formData.freightCharges,\r\n      packingCharges: prev.formData.packingCharges,\r\n      taxPercent: prev.formData.taxPercent,\r\n      taxGroups: prev.taxGroups\r\n    });\r\n\r\n    return {\r\n      formData: {\r\n        ...prev.formData,\r\n        lineItems: updatedLineItems,\r\n        freighttaxAmount,\r\n        taxAmount,\r\n        quoteValue\r\n      }\r\n    };\r\n  });\r\n};\r\n\r\nhandleInputChange = (field, value) => {\r\n  this.setState(prev => ({\r\n    formData: { ...prev.formData, [field]: value }\r\n  }), () => {\r\n    if (['freightCharges', 'taxPercent', 'packingCharges'].includes(field)) {\r\n      const { updatedLineItems, freighttaxAmount, taxAmount, quoteValue } = recalculateTotals({\r\n        lineItems: this.state.formData.lineItems,\r\n        freightCharges: this.state.formData.freightCharges,\r\n        packingCharges: this.state.formData.packingCharges,\r\n        taxPercent: this.state.formData.taxPercent,\r\n        taxGroups: this.state.taxGroups\r\n      });\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          lineItems: updatedLineItems,\r\n          freighttaxAmount,\r\n          taxAmount,\r\n          quoteValue\r\n        }\r\n      }));\r\n    }\r\n  });\r\n};\r\n\r\nhandleBreakdownSelectAll = (checked) => {\r\n  this.setState(prev => ({\r\n    breakdownSelectAll: checked,\r\n    breakdownItems: prev.breakdownItems.map(item => ({ ...item, selected: checked }))\r\n  }));\r\n};\r\nhandleBreakdownRowSelect = (idx, checked) => {\r\n  this.setState(prev => {\r\n    const items = [...prev.breakdownItems];\r\n    items[idx].selected = checked;\r\n    return { breakdownItems: items };\r\n  });\r\n};\r\n\r\n// Handler for per/amt dropdown\r\nhandleBreakdownTypeChange = (type) => {\r\n  this.setState({ breakdownType: type });\r\n};\r\n\r\n// Handler for per/amt value\r\nhandleBreakdownValueChange = (idx, value) => {\r\n  this.setState(prev => {\r\n    const items = [...prev.breakdownItems];\r\n    items[idx].value = value;\r\n    return { breakdownItems: items };\r\n  });\r\n};\r\n\r\n// Handler for last date\r\nhandleBreakdownDateChange = (idx, value) => {\r\n  this.setState(prev => {\r\n    const items = [...prev.breakdownItems];\r\n    items[idx].lastDate = value;\r\n    return { breakdownItems: items };\r\n  });\r\n};\r\nsaveBreakdownToSession = () => {\r\n  sessionStorage.setItem('breakdownItems', JSON.stringify(this.state.breakdownItems));\r\n};\r\nloadBreakdownFromSession = () => {\r\n  const data = sessionStorage.getItem('breakdownItems');\r\n  if (data) this.setState({ breakdownItems: JSON.parse(data) });\r\n};\r\n\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { editingId, formData, quotes } = this.state;\r\n    if (!formData.customer) return alert(\"Customer is required\");\r\n    if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\r\n\r\n    if (editingId) {\r\n      await updateDoc(doc(db, 'quotes', editingId), formData);\r\n    } else {\r\n      formData.quoteNo = `QT${1000 + quotes.length}`;\r\n      await addDoc(collection(db, \"quotes\"), {\r\n        ...this.state.formData,\r\n        status: \"Entered\",   \r\n        createdAt: serverTimestamp()\r\n      });\r\n\r\n    }\r\n     if (!this.isBreakdownValid()) {\r\n    return alert('Please complete the breakdown: each product\\'s subproduct totals must match the product total.');\r\n   }\r\n    this.setState({ showForm: false, editingId: null });\r\n    this.fetchQuotes();\r\n  };\r\nloadQuotePreview = (q) => {\r\n  this.setState({\r\n    selectedQuote: q,\r\n    previewMode: true\r\n  });\r\n};\r\n\r\n\r\n  loadQuoteForEdit = (quote) => {\r\n    this.setState({\r\n      formData: {\r\n        ...quote,\r\n        lineItems: Array.isArray(quote.lineItems) ? quote.lineItems : [] \r\n      },\r\n      editingId: quote.id,\r\n      showForm: true,\r\n      previewMode: false,\r\n      activeTab: 'co'\r\n    }, () => {\r\n      if (this.customerInputRef.current) {\r\n        this.customerInputRef.current.value = quote.customer;\r\n      }\r\n    });\r\n  };\r\n  \r\n\r\nconvertToOrder = async (quote) => {\r\n  await updateDoc(doc(db, \"quotes\", quote.id), {\r\n    className:\"btn btn-secondary mr-2\" ,\r\n    status: \"ConvertedToOrder\"\r\n  });\r\n  sessionStorage.setItem('quoteToConvert', JSON.stringify(quote));\r\n this.props.history.push('/panelone/Order');\r\n};\r\n\r\nshowQuotePDFWithOrg = async (quote) => {\r\n  if (!quote || !Array.isArray(quote.lineItems) || quote.lineItems.length === 0) {\r\n    alert(\"Quote data is incomplete.\");\r\n    return;\r\n  }\r\n\r\n  // 1. Fetch org and customer data\r\n  const orgSnap = await getDocs(collection(db, 'businessGroups'));\r\n  const org = orgSnap.docs[0]?.data() || {};\r\n  const customer = this.state.customers.find(\r\n    c => c.custshortName === quote.customer || c.custname === quote.customer\r\n  ) || {};\r\n\r\n  // GST State Map for Place of Supply\r\n  const gstStateMap = {\r\n    \"01\": \"Jammu & Kashmir\", \"02\": \"Himachal Pradesh\", \"03\": \"Punjab\", \"04\": \"Chandigarh\",\r\n    \"05\": \"Uttarakhand\", \"06\": \"Haryana\", \"07\": \"Delhi\", \"08\": \"Rajasthan\", \"09\": \"Uttar Pradesh\",\r\n    \"10\": \"Bihar\", \"11\": \"Sikkim\", \"12\": \"Arunachal Pradesh\", \"13\": \"Nagaland\", \"14\": \"Manipur\",\r\n    \"15\": \"Mizoram\", \"16\": \"Tripura\", \"17\": \"Meghalaya\", \"18\": \"Assam\", \"19\": \"West Bengal\",\r\n    \"20\": \"Jharkhand\", \"21\": \"Odisha\", \"22\": \"Chhattisgarh\", \"23\": \"Madhya Pradesh\", \"24\": \"Gujarat\",\r\n    \"25\": \"Daman and Diu\", \"26\": \"Dadra and Nagar Haveli\", \"27\": \"Maharashtra\", \"28\": \"Andhra Pradesh (Old)\",\r\n    \"29\": \"Karnataka\", \"30\": \"Goa\", \"31\": \"Lakshadweep\", \"32\": \"Kerala\", \"33\": \"Tamil Nadu\",\r\n    \"34\": \"Puducherry\", \"35\": \"Andaman and Nicobar Islands\", \"36\": \"Telangana\", \"37\": \"Andhra Pradesh\",\r\n    \"97\": \"Other Territory\"\r\n  };\r\n\r\n  // Helper for Place of Supply\r\n  const getPlaceOfSupply = (gstin) => {\r\n    if (!gstin || gstin.length < 2) return '';\r\n    const code = gstin.substring(0, 2);\r\n    const state = gstStateMap[code];\r\n    return state ? `${code} - ${state}` : '';\r\n  };\r\n\r\n  // 2. Enrich line items\r\n  const enrichedItems = quote.lineItems.map(item => {\r\n    const product = this.state.products.find(p => p.productId === item.itemCode) || {};\r\n    return {\r\n      ...item,\r\n      ptshortName: product.ptshortName || '',\r\n      hsnCode: product.hsnCode || '',\r\n      uom: product.stockingUOM || '',\r\n      cgst: item.cgst || 0,\r\n      sgst: item.sgst || 0,\r\n      igst: item.igst || 0,\r\n      taxGroupNames: item.taxGroupNames || (item.taxGroupName ? item.taxGroupName.split(',').map(s => s.trim()) : [])\r\n    };\r\n  });\r\n\r\n  // 3. Subtotal (without tax)\r\n  const subtotal = enrichedItems.reduce((sum, item) => sum + ((parseFloat(item.unitPrice) || 0) * (parseFloat(item.qty) || 0)), 0);\r\n  const freightCharges = parseFloat(quote.freightCharges || 0);\r\n  const freightTax = parseFloat(quote.freighttaxAmount || 0);\r\n  const totalTaxAmount = parseFloat(quote.taxAmount || 0);\r\n  const grandTotal = parseFloat(quote.quoteValue || (subtotal + totalTaxAmount));\r\n  const amountWords = `INR ${toWords(Math.floor(grandTotal))} Only`;\r\n\r\n  // 4. Tax breakdown by group\r\n  let taxBreakdown = {};\r\n  let taxGroupDetails = [];\r\n  let sno = 1;\r\n  enrichedItems.forEach(item => {\r\n    const qty = parseFloat(item.qty || 0);\r\n    const unitPrice = parseFloat(item.unitPrice || 0);\r\n    const base = qty * unitPrice;\r\n    (item.taxGroupNames || []).forEach(tgName => {\r\n      // Find group in taxGroups\r\n      const group = (this.state.taxGroups || []).find(g => g.groupName === tgName);\r\n      if (group) {\r\n        group.lineItems.forEach(li => {\r\n          const key = `${tgName} - ${li.component} (${li.percentOrAmt}${li.type === 'Amount' ? '' : '%'})`;\r\n          let taxAmt = 0;\r\n          if (li.type === 'Amount') taxAmt = parseFloat(li.percentOrAmt || 0);\r\n          else taxAmt = (base * parseFloat(li.percentOrAmt || 0)) / 100;\r\n          taxBreakdown[key] = (taxBreakdown[key] || 0) + taxAmt;\r\n          taxGroupDetails.push({\r\n            sno: sno++,\r\n            group: tgName,\r\n            peramt: `${li.percentOrAmt}${li.type === 'Amount' ? '' : '%'}`,\r\n            taxAmt: taxAmt.toFixed(2)\r\n          });\r\n        });\r\n      }\r\n    });\r\n    // Legacy support for cgst/sgst/igst\r\n    if (item.cgst) {\r\n      const key = `CGST ${item.cgst}%`;\r\n      const taxAmt = (base * item.cgst) / 100;\r\n      taxBreakdown[key] = (taxBreakdown[key] || 0) + taxAmt;\r\n      taxGroupDetails.push({\r\n        sno: sno++,\r\n        group: key,\r\n        peramt: `${item.cgst}%`,\r\n        taxAmt: taxAmt.toFixed(2)\r\n      });\r\n    }\r\n    if (item.sgst) {\r\n      const key = `SGST ${item.sgst}%`;\r\n      const taxAmt = (base * item.sgst) / 100;\r\n      taxBreakdown[key] = (taxBreakdown[key] || 0) + taxAmt;\r\n      taxGroupDetails.push({\r\n        sno: sno++,\r\n        group: key,\r\n        peramt: `${item.sgst}%`,\r\n        taxAmt: taxAmt.toFixed(2)\r\n      });\r\n    }\r\n    if (item.igst) {\r\n      const key = `IGST ${item.igst}%`;\r\n      const taxAmt = (base * item.igst) / 100;\r\n      taxBreakdown[key] = (taxBreakdown[key] || 0) + taxAmt;\r\n      taxGroupDetails.push({\r\n        sno: sno++,\r\n        group: key,\r\n        peramt: `${item.igst}%`,\r\n        taxAmt: taxAmt.toFixed(2)\r\n      });\r\n    }\r\n  });\r\n  if (freightTax > 0) {\r\n    taxBreakdown[\"Freight Tax\"] = freightTax;\r\n    taxGroupDetails.push({\r\n      sno: sno++,\r\n      group: \"Freight Tax\",\r\n      peramt: \"-\",\r\n      taxAmt: freightTax.toFixed(2)\r\n    });\r\n  }\r\n\r\n  // 5. Milestone breakdown (with subproducts)\r\n  const { breakdownItems, breakdownType } = this.state;\r\n\r\n  // 6. Build HTML for PDF\r\n  const container = document.createElement('div');\r\n  container.id = 'pdf-preview-container';\r\n  container.style.width = '794px';\r\n  container.style.padding = '40px';\r\n  container.style.fontFamily = 'Arial';\r\n\r\n  // 7. Main PDF content\r\n  container.innerHTML = `\r\n    <div style=\"display:flex; justify-content:space-between; align-items:center;\">\r\n      <img src=\"${org.logoUrl || ''}\" style=\"height:50px;\" />\r\n      <div style=\"font-size:18px; font-weight:bold;\">QUOTATION</div>\r\n    </div>\r\n    <hr/>\r\n    <div style=\"display:flex; justify-content:space-between; font-size:11px;\">\r\n      <div style=\"line-height:1.5; width:50%;\">\r\n        <b>${org.bgName || ''}</b><br/>\r\n        ${org.address || ''}<br/>\r\n        <b>Email:</b> ${org.email || ''}<br/>\r\n        <b>Website:</b> ${org.website || ''}<br/>\r\n        <b>GSTIN:</b> ${org.gstin || ''}<br/>\r\n        <b>Mobile:</b> ${org.mobile || ''}<br/>\r\n        <b>CIN:</b> ${org.cin || ''}\r\n      </div>\r\n      <table style=\"font-size:11px; text-align:left;\">\r\n        <tr><td><b>Quote No</b></td><td>: ${quote.quoteNo}</td></tr>\r\n        <tr><td><b>Quote Date</b></td><td>: ${quote.quoteDate}</td></tr>\r\n        <tr><td><b>Currency</b></td><td>: ${quote.currency || 'INR'}</td></tr>\r\n        <tr><td><b>Despatch</b></td><td>: ${quote.despatchMode || ''}</td></tr>\r\n      </table>\r\n    </div>\r\n\r\n    <div style=\"margin-top:15px; display:flex; justify-content:space-between; font-size:11px;\">\r\n      <div style=\"width:48%;\">\r\n        <b style=\"background:#011b56; color:#fff; display:block; padding:4px;\">Bill To</b>\r\n        <div style=\"border:1px solid #ccc; padding:6px;\">\r\n         <b>${quote.customer || ''}</b><br/>\r\n          ${quote.billTo?.replace(/\\n/g, '<br/>') || ''}\r\n        </div>\r\n        <div style=\"font-size:10px; margin-top:6px;\">\r\n            <b>GSTIN:</b> ${customer.gstin || ''}<br/>\r\n            <b>Email:</b> ${customer.email || ''}<br/>\r\n            <b>Contact:</b> ${customer.contactPerson || ''}<br/>\r\n            <b>Phone:</b> ${customer.phone || ''}\r\n        </div>\r\n      </div>\r\n      <div style=\"width:48%;\">\r\n        <b style=\"background:#011b56; color:#fff; display:block; padding:4px;\">Ship To</b>\r\n        <div style=\"border:1px solid #ccc; padding:6px;\">\r\n         <b>${quote.customer || ''}</b><br/>\r\n          ${quote.shipTo?.replace(/\\n/g, '<br/>') || ''}\r\n        </div>\r\n        <div style=\"font-size:10px; margin-top:6px;\">\r\n          <b>Place of Supply:</b> ${getPlaceOfSupply(customer.gstin || '')}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <table style=\"width:100%; border-collapse:collapse; margin-top:20px; font-size:10px;\">\r\n      <thead>\r\n        <tr style=\"background:#f4f6fa;\">\r\n          <th style=\"border:1px solid #011b56;\">Item Code</th>\r\n          <th style=\"border:1px solid #011b56;\">Description</th>\r\n          <th style=\"border:1px solid #011b56;\">HSN</th>\r\n          <th style=\"border:1px solid #011b56;\">UOM</th>\r\n          <th style=\"border:1px solid #011b56;\">Qty</th>\r\n          <th style=\"border:1px solid #011b56;\">Unit Price</th>\r\n          <th style=\"border:1px solid #011b56;\">GST%</th>\r\n          <th style=\"border:1px solid #011b56;\">Item Total</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        ${enrichedItems.map(item => {\r\n          const gstLabel = (item.taxGroupNames && item.taxGroupNames.length)\r\n            ? item.taxGroupNames.join(', ')\r\n            : (item.taxGroupName || item.taxId || '-');\r\n          return `\r\n            <tr>\r\n              <td style=\"border:1px solid #011b56;\">${item.itemCode}</td>\r\n              <td style=\"border:1px solid #011b56;\">${item.itemDescription}</td>\r\n              <td style=\"border:1px solid #011b56;\">${item.hsnCode}</td>\r\n              <td style=\"border:1px solid #011b56;\">${item.uom}</td>\r\n              <td style=\"border:1px solid #011b56;\">${item.qty}</td>\r\n              <td style=\"border:1px solid #011b56;\">${item.unitPrice}</td>\r\n              <td style=\"border:1px solid #011b56;\">${gstLabel}</td>\r\n              <td style=\"border:1px solid #011b56;\">${item.total}</td>\r\n            </tr>`;\r\n        }).join('')}\r\n        <tr>\r\n          <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>Subtotal</b></td>\r\n          <td style=\"border:1px solid #011b56;\"><b>${subtotal.toFixed(2)}</b></td>\r\n        </tr>\r\n        ${Object.entries(taxBreakdown).map(([key, val]) => `\r\n          <tr>\r\n            <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>${key}</b></td>\r\n            <td style=\"border:1px solid #011b56;\">${val.toFixed(2)}</td>\r\n          </tr>\r\n        `).join('')}\r\n        <tr>\r\n          <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>Total Tax Amount</b></td>\r\n          <td style=\"border:1px solid #011b56;\"><b>${totalTaxAmount.toFixed(2)}</b></td>\r\n        </tr>\r\n        <tr>\r\n          <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>Grand Total</b></td>\r\n          <td style=\"border:1px solid #011b56;\"><b>${grandTotal.toFixed(2)}</b></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <div style=\"margin-top:8px; font-size:11px;\"><b>Amount in Words:</b> ${amountWords}</div>\r\n    <div style=\"margin-top:20px; text-align:right; font-size:10px;\">Printed on ${new Date().toLocaleString()}</div>\r\n  `;\r\n\r\n  document.body.appendChild(container);\r\n  const canvas = await html2canvas(container, { scale: 2, useCORS: true });\r\n  const imgData = canvas.toDataURL('image/png');\r\n  const pdf = new jsPDF('p', 'pt', 'a4');\r\n  const width = 595.28;\r\n  const height = canvas.height * width / canvas.width;\r\n  pdf.addImage(imgData, 'PNG', 0, 0, width, height);\r\n  document.body.removeChild(container);\r\n\r\n  // ...existing code...\r\n\r\n// 8. Milestone breakdown and tax breakdown on the same page, same style as quote table\r\nif (breakdownItems && breakdownItems.length > 0) {\r\n  pdf.addPage();\r\n\r\n  let milestoneRows = breakdownItems.filter(bi => bi.selected !== false).map((item, idx) => {\r\n    const mainItem = enrichedItems.find(li => li.itemCode === item.productId);\r\n    const mainItemTotal = mainItem ? (parseFloat(mainItem.total) || 0) : 0;\r\n    return `\r\n      <tr>\r\n        <td style=\"border:1px solid #011b56;\">${item.sno}</td>\r\n        <td style=\"border:1px solid #011b56;\">${item.productId}</td>\r\n        <td style=\"border:1px solid #011b56;\">${item.desc}</td>\r\n        <td style=\"border:1px solid #011b56;\">${item.value} ${breakdownType === 'Percentage' ? '%' : '₹'}</td>\r\n        <td style=\"border:1px solid #011b56;\">${item.lastDate}</td>\r\n        <td style=\"border:1px solid #011b56;\">${mainItemTotal.toFixed(2)}</td>\r\n      </tr>\r\n      ${(item.subProducts || []).map(sp => {\r\n        let spTotal = 0;\r\n        if (sp.type === 'Amount') spTotal = parseFloat(sp.value || 0);\r\n        else if (sp.type === 'Percentage') spTotal = mainItemTotal * parseFloat(sp.value || 0) / 100;\r\n        return `\r\n          <tr style=\"background: #f9f9f9;\">\r\n            <td style=\"border:1px solid #011b56;\"></td>\r\n            <td style=\"border:1px solid #011b56;\" colspan=\"2\" style=\"padding-left: 40px;\">→ ${sp.name}</td>\r\n            <td style=\"border:1px solid #011b56;\">${sp.type === 'Amount' ? `₹${sp.value}` : `${sp.value}%`}</td>\r\n            <td style=\"border:1px solid #011b56;\">${sp.dueDate}</td>\r\n            <td style=\"border:1px solid #011b56;\">${spTotal.toFixed(2)}</td>\r\n          </tr>\r\n        `;\r\n      }).join('')}\r\n    `;\r\n  }).join('');\r\n  let taxRows = taxGroupDetails.map(row => {\r\n  return `\r\n    <tr>\r\n      <td style=\"border:1px solid #011b56;\">${row.sno}</td>\r\n      <td style=\"border:1px solid #011b56;\">${row.group}</td>\r\n      <td style=\"border:1px solid #011b56;\">${row.peramt}</td>\r\n      <td style=\"border:1px solid #011b56;\">${row.taxAmt}</td>\r\n    </tr>\r\n  `;\r\n}).join('');\r\n\r\n\r\n  let combinedHtml = `\r\n    <div style=\"font-family:Arial; padding:40px; width:100%;\">\r\n      <h3 style=\"margin-bottom:10px; font-size:16px;\">Milestone Breakdown</h3>\r\n      <table style=\"width:100%; border-collapse:collapse; margin-top:20px; font-size:10px;\">\r\n        <thead>\r\n          <tr style=\"background:#f4f6fa;\">\r\n            <th style=\"border:1px solid #011b56;\">S.No</th>\r\n            <th style=\"border:1px solid #011b56;\">Item ID</th>\r\n            <th style=\"border:1px solid #011b56;\">Desc</th>\r\n            <th style=\"border:1px solid #011b56;\">${breakdownType}</th>\r\n            <th style=\"border:1px solid #011b56;\">Last Date</th>\r\n            <th style=\"border:1px solid #011b56;\">Item Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          ${milestoneRows}\r\n        </tbody>\r\n      </table>\r\n      <h3 style=\"margin-bottom:10px; margin-top:30px; font-size:16px;\">Tax Breakdown</h3>\r\n      <table style=\"width:100%; border-collapse:collapse; margin-top:20px; font-size:10px;\">\r\n        <thead>\r\n          <tr style=\"background:#f4f6fa;\">\r\n            <th style=\"border:1px solid #011b56;\">S.No</th>\r\n            <th style=\"border:1px solid #011b56;\">Tax Group</th>\r\n            <th style=\"border:1px solid #011b56;\">Per/Amt</th>\r\n            <th style=\"border:1px solid #011b56;\">Tax Amt</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          ${taxRows}\r\n          <tr>\r\n            <td colspan=\"3\" style=\"text-align:right; border:1px solid #011b56;\"><b>Total Tax Amount</b></td>\r\n            <td style=\"border:1px solid #011b56;\"><b>${totalTaxAmount.toFixed(2)}</b></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div style=\"margin-top:40px; text-align:right; font-size:11px;\">\r\n        For ${org.bgName || ''}<br/>\r\n        Authorized Signatory\r\n      </div>\r\n    </div>\r\n  `;\r\n\r\n  const combinedContainer = document.createElement('div');\r\n  combinedContainer.id = 'pdf-preview-container';\r\n  combinedContainer.style.width = '794px';\r\n  combinedContainer.style.padding = '40px';\r\n  combinedContainer.style.fontFamily = 'Arial';\r\n  combinedContainer.style.fontSize = '10px'; // Ensure same font size as first page\r\n  combinedContainer.innerHTML = combinedHtml;\r\n  document.body.appendChild(combinedContainer);\r\n\r\n  const combinedCanvas = await html2canvas(combinedContainer, { scale: 2, useCORS: true });\r\n  const combinedImg = combinedCanvas.toDataURL('image/png');\r\n  pdf.addImage(combinedImg, 'PNG', 0, 0, width, combinedCanvas.height * width / combinedCanvas.width);\r\n\r\n  document.body.removeChild(combinedContainer);\r\n\r\n}\r\n\r\n  pdf.setFontSize(11);\r\n  pdf.text(`For ${org.bgName || ''}`, width - 200, 780);\r\n  pdf.text('Authorized Signatory', width - 200, 800);\r\n\r\n  // 11. Show PDF\r\n  const blob = pdf.output('blob');\r\n  const url = URL.createObjectURL(blob);\r\n  const newWin = window.open();\r\n  newWin.document.write(`\r\n    <html><head><title>Quote PDF Preview</title></head>\r\n    <body style=\"margin:0;\">\r\n      <iframe width=\"100%\" height=\"100%\" style=\"border:none;\" src=\"${url}\"></iframe>\r\n      <button onclick=\"document.querySelector('iframe').contentWindow.print()\" style=\"position:fixed;top:10px;right:110px;\"></button>\r\n      <a href=\"${url}\" download=\"Quote_${quote.quoteNo || 'PDF'}.pdf\" style=\"position:fixed;top:10px;right:10px;\"></a>\r\n    </body></html>\r\n  `);\r\n  newWin.document.close();\r\n};\r\n\r\n  showOverlay = (type) => this.setState({ overlayType: type, overlaySearch: '' });\r\n  hideOverlay = () => this.setState({ overlayType: '', overlaySearch: '' });\r\n\r\n\r\n  selectOverlayValue = (value) => {\r\n    if (this.state.overlayType === 'customer') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          customer: value.custname || value.custcode || '', // Use custname or custcode\r\n          billTo: this.formatAddress(value.billTo),\r\n          shipTo: this.formatAddress(value.shipTo),\r\n          currency: value.currency || '',\r\n          // despatchMode: value.despatchMode || '', // No auto-fill for despatch mode\r\n          // paymentTerms: value.paymentTerms || '' // No auto-fill for payment terms\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }), () => {\r\n        if (this.customerInputRef.current) {\r\n          this.customerInputRef.current.value = value.custname || value.custcode || '';\r\n        }\r\n      });\r\n    }\r\n  };\r\nrenderTaxOverlay = () => {\r\n  const { taxGroups, currentTaxLineIdx, formData } = this.state;\r\n  if (currentTaxLineIdx === null) return null;\r\n\r\n  const item = formData.lineItems[currentTaxLineIdx];\r\n  const selected = new Set(item.taxGroupNames || []);\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'absolute',\r\n      zIndex: 9999,\r\n      top: '10%',\r\n      left: '20%',\r\n      background: '#fff',\r\n      border: '1px solid #ccc',\r\n      padding: '20px',\r\n      boxShadow: '0 0 10px rgba(0,0,0,0.3)',\r\n      width: '800px',\r\n      maxHeight: '60vh',\r\n      overflowY: 'auto'\r\n    }}>\r\n      <h5>Select Tax Groups</h5>\r\n      <table className=\"table table-sm table-bordered\">\r\n        <thead>\r\n          <tr><th></th><th>Group</th><th>Type</th><th>%</th></tr>\r\n        </thead>\r\n        <tbody>\r\n          {taxGroups.map(tg => (\r\n            <tr key={tg.groupName}>\r\n              <td>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selected.has(tg.groupName)}\r\n                  onChange={e => this.toggleTaxGroupSelection(tg.groupName, currentTaxLineIdx, e.target.checked)}\r\n                />\r\n              </td>\r\n              <td>{tg.groupName}</td>\r\n              <td>{tg.lineItems.map(li => li.component).join(', ')}</td>\r\n              <td>{tg.lineItems.map(li => li.percentOrAmt).join(', ')}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"text-right mt-2\">\r\n        <button type=\"button\" className=\"btn btn-sm btn-primary\" onClick={() => this.setState({ showTaxOverlay: false })}>\r\n          Done\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n renderOverlay = () => {\r\n  const { overlayType, overlaySearch, customers, despatchModes, paymentTerms } = this.state;\r\n\r\n  const getFilteredRows = (list, nameKey = 'name', codeKey = 'shortName') =>\r\n    list.filter(item =>\r\n      (item[nameKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()) ||\r\n      (item[codeKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase())\r\n    );\r\n\r\n  const handleSelect = (item) => {\r\n    if (overlayType === 'customer') {\r\n      this.selectOverlayValue(item);\r\n    } else if (overlayType === 'despatchMode') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          despatchMode: item.name\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }));\r\n    } else if (overlayType === 'paymentTerms') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          paymentTerms: item.name\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  let title = '';\r\n  let headers = [];\r\n  let rows = [];\r\n\r\n  if (overlayType === 'customer') {\r\n    title = 'Select Customer';\r\n    headers = ['Name', 'Code', 'Short Name'];\r\n    rows = getFilteredRows(customers, 'custname', 'custcode');\r\n  } else if (overlayType === 'despatchMode') {\r\n    title = 'Select Despatch Mode';\r\n    headers = ['Name', 'Short Name'];\r\n    rows = getFilteredRows(despatchModes);\r\n  } else if (overlayType === 'paymentTerms') {\r\n    title = 'Select Payment Terms';\r\n    headers = ['Name', 'Short Name'];\r\n    rows = getFilteredRows(paymentTerms);\r\n  } else {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"custom-overlay\">\r\n      <div className=\"custom-overlay-content\">\r\n        <div className=\"custom-overlay-title\">{title}</div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control mb-2\"\r\n          placeholder={`Search ${overlayType}...`}\r\n          value={overlaySearch}\r\n          onChange={e => this.setState({ overlaySearch: e.target.value })}\r\n        />\r\n        <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n          <table className=\"table table-bordered table-sm\">\r\n            <thead>\r\n              <tr>\r\n                {headers.map((h, i) => <th key={i}>{h}</th>)}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {rows.map((item, i) => (\r\n                <tr key={item.id || i} onClick={() => handleSelect(item)} style={{ cursor: 'pointer' }}>\r\n                  {headers.map((h, j) => (\r\n                    <td key={j}>\r\n                      {overlayType === 'customer'\r\n                        ? h === 'Name' ? item.custname\r\n                          : h === 'Code' ? item.custcode\r\n                          : item.custshortName\r\n                        : h === 'Name' ? item.name\r\n                          : item.shortName}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n              {rows.length === 0 && (\r\n                <tr>\r\n                  <td colSpan={headers.length} className=\"text-center\">No records found</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <button className=\"btn btn-secondary btn-sm mt-2\" onClick={this.hideOverlay}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n  renderProductOverlay = () => {\r\n    const { products, productOverlaySearch, selectedProductIds } = this.state;\r\n    const filtered = products.filter(p =>\r\n      (p.ptshortName || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) ||\r\n      (p.ptdescription || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) ||\r\n      (p.itemCode || '').toLowerCase().includes(productOverlaySearch.toLowerCase())\r\n    );\r\n    return (\r\n      <div className=\"custom-overlay\">\r\n        <div className=\"custom-overlay-content\">\r\n          <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n            <div className=\"custom-overlay-title\">Select Products</div>\r\n            <button\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => {\r\n                const selectedProducts = products.filter(p => this.state.selectedProductIds.includes(p.id));\r\n                this.setState(prev => ({\r\n                  formData: {\r\n                    ...prev.formData,\r\n                    lineItems: [\r\n                      ...prev.formData.lineItems,\r\n                      ...selectedProducts\r\n                        .filter(p => !prev.formData.lineItems.some(item => item.id === p.id))\r\n                        .map(p => ({\r\n                          id: p.id,\r\n                          itemCode: p.productId || '',\r\n                          itemDescription: p.ptdescription || '',\r\n                          itemType: p.itemType || '',\r\n                          materialType: p.materialType || '',\r\n                          onHand: p.onHand || 0,\r\n                          taxGroup: p.taxGroup || '',\r\n                          taxGroupName: p.taxGroup || '',\r\n                          custPartNo: p.custPartNo || '', \r\n                          hsnNo: p.hsnNo || '',\r\n                          unitPrice: p.unitPrice || 0,\r\n                          qty: 1,\r\n                          total: (p.unitPrice || 0).toFixed(2)\r\n                        }))\r\n                    ]\r\n                  },\r\n                  productOverlayVisible: false,\r\n                  selectedProductIds: []\r\n                }));\r\n              }}\r\n            >Add Selected</button>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Search products...\"\r\n            value={productOverlaySearch}\r\n            onChange={e => this.setState({ productOverlaySearch: e.target.value })}\r\n          />\r\n          <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n            <table className=\"table table-bordered table-sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th></th>\r\n                  <th>Item Code</th>\r\n                  <th>Item Desc</th>\r\n                  <th>Item Type</th>\r\n                  <th>Material Type</th>\r\n                  <th>On Hand</th>\r\n                  <th>Tax Grp</th>\r\n                  <th>Cust Part No</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filtered.map(p => (\r\n                  <tr key={p.id}>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedProductIds.includes(p.id)}\r\n                        onChange={e => {\r\n                          const checked = e.target.checked;\r\n                          this.setState(prev => ({\r\n                            selectedProductIds: checked\r\n                              ? [...prev.selectedProductIds, p.id]\r\n                              : prev.selectedProductIds.filter(id => id !== p.id)\r\n                          }));\r\n                        }}\r\n                      />\r\n                    </td>\r\n                    <td>{p.productId}</td>\r\n                    <td>{p.ptdescription || ''}</td>\r\n                    <td>{p.itemType || ''}</td>\r\n                    <td>{p.materialType || ''}</td>\r\n                    <td>{p.onHand || 0}</td>\r\n                    <td>{p.taxGroup || ''}</td>\r\n                    <td>{p.custPartNo || ''}</td>\r\n                  </tr>\r\n                ))}\r\n                {filtered.length === 0 && (\r\n                  <tr>\r\n                    <td colSpan=\"8\" className=\"text-center\">No products found</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          {/* Add pagination here if needed, for now, it's just a placeholder */}\r\n          <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n            <span>Page 1 of 1</span>\r\n            <button className=\"btn btn-secondary btn-sm\" onClick={() => this.setState({ productOverlayVisible: false, selectedProductIds: [] })}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\nrenderBreakdownTab = () => {\r\n  const { breakdownItems, breakdownType, formData } = this.state;\r\n\r\n  // map item totals from lineItems (main product totals)\r\n  const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\r\n    acc[li.itemCode] = parseFloat(li.total || 0) || 0;\r\n    return acc;\r\n  }, {});\r\n  const sumOfItemTotals = Object.values(itemTotals).reduce((sum, val) => sum + val, 0);\r\n\r\n  // helper to compute subproducts sum for a given breakdownItem\r\n  const getSubProductsSum = (bi) => {\r\n    const mainTotal = itemTotals[bi.productId] || 0;\r\n    const subs = Array.isArray(bi.subProducts) ? bi.subProducts : [];\r\n    return subs.reduce((s, sp) => {\r\n      const val = parseFloat(sp.value || 0) || 0;\r\n      if (breakdownType === 'Percentage') {\r\n        return s + (mainTotal * val / 100);\r\n      }\r\n      return s + val;\r\n    }, 0);\r\n  };\r\n\r\n  const canSave = this.isBreakdownValid();\r\n\r\n  return (\r\n    <div>\r\n      <h5>Milestone Breakdown</h5>\r\n\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col\"><b>Quote Value:</b> {formData.quoteValue}</div>\r\n        <div className=\"col\"><b>Tax Amount:</b> {formData.taxAmount}</div>\r\n        <div className=\"col\"><b>Sum of Item Totals:</b> {sumOfItemTotals.toFixed(2)}</div>\r\n      </div>\r\n\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col-md-3\">\r\n          <label>Subproduct Mode</label>\r\n          <select\r\n            className=\"form-control form-control-sm\"\r\n            value={breakdownType}\r\n            onChange={e => this.handleBreakdownTypeChange(e.target.value)}\r\n          >\r\n            <option value=\"Amount\">Amount</option>\r\n            <option value=\"Percentage\">Percentage</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <table className=\"table table-bordered\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th>S.No</th>\r\n            <th>ID</th>\r\n            <th>Desc / Subproduct Name</th>\r\n            <th>Subproduct Value ({breakdownType === 'Percentage' ? '%' : '₹'})</th>\r\n            <th>Total</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {breakdownItems.map((item, idx) => {\r\n            const mainItemTotal = itemTotals[item.productId] || 0;\r\n            const subSum = getSubProductsSum(item);\r\n            const remaining = (mainItemTotal - subSum);\r\n            const subs = Array.isArray(item.subProducts) ? item.subProducts : [];\r\n\r\n            return (\r\n              <React.Fragment key={idx}>\r\n                {/* parent product row */}\r\n                <tr style={{ background: '#eef4ff' }}>\r\n                  <td>{item.sno}</td>\r\n                  <td>{item.productId}</td>\r\n                  <td>{item.desc}</td>\r\n                  <td colSpan={2}>\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                      <div>\r\n                        <small>Subproducts sum: <b>{subSum.toFixed(2)}</b></small>\r\n                        <br />\r\n                        <small>Remaining: <b style={{ color: remaining > 0.01 ? 'red' : 'green' }}>{remaining.toFixed(2)}</b></small>\r\n                      </div>\r\n                      <div>\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-sm btn-outline-primary mr-2\"\r\n                          onClick={() => this.handleAddInlineSubProduct(idx)}\r\n                        >+ Add</button>\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-sm btn-outline-secondary\"\r\n                          onClick={() => {\r\n                            // quick auto-fill remainder as one subproduct (useful)\r\n                            if (remaining <= 0) return;\r\n                            this.handleAddInlineSubProduct(idx, { name: 'Remainder', value: breakdownType === 'Percentage' ? (remaining * 100 / (mainItemTotal || 1)).toFixed(2) : remaining.toFixed(2) });\r\n                          }}\r\n                        >Auto-fill</button>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                   <td>{mainItemTotal.toFixed(2)}</td>\r\n                   <td></td>\r\n                </tr>\r\n\r\n                {/* subproduct rows (inline editable) */}\r\n                {subs.length === 0 && (\r\n                  <tr key={`notice-${idx}`}>\r\n                    <td colSpan=\"7\" className=\"text-center text-muted\">No subproducts added for this item.</td>\r\n                  </tr>\r\n                )}\r\n\r\n                {subs.map((sp, spIdx) => {\r\n                  const spId = `${item.productId}_${spIdx + 1}`;\r\n                  let spTotal = 0;\r\n                  const rawVal = parseFloat(sp.value || 0) || 0;\r\n                  if (breakdownType === 'Percentage') spTotal = (mainItemTotal * rawVal / 100);\r\n                  else spTotal = rawVal;\r\n\r\n                  return (\r\n                    <tr key={spId} style={{ background: '#f9f9f9' }}>\r\n                      <td>{spIdx + 1}</td>\r\n                      <td>{spId}</td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={sp.name || ''}\r\n                          onChange={(e) => this.handleSubProductChange(idx, spIdx, 'name', e.target.value)}\r\n                          placeholder=\"Enter name\"\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"number\"\r\n                          step=\"any\"\r\n                          min=\"0\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={sp.value || ''}\r\n                          onChange={(e) => this.handleSubProductChange(idx, spIdx, 'value', e.target.value)}\r\n                          style={{ width: '120px' }}\r\n                        />\r\n                      </td>\r\n                      <td>{spTotal.toFixed(2)}</td>\r\n                      <td>\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-sm btn-danger\"\r\n                          onClick={() => this.handleRemoveSubProduct(idx, spIdx)}\r\n                        >-</button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n\r\n      {!canSave && (\r\n        <div className=\"alert alert-danger\">\r\n          Breakdown incomplete — for each product the sum of subproduct totals must equal the product total. Save disabled until fixed.\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nrenderSubProductDialog = () => {\r\n  const { showSubProductDialog, subProductForm } = this.state;\r\n  if (!showSubProductDialog) return null;\r\n  return (\r\n    <div className=\"custom-overlay\" onClick={(e) => e.stopPropagation()}>\r\n      <div className=\"custom-overlay-content\" style={{ width: 400 }}>\r\n        <div className=\"form-group\">\r\n          <label>Name</label>\r\n          <input className=\"form-control\" value={subProductForm.name} onChange={e => this.setState({ subProductForm: { ...subProductForm, name: e.target.value } })} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Type</label>\r\n          <select className=\"form-control\" value={subProductForm.type} onChange={e => this.setState({ subProductForm: { ...subProductForm, type: e.target.value } })}>\r\n            <option value=\"Amount\">Amount</option>\r\n            <option value=\"Percentage\">Percentage</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>{subProductForm.type}</label>\r\n          <input className=\"form-control\" type=\"number\" value={subProductForm.value} onChange={e => this.setState({ subProductForm: { ...subProductForm, value: e.target.value } })} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Due Date</label>\r\n          <input className=\"form-control\" type=\"date\" value={subProductForm.dueDate} onChange={e => this.setState({ subProductForm: { ...subProductForm, dueDate: e.target.value } })} />\r\n        </div>\r\n        <div className=\"text-right\">\r\n          <button type=\"button\" className=\"btn btn-secondary mr-2\" onClick={() => this.setState({ showSubProductDialog: false })}>Cancel</button>\r\n\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={(e) => {\r\n            e.preventDefault();  //  this prevents the form submission\r\n            this.handleAddSubProduct();\r\n          }}>Add</button>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n// Add inline subproduct (optionally with initial data)\r\nhandleAddInlineSubProduct = (breakdownIdx, initial = null) => {\r\n  this.setState(prev => {\r\n    const items = [...prev.breakdownItems];\r\n    const item = { ...items[breakdownIdx] };\r\n    const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\r\n    const defaultSP = { name: '', value: '', dueDate: '' };\r\n    subProducts.push(initial ? { ...defaultSP, ...initial } : defaultSP);\r\n    item.subProducts = subProducts;\r\n    items[breakdownIdx] = item;\r\n    return { breakdownItems: items };\r\n  }, this.saveBreakdownToSession);\r\n};\r\n\r\nhandleRemoveSubProduct = (biIdx, spIdx) => {\r\n  this.setState(prev => {\r\n    const items = [...prev.breakdownItems];\r\n    const item = { ...items[biIdx] };\r\n    const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\r\n    subProducts.splice(spIdx, 1);\r\n    item.subProducts = subProducts;\r\n    items[biIdx] = item;\r\n    return { breakdownItems: items };\r\n  }, this.saveBreakdownToSession);\r\n};\r\n\r\nhandleSubProductChange = (biIdx, spIdx, field, value) => {\r\n  this.setState(prev => {\r\n    const items = [...prev.breakdownItems];\r\n    const item = { ...items[biIdx] };\r\n    const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\r\n    const sp = { ...subProducts[spIdx], [field]: value };\r\n    subProducts[spIdx] = sp;\r\n    item.subProducts = subProducts;\r\n    items[biIdx] = item;\r\n    return { breakdownItems: items };\r\n  }, this.saveBreakdownToSession);\r\n};\r\n\r\n// sum of subproducts for a breakdown item (used in validation)\r\ngetSubProductsSum = (bi) => {\r\n  const { breakdownType, formData } = this.state;\r\n  const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\r\n    acc[li.itemCode] = parseFloat(li.total || 0) || 0;\r\n    return acc;\r\n  }, {});\r\n  const mainTotal = itemTotals[bi.productId] || 0;\r\n  const subs = Array.isArray(bi.subProducts) ? bi.subProducts : [];\r\n  return subs.reduce((s, sp) => {\r\n    const val = parseFloat(sp.value || 0) || 0;\r\n    if (breakdownType === 'Percentage') {\r\n      return s + (mainTotal * val / 100);\r\n    }\r\n    return s + val;\r\n  }, 0);\r\n};\r\n\r\n// Check that for every main product, sum(subproducts) === mainTotal (tolerance)\r\nisBreakdownValid = () => {\r\n  const { breakdownItems, formData } = this.state;\r\n  const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\r\n    acc[li.itemCode] = parseFloat(li.total || 0) || 0;\r\n    return acc;\r\n  }, {});\r\n  const TOL = 0.01;\r\n  for (let bi of breakdownItems) {\r\n    const mainTotal = itemTotals[bi.productId] || 0;\r\n    // require at least one subproduct for products with non-zero mainTotal\r\n    if (mainTotal > 0) {\r\n      const subSum = this.getSubProductsSum(bi);\r\n      if (Math.abs(subSum - mainTotal) > TOL) return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\nhandleAddSubProduct = () => {\r\n  const { currentBreakdownIdx, subProductForm, breakdownItems } = this.state;\r\n  if (!subProductForm.name || !subProductForm.value) return;\r\n  // Clone breakdownItems and subProducts for immutability\r\n  const items = breakdownItems.map((item, idx) => {\r\n    if (idx === currentBreakdownIdx) {\r\n      const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\r\n      subProducts.push({ ...subProductForm });\r\n      return { ...item, subProducts };\r\n    }\r\n    return item;\r\n  });\r\n  this.setState({\r\n    breakdownItems: items,\r\n    showSubProductDialog: false,\r\n    subProductForm: { name: '', value: '', type: 'Amount', dueDate: '' }\r\n  }, this.saveBreakdownToSession);\r\n};\r\n  renderQuoteTable = () => (\r\n    <div className=\"card mt-4 full-height\">\r\n      <div className=\"card-body\">\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n          <h4 className=\"card-title\">Quotes</h4>\r\n          <button className=\"btn btn-primary\" onClick={() => this.setState({ showForm: true })}>+ Add Quote</button>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-bordered table-hover\">\r\n            <thead className=\"thead-light\">\r\n              <tr style={{ fontSize: '14px' }}>\r\n                <th>Quote No</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Quote Value</th>\r\n                <th>Status</th>\r\n                <th>Print</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.quotes.map((q, i) => {\r\n                let statusClass = \"badge-secondary\";\r\n                if (q.status === \"Entered\") statusClass = \"badge-warning\";\r\n                else if (q.status === \"Submitted\") statusClass = \"badge-info\";\r\n                else if (q.status === \"ConvertedToOrder\") statusClass = \"badge-success\";\r\n                else if (q.status === \"Cancelled\") statusClass = \"badge-danger\";\r\n\r\n                return (\r\n                  <tr key={i} style={{ fontSize: '14px' }}>\r\n                    <td>\r\n                      <button\r\n                        className=\"btn btn-link p-0\"\r\n                        onClick={() => this.loadQuotePreview(q)}\r\n                      >\r\n                        {q.quoteNo}\r\n                      </button>\r\n                    </td>\r\n                    <td>{q.customer}</td>\r\n                    <td>{q.quoteDate}</td>\r\n                    <td>{q.quoteValue}</td>\r\n                    <td>\r\n                      <label \r\n                      className={`badge ${statusClass}`}\r\n                      style={{ fontSize: '14px' }}>{q.status}</label>\r\n                    </td>\r\n                    <td>\r\n                      <i\r\n                        className=\"mdi mdi-printer menu-icon\"\r\n                        onClick={() => this.showQuotePDFWithOrg(q)}\r\n                        style={{ fontSize: '24px', color: '#2196F3', cursor: 'pointer' }}\r\n                      ></i>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n              {this.state.quotes.length === 0 && (\r\n                <tr><td colSpan=\"6\" className=\"text-center\">No quotes found.</td></tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  renderQuoteForm = () => {\r\n    const { formData, overlayType, productOverlayVisible ,showTaxOverlay,taxGroups,recalculateTotals} = this.state;\r\n    const isFOB = formData.impExp === 'FOB';\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"card full-height\">\r\n          <div style={{ flex: 1, overflowY: 'auto', padding: '24px' }}>\r\n            <h4 className=\"mb-3\">Quote Form</h4>\r\n            <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n              <li className=\"nav-item\">\r\n                <button type=\"button\" className={`nav-link ${this.state.activeTab === 'co' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'co' })}>CO Details</button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n              <button type=\"button\" className={`nav-link ${this.state.activeTab === 'breakdown' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'breakdown' })}>Breakdown</button>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <button type=\"button\" className={`nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'commercial' })}>Commercial Terms</button>\r\n              </li>\r\n            </ul>\r\n            <form className=\"form-sample\" onSubmit={this.handleSubmit}>\r\n              <div className=\"tab-content pt-3\">\r\n                {this.state.activeTab === 'co' && (\r\n                  <>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Quote No</label>\r\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={formData.quoteNo} onChange={(e) => this.handleInputChange('quoteNo', e.target.value)} />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Quote Date</label>\r\n                        <input type=\"date\" className=\"form-control form-control-sm\" value={formData.quoteDate} onChange={(e) => this.handleInputChange('quoteDate', e.target.value)} />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Quote Type</label>\r\n                        <select className=\"form-control form-control-sm\" value={formData.quoteType} onChange={(e) => this.handleInputChange('quoteType', e.target.value)}>\r\n                          <option>Standard</option>\r\n                          <option>Manual</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Status</label>\r\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={formData.status}   style={{ backgroundColor: '#fff' }} readOnly />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Customer</label>\r\n                        <div className=\"input-group input-group-sm\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Choose Customer\"\r\n                            ref={this.customerInputRef}\r\n                            value={formData.customer}\r\n                            readOnly\r\n                            onClick={() => this.showOverlay('customer')}\r\n                            style={{ cursor: 'pointer' }}\r\n                          />\r\n                          <div className=\"input-group-append\">\r\n                            <button className=\"btn btn-outline-secondary btn-sm\" type=\"button\" onClick={() => this.showOverlay('customer')}>Select</button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>IMP/EXP</label>\r\n                        <select\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.impExp}\r\n                          onChange={(e) => this.handleInputChange('impExp', e.target.value)}\r\n                        >\r\n                          <option>None</option>\r\n                          <option>COB</option>\r\n                          <option>FOB</option>\r\n                          <option>CIF</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group col-md-2\">\r\n                        <label>Ref No.</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.qrefNo}\r\n                          onChange={(e) => this.handleInputChange('qrefNo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Choose</label>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"form-check mr-4\">\r\n                            <input type=\"radio\" className=\"form-check-input\" name=\"choose\" id=\"chooseService\" value=\"Service\" checked={formData.choose === 'Service'} onChange={(e) => this.handleInputChange('choose', e.target.value)} />\r\n                            <label className=\"form-check-label\" htmlFor=\"chooseService\">Service</label>\r\n                          </div>\r\n                          <div className=\"form-check\">\r\n                            <input type=\"radio\" className=\"form-check-input\" name=\"choose\" id=\"chooseProduct\" value=\"Product\" checked={formData.choose === 'Product'} onChange={(e) => this.handleInputChange('choose', e.target.value)} />\r\n                            <label className=\"form-check-label\" htmlFor=\"chooseProduct\">Product</label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Currency</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.currency}\r\n                          style={{ backgroundColor: '#fff' }}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Conversion Rate</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.conversionRate}\r\n                          onChange={(e) => this.handleInputChange('conversionRate', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Tax Amount</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxAmount}\r\n                          onChange={(e) => this.handleInputChange('taxAmount', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Quote Value</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.quoteValue}\r\n                          onChange={(e) => this.handleInputChange('quoteValue', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                   \r\n                          <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                            <h4 className=\"card-title\">Line Item</h4>\r\n                            <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={() => this.setState({ productOverlayVisible: true })}>\r\n                              + Add Product\r\n                            </button>\r\n                          </div>\r\n                       <div className=\"table-responsive\">\r\n        <table className=\"table table-bordered\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>Item Code</th>\r\n              <th>Item Desc</th>\r\n              <th>Cust Part No</th>\r\n              <th>HSN No</th>\r\n              <th>UOM</th>\r\n              <th>On Hand</th>\r\n              <th>Unit Price</th>\r\n              <th>Quantity</th>\r\n              <th>Tax Id</th>\r\n              <th>Item Total</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {formData.lineItems.map((item, idx) => {\r\n              const itemTotal = item.unitPrice * item.qty;\r\n              const taxDetails = getTaxDetailsFromGroup(item.taxGroupName, this.state.taxGroups);\r\n              const taxAmt = (itemTotal * taxDetails.totalPercent / 100) + (itemTotal * taxDetails.totalAmount);\r\n              const totalWithTax = itemTotal + taxAmt;\r\n             \r\n              \r\n              return (\r\n                <tr key={item.id || idx}>\r\n                  <td>{item.itemCode}</td>\r\n                  <td>{item.itemDescription}</td>\r\n                  <td>{item.custPartNo}</td>\r\n                  <td>{item.hsnNo}</td>\r\n                  <td>{item.uom}</td>\r\n                  <td>{item.onHand}</td>\r\n                  <td>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={item.unitPrice}\r\n                      onChange={e => this.handleLineItemChange(idx, 'unitPrice', e.target.value)}\r\n                      style={{ width: 80 }}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      value={item.qty}\r\n                      onChange={e => this.handleLineItemChange(idx, 'qty', e.target.value)}\r\n                      style={{ width: 60 }}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-secondary btn-sm btn-rounded btn-icon\"\r\n                    style={{ padding: '2px 6px', fontSize: '12px', lineHeight: '1' }}\r\n                    onClick={() => this.setState({ showTaxOverlay: true, currentTaxLineIdx: idx })}\r\n                  >\r\n                    +\r\n                  </button>\r\n                  <div style={{ fontSize: '13px', marginTop: '4px' }}>\r\n                    {(item.taxGroupNames || []).join(', ') || '-'}\r\n                  </div>\r\n                </td>\r\n              <td>{parseFloat(item.total || 0).toFixed(2)}</td>\r\n\r\n\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n                          {/* Add pagination for line items here if needed */}\r\n                          <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n                            <span>Page 1 of 1</span>\r\n                          </div>\r\n                      \r\n                  </>\r\n                )}\r\n                {this.state.activeTab === 'commercial' && (\r\n                  <>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-6\">\r\n                        <label>Bill To</label>\r\n                        <textarea\r\n                          className=\"form-control form-control-sm\"\r\n                          rows=\"3\"\r\n                          value={formData.billTo}\r\n                          onChange={(e) => this.handleInputChange('billTo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-6\">\r\n                        <label>Ship To</label>\r\n                        <textarea\r\n                          className=\"form-control form-control-sm\"\r\n                          rows=\"3\"\r\n                          value={formData.shipTo}\r\n                          onChange={(e) => this.handleInputChange('shipTo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-4\">\r\n  <label>Despatch Mode</label>\r\n  <div className=\"input-group input-group-sm\">\r\n    <input\r\n      type=\"text\"\r\n      className=\"form-control\"\r\n      value={formData.despatchMode}\r\n      readOnly\r\n      onClick={() => !isFOB && this.showOverlay('despatchMode')}\r\n      style={{ cursor: isFOB ? 'not-allowed' : 'pointer', backgroundColor: '#fff' }}\r\n    />\r\n    <div className=\"input-group-append\">\r\n      <button\r\n        className=\"btn btn-outline-secondary btn-sm\"\r\n        type=\"button\"\r\n        disabled={isFOB}\r\n        onClick={() => this.showOverlay('despatchMode')}\r\n      >\r\n        Select\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div className=\"form-group col-md-4\">\r\n  <label>Payment Terms</label>\r\n  <div className=\"input-group input-group-sm\">\r\n    <input\r\n      type=\"text\"\r\n      className=\"form-control\"\r\n      value={formData.paymentTerms}\r\n      readOnly\r\n      onClick={() => !isFOB && this.showOverlay('paymentTerms')}\r\n      style={{ cursor: isFOB ? 'not-allowed' : 'pointer', backgroundColor: '#fff' }}\r\n    />\r\n    <div className=\"input-group-append\">\r\n      <button\r\n        className=\"btn btn-outline-secondary btn-sm\"\r\n        type=\"button\"\r\n        disabled={isFOB}\r\n        onClick={() => this.showOverlay('paymentTerms')}\r\n      >\r\n        Select\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Freight Charges</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.freightCharges}\r\n                          onChange={(e) => this.handleInputChange('freightCharges', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Tax %</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxPercent}\r\n                          onChange={(e) => this.handleInputChange('taxPercent', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Freight Tax Amount</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.freighttaxAmount}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Packing Charges</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.packingCharges}\r\n                          onChange={(e) => this.handleInputChange('packingCharges', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </>\r\n                )}\r\n                {this.state.activeTab === 'breakdown' && (this.renderBreakdownTab())}\r\n              </div>\r\n              {this.renderSubProductDialog()}\r\n              <div className=\"fixed-card-footer text-right p-3 border-top bg-white\">\r\n                <button type=\"submit\" className=\"btn btn-success mr-2\">Save All Details</button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => this.setState({ showForm: false, editingId: null })}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n            {overlayType && this.renderOverlay()}\r\n            {productOverlayVisible && this.renderProductOverlay()}\r\n            {this.state.showTaxOverlay && this.renderTaxOverlay()}\r\n\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\nrenderQuotePreview = () => {\r\n  const q = this.state.selectedQuote;\r\n  if (!q) return null;\r\n\r\n  return (\r\n    <div className=\"card mt-4 full-height p-4\">\r\n      <div className=\"d-flex justify-content-between mb-3\">\r\n        <h4 className=\"card-title\">Quote Preview - {q.quoteNo}</h4>\r\n        <div>\r\n          <button className=\"btn btn-sm btn-info mr-2\" onClick={() => this.loadQuoteForEdit(q)}>Edit</button>\r\n          <button className=\"btn btn-sm btn-success\" onClick={() => this.convertToOrder(q)}>Convert to Order</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\"><b>Customer:</b> {q.customer}</div>\r\n        <div className=\"col-md-4\"><b>Date:</b> {q.quoteDate}</div>\r\n        <div className=\"col-md-4\"><b>Status:</b> {q.status}</div>\r\n      </div>\r\n      <div className=\"row mt-2\">\r\n        <div className=\"col-md-6\"><b>Bill To:</b><br />{q.billTo}</div>\r\n        <div className=\"col-md-6\"><b>Ship To:</b><br />{q.shipTo}</div>\r\n      </div>\r\n      <h5 className=\"mt-4\">Line Items</h5>\r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>Item Code</th><th>Description</th><th>Qty</th><th>Unit Price</th><th>Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {q.lineItems?.map((item, i) => (\r\n            <tr key={i}>\r\n              <td>{item.itemCode}</td>\r\n              <td>{item.itemDescription}</td>\r\n              <td>{item.qty}</td>\r\n              <td>{item.unitPrice}</td>\r\n              <td>{item.total}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"text-right\"><b>Total:</b> {q.quoteValue}</div>\r\n      <button className=\"btn btn-secondary mt-3\" onClick={() => this.setState({ previewMode: false })}>Back to List</button>\r\n    </div>\r\n  );\r\n};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        {this.state.previewMode? this.renderQuotePreview(): this.state.showForm ? this.renderQuoteForm() : this.renderQuoteTable()}\r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Quote);\r\n"]},"metadata":{},"sourceType":"module"}