{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\crm\\\\Datalist.js\";\nimport React, { Component } from \"react\";\nimport { Modal, Button, Table, Form, Card } from \"react-bootstrap\";\nimport { db } from \"../../firebase\";\nimport { collection, getDocs, addDoc, updateDoc, doc } from \"firebase/firestore\";\nimport { Country, State, City } from \"country-state-city\";\n\nclass Datalist extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      accounts: [],\n      showModal: false,\n      selectedAccount: null,\n      contactPersons: []\n    };\n\n    this.fetchAccounts = async () => {\n      const snap = await getDocs(collection(db, \"accounts\"));\n      const accounts = snap.docs.map(d => ({\n        id: d.id,\n        ...d.data()\n      }));\n      this.setState({\n        accounts\n      });\n    };\n\n    this.openModal = (account = null) => {\n      this.setState({\n        showModal: true,\n        selectedAccount: account || {\n          acno: \"\",\n          acname: \"\",\n          contact: \"\",\n          email: \"\",\n          website: \"\",\n          phone: \"\",\n          country: \"\",\n          state: \"\",\n          city: \"\"\n        },\n        contactPersons: (account === null || account === void 0 ? void 0 : account.contactPersons) || []\n      });\n    };\n\n    this.closeModal = () => this.setState({\n      showModal: false,\n      selectedAccount: null,\n      contactPersons: []\n    });\n\n    this.patchSelected = patch => {\n      this.setState(prev => ({\n        selectedAccount: { ...prev.selectedAccount,\n          ...patch\n        }\n      }));\n    };\n\n    this.handleContactPersonChange = (i, field, value) => {\n      this.setState(prev => {\n        const cps = [...prev.contactPersons];\n        cps[i] = { ...cps[i],\n          [field]: value\n        };\n        return {\n          contactPersons: cps\n        };\n      });\n    };\n\n    this.addContactPerson = () => {\n      this.setState(prev => ({\n        contactPersons: [...prev.contactPersons, {\n          name: \"\",\n          designation: \"\",\n          phone: \"\",\n          mail: \"\",\n          linkedin: \"\"\n        }]\n      }));\n    };\n\n    this.saveAccount = async () => {\n      const {\n        selectedAccount,\n        contactPersons\n      } = this.state;\n      const data = { ...selectedAccount,\n        contactPersons\n      };\n\n      if (data.id) {\n        await updateDoc(doc(db, \"accounts\", data.id), data);\n      } else {\n        await addDoc(collection(db, \"accounts\"), data);\n      }\n\n      await this.fetchAccounts();\n      this.closeModal();\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAccounts();\n  }\n\n  render() {\n    const {\n      accounts,\n      selectedAccount\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"p-3 shadow-sm bg-white border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, \"Account Data List\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.openModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, \"+ Add Account\")), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"A/c No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"Account Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, \"Contact\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"Phone\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, \"Country\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, \"City\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, accounts.map(acc => {\n      var _Country$getCountryBy, _State$getStateByCode;\n\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: acc.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"mdi mdi-lead-pencil\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }\n      }, acc.acno), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 19\n        }\n      }, acc.acname), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 19\n        }\n      }, acc.contact), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 19\n        }\n      }, acc.email), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 19\n        }\n      }, acc.phone), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }\n      }, ((_Country$getCountryBy = Country.getCountryByCode(acc.country)) === null || _Country$getCountryBy === void 0 ? void 0 : _Country$getCountryBy.name) || \"\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 19\n        }\n      }, acc.country ? ((_State$getStateByCode = State.getStateByCodeAndCountry(acc.state, acc.country)) === null || _State$getStateByCode === void 0 ? void 0 : _State$getStateByCode.name) || \"\" : \"\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }\n      }, acc.city));\n    })))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showModal,\n      onHide: this.closeModal,\n      size: \"lg\",\n      contentClassName: \"bg-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, (selectedAccount === null || selectedAccount === void 0 ? void 0 : selectedAccount.id) ? \"Edit Account\" : \"Add Account\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, selectedAccount && /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, \"A/c No\"), /*#__PURE__*/React.createElement(Form.Control, {\n      value: selectedAccount.acno,\n      onChange: e => this.patchSelected({\n        acno: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, \"Account Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      value: selectedAccount.acname,\n      onChange: e => this.patchSelected({\n        acname: e.target.value\n      }),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, \"Contact\"), /*#__PURE__*/React.createElement(Form.Control, {\n      value: selectedAccount.contact,\n      onChange: e => this.patchSelected({\n        contact: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n      value: selectedAccount.email,\n      onChange: e => this.patchSelected({\n        email: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, \"Website\"), /*#__PURE__*/React.createElement(Form.Control, {\n      value: selectedAccount.website,\n      onChange: e => this.patchSelected({\n        website: e.target.value\n      }),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, \"Phone\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      value: selectedAccount.phone,\n      onChange: e => this.patchSelected({\n        phone: e.target.value\n      }),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, \"Country\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      value: selectedAccount.country,\n      onChange: e => {\n        const val = e.target.value;\n        this.setState(prev => ({\n          selectedAccount: { ...prev.selectedAccount,\n            country: val,\n            state: \"\",\n            city: \"\"\n          }\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 23\n      }\n    }, \"Select Country\"), Country.getAllCountries().map(c => /*#__PURE__*/React.createElement(\"option\", {\n      key: c.isoCode,\n      value: c.isoCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 25\n      }\n    }, c.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      value: selectedAccount.state,\n      onChange: e => {\n        const val = e.target.value;\n        this.setState(prev => ({\n          selectedAccount: { ...prev.selectedAccount,\n            state: val,\n            city: \"\"\n          }\n        }));\n      },\n      disabled: !selectedAccount.country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 23\n      }\n    }, \"Select State\"), selectedAccount.country && State.getStatesOfCountry(selectedAccount.country).map(s => /*#__PURE__*/React.createElement(\"option\", {\n      key: s.isoCode,\n      value: s.isoCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 27\n      }\n    }, s.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      value: selectedAccount.city,\n      onChange: e => this.patchSelected({\n        city: e.target.value\n      }),\n      disabled: !selectedAccount.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 23\n      }\n    }, \"Select City\"), selectedAccount.country && selectedAccount.state && City.getCitiesOfState(selectedAccount.country, selectedAccount.state).map(ct => /*#__PURE__*/React.createElement(\"option\", {\n      key: ct.name,\n      value: ct.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 27\n      }\n    }, ct.name))))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    }, \"Contact Persons\"), this.state.contactPersons.map((cp, i) => /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: \"mb-3 p-2 border rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"mb-2\",\n      placeholder: \"Name\",\n      value: cp.name,\n      onChange: e => this.handleContactPersonChange(i, \"name\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"mb-2\",\n      placeholder: \"Designation\",\n      value: cp.designation,\n      onChange: e => this.handleContactPersonChange(i, \"designation\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"mb-2\",\n      placeholder: \"Phone\",\n      value: cp.phone,\n      onChange: e => this.handleContactPersonChange(i, \"phone\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"mb-2\",\n      placeholder: \"Mail\",\n      value: cp.mail,\n      onChange: e => this.handleContactPersonChange(i, \"mail\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"mb-2\",\n      placeholder: \"LinkedIn\",\n      value: cp.linkedin,\n      onChange: e => this.handleContactPersonChange(i, \"linkedin\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.addContactPerson,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }\n    }, \"+ Add Contact Person\"))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.saveAccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"light\",\n      onClick: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }\n    }, \"Cancel\"))));\n  }\n\n}\n\nexport default Datalist;","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/crm/Datalist.js"],"names":["React","Component","Modal","Button","Table","Form","Card","db","collection","getDocs","addDoc","updateDoc","doc","Country","State","City","Datalist","state","accounts","showModal","selectedAccount","contactPersons","fetchAccounts","snap","docs","map","d","id","data","setState","openModal","account","acno","acname","contact","email","website","phone","country","city","closeModal","patchSelected","patch","prev","handleContactPersonChange","i","field","value","cps","addContactPerson","name","designation","mail","linkedin","saveAccount","componentDidMount","render","acc","getCountryByCode","getStateByCodeAndCountry","e","target","val","getAllCountries","c","isoCode","getStatesOfCountry","s","getCitiesOfState","ct","cp"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Modal, Button, Table, Form, Card } from \"react-bootstrap\";\r\nimport { db } from \"../../firebase\";\r\nimport { collection, getDocs, addDoc, updateDoc, doc } from \"firebase/firestore\";\r\nimport { Country, State, City } from \"country-state-city\";\r\n\r\nclass Datalist extends Component {\r\n  state = {\r\n    accounts: [],\r\n    showModal: false,\r\n    selectedAccount: null,\r\n    contactPersons: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchAccounts();\r\n  }\r\n\r\n  fetchAccounts = async () => {\r\n    const snap = await getDocs(collection(db, \"accounts\"));\r\n    const accounts = snap.docs.map(d => ({ id: d.id, ...d.data() }));\r\n    this.setState({ accounts });\r\n  };\r\n\r\n  // open for add or edit\r\n  openModal = (account = null) => {\r\n    this.setState({\r\n      showModal: true,\r\n      selectedAccount: account || {\r\n        acno: \"\", acname: \"\", contact: \"\",\r\n        email: \"\", website: \"\", phone: \"\",\r\n        country: \"\", state: \"\", city: \"\"\r\n      },\r\n      contactPersons: account?.contactPersons || [],\r\n    });\r\n  };\r\n\r\n  closeModal = () => this.setState({ showModal: false, selectedAccount: null, contactPersons: [] });\r\n\r\n  // helper to patch selectedAccount safely\r\n  patchSelected = (patch) => {\r\n    this.setState(prev => ({ selectedAccount: { ...prev.selectedAccount, ...patch } }));\r\n  };\r\n\r\n  handleContactPersonChange = (i, field, value) => {\r\n    this.setState(prev => {\r\n      const cps = [...prev.contactPersons];\r\n      cps[i] = { ...cps[i], [field]: value };\r\n      return { contactPersons: cps };\r\n    });\r\n  };\r\n\r\n  addContactPerson = () => {\r\n    this.setState(prev => ({\r\n      contactPersons: [...prev.contactPersons, { name: \"\", designation: \"\", phone: \"\", mail: \"\", linkedin: \"\" }]\r\n    }));\r\n  };\r\n\r\n  saveAccount = async () => {\r\n    const { selectedAccount, contactPersons } = this.state;\r\n    const data = { ...selectedAccount, contactPersons };\r\n\r\n    if (data.id) {\r\n      await updateDoc(doc(db, \"accounts\", data.id), data);\r\n    } else {\r\n      await addDoc(collection(db, \"accounts\"), data);\r\n    }\r\n    await this.fetchAccounts();\r\n    this.closeModal();\r\n  };\r\n\r\n  render() {\r\n    const { accounts, selectedAccount } = this.state;\r\n\r\n    return (\r\n      <div className=\"container mt-4\">\r\n        {/* White box like other pages */}\r\n        <Card className=\"p-3 shadow-sm bg-white border-0\">\r\n          <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n            <h3 className=\"mb-0\">Account Data List</h3>\r\n            <Button variant=\"primary\" onClick={() => this.openModal()}>+ Add Account</Button>\r\n          </div>\r\n\r\n          <table className=\"table table-bordered table-hover\">\r\n            <thead className=\"thead-light\">\r\n              <tr>\r\n                <th>Edit</th>\r\n                <th>A/c No</th>\r\n                <th>Account Name</th>\r\n                <th>Contact</th>\r\n                <th>Email</th>\r\n                <th>Phone</th>\r\n                <th>Country</th>\r\n                <th>State</th>\r\n                <th>City</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {accounts.map(acc => (\r\n                <tr key={acc.id}>\r\n                  <td><span><i className=\"mdi mdi-lead-pencil\"></i></span></td>\r\n                  <td>{acc.acno}</td>\r\n                  <td>{acc.acname}</td>\r\n                  <td>{acc.contact}</td>\r\n                  <td>{acc.email}</td>\r\n                  <td>{acc.phone}</td>\r\n                  <td>{Country.getCountryByCode(acc.country)?.name || \"\"}</td>\r\n                  <td>{acc.country ? (State.getStateByCodeAndCountry(acc.state, acc.country)?.name || \"\") : \"\"}</td>\r\n                  <td>{acc.city}</td>\r\n                  \r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </Card>\r\n\r\n        {/* Modal – force white background */}\r\n        <Modal\r\n          show={this.state.showModal}\r\n          onHide={this.closeModal}\r\n          size=\"lg\"\r\n          contentClassName=\"bg-white\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{selectedAccount?.id ? \"Edit Account\" : \"Add Account\"}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {selectedAccount && (\r\n              <Form>\r\n                {/* Main fields */}\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>A/c No</label>\r\n                    <Form.Control value={selectedAccount.acno} onChange={e => this.patchSelected({ acno: e.target.value })} />\r\n                  </div>\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>Account Name</label>\r\n                    <Form.Control value={selectedAccount.acname} onChange={e => this.patchSelected({ acname: e.target.value })} required />\r\n                  </div>\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>Contact</label>\r\n                    <Form.Control value={selectedAccount.contact} onChange={e => this.patchSelected({ contact: e.target.value })} />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>Email</label>\r\n                    <Form.Control value={selectedAccount.email} onChange={e => this.patchSelected({ email: e.target.value })} />\r\n                  </div>\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>Website</label>\r\n                    <Form.Control value={selectedAccount.website} onChange={e => this.patchSelected({ website: e.target.value })} required />\r\n                  </div>\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>Phone</label>\r\n                    <Form.Control type=\"number\" value={selectedAccount.phone} onChange={e => this.patchSelected({ phone: e.target.value })} required/>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Country / State / City (bug fixed: single functional setState) */}\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>Country</label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      value={selectedAccount.country}\r\n                      onChange={(e) => {\r\n                        const val = e.target.value;\r\n                        this.setState(prev => ({\r\n                          selectedAccount: { ...prev.selectedAccount, country: val, state: \"\", city: \"\" }\r\n                        }));\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select Country</option>\r\n                      {Country.getAllCountries().map(c => (\r\n                        <option key={c.isoCode} value={c.isoCode}>{c.name}</option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>State</label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      value={selectedAccount.state}\r\n                      onChange={(e) => {\r\n                        const val = e.target.value;\r\n                        this.setState(prev => ({\r\n                          selectedAccount: { ...prev.selectedAccount, state: val, city: \"\" }\r\n                        }));\r\n                      }}\r\n                      disabled={!selectedAccount.country}\r\n                    >\r\n                      <option value=\"\">Select State</option>\r\n                      {selectedAccount.country &&\r\n                        State.getStatesOfCountry(selectedAccount.country).map(s => (\r\n                          <option key={s.isoCode} value={s.isoCode}>{s.name}</option>\r\n                        ))}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>City</label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      value={selectedAccount.city}\r\n                      onChange={(e) => this.patchSelected({ city: e.target.value })}\r\n                      disabled={!selectedAccount.state}\r\n                    >\r\n                      <option value=\"\">Select City</option>\r\n                      {selectedAccount.country && selectedAccount.state &&\r\n                        City.getCitiesOfState(selectedAccount.country, selectedAccount.state).map(ct => (\r\n                          <option key={ct.name} value={ct.name}>{ct.name}</option>\r\n                        ))}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n\r\n                <hr />\r\n                <h5>Contact Persons</h5>\r\n                {this.state.contactPersons.map((cp, i) => (\r\n                  <div key={i} className=\"mb-3 p-2 border rounded\">\r\n                    <Form.Control className=\"mb-2\" placeholder=\"Name\"\r\n                      value={cp.name} onChange={e => this.handleContactPersonChange(i, \"name\", e.target.value)} />\r\n                    <Form.Control className=\"mb-2\" placeholder=\"Designation\"\r\n                      value={cp.designation} onChange={e => this.handleContactPersonChange(i, \"designation\", e.target.value)} />\r\n                    <Form.Control className=\"mb-2\" placeholder=\"Phone\"\r\n                      value={cp.phone} onChange={e => this.handleContactPersonChange(i, \"phone\", e.target.value)} />\r\n                    <Form.Control className=\"mb-2\" placeholder=\"Mail\"\r\n                      value={cp.mail} onChange={e => this.handleContactPersonChange(i, \"mail\", e.target.value)} />\r\n                    <Form.Control className=\"mb-2\" placeholder=\"LinkedIn\"\r\n                      value={cp.linkedin} onChange={e => this.handleContactPersonChange(i, \"linkedin\", e.target.value)} />\r\n                  </div>\r\n                ))}\r\n                <Button variant=\"secondary\" onClick={this.addContactPerson}>+ Add Contact Person</Button>\r\n              </Form>\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={this.saveAccount}>Submit</Button>\r\n            <Button variant=\"light\" onClick={this.closeModal}>Cancel</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Datalist;\r\n"]},"metadata":{},"sourceType":"module"}