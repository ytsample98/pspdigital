{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\panelone\\\\Quote.js\";\n// Quote.js (updated - breakdown inline editing + auto-remaining + validation colors)\nimport React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport { db } from '../../firebase';\nimport { collection, getDocs, addDoc, doc, updateDoc, serverTimestamp } from 'firebase/firestore';\nimport { withRouter } from 'react-router-dom';\nimport html2canvas from 'html2canvas';\nimport { jsPDF } from 'jspdf';\nimport { recalculateTotals, getTaxDetailsFromGroup } from './calculation';\nimport { toWords } from 'number-to-words';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Paper from '@material-ui/core/Paper';\nimport TableContainer from '@material-ui/core/TableContainer';\nconst amount = 12345678;\nconst amountWords = `INR ${toWords(amount)} Only`;\nconsole.log(amountWords);\n\nclass Quote extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: 'co',\n      quotes: [],\n      customers: [],\n      products: [],\n      despatchModes: [],\n      paymentTerms: [],\n      showForm: false,\n      showTaxOverlay: false,\n      currentTaxLineIdx: null,\n      editingId: null,\n      overlayType: '',\n      overlaySearch: '',\n      productOverlayVisible: false,\n      productOverlaySearch: '',\n      selectedProductIds: [],\n      selectedTaxGroups: [],\n      taxComponents: [],\n      taxGroups: [],\n      previewMode: false,\n      selectedQuote: null,\n      breakdownItems: [],\n      breakdownType: 'Percentage',\n      // global selector near summary\n      breakdownSelectAll: false,\n      // removed modal usage for sub-products; inline editing state:\n      editingSub: null,\n      // { breakdownIdx, subIdx } when editing inline\n      formData: {\n        quoteNo: '',\n        quoteDate: new Date().toISOString().split('T')[0],\n        quoteType: 'Standard',\n        customer: '',\n        status: 'Entered',\n        // Static 'Entered'\n        choose: 'Service',\n        qrefNo: '',\n        impExp: 'None',\n        currency: '',\n        conversionRate: '',\n        taxAmount: '',\n        quoteValue: '',\n        billTo: '',\n        shipTo: '',\n        despatchMode: 'By Air',\n        paymentTerms: '',\n        freightCharges: '',\n        freighttaxAmount: '',\n        taxPercent: '',\n        packingCharges: '',\n        lineItems: []\n      }\n    };\n    this.customerInputRef = React.createRef();\n\n    this.formatAddress = addr => {\n      if (!addr) return '';\n      if (typeof addr === 'string') return addr;\n      return [addr.address, [addr.city, addr.state, addr.country].filter(Boolean).join(', '), addr.zip].filter(Boolean).join('\\n');\n    };\n\n    this.handleLineItemChange = (idx, field, value) => {\n      const updatedItems = [...this.state.formData.lineItems];\n      updatedItems[idx] = { ...updatedItems[idx],\n        [field]: value\n      };\n      const {\n        updatedLineItems,\n        freighttaxAmount,\n        taxAmount,\n        quoteValue\n      } = recalculateTotals({\n        lineItems: updatedItems,\n        freightCharges: this.state.formData.freightCharges,\n        packingCharges: this.state.formData.packingCharges,\n        taxPercent: this.state.formData.taxPercent,\n        taxGroups: this.state.taxGroups\n      });\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          lineItems: updatedLineItems,\n          freighttaxAmount,\n          taxAmount,\n          quoteValue\n        }\n      }));\n    };\n\n    this.fetchTaxGroups = async () => {\n      const snap = await getDocs(collection(db, 'taxGroups'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        taxGroups: data\n      });\n    };\n\n    this.fetchQuotes = async () => {\n      const snap = await getDocs(collection(db, 'quotes'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        quotes: data.reverse()\n      });\n    };\n\n    this.fetchCustomers = async () => {\n      const snap = await getDocs(collection(db, 'customers'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        customers: data\n      });\n    };\n\n    this.fetchProducts = async () => {\n      const snap = await getDocs(collection(db, 'products'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        products: data\n      });\n    };\n\n    this.fetchDespatchModes = async () => {\n      const snap = await getDocs(collection(db, 'modes'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        despatchModes: data\n      });\n    };\n\n    this.fetchPaymentTerms = async () => {\n      const snap = await getDocs(collection(db, 'paymentTerms'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        paymentTerms: data\n      });\n    };\n\n    this.toggleTaxGroupSelection = (groupName, lineIdx, checked) => {\n      this.setState(prev => {\n        const lineItems = [...prev.formData.lineItems];\n        const item = { ...lineItems[lineIdx]\n        };\n        let taxGroupNames = Array.isArray(item.taxGroupNames) ? [...item.taxGroupNames] : [];\n\n        if (checked) {\n          if (!taxGroupNames.includes(groupName)) taxGroupNames.push(groupName);\n        } else {\n          taxGroupNames = taxGroupNames.filter(g => g !== groupName);\n        }\n\n        item.taxGroupNames = taxGroupNames;\n        item.taxGroupName = taxGroupNames.join(', ');\n        lineItems[lineIdx] = item;\n        const {\n          updatedLineItems,\n          freighttaxAmount,\n          taxAmount,\n          quoteValue\n        } = recalculateTotals({\n          lineItems,\n          freightCharges: prev.formData.freightCharges,\n          packingCharges: prev.formData.packingCharges,\n          taxPercent: prev.formData.taxPercent,\n          taxGroups: prev.taxGroups\n        });\n        return {\n          formData: { ...prev.formData,\n            lineItems: updatedLineItems,\n            freighttaxAmount,\n            taxAmount,\n            quoteValue\n          }\n        };\n      });\n    };\n\n    this.handleInputChange = (field, value) => {\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          [field]: value\n        }\n      }), () => {\n        if (['freightCharges', 'taxPercent', 'packingCharges'].includes(field)) {\n          const {\n            updatedLineItems,\n            freighttaxAmount,\n            taxAmount,\n            quoteValue\n          } = recalculateTotals({\n            lineItems: this.state.formData.lineItems,\n            freightCharges: this.state.formData.freightCharges,\n            packingCharges: this.state.formData.packingCharges,\n            taxPercent: this.state.formData.taxPercent,\n            taxGroups: this.state.taxGroups\n          });\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              lineItems: updatedLineItems,\n              freighttaxAmount,\n              taxAmount,\n              quoteValue\n            }\n          }));\n        }\n      });\n    };\n\n    this.handleBreakdownSelectAll = checked => {\n      this.setState(prev => ({\n        breakdownSelectAll: checked,\n        breakdownItems: prev.breakdownItems.map(item => ({ ...item,\n          selected: checked\n        }))\n      }));\n    };\n\n    this.handleBreakdownRowSelect = (idx, checked) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        items[idx].selected = checked;\n        return {\n          breakdownItems: items\n        };\n      });\n    };\n\n    this.handleBreakdownTypeChange = type => {\n      this.setState({\n        breakdownType: type\n      });\n    };\n\n    this.handleBreakdownValueChange = (idx, value) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        items[idx].value = value;\n        return {\n          breakdownItems: items\n        };\n      });\n    };\n\n    this.handleBreakdownDateChange = (idx, value) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        items[idx].lastDate = value;\n        return {\n          breakdownItems: items\n        };\n      });\n    };\n\n    this.saveBreakdownToSession = () => {\n      sessionStorage.setItem('breakdownItems', JSON.stringify(this.state.breakdownItems));\n    };\n\n    this.loadBreakdownFromSession = () => {\n      const data = sessionStorage.getItem('breakdownItems');\n      if (data) this.setState({\n        breakdownItems: JSON.parse(data)\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        editingId,\n        formData,\n        quotes\n      } = this.state;\n      if (!formData.customer) return alert(\"Customer is required\");\n      if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\n\n      if (editingId) {\n        await updateDoc(doc(db, 'quotes', editingId), formData);\n      } else {\n        formData.quoteNo = `QT${1000 + quotes.length}`;\n        await addDoc(collection(db, \"quotes\"), { ...this.state.formData,\n          status: \"Entered\",\n          createdAt: serverTimestamp()\n        });\n      }\n\n      this.setState({\n        showForm: false,\n        editingId: null\n      });\n      this.fetchQuotes();\n    };\n\n    this.loadQuotePreview = q => {\n      this.setState({\n        selectedQuote: q,\n        previewMode: true\n      });\n    };\n\n    this.loadQuoteForEdit = quote => {\n      // Prevent editing quotes already converted to order\n      if (quote.status === 'ConvertedToOrder') {\n        alert('This quote has already been converted to an order and cannot be edited.');\n        return;\n      }\n\n      this.setState({\n        formData: { ...quote,\n          lineItems: Array.isArray(quote.lineItems) ? quote.lineItems : []\n        },\n        editingId: quote.id,\n        showForm: true,\n        previewMode: false,\n        activeTab: 'co'\n      }, () => {\n        if (this.customerInputRef.current) {\n          this.customerInputRef.current.value = quote.customer;\n        }\n      });\n    };\n\n    this.convertToOrder = async quote => {\n      await updateDoc(doc(db, \"quotes\", quote.id), {\n        className: \"btn btn-secondary mr-2\",\n        status: \"ConvertedToOrder\"\n      });\n      sessionStorage.setItem('quoteToConvert', JSON.stringify(quote));\n      this.props.history.push('/panelone/Order');\n    };\n\n    this.showQuotePDFWithOrg = async quote => {// (unchanged) kept your existing PDF generation code\n      // ...\n      // (omitted here for brevity in this code block but in your file it's unchanged)\n    };\n\n    this.showOverlay = type => this.setState({\n      overlayType: type,\n      overlaySearch: ''\n    });\n\n    this.hideOverlay = () => this.setState({\n      overlayType: '',\n      overlaySearch: ''\n    });\n\n    this.selectOverlayValue = value => {\n      if (this.state.overlayType === 'customer') {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            customer: value.custname || value.custcode || '',\n            // Use custname or custcode\n            billTo: this.formatAddress(value.billTo),\n            shipTo: this.formatAddress(value.shipTo),\n            currency: value.currency || ''\n          },\n          overlayType: '',\n          overlaySearch: ''\n        }), () => {\n          if (this.customerInputRef.current) {\n            this.customerInputRef.current.value = value.custname || value.custcode || '';\n          }\n        });\n      }\n    };\n\n    this.getMainItemTotal = productId => {\n      const li = (this.state.formData.lineItems || []).find(x => x.itemCode === productId);\n      if (!li) return 0;\n      return parseFloat(li.total || (parseFloat(li.unitPrice || 0) || 0) * (parseFloat(li.qty || 0) || 0)) || 0;\n    };\n\n    this.computeSubProductsAmount = item => {\n      const mainTotal = this.getMainItemTotal(item.productId) || 0;\n      let sum = 0;\n      (item.subProducts || []).forEach(sp => {\n        const spType = sp.type || this.state.breakdownType || 'Amount';\n        const val = parseFloat(sp.value || 0) || 0;\n        if (spType === 'Amount') sum += val;else sum += mainTotal * val / 100;\n      });\n      return sum;\n    };\n\n    this.createEmptySubProduct = (prefillValue = '', type = null) => {\n      return {\n        name: '',\n        value: prefillValue,\n        type: type || this.state.breakdownType || 'Amount',\n        dueDate: ''\n      };\n    };\n\n    this.addSubProductRow = (bIdx, prefillValue = '') => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        const item = { ...items[bIdx]\n        };\n        const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\n        subProducts.push(this.createEmptySubProduct(prefillValue));\n        items[bIdx] = { ...item,\n          subProducts\n        };\n        return {\n          breakdownItems: items\n        };\n      }, this.saveBreakdownToSession);\n    };\n\n    this.deleteSubProductRow = (bIdx, spIdx) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        const item = { ...items[bIdx]\n        };\n        const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\n        subProducts.splice(spIdx, 1);\n        items[bIdx] = { ...item,\n          subProducts\n        };\n        return {\n          breakdownItems: items\n        };\n      }, () => {\n        // After deletion, ensure there's an auto-remaining row if needed\n        this.ensureRemainingAutoRow(bIdx);\n        this.saveBreakdownToSession();\n      });\n    };\n\n    this.handleSubProductValueChange = (bIdx, spIdx, rawValue) => {\n      // rawValue is kept as string to allow free typing (e.g. \"12.\", \"12.5\")\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        const item = { ...items[bIdx]\n        };\n        const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\n        const sp = { ...subProducts[spIdx]\n        };\n        sp.value = rawValue;\n        subProducts[spIdx] = sp;\n        item.subProducts = subProducts;\n        items[bIdx] = item;\n        return {\n          breakdownItems: items,\n          editingSub: {\n            bIdx,\n            spIdx\n          }\n        }; // keep editing marker while typing\n      }, () => {\n        // Do NOT run auto-rebalance while the user is actively editing this sub-row.\n        // ensureRemainingAutoRow now itself checks editingSub and will defer mutation while editing.\n        this.ensureRemainingAutoRow(bIdx);\n        this.saveBreakdownToSession();\n      });\n    };\n\n    this.handleSubProductFieldChange = (bIdx, spIdx, field, val) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        const item = { ...items[bIdx]\n        };\n        const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\n        subProducts[spIdx] = { ...subProducts[spIdx],\n          [field]: val\n        };\n        items[bIdx] = { ...item,\n          subProducts\n        };\n        return {\n          breakdownItems: items\n        };\n      }, this.saveBreakdownToSession);\n    };\n\n    this.ensureRemainingAutoRow = bIdx => {\n      // If user is actively editing a sub-row under the same breakdown index, skip structural changes.\n      if (this.state.editingSub && this.state.editingSub.bIdx === bIdx) {\n        // We still want to compute values for visuals, but we avoid pushing/splicing the array while editing.\n        // This prevents losing focus or overwriting the typed input.\n        return;\n      }\n\n      const items = [...this.state.breakdownItems];\n      const item = { ...items[bIdx]\n      };\n      const mainTotal = this.getMainItemTotal(item.productId) || 0;\n      const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\n      const EPS = 0.01; // Calculate current sum\n\n      let sum = 0;\n      subProducts.forEach(sp => {\n        const t = sp.type || this.state.breakdownType || 'Amount';\n        const v = parseFloat(sp.value || 0) || 0;\n        if (t === 'Amount') sum += v;else sum += mainTotal * v / 100;\n      });\n      const remaining = Math.max(0, mainTotal - sum);\n      const lastIdx = subProducts.length - 1;\n      const lastIsAuto = lastIdx >= 0 && (!subProducts[lastIdx].name || subProducts[lastIdx].name.trim() === '');\n\n      if (remaining > EPS) {\n        const t = this.state.breakdownType || 'Amount';\n        let prefill = '';\n        if (t === 'Amount') prefill = remaining.toFixed(2);else {\n          const pct = mainTotal > 0 ? remaining / mainTotal * 100 : 0;\n          prefill = pct.toFixed(2);\n        }\n\n        if (lastIsAuto) {\n          subProducts[lastIdx] = { ...subProducts[lastIdx],\n            value: prefill,\n            type: t\n          };\n        } else {\n          subProducts.push(this.createEmptySubProduct(prefill, t));\n        }\n      } else {\n        if (lastIsAuto) {\n          subProducts.splice(lastIdx, 1);\n        }\n      }\n\n      items[bIdx] = { ...item,\n        subProducts\n      };\n      this.setState({\n        breakdownItems: items\n      });\n    };\n\n    this.startEditingSub = (bIdx, spIdx) => {\n      this.setState({\n        editingSub: {\n          bIdx,\n          spIdx\n        }\n      });\n    };\n\n    this.stopEditingSub = () => {\n      this.setState({\n        editingSub: null\n      }, () => this.saveBreakdownToSession());\n    };\n\n    this.handleAddSubProducts = (bIdx, count = 1) => {\n      for (let i = 0; i < count; i++) {\n        this.addSubProductRow(bIdx, '');\n      }\n    };\n\n    this.isItemSatisfied = item => {\n      const mainTotal = this.getMainItemTotal(item.productId) || 0;\n      const sum = this.computeSubProductsAmount(item);\n      const EPS = 0.01;\n      return Math.abs(mainTotal - sum) <= EPS;\n    };\n\n    this.renderBreakdownTab = () => {\n      const {\n        breakdownItems,\n        breakdownType,\n        formData\n      } = this.state;\n      const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\n        acc[li.itemCode] = parseFloat(li.total || 0);\n        return acc;\n      }, {});\n      const sumOfItemTotals = Object.values(itemTotals).reduce((sum, val) => sum + val, 0);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 9\n        }\n      }, \"Milestone Breakdown\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 32\n        }\n      }, \"Quote Value:\"), \" \", formData.quoteValue), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 32\n        }\n      }, \"Tax Amount:\"), \" \", formData.taxAmount), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 32\n        }\n      }, \"Sum of Item Totals:\"), \" \", sumOfItemTotals.toFixed(2)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          marginRight: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 13\n        }\n      }, \"Sub-product Type:\"), /*#__PURE__*/React.createElement(\"select\", {\n        value: breakdownType,\n        onChange: e => this.handleBreakdownTypeChange(e.target.value),\n        className: \"form-control form-control-sm\",\n        style: {\n          display: 'inline-block',\n          width: 160\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Percentage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 15\n        }\n      }, \"Percentage\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Amount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 15\n        }\n      }, \"Amount\")))), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          width: 60\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 15\n        }\n      }, \"S.No\"), /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          width: 140\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 15\n        }\n      }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 15\n        }\n      }, \"Desc\"), /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          width: 160\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 15\n        }\n      }, \"Total\"), /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          width: 90\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 15\n        }\n      }, \"+\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 11\n        }\n      }, breakdownItems.map((item, idx) => {\n        const mainItemTotal = itemTotals[item.productId] || 0;\n        const subProducts = item.subProducts || [];\n        const satisfied = this.isItemSatisfied(item);\n        const mainAmountStyle = {\n          textAlign: 'right',\n          color: satisfied ? 'green' : 'red',\n          fontWeight: 600\n        };\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          key: idx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 21\n          }\n        }, item.sno), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 21\n          }\n        }, item.productId), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 21\n          }\n        }, item.desc), /*#__PURE__*/React.createElement(\"td\", {\n          style: mainAmountStyle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 21\n          }\n        }, mainItemTotal.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm btn-outline-primary mr-1\",\n          onClick: () => this.handleAddSubProducts(idx, 1),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 25\n          }\n        }, \"+\"), /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm btn-outline-primary\",\n          onClick: () => this.handleAddSubProducts(idx, 3),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 25\n          }\n        }, \"+3\")))), subProducts.map((sp, spIdx) => {\n          const spId = `${item.productId}_${spIdx + 1}`;\n          const spType = sp.type || breakdownType || 'Amount';\n          const mainTotal = mainItemTotal;\n          let spTotalAmount = 0;\n          const rawVal = parseFloat(sp.value || 0) || 0;\n          if (spType === 'Amount') spTotalAmount = rawVal;else spTotalAmount = mainTotal * rawVal / 100;\n          const valueColor = satisfied ? 'green' : 'red'; // For sub-product rows we keep S.No blank per request\n\n          const editing = this.state.editingSub && this.state.editingSub.bIdx === idx && this.state.editingSub.spIdx === spIdx;\n          return /*#__PURE__*/React.createElement(\"tr\", {\n            key: spId,\n            style: {\n              background: '#f9f9f9'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(\"td\", {\n            style: {\n              paddingLeft: 12\n            },\n            colSpan: 1,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 25\n            }\n          }, \" \", editing ? /*#__PURE__*/React.createElement(\"input\", {\n            className: \"form-control form-control-sm\",\n            value: sp.name,\n            onChange: e => this.handleSubProductFieldChange(idx, spIdx, 'name', e.target.value),\n            onBlur: () => this.stopEditingSub(),\n            autoFocus: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 29\n            }\n          }) : /*#__PURE__*/React.createElement(\"div\", {\n            onDoubleClick: () => this.startEditingSub(idx, spIdx),\n            style: {\n              cursor: 'text'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 29\n            }\n          }, sp.name || /*#__PURE__*/React.createElement(\"em\", {\n            style: {\n              color: '#999'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 43\n            }\n          }, \"--unnamed--\"))), /*#__PURE__*/React.createElement(\"td\", {\n            style: {\n              textAlign: 'left'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"d-flex align-items-center\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              flex: 1,\n              maxWidth: 160\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            className: \"form-control form-control-sm\",\n            value: sp.value,\n            onChange: e => this.handleSubProductValueChange(idx, spIdx, e.target.value),\n            onDoubleClick: () => this.startEditingSub(idx, spIdx),\n            style: {\n              border: 'none',\n              padding: 0,\n              color: valueColor,\n              fontWeight: 600\n            },\n            title: spType === 'Amount' ? 'Amount' : 'Percentage',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 31\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              marginLeft: 8,\n              minWidth: 110\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              fontSize: 12,\n              color: '#444'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 31\n            }\n          }, spType === 'Amount' ? `₹ ${parseFloat(sp.value || 0).toFixed(2)}` : `${parseFloat(sp.value || 0).toFixed(2)}%`)))), /*#__PURE__*/React.createElement(\"td\", {\n            style: {\n              textAlign: 'left',\n              minWidth: 130\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              fontSize: 12\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 29\n            }\n          }, sp.dueDate || '-'), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"d-flex align-items-center\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              marginRight: 8,\n              fontWeight: 600,\n              color: valueColor\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 31\n            }\n          }, `₹ ${spTotalAmount.toFixed(2)}`), /*#__PURE__*/React.createElement(\"button\", {\n            className: \"btn btn-sm btn-outline-danger\",\n            title: \"Remove subproduct\",\n            onClick: () => this.deleteSubProductRow(idx, spIdx),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 31\n            }\n          }, \"-\")))));\n        }));\n      }), breakdownItems.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"5\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 19\n        }\n      }, \"No breakdown items.\")))));\n    };\n\n    this.renderOverlay = () => {\n      const {\n        overlayType,\n        overlaySearch,\n        customers,\n        despatchModes,\n        paymentTerms\n      } = this.state;\n\n      const getFilteredRows = (list, nameKey = 'name', codeKey = 'shortName') => list.filter(item => (item[nameKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()) || (item[codeKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()));\n\n      const handleSelect = item => {\n        if (overlayType === 'customer') {\n          this.selectOverlayValue(item);\n        } else if (overlayType === 'despatchMode') {\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              despatchMode: item.name\n            },\n            overlayType: '',\n            overlaySearch: ''\n          }));\n        } else if (overlayType === 'paymentTerms') {\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              paymentTerms: item.name\n            },\n            overlayType: '',\n            overlaySearch: ''\n          }));\n        }\n      };\n\n      let title = '';\n      let headers = [];\n      let rows = [];\n\n      if (overlayType === 'customer') {\n        title = 'Select Customer';\n        headers = ['Name', 'Code', 'Short Name'];\n        rows = getFilteredRows(customers, 'custname', 'custcode');\n      } else if (overlayType === 'despatchMode') {\n        title = 'Select Despatch Mode';\n        headers = ['Name', 'Short Name'];\n        rows = getFilteredRows(despatchModes);\n      } else if (overlayType === 'paymentTerms') {\n        title = 'Select Payment Terms';\n        headers = ['Name', 'Short Name'];\n        rows = getFilteredRows(paymentTerms);\n      } else {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 11\n        }\n      }, title), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: `Search ${overlayType}...`,\n        value: overlaySearch,\n        onChange: e => this.setState({\n          overlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 17\n        }\n      }, headers.map((h, i) => /*#__PURE__*/React.createElement(\"th\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 42\n        }\n      }, h)))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 15\n        }\n      }, rows.map((item, i) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id || i,\n        onClick: () => handleSelect(item),\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 19\n        }\n      }, headers.map((h, j) => /*#__PURE__*/React.createElement(\"td\", {\n        key: j,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 23\n        }\n      }, overlayType === 'customer' ? h === 'Name' ? item.custname : h === 'Code' ? item.custcode : item.custshortName : h === 'Name' ? item.name : item.shortName)))), rows.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: headers.length,\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 786,\n          columnNumber: 21\n        }\n      }, \"No records found\"))))), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm mt-2\",\n        onClick: this.hideOverlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 11\n        }\n      }, \"Cancel\")));\n    };\n\n    this.renderProductOverlay = () => {\n      const {\n        products,\n        productOverlaySearch,\n        selectedProductIds\n      } = this.state;\n      const filtered = products.filter(p => (p.ptshortName || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) || (p.ptdescription || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) || (p.itemCode || '').toLowerCase().includes(productOverlaySearch.toLowerCase()));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 13\n        }\n      }, \"Select Products\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-success btn-sm\",\n        onClick: () => {\n          const selectedProducts = products.filter(p => this.state.selectedProductIds.includes(p.id));\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              lineItems: [...prev.formData.lineItems, ...selectedProducts.filter(p => !prev.formData.lineItems.some(item => item.id === p.id)).map(p => ({\n                id: p.id,\n                itemCode: p.productId || '',\n                itemDescription: p.ptdescription || '',\n                itemType: p.itemType || '',\n                materialType: p.materialType || '',\n                onHand: p.onHand || 0,\n                taxGroup: p.taxGroup || '',\n                taxGroupName: p.taxGroup || '',\n                custPartNo: p.custPartNo || '',\n                hsnNo: p.hsnNo || '',\n                unitPrice: p.unitPrice || 0,\n                qty: 1,\n                total: (p.unitPrice || 0).toFixed(2)\n              }))]\n            },\n            productOverlayVisible: false,\n            selectedProductIds: []\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 13\n        }\n      }, \"Add Selected\")), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: \"Search products...\",\n        value: productOverlaySearch,\n        onChange: e => this.setState({\n          productOverlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 19\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 19\n        }\n      }, \"Item Desc\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 19\n        }\n      }, \"Item Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 19\n        }\n      }, \"Material Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 19\n        }\n      }, \"On Hand\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 19\n        }\n      }, \"Tax Grp\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 19\n        }\n      }, \"Cust Part No\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 15\n        }\n      }, filtered.map(p => /*#__PURE__*/React.createElement(\"tr\", {\n        key: p.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: selectedProductIds.includes(p.id),\n        onChange: e => {\n          const checked = e.target.checked;\n          this.setState(prev => ({\n            selectedProductIds: checked ? [...prev.selectedProductIds, p.id] : prev.selectedProductIds.filter(id => id !== p.id)\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 21\n        }\n      }, p.productId), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 21\n        }\n      }, p.ptdescription || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 21\n        }\n      }, p.itemType || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 885,\n          columnNumber: 21\n        }\n      }, p.materialType || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 21\n        }\n      }, p.onHand || 0), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 887,\n          columnNumber: 21\n        }\n      }, p.taxGroup || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 21\n        }\n      }, p.custPartNo || ''))), filtered.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 892,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"8\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 21\n        }\n      }, \"No products found\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 899,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 900,\n          columnNumber: 13\n        }\n      }, \"Page 1 of 1\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        onClick: () => this.setState({\n          productOverlayVisible: false,\n          selectedProductIds: []\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 13\n        }\n      }, \"Cancel\"))));\n    };\n\n    this.renderQuoteTable = () =>\n    /*#__PURE__*/\n    // (unchanged from your original)...\n    React.createElement(\"div\", {\n      className: \"card mt-4 full-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 914,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 915,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 916,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 11\n      }\n    }, \"Quotes\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.setState({\n        showForm: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 11\n      }\n    }, \"+ Add Quote\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 920,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 921,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 922,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 923,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 924,\n        columnNumber: 17\n      }\n    }, \"Quote No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 925,\n        columnNumber: 17\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 926,\n        columnNumber: 17\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 927,\n        columnNumber: 17\n      }\n    }, \"Quote Value\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 928,\n        columnNumber: 17\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 929,\n        columnNumber: 17\n      }\n    }, \"Print\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 932,\n        columnNumber: 13\n      }\n    }, this.state.quotes.map((q, i) => {\n      let statusClass = \"badge-secondary\";\n      if (q.status === \"Entered\") statusClass = \"badge-warning\";else if (q.status === \"Submitted\") statusClass = \"badge-info\";else if (q.status === \"ConvertedToOrder\") statusClass = \"badge-success\";else if (q.status === \"Cancelled\") statusClass = \"badge-danger\";\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        style: {\n          fontSize: '14px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 941,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 942,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-link p-0\",\n        onClick: () => this.loadQuotePreview(q),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 23\n        }\n      }, q.quoteNo)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 21\n        }\n      }, q.customer), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 21\n        }\n      }, q.quoteDate), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 952,\n          columnNumber: 21\n        }\n      }, q.quoteValue), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 953,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: `badge ${statusClass}`,\n        style: {\n          fontSize: '14px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 954,\n          columnNumber: 23\n        }\n      }, q.status)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 958,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"mdi mdi-printer menu-icon\",\n        onClick: () => this.showQuotePDFWithOrg(q),\n        style: {\n          fontSize: '24px',\n          color: '#2196F3',\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 959,\n          columnNumber: 23\n        }\n      })));\n    }), this.state.quotes.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 969,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"6\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 969,\n        columnNumber: 21\n      }\n    }, \"No quotes found.\")))))));\n\n    this.renderQuoteForm = () => {\n      const {\n        formData,\n        overlayType,\n        productOverlayVisible,\n        showTaxOverlay,\n        taxGroups,\n        recalculateTotals\n      } = this.state;\n      const isFOB = formData.impExp === 'FOB';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 983,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card full-height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 984,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: 'auto',\n          padding: '24px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 985,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 986,\n          columnNumber: 13\n        }\n      }, \"Quote Form\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"nav nav-tabs\",\n        role: \"tablist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 987,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 988,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'co' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'co'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 989,\n          columnNumber: 17\n        }\n      }, \"CO Details\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 991,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'breakdown' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'breakdown'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 992,\n          columnNumber: 15\n        }\n      }, \"Breakdown\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 994,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'commercial'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 995,\n          columnNumber: 17\n        }\n      }, \"Commercial Terms\"))), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"form-sample\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 998,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tab-content pt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 999,\n          columnNumber: 15\n        }\n      }, this.state.activeTab === 'co' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1003,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1005,\n          columnNumber: 25\n        }\n      }, \"Quote No\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.quoteNo,\n        onChange: e => this.handleInputChange('quoteNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1006,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1008,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1009,\n          columnNumber: 25\n        }\n      }, \"Quote Date\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"date\",\n        className: \"form-control form-control-sm\",\n        value: formData.quoteDate,\n        onChange: e => this.handleInputChange('quoteDate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1010,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1012,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1013,\n          columnNumber: 25\n        }\n      }, \"Quote Type\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.quoteType,\n        onChange: e => this.handleInputChange('quoteType', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1014,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1015,\n          columnNumber: 27\n        }\n      }, \"Standard\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 27\n        }\n      }, \"Manual\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1019,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1020,\n          columnNumber: 25\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.status,\n        style: {\n          backgroundColor: '#fff'\n        },\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1021,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1027,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1028,\n          columnNumber: 29\n        }\n      }, \"Line Item\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-sm\",\n        onClick: () => this.setState({\n          productOverlayVisible: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1029,\n          columnNumber: 29\n        }\n      }, \"+ Add Product\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-responsive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1033,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1035,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1036,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1037,\n          columnNumber: 15\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1038,\n          columnNumber: 15\n        }\n      }, \"Item Desc\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1039,\n          columnNumber: 15\n        }\n      }, \"Cust Part No\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1040,\n          columnNumber: 15\n        }\n      }, \"HSN No\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1041,\n          columnNumber: 15\n        }\n      }, \"UOM\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1042,\n          columnNumber: 15\n        }\n      }, \"On Hand\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1043,\n          columnNumber: 15\n        }\n      }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1044,\n          columnNumber: 15\n        }\n      }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1045,\n          columnNumber: 15\n        }\n      }, \"Tax Id\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1046,\n          columnNumber: 15\n        }\n      }, \"Item Total\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1049,\n          columnNumber: 11\n        }\n      }, formData.lineItems.map((item, idx) => {\n        const itemTotal = item.unitPrice * item.qty;\n        const taxDetails = getTaxDetailsFromGroup(item.taxGroupName, this.state.taxGroups);\n        const taxAmt = itemTotal * taxDetails.totalPercent / 100 + itemTotal * taxDetails.totalAmount;\n        const totalWithTax = itemTotal + taxAmt;\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: item.id || idx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1057,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1058,\n            columnNumber: 19\n          }\n        }, item.itemCode), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1059,\n            columnNumber: 19\n          }\n        }, item.itemDescription), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1060,\n            columnNumber: 19\n          }\n        }, item.custPartNo), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1061,\n            columnNumber: 19\n          }\n        }, item.hsnNo), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1062,\n            columnNumber: 19\n          }\n        }, item.uom), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1063,\n            columnNumber: 19\n          }\n        }, item.onHand), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1064,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          value: item.unitPrice,\n          onChange: e => this.handleLineItemChange(idx, 'unitPrice', e.target.value),\n          style: {\n            width: 80\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1065,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1072,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          value: item.qty,\n          onChange: e => this.handleLineItemChange(idx, 'qty', e.target.value),\n          style: {\n            width: 60\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1073,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1081,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-outline-secondary btn-sm btn-rounded btn-icon\",\n          style: {\n            padding: '2px 6px',\n            fontSize: '12px',\n            lineHeight: '1'\n          },\n          onClick: () => this.setState({\n            showTaxOverlay: true,\n            currentTaxLineIdx: idx\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1082,\n            columnNumber: 19\n          }\n        }, \"+\"), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            fontSize: '13px',\n            marginTop: '4px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1090,\n            columnNumber: 19\n          }\n        }, (item.taxGroupNames || []).join(', ') || '-')), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1094,\n            columnNumber: 15\n          }\n        }, parseFloat(item.total || 0).toFixed(2)));\n      }))))), this.state.activeTab === 'commercial' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1106,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1107,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1108,\n          columnNumber: 25\n        }\n      }, \"Bill To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"3\",\n        value: formData.billTo,\n        onChange: e => this.handleInputChange('billTo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1109,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1116,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1117,\n          columnNumber: 25\n        }\n      }, \"Ship To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"3\",\n        value: formData.shipTo,\n        onChange: e => this.handleInputChange('shipTo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1118,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1126,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1127,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1128,\n          columnNumber: 25\n        }\n      }, \"Despatch Mode\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1129,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: formData.despatchMode,\n        readOnly: true,\n        onClick: () => !isFOB && this.showOverlay('despatchMode'),\n        style: {\n          cursor: isFOB ? 'not-allowed' : 'pointer',\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1130,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1138,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        disabled: isFOB,\n        onClick: () => this.showOverlay('despatchMode'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1139,\n          columnNumber: 29\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1151,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1152,\n          columnNumber: 25\n        }\n      }, \"Payment Terms\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1153,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: formData.paymentTerms,\n        readOnly: true,\n        onClick: () => !isFOB && this.showOverlay('paymentTerms'),\n        style: {\n          cursor: isFOB ? 'not-allowed' : 'pointer',\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1154,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1162,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        disabled: isFOB,\n        onClick: () => this.showOverlay('paymentTerms'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1163,\n          columnNumber: 29\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1175,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1176,\n          columnNumber: 25\n        }\n      }, \"Freight Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.freightCharges,\n        onChange: e => this.handleInputChange('freightCharges', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1177,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1186,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1187,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1188,\n          columnNumber: 25\n        }\n      }, \"Tax %\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxPercent,\n        onChange: e => this.handleInputChange('taxPercent', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1189,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1197,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1198,\n          columnNumber: 25\n        }\n      }, \"Freight Tax Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.freighttaxAmount,\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1199,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1206,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1207,\n          columnNumber: 25\n        }\n      }, \"Packing Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.packingCharges,\n        onChange: e => this.handleInputChange('packingCharges', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1208,\n          columnNumber: 25\n        }\n      })))), this.state.activeTab === 'breakdown' && this.renderBreakdownTab()), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fixed-card-footer text-right p-3 border-top bg-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1223,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1224,\n          columnNumber: 17\n        }\n      }, \"Save All Details\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: () => this.setState({\n          showForm: false,\n          editingId: null\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1225,\n          columnNumber: 17\n        }\n      }, \"Cancel\"))), this.renderOverlay(), productOverlayVisible && this.renderProductOverlay(), this.state.showTaxOverlay && this.renderTaxOverlay())));\n    };\n\n    this.renderQuotePreview = () => {\n      var _q$lineItems;\n\n      const q = this.state.selectedQuote;\n      if (!q) return null;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card mt-4 full-height p-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1248,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1249,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1250,\n          columnNumber: 11\n        }\n      }, \"Quote Preview - \", q.quoteNo), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1251,\n          columnNumber: 11\n        }\n      }, q.status !== 'ConvertedToOrder' && /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-info mr-2\",\n        onClick: () => this.loadQuoteForEdit(q),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1253,\n          columnNumber: 15\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-success\",\n        onClick: () => this.convertToOrder(q),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1255,\n          columnNumber: 13\n        }\n      }, \"Convert to Order\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1258,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1259,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1259,\n          columnNumber: 37\n        }\n      }, \"Customer:\"), \" \", q.customer), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1260,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1260,\n          columnNumber: 37\n        }\n      }, \"Date:\"), \" \", q.quoteDate), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1261,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1261,\n          columnNumber: 37\n        }\n      }, \"Status:\"), \" \", q.status)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1263,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1264,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1264,\n          columnNumber: 37\n        }\n      }, \"Bill To:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1264,\n          columnNumber: 52\n        }\n      }), q.billTo), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1265,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1265,\n          columnNumber: 37\n        }\n      }, \"Ship To:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1265,\n          columnNumber: 52\n        }\n      }), q.shipTo)), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1267,\n          columnNumber: 9\n        }\n      }, \"Line Items\"), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1268,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1269,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1270,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1271,\n          columnNumber: 15\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1271,\n          columnNumber: 33\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1271,\n          columnNumber: 53\n        }\n      }, \"Qty\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1271,\n          columnNumber: 65\n        }\n      }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1271,\n          columnNumber: 84\n        }\n      }, \"Total\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1274,\n          columnNumber: 11\n        }\n      }, (_q$lineItems = q.lineItems) === null || _q$lineItems === void 0 ? void 0 : _q$lineItems.map((item, i) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1276,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1277,\n          columnNumber: 17\n        }\n      }, item.itemCode), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1278,\n          columnNumber: 17\n        }\n      }, item.itemDescription), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1279,\n          columnNumber: 17\n        }\n      }, item.qty), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1280,\n          columnNumber: 17\n        }\n      }, item.unitPrice), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1281,\n          columnNumber: 17\n        }\n      }, item.total))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1286,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1286,\n          columnNumber: 37\n        }\n      }, \"Total:\"), \" \", q.quoteValue), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary mt-3\",\n        onClick: () => this.setState({\n          previewMode: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1287,\n          columnNumber: 9\n        }\n      }, \"Back to List\"));\n    };\n  }\n\n  componentDidMount() {\n    bsCustomFileInput.init();\n    this.fetchQuotes();\n    this.fetchCustomers();\n    this.fetchProducts();\n    this.fetchDespatchModes();\n    this.fetchPaymentTerms();\n    this.fetchTaxGroups();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevLineItems = prevState.formData.lineItems || [];\n    const currLineItems = this.state.formData.lineItems || [];\n\n    if (prevLineItems.length !== currLineItems.length) {\n      const prevBreakdownMap = {};\n      (this.state.breakdownItems || []).forEach(bi => {\n        prevBreakdownMap[bi.productId] = bi;\n      });\n      this.setState({\n        breakdownItems: currLineItems.map((li, idx) => {\n          var _prevBreakdownMap$li$, _prevBreakdownMap$li$2, _prevBreakdownMap$li$3;\n\n          return {\n            sno: idx + 1,\n            productId: li.itemCode,\n            desc: li.itemDescription,\n            value: ((_prevBreakdownMap$li$ = prevBreakdownMap[li.itemCode]) === null || _prevBreakdownMap$li$ === void 0 ? void 0 : _prevBreakdownMap$li$.value) || '',\n            lastDate: ((_prevBreakdownMap$li$2 = prevBreakdownMap[li.itemCode]) === null || _prevBreakdownMap$li$2 === void 0 ? void 0 : _prevBreakdownMap$li$2.lastDate) || '',\n            subProducts: ((_prevBreakdownMap$li$3 = prevBreakdownMap[li.itemCode]) === null || _prevBreakdownMap$li$3 === void 0 ? void 0 : _prevBreakdownMap$li$3.subProducts) || []\n          };\n        })\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1294,\n        columnNumber: 7\n      }\n    }, this.state.previewMode ? this.renderQuotePreview() : this.state.showForm ? this.renderQuoteForm() : this.renderQuoteTable());\n  }\n\n}\n\nexport default withRouter(Quote);","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/panelone/Quote.js"],"names":["React","Component","Form","bsCustomFileInput","db","collection","getDocs","addDoc","doc","updateDoc","serverTimestamp","withRouter","html2canvas","jsPDF","recalculateTotals","getTaxDetailsFromGroup","toWords","Box","Typography","Table","TableHead","TableBody","TableRow","TableCell","Paper","TableContainer","amount","amountWords","console","log","Quote","state","activeTab","quotes","customers","products","despatchModes","paymentTerms","showForm","showTaxOverlay","currentTaxLineIdx","editingId","overlayType","overlaySearch","productOverlayVisible","productOverlaySearch","selectedProductIds","selectedTaxGroups","taxComponents","taxGroups","previewMode","selectedQuote","breakdownItems","breakdownType","breakdownSelectAll","editingSub","formData","quoteNo","quoteDate","Date","toISOString","split","quoteType","customer","status","choose","qrefNo","impExp","currency","conversionRate","taxAmount","quoteValue","billTo","shipTo","despatchMode","freightCharges","freighttaxAmount","taxPercent","packingCharges","lineItems","customerInputRef","createRef","formatAddress","addr","address","city","country","filter","Boolean","join","zip","handleLineItemChange","idx","field","value","updatedItems","updatedLineItems","setState","prev","fetchTaxGroups","snap","data","docs","map","id","fetchQuotes","reverse","fetchCustomers","fetchProducts","fetchDespatchModes","fetchPaymentTerms","toggleTaxGroupSelection","groupName","lineIdx","checked","item","taxGroupNames","Array","isArray","includes","push","g","taxGroupName","handleInputChange","handleBreakdownSelectAll","selected","handleBreakdownRowSelect","items","handleBreakdownTypeChange","type","handleBreakdownValueChange","handleBreakdownDateChange","lastDate","saveBreakdownToSession","sessionStorage","setItem","JSON","stringify","loadBreakdownFromSession","getItem","parse","handleSubmit","e","preventDefault","alert","length","createdAt","loadQuotePreview","q","loadQuoteForEdit","quote","current","convertToOrder","className","props","history","showQuotePDFWithOrg","showOverlay","hideOverlay","selectOverlayValue","custname","custcode","getMainItemTotal","productId","li","find","x","itemCode","parseFloat","total","unitPrice","qty","computeSubProductsAmount","mainTotal","sum","subProducts","forEach","sp","spType","val","createEmptySubProduct","prefillValue","name","dueDate","addSubProductRow","bIdx","deleteSubProductRow","spIdx","splice","ensureRemainingAutoRow","handleSubProductValueChange","rawValue","handleSubProductFieldChange","EPS","t","v","remaining","Math","max","lastIdx","lastIsAuto","trim","prefill","toFixed","pct","startEditingSub","stopEditingSub","handleAddSubProducts","count","i","isItemSatisfied","abs","renderBreakdownTab","itemTotals","reduce","acc","sumOfItemTotals","Object","values","marginRight","target","display","width","mainItemTotal","satisfied","mainAmountStyle","textAlign","color","fontWeight","sno","desc","spId","spTotalAmount","rawVal","valueColor","editing","background","paddingLeft","cursor","flex","maxWidth","border","padding","marginLeft","minWidth","fontSize","alignItems","justifyContent","renderOverlay","getFilteredRows","list","nameKey","codeKey","toLowerCase","handleSelect","title","headers","rows","maxHeight","overflowY","h","j","custshortName","shortName","renderProductOverlay","filtered","p","ptshortName","ptdescription","selectedProducts","some","itemDescription","itemType","materialType","onHand","taxGroup","custPartNo","hsnNo","renderQuoteTable","statusClass","renderQuoteForm","isFOB","backgroundColor","itemTotal","taxDetails","taxAmt","totalPercent","totalAmount","totalWithTax","uom","lineHeight","marginTop","renderTaxOverlay","renderQuotePreview","componentDidMount","init","componentDidUpdate","prevProps","prevState","prevLineItems","currLineItems","prevBreakdownMap","bi","render"],"mappings":"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","sourcesContent":["// Quote.js (updated - breakdown inline editing + auto-remaining + validation colors)\r\nimport React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport bsCustomFileInput from 'bs-custom-file-input';\r\nimport { db } from '../../firebase';\r\nimport { collection, getDocs, addDoc, doc, updateDoc,serverTimestamp } from 'firebase/firestore';\r\nimport { withRouter } from 'react-router-dom';\r\nimport html2canvas from 'html2canvas';\r\nimport { jsPDF } from 'jspdf';\r\nimport { recalculateTotals, getTaxDetailsFromGroup } from './calculation';\r\nimport { toWords } from 'number-to-words';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\n\r\nconst amount = 12345678;\r\nconst amountWords = `INR ${toWords(amount)} Only`;\r\n\r\nconsole.log(amountWords);\r\n\r\nclass Quote extends Component {\r\n  state = {\r\n    activeTab: 'co',\r\n    quotes: [],\r\n    customers: [],\r\n    products: [],\r\n    despatchModes: [],\r\n    paymentTerms: [],\r\n    showForm: false,\r\n    showTaxOverlay: false,\r\n    currentTaxLineIdx: null,\r\n    editingId: null,\r\n    overlayType: '',\r\n    overlaySearch: '',\r\n    productOverlayVisible: false,\r\n    productOverlaySearch: '',\r\n    selectedProductIds: [],\r\n    selectedTaxGroups: [],\r\n    taxComponents: [],\r\n    taxGroups:[],\r\n    previewMode: false,\r\n    selectedQuote: null,\r\n    breakdownItems: [], \r\n    breakdownType: 'Percentage', // global selector near summary\r\n    breakdownSelectAll: false,\r\n    // removed modal usage for sub-products; inline editing state:\r\n    editingSub: null, // { breakdownIdx, subIdx } when editing inline\r\n    formData: {\r\n      quoteNo: '',\r\n      quoteDate: new Date().toISOString().split('T')[0],\r\n      quoteType: 'Standard',\r\n      customer: '',\r\n      status: 'Entered', // Static 'Entered'\r\n      choose: 'Service',\r\n      qrefNo: '',\r\n      impExp: 'None',\r\n      currency: '',\r\n      conversionRate: '',\r\n      taxAmount: '',\r\n      quoteValue: '',\r\n      billTo: '',\r\n      shipTo: '',\r\n      despatchMode: 'By Air',\r\n      paymentTerms: '',\r\n      freightCharges: '',\r\n      freighttaxAmount: '',\r\n      taxPercent: '',\r\n      packingCharges: '',\r\n      lineItems: [],\r\n    }\r\n  };\r\n  customerInputRef = React.createRef();\r\n\r\n  // Helper to format address for Bill To / Ship To\r\n  formatAddress = (addr) => {\r\n    if (!addr) return '';\r\n    if (typeof addr === 'string') return addr;\r\n    return [\r\n      addr.address,\r\n      [addr.city, addr.state, addr.country].filter(Boolean).join(', '),\r\n      addr.zip\r\n    ].filter(Boolean).join('\\n');\r\n  };\r\n\r\n  componentDidMount() {\r\n    bsCustomFileInput.init();\r\n    this.fetchQuotes();\r\n    this.fetchCustomers();\r\n    this.fetchProducts();\r\n    this.fetchDespatchModes();\r\n    this.fetchPaymentTerms();\r\n    this.fetchTaxGroups();\r\n  }\r\n\r\n  handleLineItemChange = (idx, field, value) => {\r\n    const updatedItems = [...this.state.formData.lineItems];\r\n    updatedItems[idx] = { ...updatedItems[idx], [field]: value };\r\n    const { updatedLineItems, freighttaxAmount, taxAmount, quoteValue } = recalculateTotals({\r\n      lineItems: updatedItems,\r\n      freightCharges: this.state.formData.freightCharges,\r\n      packingCharges: this.state.formData.packingCharges,\r\n      taxPercent: this.state.formData.taxPercent,\r\n      taxGroups: this.state.taxGroups\r\n    });\r\n    this.setState(prev => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        lineItems: updatedLineItems,\r\n        freighttaxAmount,\r\n        taxAmount,\r\n        quoteValue\r\n      }\r\n    }));\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevLineItems = prevState.formData.lineItems || [];\r\n    const currLineItems = this.state.formData.lineItems || [];\r\n    if (prevLineItems.length !== currLineItems.length) {\r\n      const prevBreakdownMap = {};\r\n      (this.state.breakdownItems || []).forEach(bi => {\r\n        prevBreakdownMap[bi.productId] = bi;\r\n      });\r\n      this.setState({\r\n        breakdownItems: currLineItems.map((li, idx) => ({\r\n\r\n          sno: idx + 1,\r\n          productId: li.itemCode,\r\n          desc: li.itemDescription,\r\n          value: prevBreakdownMap[li.itemCode]?.value || '',\r\n          lastDate: prevBreakdownMap[li.itemCode]?.lastDate || '',\r\n          subProducts: prevBreakdownMap[li.itemCode]?.subProducts || []\r\n        }))\r\n      });\r\n    }\r\n  }\r\n\r\n  fetchTaxGroups = async () => {\r\n    const snap = await getDocs(collection(db, 'taxGroups'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ taxGroups: data });\r\n  };\r\n\r\n  fetchQuotes = async () => {\r\n    const snap = await getDocs(collection(db, 'quotes'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ quotes: data.reverse() });\r\n  };\r\n\r\n  fetchCustomers = async () => {\r\n    const snap = await getDocs(collection(db, 'customers'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ customers: data });\r\n  };\r\n\r\n  fetchProducts = async () => {\r\n    const snap = await getDocs(collection(db, 'products'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ products: data });\r\n  };\r\n  fetchDespatchModes = async () => {\r\n    const snap = await getDocs(collection(db, 'modes'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ despatchModes: data });\r\n  };\r\n\r\n  fetchPaymentTerms = async () => {\r\n    const snap = await getDocs(collection(db, 'paymentTerms'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ paymentTerms: data });\r\n  };\r\n\r\n  toggleTaxGroupSelection = (groupName, lineIdx, checked) => {\r\n    this.setState(prev => {\r\n      const lineItems = [...prev.formData.lineItems];\r\n      const item = { ...lineItems[lineIdx] };\r\n      let taxGroupNames = Array.isArray(item.taxGroupNames) ? [...item.taxGroupNames] : [];\r\n      if (checked) {\r\n        if (!taxGroupNames.includes(groupName)) taxGroupNames.push(groupName);\r\n      } else {\r\n        taxGroupNames = taxGroupNames.filter(g => g !== groupName);\r\n      }\r\n      item.taxGroupNames = taxGroupNames;\r\n      item.taxGroupName = taxGroupNames.join(', ');\r\n      lineItems[lineIdx] = item;\r\n      const { updatedLineItems, freighttaxAmount, taxAmount, quoteValue } = recalculateTotals({\r\n        lineItems,\r\n        freightCharges: prev.formData.freightCharges,\r\n        packingCharges: prev.formData.packingCharges,\r\n        taxPercent: prev.formData.taxPercent,\r\n        taxGroups: prev.taxGroups\r\n      });\r\n\r\n      return {\r\n        formData: {\r\n          ...prev.formData,\r\n          lineItems: updatedLineItems,\r\n          freighttaxAmount,\r\n          taxAmount,\r\n          quoteValue\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  handleInputChange = (field, value) => {\r\n    this.setState(prev => ({\r\n      formData: { ...prev.formData, [field]: value }\r\n    }), () => {\r\n      if (['freightCharges', 'taxPercent', 'packingCharges'].includes(field)) {\r\n        const { updatedLineItems, freighttaxAmount, taxAmount, quoteValue } = recalculateTotals({\r\n          lineItems: this.state.formData.lineItems,\r\n          freightCharges: this.state.formData.freightCharges,\r\n          packingCharges: this.state.formData.packingCharges,\r\n          taxPercent: this.state.formData.taxPercent,\r\n          taxGroups: this.state.taxGroups\r\n        });\r\n        this.setState(prev => ({\r\n          formData: {\r\n            ...prev.formData,\r\n            lineItems: updatedLineItems,\r\n            freighttaxAmount,\r\n            taxAmount,\r\n            quoteValue\r\n          }\r\n        }));\r\n      }\r\n    });\r\n  };\r\n\r\n  handleBreakdownSelectAll = (checked) => {\r\n    this.setState(prev => ({\r\n      breakdownSelectAll: checked,\r\n      breakdownItems: prev.breakdownItems.map(item => ({ ...item, selected: checked }))\r\n    }));\r\n  };\r\n  handleBreakdownRowSelect = (idx, checked) => {\r\n    this.setState(prev => {\r\n      const items = [...prev.breakdownItems];\r\n      items[idx].selected = checked;\r\n      return { breakdownItems: items };\r\n    });\r\n  };\r\n\r\n  // Handler for per/amt dropdown (global)\r\n  handleBreakdownTypeChange = (type) => {\r\n    this.setState({ breakdownType: type });\r\n  };\r\n\r\n  // Handler for per/amt value (for parent breakdown item)\r\n  handleBreakdownValueChange = (idx, value) => {\r\n    this.setState(prev => {\r\n      const items = [...prev.breakdownItems];\r\n      items[idx].value = value;\r\n      return { breakdownItems: items };\r\n    });\r\n  };\r\n\r\n  // Handler for last date\r\n  handleBreakdownDateChange = (idx, value) => {\r\n    this.setState(prev => {\r\n      const items = [...prev.breakdownItems];\r\n      items[idx].lastDate = value;\r\n      return { breakdownItems: items };\r\n    });\r\n  };\r\n\r\n  saveBreakdownToSession = () => {\r\n    sessionStorage.setItem('breakdownItems', JSON.stringify(this.state.breakdownItems));\r\n  };\r\n  loadBreakdownFromSession = () => {\r\n    const data = sessionStorage.getItem('breakdownItems');\r\n    if (data) this.setState({ breakdownItems: JSON.parse(data) });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { editingId, formData, quotes } = this.state;\r\n    if (!formData.customer) return alert(\"Customer is required\");\r\n    if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\r\n\r\n    if (editingId) {\r\n      await updateDoc(doc(db, 'quotes', editingId), formData);\r\n    } else {\r\n      formData.quoteNo = `QT${1000 + quotes.length}`;\r\n      await addDoc(collection(db, \"quotes\"), {\r\n        ...this.state.formData,\r\n        status: \"Entered\",   \r\n        createdAt: serverTimestamp()\r\n      });\r\n\r\n    }\r\n    this.setState({ showForm: false, editingId: null });\r\n    this.fetchQuotes();\r\n  };\r\n\r\n  loadQuotePreview = (q) => {\r\n    this.setState({\r\n      selectedQuote: q,\r\n      previewMode: true\r\n    });\r\n  };\r\n\r\n  loadQuoteForEdit = (quote) => {\r\n  // Prevent editing quotes already converted to order\r\n  if (quote.status === 'ConvertedToOrder') {\r\n    alert('This quote has already been converted to an order and cannot be edited.');\r\n    return;\r\n  }\r\n\r\n  this.setState({\r\n    formData: {\r\n      ...quote,\r\n      lineItems: Array.isArray(quote.lineItems) ? quote.lineItems : []\r\n    },\r\n    editingId: quote.id,\r\n    showForm: true,\r\n    previewMode: false,\r\n    activeTab: 'co'\r\n  }, () => {\r\n    if (this.customerInputRef.current) {\r\n      this.customerInputRef.current.value = quote.customer;\r\n    }\r\n  });\r\n};\r\n\r\n\r\n  convertToOrder = async (quote) => {\r\n    await updateDoc(doc(db, \"quotes\", quote.id), {\r\n      className:\"btn btn-secondary mr-2\" ,\r\n      status: \"ConvertedToOrder\"\r\n    });\r\n    sessionStorage.setItem('quoteToConvert', JSON.stringify(quote));\r\n   this.props.history.push('/panelone/Order');\r\n  };\r\n\r\n  showQuotePDFWithOrg = async (quote) => {\r\n    // (unchanged) kept your existing PDF generation code\r\n    // ...\r\n    // (omitted here for brevity in this code block but in your file it's unchanged)\r\n  };\r\n\r\n  showOverlay = (type) => this.setState({ overlayType: type, overlaySearch: '' });\r\n  hideOverlay = () => this.setState({ overlayType: '', overlaySearch: '' });\r\n\r\n  selectOverlayValue = (value) => {\r\n    if (this.state.overlayType === 'customer') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          customer: value.custname || value.custcode || '', // Use custname or custcode\r\n          billTo: this.formatAddress(value.billTo),\r\n          shipTo: this.formatAddress(value.shipTo),\r\n          currency: value.currency || '',\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }), () => {\r\n        if (this.customerInputRef.current) {\r\n          this.customerInputRef.current.value = value.custname || value.custcode || '';\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  // ---------------------------\r\n  // BREAKDOWN / SUB-PRODUCT HELPERS\r\n  // ---------------------------\r\n\r\n  // compute main item total from formData.lineItems (map by productId)\r\n  getMainItemTotal = (productId) => {\r\n    const li = (this.state.formData.lineItems || []).find(x => x.itemCode === productId);\r\n    if (!li) return 0;\r\n    return parseFloat(li.total || ((parseFloat(li.unitPrice || 0) || 0) * (parseFloat(li.qty || 0) || 0))) || 0;\r\n  };\r\n\r\n  // compute subProducts total (in amount) given item and its subProducts\r\n  computeSubProductsAmount = (item) => {\r\n    const mainTotal = this.getMainItemTotal(item.productId) || 0;\r\n    let sum = 0;\r\n    (item.subProducts || []).forEach(sp => {\r\n      const spType = sp.type || this.state.breakdownType || 'Amount';\r\n      const val = parseFloat(sp.value || 0) || 0;\r\n      if (spType === 'Amount') sum += val;\r\n      else sum += (mainTotal * val / 100);\r\n    });\r\n    return sum;\r\n  };\r\n\r\n  // helper to create a new blank subproduct (with type according to global breakdownType)\r\n  createEmptySubProduct = (prefillValue = '', type = null) => {\r\n    return {\r\n      name: '',\r\n      value: prefillValue,\r\n      type: type || this.state.breakdownType || 'Amount',\r\n      dueDate: ''\r\n    };\r\n  };\r\n\r\n  // Add an empty sub-product row under a breakdown item\r\n  addSubProductRow = (bIdx, prefillValue = '') => {\r\n    this.setState(prev => {\r\n      const items = [...prev.breakdownItems];\r\n      const item = { ...items[bIdx] };\r\n      const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\r\n      subProducts.push(this.createEmptySubProduct(prefillValue));\r\n      items[bIdx] = { ...item, subProducts };\r\n      return { breakdownItems: items };\r\n    }, this.saveBreakdownToSession);\r\n  };\r\n\r\n  // Delete a sub-product row\r\n  deleteSubProductRow = (bIdx, spIdx) => {\r\n    this.setState(prev => {\r\n      const items = [...prev.breakdownItems];\r\n      const item = { ...items[bIdx] };\r\n      const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\r\n      subProducts.splice(spIdx, 1);\r\n      items[bIdx] = { ...item, subProducts };\r\n      return { breakdownItems: items };\r\n    }, () => {\r\n      // After deletion, ensure there's an auto-remaining row if needed\r\n      this.ensureRemainingAutoRow(bIdx);\r\n      this.saveBreakdownToSession();\r\n    });\r\n  };\r\n\r\n  // When user changes a sub-product value inline\r\n // When user changes a sub-product value inline\r\nhandleSubProductValueChange = (bIdx, spIdx, rawValue) => {\r\n  // rawValue is kept as string to allow free typing (e.g. \"12.\", \"12.5\")\r\n  this.setState(prev => {\r\n    const items = [...prev.breakdownItems];\r\n    const item = { ...items[bIdx] };\r\n    const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\r\n    const sp = { ...subProducts[spIdx] };\r\n\r\n    sp.value = rawValue;\r\n    subProducts[spIdx] = sp;\r\n    item.subProducts = subProducts;\r\n    items[bIdx] = item;\r\n\r\n    return { breakdownItems: items, editingSub: { bIdx, spIdx } }; // keep editing marker while typing\r\n  }, () => {\r\n    // Do NOT run auto-rebalance while the user is actively editing this sub-row.\r\n    // ensureRemainingAutoRow now itself checks editingSub and will defer mutation while editing.\r\n    this.ensureRemainingAutoRow(bIdx);\r\n    this.saveBreakdownToSession();\r\n  });\r\n};\r\n\r\n\r\n  // Inline edit of name or dueDate\r\n  handleSubProductFieldChange = (bIdx, spIdx, field, val) => {\r\n    this.setState(prev => {\r\n      const items = [...prev.breakdownItems];\r\n      const item = { ...items[bIdx] };\r\n      const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\r\n      subProducts[spIdx] = { ...subProducts[spIdx], [field]: val };\r\n      items[bIdx] = { ...item, subProducts };\r\n      return { breakdownItems: items };\r\n    }, this.saveBreakdownToSession);\r\n  };\r\n\r\n  // Ensure there's an \"auto remaining\" row (or remove it) such that sum of subProducts + auto == mainTotal\r\n // Ensure there's an \"auto remaining\" row (or remove it) such that sum of subProducts + auto == mainTotal\r\nensureRemainingAutoRow = (bIdx) => {\r\n  // If user is actively editing a sub-row under the same breakdown index, skip structural changes.\r\n  if (this.state.editingSub && this.state.editingSub.bIdx === bIdx) {\r\n    // We still want to compute values for visuals, but we avoid pushing/splicing the array while editing.\r\n    // This prevents losing focus or overwriting the typed input.\r\n    return;\r\n  }\r\n\r\n  const items = [...this.state.breakdownItems];\r\n  const item = { ...items[bIdx] };\r\n  const mainTotal = this.getMainItemTotal(item.productId) || 0;\r\n  const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\r\n  const EPS = 0.01;\r\n\r\n  // Calculate current sum\r\n  let sum = 0;\r\n  subProducts.forEach(sp => {\r\n    const t = sp.type || this.state.breakdownType || 'Amount';\r\n    const v = parseFloat(sp.value || 0) || 0;\r\n    if (t === 'Amount') sum += v;\r\n    else sum += (mainTotal * v / 100);\r\n  });\r\n\r\n  const remaining = Math.max(0, mainTotal - sum);\r\n\r\n  const lastIdx = subProducts.length - 1;\r\n  const lastIsAuto = lastIdx >= 0 && (!subProducts[lastIdx].name || subProducts[lastIdx].name.trim() === '');\r\n\r\n  if (remaining > EPS) {\r\n    const t = this.state.breakdownType || 'Amount';\r\n    let prefill = '';\r\n    if (t === 'Amount') prefill = remaining.toFixed(2);\r\n    else {\r\n      const pct = mainTotal > 0 ? (remaining / mainTotal * 100) : 0;\r\n      prefill = pct.toFixed(2);\r\n    }\r\n\r\n    if (lastIsAuto) {\r\n      subProducts[lastIdx] = { ...subProducts[lastIdx], value: prefill, type: t };\r\n    } else {\r\n      subProducts.push(this.createEmptySubProduct(prefill, t));\r\n    }\r\n  } else {\r\n    if (lastIsAuto) {\r\n      subProducts.splice(lastIdx, 1);\r\n    }\r\n  }\r\n\r\n  items[bIdx] = { ...item, subProducts };\r\n  this.setState({ breakdownItems: items });\r\n};\r\n\r\n\r\n  // Toggle editing sub product inline (double click to start editing)\r\n startEditingSub = (bIdx, spIdx) => {\r\n  this.setState({ editingSub: { bIdx, spIdx } });\r\n};\r\n\r\nstopEditingSub = () => {\r\n  this.setState({ editingSub: null }, () => this.saveBreakdownToSession());\r\n};\r\n\r\n\r\n  // Add sub-product rows programmatically (used by + button)\r\n  handleAddSubProducts = (bIdx, count = 1) => {\r\n    for (let i=0;i<count;i++) {\r\n      this.addSubProductRow(bIdx, '');\r\n    }\r\n  };\r\n\r\n  // Render helpers for color states\r\n  isItemSatisfied = (item) => {\r\n    const mainTotal = this.getMainItemTotal(item.productId) || 0;\r\n    const sum = this.computeSubProductsAmount(item);\r\n    const EPS = 0.01;\r\n    return Math.abs(mainTotal - sum) <= EPS;\r\n  };\r\n\r\n  // ---------------------------\r\n  // RENDER BREAKDOWN TAB (updated)\r\n  // ---------------------------\r\n  renderBreakdownTab = () => {\r\n    const { breakdownItems, breakdownType, formData } = this.state;\r\n    const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\r\n      acc[li.itemCode] = parseFloat(li.total || 0);\r\n      return acc;\r\n    }, {});\r\n    const sumOfItemTotals = Object.values(itemTotals).reduce((sum, val) => sum + val, 0);\r\n\r\n    return (\r\n      <div>\r\n        <h5>Milestone Breakdown</h5>\r\n\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col\"><b>Quote Value:</b> {formData.quoteValue}</div>\r\n          <div className=\"col\"><b>Tax Amount:</b> {formData.taxAmount}</div>\r\n          <div className=\"col\"><b>Sum of Item Totals:</b> {sumOfItemTotals.toFixed(2)}</div>\r\n          <div className=\"col text-right\">\r\n            <label style={{marginRight:8}}>Sub-product Type:</label>\r\n            <select value={breakdownType} onChange={(e) => this.handleBreakdownTypeChange(e.target.value)} className=\"form-control form-control-sm\" style={{display:'inline-block', width:160}}>\r\n              <option value=\"Percentage\">Percentage</option>\r\n              <option value=\"Amount\">Amount</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"table table-bordered\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th style={{width:60}}>S.No</th>\r\n              <th style={{width:140}}>ID</th>\r\n              <th>Desc</th>\r\n              <th style={{width:160}}>Total</th>\r\n              <th style={{width:90}}>+</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {breakdownItems.map((item, idx) => {\r\n              const mainItemTotal = itemTotals[item.productId] || 0;\r\n              const subProducts = item.subProducts || [];\r\n              const satisfied = this.isItemSatisfied(item);\r\n              const mainAmountStyle = {\r\n                textAlign: 'right',\r\n                color: satisfied ? 'green' : 'red',\r\n                fontWeight: 600\r\n              };\r\n\r\n              return (\r\n                <React.Fragment key={idx}>\r\n                  <tr>\r\n                    <td>{item.sno}</td>\r\n                    <td>{item.productId}</td>\r\n                    <td>{item.desc}</td>\r\n                    <td style={mainAmountStyle}>{mainItemTotal.toFixed(2)}</td>\r\n                    <td>\r\n                      <div className=\"d-flex\">\r\n                        <button type=\"button\" className=\"btn btn-sm btn-outline-primary mr-1\" onClick={() => this.handleAddSubProducts(idx, 1)}>+</button>\r\n                        <button type=\"button\" className=\"btn btn-sm btn-outline-primary\" onClick={() => this.handleAddSubProducts(idx, 3)}>+3</button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n\r\n                  {subProducts.map((sp, spIdx) => {\r\n                    const spId = `${item.productId}_${spIdx + 1}`;\r\n                    const spType = sp.type || breakdownType || 'Amount';\r\n                    const mainTotal = mainItemTotal;\r\n                    let spTotalAmount = 0;\r\n                    const rawVal = parseFloat(sp.value || 0) || 0;\r\n                    if (spType === 'Amount') spTotalAmount = rawVal;\r\n                    else spTotalAmount = (mainTotal * rawVal / 100);\r\n\r\n                    const valueColor = satisfied ? 'green' : 'red';\r\n\r\n                    // For sub-product rows we keep S.No blank per request\r\n                    const editing = (this.state.editingSub && this.state.editingSub.bIdx === idx && this.state.editingSub.spIdx === spIdx);\r\n\r\n                    return (\r\n                      <tr key={spId} style={{ background: '#f9f9f9' }}>\r\n                        <td>{/* blank for sub-products */}</td>\r\n                        <td style={{paddingLeft:12}} colSpan={1}> {/* small indent */}\r\n                          {editing ? (\r\n                            <input\r\n                              className=\"form-control form-control-sm\"\r\n                              value={sp.name}\r\n                              onChange={(e) => this.handleSubProductFieldChange(idx, spIdx, 'name', e.target.value)}\r\n                              onBlur={() => this.stopEditingSub()}\r\n                              autoFocus\r\n                            />\r\n                          ) : (\r\n                            <div onDoubleClick={() => this.startEditingSub(idx, spIdx)} style={{cursor:'text'}}>\r\n                              {sp.name || <em style={{color:'#999'}}>--unnamed--</em>}\r\n                            </div>\r\n                          )}\r\n                        </td>\r\n\r\n                        <td style={{textAlign:'left'}}>\r\n                          <div className=\"d-flex align-items-center\">\r\n                            {/* Value input (inline) */}\r\n                            <div style={{flex:1, maxWidth:160}}>\r\n                              <input\r\n                                className=\"form-control form-control-sm\"\r\n                                value={sp.value}\r\n                                onChange={(e) => this.handleSubProductValueChange(idx, spIdx, e.target.value)}\r\n                                onDoubleClick={() => this.startEditingSub(idx, spIdx)}\r\n                                style={{border:'none', padding:0, color: valueColor, fontWeight:600}}\r\n                                title={spType === 'Amount' ? 'Amount' : 'Percentage'}\r\n                              />\r\n                            </div>\r\n\r\n                            <div style={{marginLeft:8, minWidth:110}}>\r\n                              <div style={{fontSize:12, color:'#444'}}>\r\n                                {spType === 'Amount' ? `₹ ${parseFloat(sp.value || 0).toFixed(2)}` : `${parseFloat(sp.value || 0).toFixed(2)}%`}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n\r\n                        <td style={{textAlign:'left', minWidth:130}}>\r\n                          <div style={{display:'flex', alignItems:'center', justifyContent:'space-between'}}>\r\n                            <div style={{fontSize:12}}>{sp.dueDate || '-'}</div>\r\n                            <div className=\"d-flex align-items-center\">\r\n                              <div style={{marginRight:8, fontWeight:600, color: valueColor}}>\r\n                                {/* show computed amount (left aligned as requested) */}\r\n                                {`₹ ${spTotalAmount.toFixed(2)}`}\r\n                              </div>\r\n                              <button className=\"btn btn-sm btn-outline-danger\" title=\"Remove subproduct\" onClick={() => this.deleteSubProductRow(idx, spIdx)}>-</button>\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n            {breakdownItems.length === 0 && (\r\n              <tr><td colSpan=\"5\" className=\"text-center\">No breakdown items.</td></tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Renders overlay (unchanged)\r\n  renderOverlay = () => {\r\n    const { overlayType, overlaySearch, customers, despatchModes, paymentTerms } = this.state;\r\n\r\n    const getFilteredRows = (list, nameKey = 'name', codeKey = 'shortName') =>\r\n      list.filter(item =>\r\n        (item[nameKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()) ||\r\n        (item[codeKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase())\r\n      );\r\n\r\n    const handleSelect = (item) => {\r\n      if (overlayType === 'customer') {\r\n        this.selectOverlayValue(item);\r\n      } else if (overlayType === 'despatchMode') {\r\n        this.setState(prev => ({\r\n          formData: {\r\n            ...prev.formData,\r\n            despatchMode: item.name\r\n          },\r\n          overlayType: '',\r\n          overlaySearch: ''\r\n        }));\r\n      } else if (overlayType === 'paymentTerms') {\r\n        this.setState(prev => ({\r\n          formData: {\r\n            ...prev.formData,\r\n            paymentTerms: item.name\r\n          },\r\n          overlayType: '',\r\n          overlaySearch: ''\r\n        }));\r\n      }\r\n    };\r\n\r\n    let title = '';\r\n    let headers = [];\r\n    let rows = [];\r\n\r\n    if (overlayType === 'customer') {\r\n      title = 'Select Customer';\r\n      headers = ['Name', 'Code', 'Short Name'];\r\n      rows = getFilteredRows(customers, 'custname', 'custcode');\r\n    } else if (overlayType === 'despatchMode') {\r\n      title = 'Select Despatch Mode';\r\n      headers = ['Name', 'Short Name'];\r\n      rows = getFilteredRows(despatchModes);\r\n    } else if (overlayType === 'paymentTerms') {\r\n      title = 'Select Payment Terms';\r\n      headers = ['Name', 'Short Name'];\r\n      rows = getFilteredRows(paymentTerms);\r\n    } else {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"custom-overlay\">\r\n        <div className=\"custom-overlay-content\">\r\n          <div className=\"custom-overlay-title\">{title}</div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control mb-2\"\r\n            placeholder={`Search ${overlayType}...`}\r\n            value={overlaySearch}\r\n            onChange={e => this.setState({ overlaySearch: e.target.value })}\r\n          />\r\n          <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n            <table className=\"table table-bordered table-sm\">\r\n              <thead>\r\n                <tr>\r\n                  {headers.map((h, i) => <th key={i}>{h}</th>)}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {rows.map((item, i) => (\r\n                  <tr key={item.id || i} onClick={() => handleSelect(item)} style={{ cursor: 'pointer' }}>\r\n                    {headers.map((h, j) => (\r\n                      <td key={j}>\r\n                        {overlayType === 'customer'\r\n                          ? h === 'Name' ? item.custname\r\n                            : h === 'Code' ? item.custcode\r\n                            : item.custshortName\r\n                          : h === 'Name' ? item.name\r\n                            : item.shortName}\r\n                      </td>\r\n                    ))}\r\n                  </tr>\r\n                ))}\r\n                {rows.length === 0 && (\r\n                  <tr>\r\n                    <td colSpan={headers.length} className=\"text-center\">No records found</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <button className=\"btn btn-secondary btn-sm mt-2\" onClick={this.hideOverlay}>Cancel</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderProductOverlay = () => {\r\n    const { products, productOverlaySearch, selectedProductIds } = this.state;\r\n    const filtered = products.filter(p =>\r\n      (p.ptshortName || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) ||\r\n      (p.ptdescription || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) ||\r\n      (p.itemCode || '').toLowerCase().includes(productOverlaySearch.toLowerCase())\r\n    );\r\n    return (\r\n      <div className=\"custom-overlay\">\r\n        <div className=\"custom-overlay-content\">\r\n          <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n            <div className=\"custom-overlay-title\">Select Products</div>\r\n            <button\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => {\r\n                const selectedProducts = products.filter(p => this.state.selectedProductIds.includes(p.id));\r\n                this.setState(prev => ({\r\n                  formData: {\r\n                    ...prev.formData,\r\n                    lineItems: [\r\n                      ...prev.formData.lineItems,\r\n                      ...selectedProducts\r\n                        .filter(p => !prev.formData.lineItems.some(item => item.id === p.id))\r\n                        .map(p => ({\r\n                          id: p.id,\r\n                          itemCode: p.productId || '',\r\n                          itemDescription: p.ptdescription || '',\r\n                          itemType: p.itemType || '',\r\n                          materialType: p.materialType || '',\r\n                          onHand: p.onHand || 0,\r\n                          taxGroup: p.taxGroup || '',\r\n                          taxGroupName: p.taxGroup || '',\r\n                          custPartNo: p.custPartNo || '', \r\n                          hsnNo: p.hsnNo || '',\r\n                          unitPrice: p.unitPrice || 0,\r\n                          qty: 1,\r\n                          total: (p.unitPrice || 0).toFixed(2)\r\n                        }))\r\n                    ]\r\n                  },\r\n                  productOverlayVisible: false,\r\n                  selectedProductIds: []\r\n                }));\r\n              }}\r\n            >Add Selected</button>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Search products...\"\r\n            value={productOverlaySearch}\r\n            onChange={e => this.setState({ productOverlaySearch: e.target.value })}\r\n          />\r\n          <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n            <table className=\"table table-bordered table-sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th></th>\r\n                  <th>Item Code</th>\r\n                  <th>Item Desc</th>\r\n                  <th>Item Type</th>\r\n                  <th>Material Type</th>\r\n                  <th>On Hand</th>\r\n                  <th>Tax Grp</th>\r\n                  <th>Cust Part No</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filtered.map(p => (\r\n                  <tr key={p.id}>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedProductIds.includes(p.id)}\r\n                        onChange={e => {\r\n                          const checked = e.target.checked;\r\n                          this.setState(prev => ({\r\n                            selectedProductIds: checked\r\n                              ? [...prev.selectedProductIds, p.id]\r\n                              : prev.selectedProductIds.filter(id => id !== p.id)\r\n                          }));\r\n                        }}\r\n                      />\r\n                    </td>\r\n                    <td>{p.productId}</td>\r\n                    <td>{p.ptdescription || ''}</td>\r\n                    <td>{p.itemType || ''}</td>\r\n                    <td>{p.materialType || ''}</td>\r\n                    <td>{p.onHand || 0}</td>\r\n                    <td>{p.taxGroup || ''}</td>\r\n                    <td>{p.custPartNo || ''}</td>\r\n                  </tr>\r\n                ))}\r\n                {filtered.length === 0 && (\r\n                  <tr>\r\n                    <td colSpan=\"8\" className=\"text-center\">No products found</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n            <span>Page 1 of 1</span>\r\n            <button className=\"btn btn-secondary btn-sm\" onClick={() => this.setState({ productOverlayVisible: false, selectedProductIds: [] })}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // renderQuoteTable, renderQuoteForm, commercial tab, and other parts remain mostly unchanged\r\n  // I kept them as in your original file except replaced renderBreakdownTab usage where required.\r\n  // For brevity in this snippet, the rest of the file is left unchanged and will still be present in your file.\r\n\r\n  renderQuoteTable = () => (\r\n    // (unchanged from your original)...\r\n    <div className=\"card mt-4 full-height\">\r\n      <div className=\"card-body\">\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n          <h4 className=\"card-title\">Quotes</h4>\r\n          <button className=\"btn btn-primary\" onClick={() => this.setState({ showForm: true })}>+ Add Quote</button>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-bordered table-hover\">\r\n            <thead className=\"thead-light\">\r\n              <tr style={{ fontSize: '14px' }}>\r\n                <th>Quote No</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Quote Value</th>\r\n                <th>Status</th>\r\n                <th>Print</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.quotes.map((q, i) => {\r\n                let statusClass = \"badge-secondary\";\r\n                if (q.status === \"Entered\") statusClass = \"badge-warning\";\r\n                else if (q.status === \"Submitted\") statusClass = \"badge-info\";\r\n                else if (q.status === \"ConvertedToOrder\") statusClass = \"badge-success\";\r\n                else if (q.status === \"Cancelled\") statusClass = \"badge-danger\";\r\n\r\n                return (\r\n                  <tr key={i} style={{ fontSize: '14px' }}>\r\n                    <td>\r\n                      <button\r\n                        className=\"btn btn-link p-0\"\r\n                        onClick={() => this.loadQuotePreview(q)}\r\n                      >\r\n                        {q.quoteNo}\r\n                      </button>\r\n                    </td>\r\n                    <td>{q.customer}</td>\r\n                    <td>{q.quoteDate}</td>\r\n                    <td>{q.quoteValue}</td>\r\n                    <td>\r\n                      <label \r\n                      className={`badge ${statusClass}`}\r\n                      style={{ fontSize: '14px' }}>{q.status}</label>\r\n                    </td>\r\n                    <td>\r\n                      <i\r\n                        className=\"mdi mdi-printer menu-icon\"\r\n                        onClick={() => this.showQuotePDFWithOrg(q)}\r\n                        style={{ fontSize: '24px', color: '#2196F3', cursor: 'pointer' }}\r\n                      ></i>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n              {this.state.quotes.length === 0 && (\r\n                <tr><td colSpan=\"6\" className=\"text-center\">No quotes found.</td></tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  renderQuoteForm = () => {\r\n    const { formData, overlayType, productOverlayVisible ,showTaxOverlay,taxGroups,recalculateTotals} = this.state;\r\n    const isFOB = formData.impExp === 'FOB';\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"card full-height\">\r\n          <div style={{ flex: 1, overflowY: 'auto', padding: '24px' }}>\r\n            <h4 className=\"mb-3\">Quote Form</h4>\r\n            <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n              <li className=\"nav-item\">\r\n                <button type=\"button\" className={`nav-link ${this.state.activeTab === 'co' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'co' })}>CO Details</button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n              <button type=\"button\" className={`nav-link ${this.state.activeTab === 'breakdown' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'breakdown' })}>Breakdown</button>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <button type=\"button\" className={`nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'commercial' })}>Commercial Terms</button>\r\n              </li>\r\n            </ul>\r\n            <form className=\"form-sample\" onSubmit={this.handleSubmit}>\r\n              <div className=\"tab-content pt-3\">\r\n                {this.state.activeTab === 'co' && (\r\n                  <>\r\n                    {/* unchanged CO tab content... */}\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Quote No</label>\r\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={formData.quoteNo} onChange={(e) => this.handleInputChange('quoteNo', e.target.value)} />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Quote Date</label>\r\n                        <input type=\"date\" className=\"form-control form-control-sm\" value={formData.quoteDate} onChange={(e) => this.handleInputChange('quoteDate', e.target.value)} />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Quote Type</label>\r\n                        <select className=\"form-control form-control-sm\" value={formData.quoteType} onChange={(e) => this.handleInputChange('quoteType', e.target.value)}>\r\n                          <option>Standard</option>\r\n                          <option>Manual</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Status</label>\r\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={formData.status}   style={{ backgroundColor: '#fff' }} readOnly />\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* ... rest of CO tab unchanged ... */}\r\n\r\n                          <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                            <h4 className=\"card-title\">Line Item</h4>\r\n                            <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={() => this.setState({ productOverlayVisible: true })}>\r\n                              + Add Product\r\n                            </button>\r\n                          </div>\r\n                       <div className=\"table-responsive\">\r\n        <table className=\"table table-bordered\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>Item Code</th>\r\n              <th>Item Desc</th>\r\n              <th>Cust Part No</th>\r\n              <th>HSN No</th>\r\n              <th>UOM</th>\r\n              <th>On Hand</th>\r\n              <th>Unit Price</th>\r\n              <th>Quantity</th>\r\n              <th>Tax Id</th>\r\n              <th>Item Total</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {formData.lineItems.map((item, idx) => {\r\n              const itemTotal = item.unitPrice * item.qty;\r\n              const taxDetails = getTaxDetailsFromGroup(item.taxGroupName, this.state.taxGroups);\r\n              const taxAmt = (itemTotal * taxDetails.totalPercent / 100) + (itemTotal * taxDetails.totalAmount);\r\n              const totalWithTax = itemTotal + taxAmt;\r\n              \r\n              return (\r\n                <tr key={item.id || idx}>\r\n                  <td>{item.itemCode}</td>\r\n                  <td>{item.itemDescription}</td>\r\n                  <td>{item.custPartNo}</td>\r\n                  <td>{item.hsnNo}</td>\r\n                  <td>{item.uom}</td>\r\n                  <td>{item.onHand}</td>\r\n                  <td>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={item.unitPrice}\r\n                      onChange={e => this.handleLineItemChange(idx, 'unitPrice', e.target.value)}\r\n                      style={{ width: 80 }}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      value={item.qty}\r\n                      onChange={e => this.handleLineItemChange(idx, 'qty', e.target.value)}\r\n                      style={{ width: 60 }}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-secondary btn-sm btn-rounded btn-icon\"\r\n                    style={{ padding: '2px 6px', fontSize: '12px', lineHeight: '1' }}\r\n                    onClick={() => this.setState({ showTaxOverlay: true, currentTaxLineIdx: idx })}\r\n                  >\r\n                    +\r\n                  </button>\r\n                  <div style={{ fontSize: '13px', marginTop: '4px' }}>\r\n                    {(item.taxGroupNames || []).join(', ') || '-'}\r\n                  </div>\r\n                </td>\r\n              <td>{parseFloat(item.total || 0).toFixed(2)}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n                  </>\r\n                )}\r\n                {this.state.activeTab === 'commercial' && (\r\n                  <>\r\n                    {/* commercial tab unchanged */}\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-6\">\r\n                        <label>Bill To</label>\r\n                        <textarea\r\n                          className=\"form-control form-control-sm\"\r\n                          rows=\"3\"\r\n                          value={formData.billTo}\r\n                          onChange={(e) => this.handleInputChange('billTo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-6\">\r\n                        <label>Ship To</label>\r\n                        <textarea\r\n                          className=\"form-control form-control-sm\"\r\n                          rows=\"3\"\r\n                          value={formData.shipTo}\r\n                          onChange={(e) => this.handleInputChange('shipTo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Despatch Mode</label>\r\n                        <div className=\"input-group input-group-sm\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={formData.despatchMode}\r\n                            readOnly\r\n                            onClick={() => !isFOB && this.showOverlay('despatchMode')}\r\n                            style={{ cursor: isFOB ? 'not-allowed' : 'pointer', backgroundColor: '#fff' }}\r\n                          />\r\n                          <div className=\"input-group-append\">\r\n                            <button\r\n                              className=\"btn btn-outline-secondary btn-sm\"\r\n                              type=\"button\"\r\n                              disabled={isFOB}\r\n                              onClick={() => this.showOverlay('despatchMode')}\r\n                            >\r\n                              Select\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Payment Terms</label>\r\n                        <div className=\"input-group input-group-sm\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={formData.paymentTerms}\r\n                            readOnly\r\n                            onClick={() => !isFOB && this.showOverlay('paymentTerms')}\r\n                            style={{ cursor: isFOB ? 'not-allowed' : 'pointer', backgroundColor: '#fff' }}\r\n                          />\r\n                          <div className=\"input-group-append\">\r\n                            <button\r\n                              className=\"btn btn-outline-secondary btn-sm\"\r\n                              type=\"button\"\r\n                              disabled={isFOB}\r\n                              onClick={() => this.showOverlay('paymentTerms')}\r\n                            >\r\n                              Select\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Freight Charges</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.freightCharges}\r\n                          onChange={(e) => this.handleInputChange('freightCharges', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Tax %</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxPercent}\r\n                          onChange={(e) => this.handleInputChange('taxPercent', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Freight Tax Amount</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.freighttaxAmount}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Packing Charges</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.packingCharges}\r\n                          onChange={(e) => this.handleInputChange('packingCharges', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </>\r\n                )}\r\n                {this.state.activeTab === 'breakdown' && (this.renderBreakdownTab())}\r\n              </div>\r\n\r\n              <div className=\"fixed-card-footer text-right p-3 border-top bg-white\">\r\n                <button type=\"submit\" className=\"btn btn-success mr-2\">Save All Details</button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => this.setState({ showForm: false, editingId: null })}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n            {this.renderOverlay()}\r\n            {productOverlayVisible && this.renderProductOverlay()}\r\n            {this.state.showTaxOverlay && this.renderTaxOverlay()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderQuotePreview = () => {\r\n    const q = this.state.selectedQuote;\r\n    if (!q) return null;\r\n\r\n    return (\r\n      <div className=\"card mt-4 full-height p-4\">\r\n        <div className=\"d-flex justify-content-between mb-3\">\r\n          <h4 className=\"card-title\">Quote Preview - {q.quoteNo}</h4>\r\n          <div>\r\n            {q.status !== 'ConvertedToOrder' && (\r\n              <button className=\"btn btn-sm btn-info mr-2\" onClick={() => this.loadQuoteForEdit(q)}>Edit</button>\r\n            )}\r\n            <button className=\"btn btn-sm btn-success\" onClick={() => this.convertToOrder(q)}>Convert to Order</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\"><b>Customer:</b> {q.customer}</div>\r\n          <div className=\"col-md-4\"><b>Date:</b> {q.quoteDate}</div>\r\n          <div className=\"col-md-4\"><b>Status:</b> {q.status}</div>\r\n        </div>\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col-md-6\"><b>Bill To:</b><br />{q.billTo}</div>\r\n          <div className=\"col-md-6\"><b>Ship To:</b><br />{q.shipTo}</div>\r\n        </div>\r\n        <h5 className=\"mt-4\">Line Items</h5>\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>Item Code</th><th>Description</th><th>Qty</th><th>Unit Price</th><th>Total</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {q.lineItems?.map((item, i) => (\r\n              <tr key={i}>\r\n                <td>{item.itemCode}</td>\r\n                <td>{item.itemDescription}</td>\r\n                <td>{item.qty}</td>\r\n                <td>{item.unitPrice}</td>\r\n                <td>{item.total}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"text-right\"><b>Total:</b> {q.quoteValue}</div>\r\n        <button className=\"btn btn-secondary mt-3\" onClick={() => this.setState({ previewMode: false })}>Back to List</button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        {this.state.previewMode? this.renderQuotePreview(): this.state.showForm ? this.renderQuoteForm() : this.renderQuoteTable()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Quote);\r\n"]},"metadata":{},"sourceType":"module"}