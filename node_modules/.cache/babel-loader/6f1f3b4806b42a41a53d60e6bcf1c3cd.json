{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\sales\\\\salestransactions\\\\quote\\\\QuoteApproval.js\";\nimport React, { Component } from \"react\";\nimport { db } from \"../../../../firebase\";\nimport Quote from \"./Quote\";\nimport { collection, getDocs, updateDoc, doc } from \"firebase/firestore\";\n\nclass QuoteApproval extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quotes: [],\n      selectedQuote: null,\n      loading: false,\n      error: null\n    };\n\n    this.fetchQuotes = async () => {\n      this.setState({\n        loading: true,\n        error: null\n      });\n\n      try {\n        const snap = await getDocs(collection(db, \"quotes\"));\n        const quotes = snap.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        this.setState({\n          quotes,\n          loading: false\n        });\n      } catch (err) {\n        this.setState({\n          error: err.message,\n          loading: false\n        });\n      }\n    };\n\n    this.openPreview = quote => {\n      this.setState({\n        selectedQuote: quote\n      });\n    };\n\n    this.updateStatus = async (id, status) => {\n      this.setState({\n        loading: true,\n        error: null\n      });\n\n      try {\n        await updateDoc(doc(db, \"quotes\", id), {\n          status\n        });\n        alert(`Quote ${status}`);\n        await this.fetchQuotes();\n        this.setState({\n          selectedQuote: null,\n          loading: false\n        });\n      } catch (err) {\n        this.setState({\n          error: err.message,\n          loading: false\n        });\n        alert(\"Error updating status: \" + err.message);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.fetchQuotes();\n  }\n\n  render() {\n    const {\n      quotes,\n      selectedQuote,\n      loading,\n      error\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"Quote Approval\"), loading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, \"Loading...\"), error && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }, error), !selectedQuote ? /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, quotes.map(q => /*#__PURE__*/React.createElement(\"tr\", {\n      key: q.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, q.id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }, q.customerName), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }\n    }, q.status), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary\",\n      onClick: () => this.openPreview(q),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"Preview\")))), quotes.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: 4,\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, \"No quotes found\")))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-4 p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, \"Quote Preview - \", selectedQuote.id), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 16\n      }\n    }, \"Customer:\"), \" \", selectedQuote.customerName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 16\n      }\n    }, \"Total:\"), \" \", selectedQuote.total), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 16\n      }\n    }, \"Status:\"), \" \", selectedQuote.status), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success mr-2\",\n      onClick: () => this.updateStatus(selectedQuote.id, \"Approved\"),\n      disabled: selectedQuote.status === \"Approved\" || selectedQuote.status === \"CO Created\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, \"Approve\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-danger mr-2\",\n      onClick: () => this.updateStatus(selectedQuote.id, \"Rejected\"),\n      disabled: selectedQuote.status === \"Rejected\" || selectedQuote.status === \"CO Created\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, \"Reject\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-secondary\",\n      onClick: () => this.setState({\n        selectedQuote: null\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, \"Back to List\"))));\n  }\n\n}\n\nexport default QuoteApproval;","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/sales/salestransactions/quote/QuoteApproval.js"],"names":["React","Component","db","Quote","collection","getDocs","updateDoc","doc","QuoteApproval","state","quotes","selectedQuote","loading","error","fetchQuotes","setState","snap","docs","map","id","data","err","message","openPreview","quote","updateStatus","status","alert","componentDidMount","render","q","customerName","length","total"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { db } from \"../../../../firebase\";\r\nimport Quote from \"./Quote\";\r\nimport { collection, getDocs, updateDoc, doc } from \"firebase/firestore\";\r\n\r\nclass QuoteApproval extends Component {\r\n  state = {\r\n    quotes: [],\r\n    selectedQuote: null,\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchQuotes();\r\n  }\r\n\r\n  fetchQuotes = async () => {\r\n    this.setState({ loading: true, error: null });\r\n    try {\r\n      const snap = await getDocs(collection(db, \"quotes\"));\r\n      const quotes = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      this.setState({ quotes, loading: false });\r\n    } catch (err) {\r\n      this.setState({ error: err.message, loading: false });\r\n    }\r\n  };\r\n\r\n  openPreview = (quote) => {\r\n    this.setState({ selectedQuote: quote });\r\n  };\r\n\r\n  updateStatus = async (id, status) => {\r\n    this.setState({ loading: true, error: null });\r\n    try {\r\n      await updateDoc(doc(db, \"quotes\", id), { status });\r\n      alert(`Quote ${status}`);\r\n      await this.fetchQuotes();\r\n      this.setState({ selectedQuote: null, loading: false });\r\n    } catch (err) {\r\n      this.setState({ error: err.message, loading: false });\r\n      alert(\"Error updating status: \" + err.message);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { quotes, selectedQuote, loading, error } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h3>Quote Approval</h3>\r\n        {loading && <div className=\"alert alert-info\">Loading...</div>}\r\n        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n\r\n        {!selectedQuote ? (\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Customer</th>\r\n                <th>Status</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {quotes.map(q => (\r\n                <tr key={q.id}>\r\n                  <td>{q.id}</td>\r\n                  <td>{q.customerName}</td>\r\n                  <td>{q.status}</td>\r\n                  <td>\r\n                    <button className=\"btn btn-sm btn-primary\" onClick={() => this.openPreview(q)}>\r\n                      Preview\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n              {quotes.length === 0 && (\r\n                <tr>\r\n                  <td colSpan={4} className=\"text-center\">No quotes found</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <div className=\"card mt-4 p-4\">\r\n            <h4>Quote Preview - {selectedQuote.id}</h4>\r\n            <p><b>Customer:</b> {selectedQuote.customerName}</p>\r\n            <p><b>Total:</b> {selectedQuote.total}</p>\r\n            <p><b>Status:</b> {selectedQuote.status}</p>\r\n            {/* Approval buttons only in approval page */}\r\n            <div className=\"mt-3\">\r\n              <button\r\n                className=\"btn btn-success mr-2\"\r\n                onClick={() => this.updateStatus(selectedQuote.id, \"Approved\")}\r\n                disabled={selectedQuote.status === \"Approved\" || selectedQuote.status === \"CO Created\"}\r\n              >\r\n                Approve\r\n              </button>\r\n              <button\r\n                className=\"btn btn-danger mr-2\"\r\n                onClick={() => this.updateStatus(selectedQuote.id, \"Rejected\")}\r\n                disabled={selectedQuote.status === \"Rejected\" || selectedQuote.status === \"CO Created\"}\r\n              >\r\n                Reject\r\n              </button>\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={() => this.setState({ selectedQuote: null })}\r\n              >\r\n                Back to List\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuoteApproval;"]},"metadata":{},"sourceType":"module"}