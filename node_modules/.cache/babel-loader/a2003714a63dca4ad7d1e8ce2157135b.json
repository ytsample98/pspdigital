{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\sales\\\\salestransactions\\\\order\\\\Order.js\";\nimport React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport { db } from '../../../../firebase';\nimport { collection, getDocs, addDoc, doc, updateDoc, serverTimestamp } from 'firebase/firestore';\nimport html2canvas from 'html2canvas';\nimport { jsPDF } from 'jspdf';\nimport { withRouter } from 'react-router-dom';\nimport { recalculateTotals, getTaxDetailsFromGroup } from '../calculation';\n\nconst numberToWords = num => {\n  const a = ['', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine', 'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];\n  const b = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\n  if (num === 0) return 'Zero';\n  if (num < 20) return a[num];\n  if (num < 100) return b[Math.floor(num / 10)] + ' ' + a[num % 10];\n  if (num < 1000) return a[Math.floor(num / 100)] + ' Hundred ' + numberToWords(num % 100);\n  if (num < 100000) return numberToWords(Math.floor(num / 1000)) + ' Thousand ' + numberToWords(num % 1000);\n  return 'Amount too large';\n};\n\nclass Order extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: 'co',\n      breakdownItems: [],\n      orders: [],\n      customers: [],\n      products: [],\n      despatchModes: [],\n      paymentTerms: [],\n      showForm: false,\n      editingId: null,\n      overlayType: '',\n      overlaySearch: '',\n      productOverlayVisible: false,\n      productOverlaySearch: '',\n      selectedProductIds: [],\n      taxGroups: [],\n      showTaxOverlay: false,\n      currentTaxIdx: null,\n      breakdownType: 'Amount',\n      formData: {\n        orderNo: '',\n        orderDate: new Date().toISOString().split('T')[0],\n        orderType: 'Standard',\n        customer: '',\n        status: 'Entered',\n        // Static 'Entered'\n        choose: 'Service',\n        qrefNo: '',\n        impExp: 'None',\n        currency: '',\n        conversionRate: '',\n        taxAmount: '',\n        orderValue: '',\n        discountPercent: 0,\n        discountAmount: 0,\n        afterDiscountValue: 0,\n        billTo: '',\n        shipTo: '',\n        despatchMode: 'By Air',\n        paymentTerms: '',\n        freightCharges: '',\n        freighttaxAmount: '',\n        taxPercent: '',\n        packingCharges: '',\n        lineItems: []\n      }\n    };\n    this.customerInputRef = React.createRef();\n\n    this.formatAddress = addr => {\n      if (!addr) return '';\n      if (typeof addr === 'string') return addr;\n      return [addr.address, [addr.city, addr.state, addr.country].filter(Boolean).join(', '), addr.zip].filter(Boolean).join('\\n');\n    };\n\n    this.convertMainProductToInvoice = breakdownIdx => {\n      const {\n        breakdownItems,\n        formData\n      } = this.state;\n      const item = breakdownItems[breakdownIdx];\n      const mainLineItem = (formData.lineItems || []).find(li => li.itemCode === item.productId);\n      if (!mainLineItem) return alert(\"Main product not found in line items.\"); // Build invoice line items: main product + all its subproducts\n\n      const invoiceLineItems = [{ ...mainLineItem\n      }, ...(item.subProducts || []).map((sp, i) => ({\n        itemCode: item.productId + \"_\" + (i + 1),\n        itemDescription: sp.name,\n        qty: 1,\n        unitPrice: parseFloat(sp.value || 0),\n        total: parseFloat(sp.value || 0),\n        taxGroupNames: [],\n        // No tax for subproducts\n        taxAmt: 0\n      }))]; // Build invoice data\n\n      const invoiceData = { ...formData,\n        lineItems: invoiceLineItems,\n        InvoiceDate: new Date().toISOString().split('T')[0]\n      };\n      sessionStorage.setItem('invoiceDataFromOrder', JSON.stringify(invoiceData));\n      this.props.history.push({\n        pathname: '/panelone/Invoice',\n        state: {\n          invoiceDataFromOrder: invoiceData\n        }\n      });\n    };\n\n    this.convertSubProductToInvoice = (breakdownIdx, subIdx) => {\n      const {\n        breakdownItems,\n        formData\n      } = this.state;\n      const item = breakdownItems[breakdownIdx];\n      const sp = (item.subProducts || [])[subIdx];\n      if (!sp) return alert(\"Subproduct not found.\"); // Find main product for tax\n\n      const mainLineItem = (formData.lineItems || []).find(li => li.itemCode === item.productId); // Build invoice line item: subproduct only, but keep tax from main product if needed\n\n      const invoiceLineItems = [{\n        itemCode: item.productId + \"_\" + (subIdx + 1),\n        itemDescription: sp.name,\n        qty: 1,\n        unitPrice: parseFloat(sp.value || 0),\n        total: parseFloat(sp.value || 0),\n        taxGroupNames: [],\n        // No tax for subproducts\n        taxAmt: 0\n      }]; // Build invoice data\n\n      const invoiceData = { ...formData,\n        lineItems: invoiceLineItems,\n        InvoiceDate: new Date().toISOString().split('T')[0]\n      };\n      sessionStorage.setItem('invoiceDataFromOrder', JSON.stringify(invoiceData));\n      this.props.history.push({\n        pathname: '/panelone/Invoice',\n        state: {\n          invoiceDataFromOrder: invoiceData\n        }\n      });\n    };\n\n    this.calculateOrderTotals = () => {\n      const {\n        impExp,\n        freightCharges,\n        taxPercent,\n        packingCharges,\n        lineItems\n      } = this.state.formData;\n      let freight = parseFloat(freightCharges) || 0;\n      let packing = parseFloat(packingCharges) || 0;\n      let taxOnFreight = 0;\n\n      if (['None', 'CIF'].includes(impExp)) {\n        taxOnFreight = freight * (parseFloat(taxPercent) || 0) / 100;\n      }\n\n      let lineTotal = 0;\n      let itemTaxTotal = 0;\n      const updatedLineItems = lineItems.map(item => {\n        var _item$taxGroupNames;\n\n        const qty = parseFloat(item.qty || 1);\n        const unitPrice = parseFloat(item.unitPrice || 0);\n        const baseTotal = unitPrice * qty;\n        const groupNames = ((_item$taxGroupNames = item.taxGroupNames) === null || _item$taxGroupNames === void 0 ? void 0 : _item$taxGroupNames.length) ? item.taxGroupNames : [item.taxGroup || ''];\n        let percent = 0;\n        let amount = 0;\n        groupNames.forEach(groupName => {\n          const group = this.state.taxGroups.find(t => t.groupName === groupName);\n\n          if (group && Array.isArray(group.lineItems)) {\n            group.lineItems.forEach(comp => {\n              const val = parseFloat(comp.percentOrAmt || 0);\n              if (comp.type === 'Percentage') percent += val;\n              if (comp.type === 'Amount') amount += val;\n            });\n          }\n        });\n        const taxAmt = baseTotal * percent / 100 + amount;\n        const total = baseTotal;\n        item.taxAmt = taxAmt.toFixed(2);\n        item.total = total.toFixed(2);\n        return item;\n      });\n      const totalTaxAmount = itemTaxTotal + taxOnFreight;\n      const orderValue = lineTotal + freight + packing + itemTaxTotal;\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          taxAmount: totalTaxAmount.toFixed(2),\n          // âœ… Top-level field\n          orderValue: orderValue.toFixed(2),\n          lineItems: updatedLineItems\n        }\n      }));\n    };\n\n    this.handleDiscountChange = (field, value) => {\n      let {\n        formData\n      } = this.state;\n      formData[field] = value;\n      const quoteValue = parseFloat(formData.quoteValue || 0);\n      const discountPercent = parseFloat(formData.discountPercent || 0);\n      const discountAmount = quoteValue * discountPercent / 100;\n      const afterDiscountValue = quoteValue - discountAmount;\n      formData.discountAmount = discountAmount;\n      formData.afterDiscountValue = afterDiscountValue;\n      this.setState({\n        formData\n      });\n    };\n\n    this.handleConvertToInvoice = (optionalOrder = null) => {\n      // Prefer explicit param, then selectedOrder (preview), then formData\n      const source = optionalOrder || this.state.selectedOrder || this.state.formData || {}; // Normalize line items (defensive)\n\n      const lineItems = (source.lineItems || []).map(item => ({\n        itemCode: item.itemCode || item.productId || '',\n        ptshortName: item.ptshortName || item.ptshortName || '',\n        itemDescription: item.itemDescription || item.ptdescription || '',\n        hsnCode: item.hsnCode || item.hsnNo || '',\n        uom: item.uom || item.uom || '',\n        qty: item.qty != null ? item.qty : 1,\n        unitPrice: item.unitPrice != null ? item.unitPrice : 0,\n        taxGroupNames: item.taxGroupNames || item.taxGroup ? item.taxGroupNames || [item.taxGroup] : [],\n        taxAmt: item.taxAmt || 0,\n        total: item.total != null ? item.total : (parseFloat(item.qty || 1) * parseFloat(item.unitPrice || 0)).toFixed(2)\n      })); // Calculate discount fallback values (defensive)\n\n      const orderValue = parseFloat(source.orderValue || source.quoteValue || 0);\n      const discountPercent = parseFloat(source.discountPercent || 0);\n      const discountAmount = parseFloat(source.discountAmount || orderValue * discountPercent / 100) || 0;\n      const afterDiscountValue = parseFloat(source.afterDiscountValue || orderValue - discountAmount) || 0;\n      const invoiceData = {\n        invoiceNo: '',\n        // Invoice page will generate\n        invoiceDate: new Date().toISOString().split('T')[0],\n        invoiceType: 'Standard',\n        customer: source.customer || '',\n        status: source.status || 'Entered',\n        choose: source.choose || 'Service',\n        qrefNo: source.qrefNo || source.quoteNo || '',\n        impExp: source.impExp || 'None',\n        currency: source.currency || '',\n        conversionRate: source.conversionRate || '',\n        taxAmount: source.taxAmount || '',\n        invoiceValue: source.orderValue || source.invoiceValue || orderValue || '',\n        billTo: source.billTo || '',\n        shipTo: source.shipTo || '',\n        despatchMode: source.despatchMode || '',\n        paymentTerms: source.paymentTerms || '',\n        freightCharges: source.freightCharges || '',\n        freighttaxAmount: source.freighttaxAmount || '',\n        taxPercent: source.taxPercent || '',\n        packingCharges: source.packingCharges || '',\n        discountPercent,\n        discountAmount,\n        afterDiscountValue,\n        lineItems\n      }; // Save to session (so Invoice page can pick from sessionFallback) and navigate\n\n      sessionStorage.setItem('invoiceDataFromOrder', JSON.stringify(invoiceData));\n      this.props.history.push({\n        pathname: '/panelone/Invoice',\n        state: {\n          invoiceDataFromOrder: invoiceData\n        }\n      });\n    };\n\n    this.fetchTaxGroups = async () => {\n      const snap = await getDocs(collection(db, 'taxGroups'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        taxGroups: data\n      });\n    };\n\n    this.fetchorders = async () => {\n      const snap = await getDocs(collection(db, 'orders'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        orders: data.reverse()\n      });\n    };\n\n    this.fetchCustomers = async () => {\n      const snap = await getDocs(collection(db, 'customers'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        customers: data\n      });\n    };\n\n    this.fetchProducts = async () => {\n      const snap = await getDocs(collection(db, 'products'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        products: data\n      });\n    };\n\n    this.fetchDespatchModes = async () => {\n      const snap = await getDocs(collection(db, 'modes'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        despatchModes: data\n      });\n    };\n\n    this.fetchPaymentTerms = async () => {\n      const snap = await getDocs(collection(db, 'paymentTerms'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        paymentTerms: data\n      });\n    };\n\n    this.handleInputChange = (field, value) => {\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          [field]: value\n        }\n      }));\n    };\n\n    this.handleBreakdownChange = (idx, field, value) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        items[idx][field] = value;\n        return {\n          breakdownItems: items\n        };\n      });\n    };\n\n    this.handleBreakdownTypeChange = val => {\n      this.setState({\n        breakdownType: val\n      });\n    };\n\n    this.handleAddInlineSubProduct = (breakdownIdx, initial = null) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        const item = items[breakdownIdx] ? { ...items[breakdownIdx]\n        } : null;\n        if (!item) return {};\n        const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\n        const defaultSP = {\n          name: '',\n          value: ''\n        };\n        subProducts.push(initial ? { ...defaultSP,\n          ...initial\n        } : defaultSP);\n        item.subProducts = subProducts;\n        items[breakdownIdx] = item;\n        return {\n          breakdownItems: items\n        };\n      });\n    };\n\n    this.handleRemoveSubProduct = (biIdx, spIdx) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        if (!items[biIdx]) return {};\n        const item = { ...items[biIdx]\n        };\n        const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\n        subProducts.splice(spIdx, 1);\n        item.subProducts = subProducts;\n        items[biIdx] = item;\n        return {\n          breakdownItems: items\n        };\n      });\n    };\n\n    this.handleSubProductChange = (biIdx, spIdx, field, value) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        if (!items[biIdx]) return {};\n        const item = { ...items[biIdx]\n        };\n        const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\n        const sp = { ...subProducts[spIdx],\n          [field]: value\n        };\n        subProducts[spIdx] = sp;\n        item.subProducts = subProducts;\n        items[biIdx] = item;\n        return {\n          breakdownItems: items\n        };\n      });\n    };\n\n    this.getSubProductsSum = bi => {\n      const {\n        breakdownType,\n        formData\n      } = this.state;\n      const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\n        acc[li.itemCode] = parseFloat(li.total || 0) || 0;\n        return acc;\n      }, {});\n      const mainTotal = itemTotals[bi.productId] || 0;\n      const subs = Array.isArray(bi.subProducts) ? bi.subProducts : [];\n      return subs.reduce((s, sp) => {\n        const val = parseFloat(sp.value || 0) || 0;\n\n        if (breakdownType === 'Percentage') {\n          return s + mainTotal * val / 100;\n        }\n\n        return s + val;\n      }, 0);\n    };\n\n    this.isBreakdownValid = () => {\n      const {\n        breakdownItems,\n        formData\n      } = this.state;\n      const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\n        acc[li.itemCode] = parseFloat(li.total || 0) || 0;\n        return acc;\n      }, {});\n      const TOL = 0.01;\n\n      for (let bi of breakdownItems) {\n        const mainTotal = itemTotals[bi.productId] || 0;\n\n        if (mainTotal > 0) {\n          const subSum = this.getSubProductsSum(bi);\n          if (Math.abs(subSum - mainTotal) > TOL) return false;\n        }\n      }\n\n      return true;\n    };\n\n    this.handleLineItemChange = (idx, field, value) => {\n      const updatedItems = [...this.state.formData.lineItems];\n      updatedItems[idx] = { ...updatedItems[idx],\n        [field]: value\n      };\n      const {\n        updatedLineItems,\n        freighttaxAmount,\n        taxAmount,\n        orderValue\n      } = recalculateTotals({\n        lineItems: updatedItems,\n        freightCharges: this.state.formData.freightCharges,\n        packingCharges: this.state.formData.packingCharges,\n        taxPercent: this.state.formData.taxPercent,\n        taxGroups: this.state.taxGroups\n      });\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          lineItems: updatedLineItems,\n          freighttaxAmount,\n          taxAmount,\n          orderValue: orderValue\n        }\n      }));\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        editingId,\n        formData,\n        orders,\n        breakdownItems\n      } = this.state;\n      if (!formData.customer) return alert(\"Customer is required\");\n      if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\n      formData.breakdownItems = breakdownItems;\n      let orderDocId = editingId;\n\n      if (editingId) {\n        const {\n          id,\n          ...formDataWithoutId\n        } = formData;\n        await updateDoc(doc(db, \"orders\", editingId), { ...formDataWithoutId,\n          status: \"Entered\",\n          updatedAt: serverTimestamp()\n        });\n        orderDocId = editingId;\n      } else {\n        formData.orderNo = `CO${1000 + orders.length}`;\n        const docRef = await addDoc(collection(db, \"orders\"), { ...formData,\n          status: \"Entered\",\n          createdAt: serverTimestamp()\n        });\n        orderDocId = docRef.id;\n      } // If this order was created from a quote, update quote status now\n\n\n      if (formData.quoteNo) {\n        const quoteSnap = await getDocs(collection(db, \"quotes\"));\n        const quoteDoc = quoteSnap.docs.find(q => q.data().quoteNo === formData.quoteNo);\n\n        if (quoteDoc) {\n          await updateDoc(doc(db, \"quotes\", quoteDoc.id), {\n            status: \"ConvertedToOrder\"\n          });\n        }\n      }\n\n      this.setState({\n        showForm: false,\n        editingId: null,\n        previewOrderMode: false,\n        formData: this.getEmptyOrderForm()\n      });\n      this.fetchorders();\n    };\n\n    this.getEmptyOrderForm = () => ({\n      orderNo: '',\n      orderDate: new Date().toISOString().split('T')[0],\n      orderType: 'Standard',\n      customer: '',\n      status: 'Entered',\n      choose: 'Service',\n      qrefNo: '',\n      impExp: 'None',\n      currency: '',\n      conversionRate: '',\n      taxAmount: '',\n      orderValue: '',\n      discountPercent: 0,\n      discountAmount: 0,\n      afterDiscountValue: 0,\n      billTo: '',\n      shipTo: '',\n      despatchMode: 'By Air',\n      paymentTerms: '',\n      freightCharges: '',\n      freighttaxAmount: '',\n      taxPercent: '',\n      packingCharges: '',\n      lineItems: []\n    });\n\n    this.loadOrderPreview = order => {\n      this.setState({\n        selectedOrder: order,\n        previewOrderMode: true\n      });\n    };\n\n    this.loadorderForEdit = order => {\n      this.setState({\n        formData: { ...order,\n          lineItems: Array.isArray(order.lineItems) ? order.lineItems : []\n        },\n        breakdownItems: Array.isArray(order.breakdownItems) ? order.breakdownItems : [],\n        editingId: order.id,\n        showForm: true,\n        previewOrderMode: false,\n        // <-- Ensure preview mode is off\n        activeTab: 'co'\n      }, () => {\n        if (this.customerInputRef.current) {\n          this.customerInputRef.current.value = order.customer;\n        }\n      });\n    };\n\n    this.toggleOrderForm = () => {\n      this.setState({\n        showForm: true,\n        editingId: null,\n        previewOrderMode: false,\n        formData: this.getEmptyOrderForm(),\n        breakdownItems: []\n      });\n    };\n\n    this.toggleTaxGroupSelection = (groupName, lineIdx, isChecked) => {\n      const formData = { ...this.state.formData\n      };\n      const item = formData.lineItems[lineIdx];\n      if (!item.taxGroupNames) item.taxGroupNames = [];\n\n      if (isChecked) {\n        if (!item.taxGroupNames.includes(groupName)) {\n          item.taxGroupNames.push(groupName);\n        }\n      } else {\n        item.taxGroupNames = item.taxGroupNames.filter(g => g !== groupName);\n      }\n\n      this.setState({\n        formData\n      }, () => this.calculateOrderTotals());\n    };\n\n    this.showOverlay = type => this.setState({\n      overlayType: type,\n      overlaySearch: ''\n    });\n\n    this.hideOverlay = () => this.setState({\n      overlayType: '',\n      overlaySearch: ''\n    });\n\n    this.selectOverlayValue = value => {\n      if (this.state.overlayType === 'customer') {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            customer: value.custname || value.custcode || '',\n            // Use custname or custcode\n            billTo: this.formatAddress(value.billTo),\n            shipTo: this.formatAddress(value.shipTo),\n            currency: value.currency || '' // despatchMode: value.despatchMode || '', // No auto-fill for despatch mode\n            // paymentTerms: value.paymentTerms || '' // No auto-fill for payment terms\n\n          },\n          overlayType: '',\n          overlaySearch: ''\n        }), () => {\n          if (this.customerInputRef.current) {\n            this.customerInputRef.current.value = value.custname || value.custcode || '';\n          }\n        });\n      }\n    };\n\n    this.renderOverlay = () => {\n      const {\n        overlayType,\n        overlaySearch,\n        customers,\n        despatchModes,\n        paymentTerms\n      } = this.state;\n\n      const getFilteredRows = (list, nameKey = 'name', codeKey = 'shortName') => list.filter(item => (item[nameKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()) || (item[codeKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()));\n\n      const handleSelect = item => {\n        if (overlayType === 'customer') {\n          this.selectOverlayValue(item);\n        } else if (overlayType === 'despatchMode') {\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              despatchMode: item.name\n            },\n            overlayType: '',\n            overlaySearch: ''\n          }));\n        } else if (overlayType === 'paymentTerms') {\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              paymentTerms: item.name\n            },\n            overlayType: '',\n            overlaySearch: ''\n          }));\n        }\n      };\n\n      let title = '';\n      let headers = [];\n      let rows = [];\n\n      if (overlayType === 'customer') {\n        title = 'Select Customer';\n        headers = ['Name', 'Code', 'Short Name'];\n        rows = getFilteredRows(customers, 'custname', 'custcode');\n      } else if (overlayType === 'despatchMode') {\n        title = 'Select Despatch Mode';\n        headers = ['Name'];\n        rows = getFilteredRows(despatchModes);\n      } else if (overlayType === 'paymentTerms') {\n        title = 'Select Payment Terms';\n        headers = ['Name'];\n        rows = getFilteredRows(paymentTerms);\n      } else {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 9\n        }\n      }, title), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: `Search ${overlayType}...`,\n        value: overlaySearch,\n        onChange: e => this.setState({\n          overlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 802,\n          columnNumber: 15\n        }\n      }, headers.map((h, i) => /*#__PURE__*/React.createElement(\"th\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 40\n        }\n      }, h)))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 13\n        }\n      }, rows.map((item, i) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id || i,\n        onClick: () => handleSelect(item),\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 17\n        }\n      }, headers.map((h, j) => /*#__PURE__*/React.createElement(\"td\", {\n        key: j,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 21\n        }\n      }, overlayType === 'customer' ? h === 'Name' ? item.custname : h === 'Code' ? item.custcode : item.custshortName : h === 'Name' ? item.name : item.shortName)))), rows.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: headers.length,\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 19\n        }\n      }, \"No records found\"))))), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm mt-2\",\n        onClick: this.hideOverlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 9\n        }\n      }, \"Cancel\")));\n    };\n\n    this.renderTaxOverlay = () => {\n      const {\n        taxGroups,\n        currentTaxIdx,\n        formData\n      } = this.state;\n      if (currentTaxIdx === null) return null;\n      const item = formData.lineItems[currentTaxIdx];\n      const selected = new Set(item.taxGroupNames || []);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'fixed',\n          zIndex: 1000,\n          top: '10%',\n          left: '15%',\n          background: '#fff',\n          border: '1px solid #ccc',\n          padding: '20px',\n          boxShadow: '0 0 10px rgba(0,0,0,0.3)',\n          width: '70%',\n          maxHeight: '70vh',\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 849,\n          columnNumber: 7\n        }\n      }, \"Select Tax Groups\"), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-sm table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 24\n        }\n      }, \"Group\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 38\n        }\n      }, \"Components\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 57\n        }\n      }, \"%\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 9\n        }\n      }, taxGroups.map(tg => /*#__PURE__*/React.createElement(\"tr\", {\n        key: tg.groupName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: selected.has(tg.groupName),\n        onChange: e => this.toggleTaxGroupSelection(tg.groupName, currentTaxIdx, e.target.checked),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 15\n        }\n      }, tg.groupName), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 15\n        }\n      }, tg.lineItems.map(li => li.component).join(', ')), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 15\n        }\n      }, tg.lineItems.map(li => li.percentOrAmt).join(', ')))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-success\",\n        onClick: () => this.setState({\n          showTaxOverlay: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 874,\n          columnNumber: 9\n        }\n      }, \"Done\")));\n    };\n\n    this.renderOrderPreview = () => {\n      var _o$lineItems, _o$lineItems2;\n\n      const o = this.state.selectedOrder;\n      if (!o) return null;\n      const subtotal = ((_o$lineItems = o.lineItems) === null || _o$lineItems === void 0 ? void 0 : _o$lineItems.reduce((sum, item) => sum + (parseFloat(item.total) || 0), 0)) || 0;\n      const freightCharges = parseFloat(o.freightCharges || 0);\n      const taxAmount = parseFloat(o.taxAmount || 0);\n      const grandTotal = parseFloat(o.orderValue || subtotal + freightCharges + taxAmount);\n      const amountWords = `INR ${window.toWords ? window.toWords(Math.floor(grandTotal)) : grandTotal} Only`; // Find customer record for extra details\n\n      const customer = this.state.customers.find(c => c.custshortName === o.customer || c.custname === o.customer) || {};\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card mt-4 p-4 shadow-sm full-height d-flex flex-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 905,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 907,\n          columnNumber: 9\n        }\n      }, \"Order Preview - \", o.orderNo), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex items-center gap-x-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 908,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-primary mr-2\",\n        onClick: () => this.loadorderForEdit(o),\n        disabled: o.status === \"Approved\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 11\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-outline-secondary\",\n        onClick: () => this.handleConvertToInvoice(),\n        disabled: o.status === \"Approved\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 11\n        }\n      }, \"--Convert to Invoice\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 35\n        }\n      }, \"Customer:\"), \" \", o.customer), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 927,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 927,\n          columnNumber: 35\n        }\n      }, \"Date:\"), \" \", o.orderDate), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 928,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 928,\n          columnNumber: 35\n        }\n      }, \"Status:\"), \" \", o.status)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 930,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 931,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 11\n        }\n      }, \"Bill To:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 26\n        }\n      }), o.billTo || \"-\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mt-2\",\n        style: {\n          fontSize: \"0.9em\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 934,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 13\n        }\n      }, \"GSTIN:\"), \" \", customer.gstin || \"-\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 50\n        }\n      }), /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 13\n        }\n      }, \"Email:\"), \" \", customer.email || \"-\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 50\n        }\n      }), /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 13\n        }\n      }, \"Phone:\"), \" \", customer.phone || \"-\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 940,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 941,\n          columnNumber: 11\n        }\n      }, \"Ship To:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 941,\n          columnNumber: 26\n        }\n      }), o.shipTo || \"-\")), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 945,\n          columnNumber: 7\n        }\n      }, \"Line Items\"), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 946,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 947,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 948,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 949,\n          columnNumber: 13\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 13\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 13\n        }\n      }, \"Qty\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 952,\n          columnNumber: 13\n        }\n      }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 953,\n          columnNumber: 13\n        }\n      }, \"Total\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 9\n        }\n      }, (_o$lineItems2 = o.lineItems) === null || _o$lineItems2 === void 0 ? void 0 : _o$lineItems2.map((item, i) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 958,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 959,\n          columnNumber: 15\n        }\n      }, item.itemCode), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 960,\n          columnNumber: 15\n        }\n      }, item.itemDescription), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 15\n        }\n      }, item.qty), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 962,\n          columnNumber: 15\n        }\n      }, item.unitPrice), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 963,\n          columnNumber: 15\n        }\n      }, item.total))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 969,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 969,\n          columnNumber: 12\n        }\n      }, \"Subtotal:\"), \" \", subtotal.toFixed(2)), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 970,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 970,\n          columnNumber: 12\n        }\n      }, \"Freight Charges:\"), \" \", freightCharges.toFixed(2)), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 971,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 971,\n          columnNumber: 12\n        }\n      }, \"Tax Amount:\"), \" \", taxAmount.toFixed(2)), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 972,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 972,\n          columnNumber: 27\n        }\n      }, \"Grand Total:\"), \" \", grandTotal.toFixed(2)), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 973,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 973,\n          columnNumber: 27\n        }\n      }, \"Amount in Words:\"), \" \", amountWords)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mt-auto pt-3 text-right \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 975,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: () => this.setState({\n          previewOrderMode: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 976,\n          columnNumber: 9\n        }\n      }, \"Back to List\")));\n    };\n\n    this.renderBreakdownTab = () => {\n      const {\n        breakdownItems,\n        breakdownType,\n        formData\n      } = this.state; // map item totals from lineItems (main product totals)\n\n      const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\n        acc[li.itemCode] = parseFloat(li.total || 0) || 0;\n        return acc;\n      }, {});\n      const sumOfItemTotals = Object.values(itemTotals).reduce((s, v) => s + v, 0); // compute subproducts sum\n\n      const getSubProductsSum = bi => {\n        const mainTotal = itemTotals[bi.productId] || 0;\n        const subs = Array.isArray(bi.subProducts) ? bi.subProducts : [];\n        return subs.reduce((s, sp) => {\n          const val = parseFloat(sp.value || 0) || 0;\n          return s + (breakdownType === \"Percentage\" ? mainTotal * val / 100 : val);\n        }, 0);\n      };\n\n      const canSave = this.isBreakdownValid();\n      const isConverted = (formData === null || formData === void 0 ? void 0 : formData.status) === \"ConvertedToOrder\"; // ðŸ”‘ single flag\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1010,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1011,\n          columnNumber: 7\n        }\n      }, \"Milestone Breakdown\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1013,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1014,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1014,\n          columnNumber: 30\n        }\n      }, \"Quote Value:\"), \" \", formData.quoteValue), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1015,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1015,\n          columnNumber: 30\n        }\n      }, \"After Discount Quote Value:\"), \" \", formData.afterDiscountValue), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 30\n        }\n      }, \"Tax Amount:\"), \" \", formData.taxAmount), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1017,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1017,\n          columnNumber: 30\n        }\n      }, \"Sum of Item Totals:\"), \" \", sumOfItemTotals.toFixed(2))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1021,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1023,\n          columnNumber: 11\n        }\n      }, \"Subproduct Mode\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: breakdownType,\n        onChange: e => this.handleBreakdownTypeChange(e.target.value),\n        disabled: isConverted // disable if converted\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1024,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Amount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1030,\n          columnNumber: 13\n        }\n      }, \"Amount\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Percentage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1031,\n          columnNumber: 13\n        }\n      }, \"Percentage\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-9 text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 9\n        }\n      }, !isConverted && /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-sm\",\n        onClick: this.addBreakdownFromLineItems,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1036,\n          columnNumber: 13\n        }\n      }, \"+ Add Breakdown\"))), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1048,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1049,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1050,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1051,\n          columnNumber: 13\n        }\n      }, \"S.No\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1052,\n          columnNumber: 13\n        }\n      }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1053,\n          columnNumber: 13\n        }\n      }, \"Desc / Subproduct name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1054,\n          columnNumber: 13\n        }\n      }, \"SubProduct value (\", breakdownType === \"Percentage\" ? \"%\" : \"â‚¹\", \")\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1055,\n          columnNumber: 13\n        }\n      }, \"Total (\\u20B9)\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1056,\n          columnNumber: 13\n        }\n      }, \"Due Date\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1057,\n          columnNumber: 13\n        }\n      }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1060,\n          columnNumber: 9\n        }\n      }, breakdownItems.map((item, idx) => {\n        const mainItemTotal = itemTotals[item.productId] || 0;\n        const subSum = getSubProductsSum(item);\n        const remaining = mainItemTotal - subSum;\n        const subs = Array.isArray(item.subProducts) ? item.subProducts : [];\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          key: idx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1068,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"tr\", {\n          style: {\n            background: \"#eef4ff\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1070,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1071,\n            columnNumber: 19\n          }\n        }, item.sno), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1072,\n            columnNumber: 19\n          }\n        }, item.productId), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1073,\n            columnNumber: 19\n          }\n        }, item.desc), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1074,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1075,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1076,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"small\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1076,\n            columnNumber: 28\n          }\n        }, \"Subproducts sum: \", /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1076,\n            columnNumber: 52\n          }\n        }, subSum.toFixed(2)))), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1077,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"small\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1078,\n            columnNumber: 25\n          }\n        }, \"Remaining:\", \" \", /*#__PURE__*/React.createElement(\"b\", {\n          style: {\n            color: remaining > 0.01 ? \"red\" : \"green\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1080,\n            columnNumber: 27\n          }\n        }, remaining.toFixed(2)))))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1087,\n            columnNumber: 19\n          }\n        }, mainItemTotal.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1088,\n            columnNumber: 19\n          }\n        }), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1089,\n            columnNumber: 19\n          }\n        }, !isConverted && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1091,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm btn-outline-primary mr-2\",\n          onClick: () => this.handleAddInlineSubProduct(idx),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 23\n          }\n        }, \"+ Add\"), /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm btn-outline-secondary\",\n          onClick: () => {\n            if (remaining <= 0) return;\n            this.handleAddInlineSubProduct(idx, {\n              name: \"New Product\",\n              value: breakdownType === \"Percentage\" ? (remaining * 100 / (mainItemTotal || 1)).toFixed(2) : remaining.toFixed(2)\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1097,\n            columnNumber: 23\n          }\n        }, \"Auto-fill\")))), subs.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n          key: `notice-${idx}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1118,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          colSpan: \"6\",\n          className: \"text-center text-muted\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1119,\n            columnNumber: 21\n          }\n        }, \"No subproducts added for this item.\")), subs.map((sp, spIdx) => {\n          const spId = `${item.productId}_${spIdx + 1}`;\n          const rawVal = parseFloat(sp.value || 0) || 0;\n          const spTotal = breakdownType === \"Percentage\" ? mainItemTotal * rawVal / 100 : rawVal;\n          return /*#__PURE__*/React.createElement(\"tr\", {\n            key: spId,\n            style: {\n              background: \"#f9f9f9\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1133,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            className: \"text-muted\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1134,\n              columnNumber: 23\n            }\n          }, \"\\u2014\"), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1135,\n              columnNumber: 23\n            }\n          }, spId), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1136,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            type: \"text\",\n            className: \"form-control form-control-sm\",\n            value: sp.name || \"\",\n            onChange: e => this.handleSubProductChange(idx, spIdx, \"name\", e.target.value),\n            placeholder: \"Enter name\",\n            disabled: isConverted,\n            style: {\n              paddingLeft: \"18px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1137,\n              columnNumber: 25\n            }\n          })), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1147,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            type: \"number\",\n            step: \"any\",\n            className: \"form-control form-control-sm\",\n            value: sp.value || \"\",\n            onChange: e => this.handleSubProductChange(idx, spIdx, \"value\", e.target.value),\n            disabled: isConverted,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1148,\n              columnNumber: 25\n            }\n          })), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1157,\n              columnNumber: 23\n            }\n          }, spTotal.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1158,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            type: \"date\",\n            className: \"form-control form-control-sm\",\n            value: sp.dueDate || \"\",\n            onChange: e => this.handleSubProductChange(idx, spIdx, \"dueDate\", e.target.value),\n            disabled: isConverted,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1159,\n              columnNumber: 23\n            }\n          })), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1170,\n              columnNumber: 23\n            }\n          }, !isConverted && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            className: \"btn btn-sm btn-danger\",\n            onClick: () => this.handleRemoveSubProduct(idx, spIdx),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1173,\n              columnNumber: 27\n            }\n          }, \"-\"))));\n        }));\n      }))), !canSave && !isConverted && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1191,\n          columnNumber: 9\n        }\n      }, \"Breakdown incomplete \\u2014 for each product the sum of subproduct totals must equal the product total. Save disabled until fixed.\"));\n    };\n\n    this.renderProductOverlay = () => {\n      const {\n        products,\n        productOverlaySearch,\n        selectedProductIds\n      } = this.state;\n      const filtered = products.filter(p => (p.ptshortName || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) || (p.ptdescription || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) || (p.itemCode || '').toLowerCase().includes(productOverlaySearch.toLowerCase()));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1207,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1208,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1209,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1210,\n          columnNumber: 13\n        }\n      }, \"Select Products\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-success btn-sm\",\n        onClick: () => {\n          const selectedProducts = products.filter(p => this.state.selectedProductIds.includes(p.id));\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              lineItems: [...prev.formData.lineItems, ...selectedProducts.filter(p => !prev.formData.lineItems.some(item => item.id === p.id)).map(p => ({\n                id: p.id,\n                itemCode: p.productId || '',\n                itemDescription: p.ptdescription || '',\n                itemType: p.itemType || '',\n                materialType: p.materialType || '',\n                onHand: p.onHand || 0,\n                taxGroup: p.taxGroup || '',\n                custPartNo: p.custPartNo || '',\n                // Assuming this is cust part table\n                hsnNo: p.hsnNo || '',\n                // Assuming HSN No.\n                unitPrice: p.unitPrice || 0,\n                qty: 1,\n                total: (p.unitPrice || 0).toFixed(2)\n              }))]\n            },\n            productOverlayVisible: false,\n            selectedProductIds: []\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1211,\n          columnNumber: 13\n        }\n      }, \"Add Selected\")), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: \"Search products...\",\n        value: productOverlaySearch,\n        onChange: e => this.setState({\n          productOverlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1244,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1251,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1252,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1253,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1254,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1255,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1256,\n          columnNumber: 19\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1257,\n          columnNumber: 19\n        }\n      }, \"Item Desc\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1258,\n          columnNumber: 19\n        }\n      }, \"Item Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1259,\n          columnNumber: 19\n        }\n      }, \"Material Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1260,\n          columnNumber: 19\n        }\n      }, \"On Hand\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1261,\n          columnNumber: 19\n        }\n      }, \"Tax Grp\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1262,\n          columnNumber: 19\n        }\n      }, \"Cust Part No\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1265,\n          columnNumber: 15\n        }\n      }, filtered.map(p => /*#__PURE__*/React.createElement(\"tr\", {\n        key: p.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1267,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1268,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: selectedProductIds.includes(p.id),\n        onChange: e => {\n          const checked = e.target.checked;\n          this.setState(prev => ({\n            selectedProductIds: checked ? [...prev.selectedProductIds, p.id] : prev.selectedProductIds.filter(id => id !== p.id)\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1269,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1282,\n          columnNumber: 21\n        }\n      }, p.productId), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1283,\n          columnNumber: 21\n        }\n      }, p.ptdescription || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1284,\n          columnNumber: 21\n        }\n      }, p.itemType || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1285,\n          columnNumber: 21\n        }\n      }, p.materialType || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1286,\n          columnNumber: 21\n        }\n      }, p.onHand || 0), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1287,\n          columnNumber: 21\n        }\n      }, p.taxGroup || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1288,\n          columnNumber: 21\n        }\n      }, p.custPartNo || ''))), filtered.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1292,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"8\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1293,\n          columnNumber: 21\n        }\n      }, \"No products found\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1300,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1301,\n          columnNumber: 13\n        }\n      }, \"Page 1 of 1\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        onClick: () => this.setState({\n          productOverlayVisible: false,\n          selectedProductIds: []\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1302,\n          columnNumber: 13\n        }\n      }, \"Cancel\"))));\n    };\n\n    this.renderorderTable = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-4 full-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1310,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1311,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1312,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1313,\n        columnNumber: 11\n      }\n    }, \"Orders\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.setState({\n        showForm: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1314,\n        columnNumber: 11\n      }\n    }, \"+ Add Order\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1316,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1317,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1318,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1319,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1320,\n        columnNumber: 17\n      }\n    }, \"Order No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1321,\n        columnNumber: 17\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1322,\n        columnNumber: 17\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1323,\n        columnNumber: 17\n      }\n    }, \"Order Value\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1324,\n        columnNumber: 17\n      }\n    }, \"After Discount\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1325,\n        columnNumber: 17\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1326,\n        columnNumber: 17\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1329,\n        columnNumber: 13\n      }\n    }, this.state.orders.map((q, i) => {\n      let statusClass = \"badge-secondary\";\n      if (q.status === \"Entered\") statusClass = \"badge-warning\";else if (q.status === \"Submitted\") statusClass = \"badge-info\";else if (q.status === \"Approved\") statusClass = \"badge-success\";else if (q.status === \"Rejected\") statusClass = \"badge-danger\";\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        style: {\n          fontSize: '14px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1338,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1339,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-link p-0\",\n        onClick: () => this.loadOrderPreview(q),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1340,\n          columnNumber: 21\n        }\n      }, q.orderNo)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1347,\n          columnNumber: 19\n        }\n      }, q.customer), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1348,\n          columnNumber: 19\n        }\n      }, q.orderDate), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1349,\n          columnNumber: 19\n        }\n      }, q.orderValue), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1350,\n          columnNumber: 19\n        }\n      }, q.afterDiscountValue), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1351,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: `badge ${statusClass}`,\n        style: {\n          fontSize: '14px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1352,\n          columnNumber: 21\n        }\n      }, q.status)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1354,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-primary btn-sm\",\n        onClick: this.handleConvertToInvoice,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1355,\n          columnNumber: 21\n        }\n      }, \"--Convert to Invoice\")));\n    }), this.state.orders.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1362,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"6\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1362,\n        columnNumber: 21\n      }\n    }, \"No orders found.\")))))));\n\n    this.renderorderForm = () => {\n      const {\n        formData,\n        overlayType,\n        productOverlayVisible,\n        breakdownItems,\n        breakdownType\n      } = this.state;\n      const isFOB = formData.impExp === 'FOB';\n      const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\n        acc[li.itemCode] = parseFloat(li.total || 0) || 0;\n        return acc;\n      }, {});\n      const sumOfItemTotals = Object.values(itemTotals).reduce((sum, val) => sum + val, 0);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1382,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card full-height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1383,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: 'auto',\n          padding: '24px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1384,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1385,\n          columnNumber: 13\n        }\n      }, \"Order Form\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"nav nav-tabs\",\n        role: \"tablist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1386,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1387,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'co' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'co'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1388,\n          columnNumber: 17\n        }\n      }, \"CO Details\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1390,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'commercial'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1391,\n          columnNumber: 17\n        }\n      }, \"Commercial Terms\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1393,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'breakdown' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'breakdown'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1394,\n          columnNumber: 15\n        }\n      }, \"Breakdown\"))), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"form-sample\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1397,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tab-content pt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1398,\n          columnNumber: 15\n        }\n      }, this.state.activeTab === 'co' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1401,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1402,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1403,\n          columnNumber: 25\n        }\n      }, \"Order No\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.orderNo,\n        onChange: e => this.handleInputChange('orderNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1404,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1406,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1407,\n          columnNumber: 25\n        }\n      }, \"Order Date\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"date\",\n        className: \"form-control form-control-sm\",\n        value: formData.orderDate,\n        onChange: e => this.handleInputChange('orderDate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1408,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1410,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1411,\n          columnNumber: 25\n        }\n      }, \"Order Type\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.orderType,\n        onChange: e => this.handleInputChange('orderType', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1412,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1413,\n          columnNumber: 27\n        }\n      }, \"Standard\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1414,\n          columnNumber: 27\n        }\n      }, \"Manual\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1417,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1418,\n          columnNumber: 25\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.status,\n        style: {\n          backgroundColor: '#fff'\n        },\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1419,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1422,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1423,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1424,\n          columnNumber: 25\n        }\n      }, \"Customer\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1425,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Choose Customer\",\n        ref: this.customerInputRef,\n        value: formData.customer,\n        readOnly: true,\n        onClick: () => this.showOverlay('customer'),\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1426,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1436,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        onClick: () => this.showOverlay('customer'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1437,\n          columnNumber: 29\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1441,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1442,\n          columnNumber: 25\n        }\n      }, \"IMP/EXP\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.impExp,\n        onChange: e => this.handleInputChange('impExp', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1443,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1448,\n          columnNumber: 27\n        }\n      }, \"None\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1449,\n          columnNumber: 27\n        }\n      }, \"COB\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1450,\n          columnNumber: 27\n        }\n      }, \"FOB\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1451,\n          columnNumber: 27\n        }\n      }, \"CIF\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1454,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1455,\n          columnNumber: 25\n        }\n      }, \"Ref No.\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.qrefNo,\n        onChange: e => this.handleInputChange('qrefNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1456,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1463,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1464,\n          columnNumber: 25\n        }\n      }, \"Choose\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1465,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check mr-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1466,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        className: \"form-check-input\",\n        name: \"choose\",\n        id: \"chooseService\",\n        value: \"Service\",\n        checked: formData.choose === 'Service',\n        onChange: e => this.handleInputChange('choose', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1467,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"chooseService\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1468,\n          columnNumber: 29\n        }\n      }, \"Service\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1470,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        className: \"form-check-input\",\n        name: \"choose\",\n        id: \"chooseProduct\",\n        value: \"Product\",\n        checked: formData.choose === 'Product',\n        onChange: e => this.handleInputChange('choose', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1471,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"chooseProduct\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1472,\n          columnNumber: 29\n        }\n      }, \"Product\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1477,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1478,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1479,\n          columnNumber: 25\n        }\n      }, \"Currency\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.currency,\n        style: {\n          backgroundColor: '#fff'\n        },\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1480,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1488,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1489,\n          columnNumber: 25\n        }\n      }, \"Conversion Rate\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.conversionRate,\n        onChange: e => this.handleInputChange('conversionRate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1490,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1497,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1498,\n          columnNumber: 25\n        }\n      }, \"Tax Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxAmount,\n        onChange: e => this.handleInputChange('taxAmount', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1499,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1507,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1508,\n          columnNumber: 25\n        }\n      }, \"Order Value\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.orderValue,\n        onChange: e => this.handleInputChange('orderValue', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1509,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1518,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1519,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1520,\n          columnNumber: 23\n        }\n      }, \"Discount %\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        value: this.state.formData.discountPercent,\n        onChange: e => this.handleDiscountChange(\"discountPercent\", e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1521,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1528,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1529,\n          columnNumber: 21\n        }\n      }, \"Discount Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        value: this.state.formData.discountAmount,\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1530,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1537,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1538,\n          columnNumber: 23\n        }\n      }, \"After Discount - Quote Value\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        value: this.state.formData.afterDiscountValue,\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1539,\n          columnNumber: 23\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1547,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1548,\n          columnNumber: 29\n        }\n      }, \"Line Item\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-sm\",\n        onClick: () => this.setState({\n          productOverlayVisible: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1549,\n          columnNumber: 29\n        }\n      }, \"+ Add Product\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-responsive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1553,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1554,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1555,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1556,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1557,\n          columnNumber: 35\n        }\n      }, \" Item Code \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1558,\n          columnNumber: 35\n        }\n      }, \" Item Desc \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1559,\n          columnNumber: 35\n        }\n      }, \" Cust Part No \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1560,\n          columnNumber: 35\n        }\n      }, \" HSN No \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1561,\n          columnNumber: 35\n        }\n      }, \" On Hand \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1562,\n          columnNumber: 35\n        }\n      }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1563,\n          columnNumber: 35\n        }\n      }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1564,\n          columnNumber: 35\n        }\n      }, \"Tax Id\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1565,\n          columnNumber: 35\n        }\n      }, \"Item Total\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1566,\n          columnNumber: 35\n        }\n      }, \"Tax Amt\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1569,\n          columnNumber: 31\n        }\n      }, formData.lineItems.map((item, idx) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id || idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1571,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1572,\n          columnNumber: 37\n        }\n      }, item.itemCode), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1573,\n          columnNumber: 37\n        }\n      }, item.itemDescription), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1574,\n          columnNumber: 37\n        }\n      }, item.custPartNo), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1575,\n          columnNumber: 37\n        }\n      }, item.hsnNo), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1576,\n          columnNumber: 37\n        }\n      }, item.onHand), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1577,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        value: item.unitPrice,\n        onChange: e => this.handleLineItemChange(idx, 'unitPrice', e.target.value),\n        style: {\n          width: 80\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1578,\n          columnNumber: 39\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1585,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        min: \"1\",\n        value: item.qty,\n        onChange: e => this.handleLineItemChange(idx, 'qty', e.target.value),\n        style: {\n          width: 60\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1586,\n          columnNumber: 39\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          verticalAlign: 'middle'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1594,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-sm btn-outline-primary\",\n        onClick: () => this.setState({\n          showTaxOverlay: true,\n          currentTaxIdx: idx\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1595,\n          columnNumber: 39\n        }\n      }, \"Select Tax\"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          fontSize: '10px',\n          marginTop: '4px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1602,\n          columnNumber: 39\n        }\n      }, (item.taxGroupNames || []).join(', ') || '-')), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1606,\n          columnNumber: 38\n        }\n      }, item.total || '0.00'), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1607,\n          columnNumber: 39\n        }\n      }, item.taxAmt || '0.00'))), formData.lineItems.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1612,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"9\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1613,\n          columnNumber: 37\n        }\n      }, \"No items\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1620,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1621,\n          columnNumber: 29\n        }\n      }, \"Page 1 of 1\"))), this.state.activeTab === 'commercial' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1628,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1629,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1630,\n          columnNumber: 25\n        }\n      }, \"Bill To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"3\",\n        value: formData.billTo,\n        onChange: e => this.handleInputChange('billTo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1631,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1638,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1639,\n          columnNumber: 25\n        }\n      }, \"Ship To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"3\",\n        value: formData.shipTo,\n        onChange: e => this.handleInputChange('shipTo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1640,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1648,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1649,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1650,\n          columnNumber: 3\n        }\n      }, \"Despatch Mode\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1651,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: formData.despatchMode,\n        readOnly: true,\n        onClick: () => !isFOB && this.showOverlay('despatchMode'),\n        style: {\n          cursor: isFOB ? 'not-allowed' : 'pointer',\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1652,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1660,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        disabled: isFOB,\n        onClick: () => this.showOverlay('despatchMode'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1661,\n          columnNumber: 7\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1673,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1674,\n          columnNumber: 3\n        }\n      }, \"Payment Terms\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1675,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: formData.paymentTerms,\n        readOnly: true,\n        onClick: () => !isFOB && this.showOverlay('paymentTerms'),\n        style: {\n          cursor: isFOB ? 'not-allowed' : 'pointer',\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1676,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1684,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        disabled: isFOB,\n        onClick: () => this.showOverlay('paymentTerms'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1685,\n          columnNumber: 7\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1697,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1698,\n          columnNumber: 25\n        }\n      }, \"Freight Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.freightCharges,\n        onChange: e => this.handleInputChange('freightCharges', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1699,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1708,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1709,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1710,\n          columnNumber: 25\n        }\n      }, \"Tax %\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxPercent,\n        onChange: e => this.handleInputChange('taxPercent', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1711,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1719,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1720,\n          columnNumber: 25\n        }\n      }, \"Freight Tax Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxAmount,\n        onChange: e => this.handleInputChange('freighttaxAmount', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1721,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1729,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1730,\n          columnNumber: 25\n        }\n      }, \"Packing Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.packingCharges,\n        onChange: e => this.handleInputChange('packingCharges', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1731,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1740,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1741,\n          columnNumber: 23\n        }\n      }, \"Save All Details\"))), this.state.activeTab === 'breakdown' && this.renderBreakdownTab()), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fixed-card-footer text-right p-3 border-top bg-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1748,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success mr-2\",\n        disabled: !this.isBreakdownValid(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1749,\n          columnNumber: 17\n        }\n      }, \"Save All Details\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: () => this.setState({\n          showForm: false,\n          editingId: null\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1750,\n          columnNumber: 17\n        }\n      }, \"Cancel\"))), overlayType && this.renderOverlay(), productOverlayVisible && this.renderProductOverlay(), this.state.showTaxOverlay && this.renderTaxOverlay())));\n    };\n  }\n\n  getTaxDetailsFromGroup(groupName) {\n    if (!groupName || groupName === 'nill' || groupName === 'more') return {\n      totalPercent: 0,\n      totalAmount: 0\n    };\n    const group = this.state.taxGroups.find(tg => tg.groupName === groupName);\n    if (!group || !Array.isArray(group.lineItems)) return {\n      totalPercent: 0,\n      totalAmount: 0\n    };\n    let totalPercent = 0;\n    let totalAmount = 0;\n    group.lineItems.forEach(item => {\n      if (item.type === 'Percentage') {\n        totalPercent += parseFloat(item.percentOrAmt || 0);\n      } else if (item.type === 'Amount') {\n        totalAmount += parseFloat(item.percentOrAmt || 0);\n      }\n    });\n    return {\n      totalPercent,\n      totalAmount\n    };\n  }\n\n  componentDidMount() {\n    var _this$props$location, _this$props$location$;\n\n    bsCustomFileInput.init();\n    this.fetchorders();\n    this.fetchCustomers();\n    this.fetchProducts();\n    this.fetchDespatchModes();\n    this.fetchPaymentTerms();\n    this.calculateOrderTotals();\n    this.fetchTaxGroups();\n    const quoteFromSession = sessionStorage.getItem('quoteToConvert');\n\n    if (quoteFromSession && !this.state.showForm) {\n      const quote = JSON.parse(quoteFromSession);\n      sessionStorage.removeItem('quoteToConvert'); // Calculate discount fields\n\n      const quoteValue = parseFloat(quote.quoteValue || 0);\n      const discountPercent = parseFloat(quote.discountPercent || 0);\n      const discountAmount = quoteValue * discountPercent / 100;\n      const afterDiscountValue = quoteValue - discountAmount; // Recalculate item totals if needed\n\n      const lineItems = (quote.lineItems || []).map(item => {\n        const qty = parseFloat(item.qty || 1);\n        const unitPrice = parseFloat(item.unitPrice || 0);\n        const total = qty * unitPrice;\n        return { ...item,\n          total: total.toFixed(2)\n        };\n      });\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          ...quote,\n          orderNo: `CO${1000 + prev.orders.length}`,\n          orderDate: new Date().toISOString().split('T')[0],\n          status: 'Entered',\n          orderType: 'Standard',\n          orderValue: quote.quoteValue || '',\n          discountPercent,\n          discountAmount,\n          afterDiscountValue,\n          lineItems,\n          quoteNo: quote.quoteNo || '',\n          qrefNo: quote.quoteNo || ''\n        },\n        breakdownItems: Array.isArray(quote.breakdownItems) ? quote.breakdownItems : [],\n        showForm: true\n      }));\n    }\n\n    const invoiceData = ((_this$props$location = this.props.location) === null || _this$props$location === void 0 ? void 0 : (_this$props$location$ = _this$props$location.state) === null || _this$props$location$ === void 0 ? void 0 : _this$props$location$.invoiceDataFromOrder) || JSON.parse(sessionStorage.getItem('invoiceDataFromOrder') || '{}');\n\n    if (invoiceData && invoiceData.customer) {\n      this.setState({\n        formData: invoiceData\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // Customer details auto-fill\n    if (this.state.showForm && this.state.customers.length > 0 && this.state.formData.customer && (prevState.formData.customer !== this.state.formData.customer || !this.state.formData.billTo && !this.state.formData.shipTo)) {\n      const customerObj = this.state.customers.find(c => c.custname === this.state.formData.customer || c.custcode === this.state.formData.customer);\n\n      if (customerObj) {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            billTo: this.formatAddress(customerObj.billTo),\n            shipTo: this.formatAddress(customerObj.shipTo),\n            currency: customerObj.currency || '' // paymentTerms: customerObj.paymentTerms || '', // No auto-fill for payment terms\n            // despatchMode: customerObj.despatchMode || '' // No auto-fill for despatch mode\n\n          }\n        }));\n      }\n    } // Freight and Tax calculation based on impExp\n\n\n    const {\n      impExp,\n      freightCharges,\n      taxPercent,\n      packingCharges,\n      lineItems\n    } = this.state.formData;\n\n    if (['None', 'CIF'].includes(impExp)) {\n      const freight = parseFloat(freightCharges) || 0;\n      const tax = parseFloat(taxPercent) || 0;\n      const packing = parseFloat(packingCharges) || 0;\n      const taxAmount = freight * tax / 100;\n      const lineTotal = lineItems.reduce((sum, item) => {\n        const total = parseFloat(item.total) || 0;\n        return sum + total;\n      }, 0);\n      const orderValue = lineTotal + freight + taxAmount + packing;\n\n      if (this.state.formData.taxAmount !== taxAmount.toFixed(2) || this.state.formData.orderValue !== orderValue.toFixed(2)) {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            taxAmount: taxAmount.toFixed(2),\n            orderValue: orderValue.toFixed(2)\n          }\n        }));\n      }\n    } else if (impExp === 'FOB') {\n      if (this.state.formData.freightCharges !== '' || this.state.formData.taxPercent !== '' || this.state.formData.taxAmount !== '' || this.state.formData.packingCharges !== '') {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            freightCharges: '',\n            taxPercent: '',\n            taxAmount: '',\n            packingCharges: '',\n            orderValue: ''\n          }\n        }));\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1771,\n        columnNumber: 7\n      }\n    }, this.state.previewOrderMode ? this.renderOrderPreview() : this.state.showForm ? this.renderorderForm() : this.renderorderTable());\n  }\n\n}\n\nexport default withRouter(Order);","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/sales/salestransactions/order/Order.js"],"names":["React","Component","Form","bsCustomFileInput","db","collection","getDocs","addDoc","doc","updateDoc","serverTimestamp","html2canvas","jsPDF","withRouter","recalculateTotals","getTaxDetailsFromGroup","numberToWords","num","a","b","Math","floor","Order","state","activeTab","breakdownItems","orders","customers","products","despatchModes","paymentTerms","showForm","editingId","overlayType","overlaySearch","productOverlayVisible","productOverlaySearch","selectedProductIds","taxGroups","showTaxOverlay","currentTaxIdx","breakdownType","formData","orderNo","orderDate","Date","toISOString","split","orderType","customer","status","choose","qrefNo","impExp","currency","conversionRate","taxAmount","orderValue","discountPercent","discountAmount","afterDiscountValue","billTo","shipTo","despatchMode","freightCharges","freighttaxAmount","taxPercent","packingCharges","lineItems","customerInputRef","createRef","formatAddress","addr","address","city","country","filter","Boolean","join","zip","convertMainProductToInvoice","breakdownIdx","item","mainLineItem","find","li","itemCode","productId","alert","invoiceLineItems","subProducts","map","sp","i","itemDescription","name","qty","unitPrice","parseFloat","value","total","taxGroupNames","taxAmt","invoiceData","InvoiceDate","sessionStorage","setItem","JSON","stringify","props","history","push","pathname","invoiceDataFromOrder","convertSubProductToInvoice","subIdx","calculateOrderTotals","freight","packing","taxOnFreight","includes","lineTotal","itemTaxTotal","updatedLineItems","baseTotal","groupNames","length","taxGroup","percent","amount","forEach","groupName","group","t","Array","isArray","comp","val","percentOrAmt","type","toFixed","totalTaxAmount","setState","prev","handleDiscountChange","field","quoteValue","handleConvertToInvoice","optionalOrder","source","selectedOrder","ptshortName","ptdescription","hsnCode","hsnNo","uom","invoiceNo","invoiceDate","invoiceType","quoteNo","invoiceValue","fetchTaxGroups","snap","data","docs","id","fetchorders","reverse","fetchCustomers","fetchProducts","fetchDespatchModes","fetchPaymentTerms","handleInputChange","handleBreakdownChange","idx","items","handleBreakdownTypeChange","handleAddInlineSubProduct","initial","defaultSP","handleRemoveSubProduct","biIdx","spIdx","splice","handleSubProductChange","getSubProductsSum","bi","itemTotals","reduce","acc","mainTotal","subs","s","isBreakdownValid","TOL","subSum","abs","handleLineItemChange","updatedItems","handleSubmit","e","preventDefault","orderDocId","formDataWithoutId","updatedAt","docRef","createdAt","quoteSnap","quoteDoc","q","previewOrderMode","getEmptyOrderForm","loadOrderPreview","order","loadorderForEdit","current","toggleOrderForm","toggleTaxGroupSelection","lineIdx","isChecked","g","showOverlay","hideOverlay","selectOverlayValue","custname","custcode","renderOverlay","getFilteredRows","list","nameKey","codeKey","toLowerCase","handleSelect","title","headers","rows","target","maxHeight","overflowY","h","cursor","j","custshortName","shortName","renderTaxOverlay","selected","Set","position","zIndex","top","left","background","border","padding","boxShadow","width","tg","has","checked","component","renderOrderPreview","o","subtotal","sum","grandTotal","amountWords","window","toWords","c","fontSize","gstin","email","phone","renderBreakdownTab","sumOfItemTotals","Object","values","v","canSave","isConverted","addBreakdownFromLineItems","mainItemTotal","remaining","sno","desc","color","spId","rawVal","spTotal","paddingLeft","dueDate","renderProductOverlay","filtered","p","selectedProducts","some","itemType","materialType","onHand","custPartNo","renderorderTable","statusClass","renderorderForm","isFOB","flex","backgroundColor","verticalAlign","marginTop","totalPercent","totalAmount","componentDidMount","init","quoteFromSession","getItem","quote","parse","removeItem","location","componentDidUpdate","prevProps","prevState","customerObj","tax","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport bsCustomFileInput from 'bs-custom-file-input';\r\nimport { db } from '../../../../firebase';\r\nimport { collection, getDocs, addDoc, doc, updateDoc ,serverTimestamp} from 'firebase/firestore';\r\nimport html2canvas from 'html2canvas';\r\nimport { jsPDF } from 'jspdf'; \r\nimport { withRouter } from 'react-router-dom';\r\nimport { recalculateTotals,getTaxDetailsFromGroup } from '../calculation';\r\nconst numberToWords = (num) => {\r\n  const a = ['', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine',\r\n    'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen',\r\n    'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];\r\n  const b = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\r\n\r\n  if (num === 0) return 'Zero';\r\n  if (num < 20) return a[num];\r\n  if (num < 100) return b[Math.floor(num / 10)] + ' ' + a[num % 10];\r\n  if (num < 1000)\r\n    return a[Math.floor(num / 100)] + ' Hundred ' + numberToWords(num % 100);\r\n  if (num < 100000)\r\n    return numberToWords(Math.floor(num / 1000)) + ' Thousand ' + numberToWords(num % 1000);\r\n  return 'Amount too large';\r\n};\r\n\r\nclass Order extends Component {\r\n  state = {\r\n    activeTab: 'co',\r\n    breakdownItems: [],\r\n    orders: [],\r\n    customers: [],\r\n    products: [],\r\n    despatchModes: [],\r\n    paymentTerms: [],\r\n    showForm: false,\r\n    editingId: null,\r\n    overlayType: '',\r\n    overlaySearch: '',\r\n    productOverlayVisible: false,\r\n    productOverlaySearch: '',\r\n    selectedProductIds: [],\r\n    taxGroups: [],\r\n    showTaxOverlay: false,\r\n    currentTaxIdx: null,\r\n     breakdownType: 'Amount', \r\n    formData: {\r\n      orderNo: '',\r\n      orderDate: new Date().toISOString().split('T')[0],\r\n      orderType: 'Standard',\r\n      customer: '',\r\n      status: 'Entered', // Static 'Entered'\r\n      choose: 'Service',\r\n      qrefNo: '',\r\n      impExp: 'None',\r\n      currency: '',\r\n      conversionRate: '',\r\n      taxAmount: '',\r\n      orderValue: '',\r\n      discountPercent: 0,\r\n      discountAmount: 0,\r\n      afterDiscountValue: 0,\r\n      billTo: '',\r\n      shipTo: '',\r\n      despatchMode: 'By Air',\r\n      paymentTerms: '',\r\n      freightCharges: '',\r\n      freighttaxAmount: '',\r\n      taxPercent: '',\r\n      packingCharges: '',\r\n      lineItems: [],\r\n    }\r\n  };\r\n  customerInputRef = React.createRef();\r\n\r\n  formatAddress = (addr) => {\r\n    if (!addr) return '';\r\n    if (typeof addr === 'string') return addr;\r\n    return [\r\n      addr.address,\r\n      [addr.city, addr.state, addr.country].filter(Boolean).join(', '),\r\n      addr.zip\r\n    ].filter(Boolean).join('\\n');\r\n  };\r\n\r\n  convertMainProductToInvoice = (breakdownIdx) => {\r\n  const { breakdownItems, formData } = this.state;\r\n  const item = breakdownItems[breakdownIdx];\r\n  const mainLineItem = (formData.lineItems || []).find(li => li.itemCode === item.productId);\r\n  if (!mainLineItem) return alert(\"Main product not found in line items.\");\r\n\r\n  // Build invoice line items: main product + all its subproducts\r\n  const invoiceLineItems = [\r\n    { ...mainLineItem },\r\n    ...(item.subProducts || []).map((sp, i) => ({\r\n      itemCode: item.productId + \"_\" + (i + 1),\r\n      itemDescription: sp.name,\r\n      qty: 1,\r\n      unitPrice: parseFloat(sp.value || 0),\r\n      total: parseFloat(sp.value || 0),\r\n      taxGroupNames: [], // No tax for subproducts\r\n      taxAmt: 0\r\n    }))\r\n  ];\r\n\r\n  // Build invoice data\r\n  const invoiceData = {\r\n    ...formData,\r\n    lineItems: invoiceLineItems,\r\n    InvoiceDate: new Date().toISOString().split('T')[0]\r\n  };\r\n\r\n  sessionStorage.setItem('invoiceDataFromOrder', JSON.stringify(invoiceData));\r\n  this.props.history.push({\r\n    pathname: '/panelone/Invoice',\r\n    state: { invoiceDataFromOrder: invoiceData }\r\n  });\r\n};\r\n//not used\r\nconvertSubProductToInvoice = (breakdownIdx, subIdx) => {\r\n  const { breakdownItems, formData } = this.state;\r\n  const item = breakdownItems[breakdownIdx];\r\n  const sp = (item.subProducts || [])[subIdx];\r\n  if (!sp) return alert(\"Subproduct not found.\");\r\n\r\n  // Find main product for tax\r\n  const mainLineItem = (formData.lineItems || []).find(li => li.itemCode === item.productId);\r\n\r\n  // Build invoice line item: subproduct only, but keep tax from main product if needed\r\n  const invoiceLineItems = [\r\n    {\r\n      itemCode: item.productId + \"_\" + (subIdx + 1),\r\n      itemDescription: sp.name,\r\n      qty: 1,\r\n      unitPrice: parseFloat(sp.value || 0),\r\n      total: parseFloat(sp.value || 0),\r\n      taxGroupNames: [], // No tax for subproducts\r\n      taxAmt: 0\r\n    }\r\n  ];\r\n\r\n  // Build invoice data\r\n  const invoiceData = {\r\n    ...formData,\r\n    lineItems: invoiceLineItems,\r\n    InvoiceDate: new Date().toISOString().split('T')[0]\r\n  };\r\n\r\n  sessionStorage.setItem('invoiceDataFromOrder', JSON.stringify(invoiceData));\r\n  this.props.history.push({\r\n    pathname: '/panelone/Invoice',\r\n    state: { invoiceDataFromOrder: invoiceData }\r\n  });\r\n};\r\n   getTaxDetailsFromGroup(groupName) {\r\n    if (!groupName || groupName === 'nill' || groupName === 'more') return { totalPercent: 0, totalAmount: 0 };\r\n\r\n    const group = this.state.taxGroups.find(tg => tg.groupName === groupName);\r\n    if (!group || !Array.isArray(group.lineItems)) return { totalPercent: 0, totalAmount: 0 };\r\n\r\n    let totalPercent = 0;\r\n    let totalAmount = 0;\r\n\r\n    group.lineItems.forEach(item => {\r\n      if (item.type === 'Percentage') {\r\n        totalPercent += parseFloat(item.percentOrAmt || 0);\r\n      } else if (item.type === 'Amount') {\r\n        totalAmount += parseFloat(item.percentOrAmt || 0);\r\n      }\r\n    });\r\n\r\n    return { totalPercent, totalAmount };\r\n  }\r\n\r\n calculateOrderTotals = () => {\r\n    const { impExp, freightCharges, taxPercent, packingCharges, lineItems } = this.state.formData;\r\n    let freight = parseFloat(freightCharges) || 0;\r\n    let packing = parseFloat(packingCharges) || 0;\r\n    let taxOnFreight = 0;\r\n    if (['None', 'CIF'].includes(impExp)) {\r\n      taxOnFreight = (freight * (parseFloat(taxPercent) || 0)) / 100;\r\n    }\r\n\r\n    let lineTotal = 0;\r\n    let itemTaxTotal = 0;\r\n\r\n   const updatedLineItems = lineItems.map(item => {\r\n      const qty = parseFloat(item.qty || 1);\r\n      const unitPrice = parseFloat(item.unitPrice || 0);\r\n      const baseTotal = unitPrice * qty;\r\n\r\n      const groupNames = item.taxGroupNames?.length ? item.taxGroupNames : [item.taxGroup || ''];\r\n\r\n      let percent = 0;\r\n      let amount = 0;\r\n      groupNames.forEach(groupName => {\r\n        const group = this.state.taxGroups.find(t => t.groupName === groupName);\r\n        if (group && Array.isArray(group.lineItems)) {\r\n          group.lineItems.forEach(comp => {\r\n            const val = parseFloat(comp.percentOrAmt || 0);\r\n            if (comp.type === 'Percentage') percent += val;\r\n            if (comp.type === 'Amount') amount += val;\r\n          });\r\n        }\r\n      });\r\n\r\n const taxAmt = (baseTotal * percent) / 100 + amount;\r\n      const total = baseTotal ;\r\n      item.taxAmt = taxAmt.toFixed(2);\r\n      item.total = total.toFixed(2);\r\n      return item;\r\n    });\r\n\r\n\r\n    const totalTaxAmount = itemTaxTotal + taxOnFreight;\r\n    const orderValue = lineTotal + freight + packing + itemTaxTotal;\r\n\r\n    this.setState(prev => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        taxAmount: totalTaxAmount.toFixed(2),  // âœ… Top-level field\r\n        orderValue: orderValue.toFixed(2),\r\n        lineItems: updatedLineItems\r\n      }\r\n    }));\r\n  };\r\nhandleDiscountChange = (field, value) => {\r\n  let { formData } = this.state;\r\n  formData[field] = value;\r\n\r\n  const quoteValue = parseFloat(formData.quoteValue || 0);\r\n  const discountPercent = parseFloat(formData.discountPercent || 0);\r\n  const discountAmount = (quoteValue * discountPercent) / 100;\r\n  const afterDiscountValue = quoteValue - discountAmount;\r\n\r\n  formData.discountAmount = discountAmount;\r\n  formData.afterDiscountValue = afterDiscountValue;\r\n\r\n  this.setState({ formData });\r\n};\r\n\r\n// Paste/replace this function in Order.js\r\nhandleConvertToInvoice = (optionalOrder = null) => {\r\n  // Prefer explicit param, then selectedOrder (preview), then formData\r\n  const source = optionalOrder\r\n    || this.state.selectedOrder\r\n    || this.state.formData\r\n    || {};\r\n\r\n  // Normalize line items (defensive)\r\n  const lineItems = (source.lineItems || []).map(item => ({\r\n    itemCode: item.itemCode || item.productId || '',\r\n    ptshortName: item.ptshortName || item.ptshortName || '',\r\n    itemDescription: item.itemDescription || item.ptdescription || '',\r\n    hsnCode: item.hsnCode || item.hsnNo || '',\r\n    uom: item.uom || item.uom || '',\r\n    qty: item.qty != null ? item.qty : 1,\r\n    unitPrice: item.unitPrice != null ? item.unitPrice : 0,\r\n    taxGroupNames: item.taxGroupNames || item.taxGroup ? (item.taxGroupNames || [item.taxGroup]) : [],\r\n    taxAmt: item.taxAmt || 0,\r\n    total: (item.total != null)\r\n      ? item.total\r\n      : ( (parseFloat(item.qty || 1) * parseFloat(item.unitPrice || 0)).toFixed(2) )\r\n  }));\r\n\r\n  // Calculate discount fallback values (defensive)\r\n  const orderValue = parseFloat(source.orderValue || source.quoteValue || 0);\r\n  const discountPercent = parseFloat(source.discountPercent || 0);\r\n  const discountAmount = parseFloat(source.discountAmount || (orderValue * discountPercent / 100)) || 0;\r\n  const afterDiscountValue = parseFloat(source.afterDiscountValue || (orderValue - discountAmount)) || 0;\r\n\r\n  const invoiceData = {\r\n    invoiceNo: '', // Invoice page will generate\r\n    invoiceDate: new Date().toISOString().split('T')[0],\r\n    invoiceType: 'Standard',\r\n    customer: source.customer || '',\r\n    status: source.status || 'Entered',\r\n    choose: source.choose || 'Service',\r\n    qrefNo: source.qrefNo || source.quoteNo || '',\r\n    impExp: source.impExp || 'None',\r\n    currency: source.currency || '',\r\n    conversionRate: source.conversionRate || '',\r\n    taxAmount: source.taxAmount || '',\r\n    invoiceValue: source.orderValue || source.invoiceValue || orderValue || '',\r\n    billTo: source.billTo || '',\r\n    shipTo: source.shipTo || '',\r\n    despatchMode: source.despatchMode || '',\r\n    paymentTerms: source.paymentTerms || '',\r\n    freightCharges: source.freightCharges || '',\r\n    freighttaxAmount: source.freighttaxAmount || '',\r\n    taxPercent: source.taxPercent || '',\r\n    packingCharges: source.packingCharges || '',\r\n    discountPercent,\r\n    discountAmount,\r\n    afterDiscountValue,\r\n    lineItems,\r\n  };\r\n\r\n  // Save to session (so Invoice page can pick from sessionFallback) and navigate\r\n  sessionStorage.setItem('invoiceDataFromOrder', JSON.stringify(invoiceData));\r\n  this.props.history.push({\r\n    pathname: '/panelone/Invoice',\r\n    state: { invoiceDataFromOrder: invoiceData }\r\n  });\r\n};\r\n\r\n\r\ncomponentDidMount() {\r\n    bsCustomFileInput.init();\r\n    this.fetchorders();\r\n    this.fetchCustomers();\r\n    this.fetchProducts();\r\n    this.fetchDespatchModes();\r\n    this.fetchPaymentTerms();\r\n    this.calculateOrderTotals();\r\n    this.fetchTaxGroups();\r\n  const quoteFromSession = sessionStorage.getItem('quoteToConvert');\r\n  if (quoteFromSession && !this.state.showForm) {\r\n    const quote = JSON.parse(quoteFromSession);\r\n    sessionStorage.removeItem('quoteToConvert');\r\n\r\n    // Calculate discount fields\r\n    const quoteValue = parseFloat(quote.quoteValue || 0);\r\n    const discountPercent = parseFloat(quote.discountPercent || 0);\r\n    const discountAmount = (quoteValue * discountPercent) / 100;\r\n    const afterDiscountValue = quoteValue - discountAmount;\r\n\r\n    // Recalculate item totals if needed\r\n    const lineItems = (quote.lineItems || []).map(item => {\r\n      const qty = parseFloat(item.qty || 1);\r\n      const unitPrice = parseFloat(item.unitPrice || 0);\r\n      const total = qty * unitPrice;\r\n      return {\r\n        ...item,\r\n        total: total.toFixed(2)\r\n      };\r\n    });\r\n\r\n    this.setState(prev => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        ...quote,\r\n        orderNo: `CO${1000 + prev.orders.length}`,\r\n        orderDate: new Date().toISOString().split('T')[0],\r\n        status: 'Entered',\r\n        orderType: 'Standard',\r\n        orderValue: quote.quoteValue || '',\r\n        discountPercent,\r\n        discountAmount,\r\n        afterDiscountValue,\r\n        lineItems,\r\n        quoteNo: quote.quoteNo || '',\r\n        qrefNo: quote.quoteNo || ''\r\n      },\r\n      breakdownItems: Array.isArray(quote.breakdownItems) ? quote.breakdownItems : [],\r\n      showForm: true\r\n    }));\r\n  }\r\n\r\n  \r\n  const invoiceData = this.props.location?.state?.invoiceDataFromOrder\r\n    || JSON.parse(sessionStorage.getItem('invoiceDataFromOrder') || '{}');\r\n  if (invoiceData && invoiceData.customer) {\r\n    this.setState({ formData: invoiceData });\r\n  }\r\n\r\n\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // Customer details auto-fill\r\n    if (\r\n      this.state.showForm &&\r\n      this.state.customers.length > 0 &&\r\n      this.state.formData.customer &&\r\n      (prevState.formData.customer !== this.state.formData.customer ||\r\n       (!this.state.formData.billTo && !this.state.formData.shipTo))\r\n    ) {\r\n      const customerObj = this.state.customers.find(\r\n        c => c.custname === this.state.formData.customer || c.custcode === this.state.formData.customer\r\n      );\r\n      if (customerObj) {\r\n        this.setState(prev => ({\r\n          formData: {\r\n            ...prev.formData,\r\n            billTo: this.formatAddress(customerObj.billTo),\r\n            shipTo: this.formatAddress(customerObj.shipTo),\r\n            currency: customerObj.currency || '',\r\n            // paymentTerms: customerObj.paymentTerms || '', // No auto-fill for payment terms\r\n            // despatchMode: customerObj.despatchMode || '' // No auto-fill for despatch mode\r\n          }\r\n        }));\r\n      }\r\n    }\r\n\r\n    // Freight and Tax calculation based on impExp\r\n    const { impExp, freightCharges, taxPercent,packingCharges, lineItems } = this.state.formData;\r\n    if (['None', 'CIF'].includes(impExp)) {\r\n      const freight = parseFloat(freightCharges) || 0;\r\n      const tax = parseFloat(taxPercent) || 0;\r\n      const packing = parseFloat(packingCharges) || 0;\r\n\r\n      const taxAmount = (freight * tax) / 100;\r\n\r\n      const lineTotal = lineItems.reduce((sum, item) => {\r\n        const total = parseFloat(item.total) || 0;\r\n        return sum + total;\r\n      }, 0);\r\n\r\n      const orderValue = lineTotal + freight + taxAmount + packing;\r\n\r\n      if (\r\n    this.state.formData.taxAmount !== taxAmount.toFixed(2) ||\r\n    this.state.formData.orderValue !== orderValue.toFixed(2)\r\n  ) {\r\n    this.setState(prev => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        taxAmount: taxAmount.toFixed(2),\r\n        orderValue: orderValue.toFixed(2)\r\n      }\r\n    }));\r\n  }\r\n} else if (impExp === 'FOB') {\r\n  if (\r\n    this.state.formData.freightCharges !== '' ||\r\n    this.state.formData.taxPercent !== '' ||\r\n    this.state.formData.taxAmount !== '' ||\r\n    this.state.formData.packingCharges !== ''\r\n  ) {\r\n    this.setState(prev => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        freightCharges: '',\r\n        taxPercent: '',\r\n        taxAmount: '',\r\n        packingCharges: '',\r\n        orderValue: ''\r\n      }\r\n    }));\r\n  }\r\n\r\n    }\r\n  }\r\nfetchTaxGroups = async () => {\r\n  const snap = await getDocs(collection(db, 'taxGroups'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ taxGroups: data });\r\n};\r\n\r\n  fetchorders = async () => {\r\n    const snap = await getDocs(collection(db, 'orders'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ orders: data.reverse() });\r\n  };\r\n\r\n  fetchCustomers = async () => {\r\n    const snap = await getDocs(collection(db, 'customers'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ customers: data });\r\n  };\r\n\r\n  fetchProducts = async () => {\r\n    const snap = await getDocs(collection(db, 'products'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ products: data });\r\n  };\r\n  fetchDespatchModes = async () => {\r\n  const snap = await getDocs(collection(db, 'modes'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ despatchModes: data });\r\n};\r\n\r\nfetchPaymentTerms = async () => {\r\n  const snap = await getDocs(collection(db, 'paymentTerms'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ paymentTerms: data });\r\n};\r\n\r\n\r\n  handleInputChange = (field, value) => {\r\n    this.setState(prev => ({\r\n      formData: { ...prev.formData, [field]: value }\r\n    }));\r\n  };\r\n  handleBreakdownChange = (idx, field, value) => {\r\n  this.setState(prev => {\r\n    const items = [...prev.breakdownItems];\r\n    items[idx][field] = value;\r\n    return { breakdownItems: items };\r\n  });\r\n};\r\n\r\n handleBreakdownTypeChange = (val) => {\r\n    this.setState({ breakdownType: val });\r\n  };\r\n\r\n  handleAddInlineSubProduct = (breakdownIdx, initial = null) => {\r\n    this.setState(prev => {\r\n      const items = [...prev.breakdownItems];\r\n      const item = items[breakdownIdx] ? { ...items[breakdownIdx] } : null;\r\n      if (!item) return {};\r\n      const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\r\n      const defaultSP = { name: '', value: '' };\r\n      subProducts.push(initial ? { ...defaultSP, ...initial } : defaultSP);\r\n      item.subProducts = subProducts;\r\n      items[breakdownIdx] = item;\r\n      return { breakdownItems: items };\r\n    });\r\n  };\r\n    handleRemoveSubProduct = (biIdx, spIdx) => {\r\n    this.setState(prev => {\r\n      const items = [...prev.breakdownItems];\r\n      if (!items[biIdx]) return {};\r\n      const item = { ...items[biIdx] };\r\n      const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\r\n      subProducts.splice(spIdx, 1);\r\n      item.subProducts = subProducts;\r\n      items[biIdx] = item;\r\n      return { breakdownItems: items };\r\n    });\r\n  };\r\n  handleSubProductChange = (biIdx, spIdx, field, value) => {\r\n    this.setState(prev => {\r\n      const items = [...prev.breakdownItems];\r\n      if (!items[biIdx]) return {};\r\n      const item = { ...items[biIdx] };\r\n      const subProducts = Array.isArray(item.subProducts) ? [...item.subProducts] : [];\r\n      const sp = { ...subProducts[spIdx], [field]: value };\r\n      subProducts[spIdx] = sp;\r\n      item.subProducts = subProducts;\r\n      items[biIdx] = item;\r\n      return { breakdownItems: items };\r\n    });\r\n  };\r\n  getSubProductsSum = (bi) => {\r\n    const { breakdownType, formData } = this.state;\r\n    const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\r\n      acc[li.itemCode] = parseFloat(li.total || 0) || 0;\r\n      return acc;\r\n    }, {});\r\n    const mainTotal = itemTotals[bi.productId] || 0;\r\n    const subs = Array.isArray(bi.subProducts) ? bi.subProducts : [];\r\n    return subs.reduce((s, sp) => {\r\n      const val = parseFloat(sp.value || 0) || 0;\r\n      if (breakdownType === 'Percentage') {\r\n        return s + (mainTotal * val / 100);\r\n      }\r\n      return s + val;\r\n    }, 0);\r\n  };\r\n   isBreakdownValid = () => {\r\n    const { breakdownItems, formData } = this.state;\r\n    const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\r\n      acc[li.itemCode] = parseFloat(li.total || 0) || 0;\r\n      return acc;\r\n    }, {});\r\n    const TOL = 0.01;\r\n    for (let bi of breakdownItems) {\r\n      const mainTotal = itemTotals[bi.productId] || 0;\r\n      if (mainTotal > 0) {\r\n        const subSum = this.getSubProductsSum(bi);\r\n        if (Math.abs(subSum - mainTotal) > TOL) return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  \r\nhandleLineItemChange = (idx, field, value) => {\r\n  const updatedItems = [...this.state.formData.lineItems];\r\n  updatedItems[idx] = { ...updatedItems[idx], [field]: value };\r\n  const { updatedLineItems, freighttaxAmount, taxAmount, orderValue } = recalculateTotals({\r\n  lineItems: updatedItems,\r\n  freightCharges: this.state.formData.freightCharges,\r\n  packingCharges: this.state.formData.packingCharges,\r\n  taxPercent: this.state.formData.taxPercent,\r\n  taxGroups: this.state.taxGroups\r\n});\r\n\r\nthis.setState(prev => ({\r\n  formData: {\r\n    ...prev.formData,\r\n    lineItems: updatedLineItems,\r\n    freighttaxAmount,\r\n    taxAmount,\r\n    orderValue: orderValue   \r\n  }\r\n}));\r\n\r\n};\r\nhandleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  const { editingId, formData, orders, breakdownItems } = this.state;\r\n  if (!formData.customer) return alert(\"Customer is required\");\r\n  if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\r\n\r\n  formData.breakdownItems = breakdownItems;\r\n\r\n  let orderDocId = editingId;\r\n  if (editingId) {\r\n    const { id, ...formDataWithoutId } = formData;\r\n    await updateDoc(doc(db, \"orders\", editingId), {\r\n      ...formDataWithoutId,\r\n      status: \"Entered\",\r\n      updatedAt: serverTimestamp()\r\n    });\r\n    orderDocId = editingId;\r\n  } else {\r\n    formData.orderNo = `CO${1000 + orders.length}`;\r\n    const docRef = await addDoc(collection(db, \"orders\"), {\r\n      ...formData,\r\n      status: \"Entered\",\r\n      createdAt: serverTimestamp()\r\n    });\r\n    orderDocId = docRef.id;\r\n  }\r\n\r\n  // If this order was created from a quote, update quote status now\r\n  if (formData.quoteNo) {\r\n    const quoteSnap = await getDocs(collection(db, \"quotes\"));\r\n    const quoteDoc = quoteSnap.docs.find(q => q.data().quoteNo === formData.quoteNo);\r\n    if (quoteDoc) {\r\n      await updateDoc(doc(db, \"quotes\", quoteDoc.id), { status: \"ConvertedToOrder\" });\r\n    }\r\n  }\r\n\r\n  this.setState({ showForm: false, editingId: null, previewOrderMode: false, formData: this.getEmptyOrderForm() });\r\n  this.fetchorders();\r\n};\r\n\r\n// Helper to reset formData\r\ngetEmptyOrderForm = () => ({\r\n  orderNo: '',\r\n  orderDate: new Date().toISOString().split('T')[0],\r\n  orderType: 'Standard',\r\n  customer: '',\r\n  status: 'Entered',\r\n  choose: 'Service',\r\n  qrefNo: '',\r\n  impExp: 'None',\r\n  currency: '',\r\n  conversionRate: '',\r\n  taxAmount: '',\r\n  orderValue: '',\r\n  discountPercent: 0,\r\n  discountAmount: 0,\r\n  afterDiscountValue: 0,\r\n  billTo: '',\r\n  shipTo: '',\r\n  despatchMode: 'By Air',\r\n  paymentTerms: '',\r\n  freightCharges: '',\r\n  freighttaxAmount: '',\r\n  taxPercent: '',\r\n  packingCharges: '',\r\n  lineItems: [],\r\n});\r\n\r\nloadOrderPreview = (order) => {\r\n  this.setState({\r\n    selectedOrder: order,\r\n    previewOrderMode: true\r\n  });\r\n};\r\n\r\nloadorderForEdit = (order) => {\r\n  this.setState({\r\n    formData: {\r\n      ...order,\r\n      lineItems: Array.isArray(order.lineItems) ? order.lineItems : []\r\n    },\r\n    breakdownItems: Array.isArray(order.breakdownItems) ? order.breakdownItems : [],\r\n    editingId: order.id,\r\n    showForm: true,\r\n    previewOrderMode: false, // <-- Ensure preview mode is off\r\n    activeTab: 'co'\r\n  }, () => {\r\n    if (this.customerInputRef.current) {\r\n      this.customerInputRef.current.value = order.customer;\r\n    }\r\n  });\r\n};\r\n// When opening a new order form\r\ntoggleOrderForm = () => {\r\n  this.setState({\r\n    showForm: true,\r\n    editingId: null,\r\n    previewOrderMode: false,\r\n    formData: this.getEmptyOrderForm(),\r\n    breakdownItems: [],\r\n  });\r\n};\r\ntoggleTaxGroupSelection = (groupName, lineIdx, isChecked) => {\r\n  const formData = { ...this.state.formData };\r\n  const item = formData.lineItems[lineIdx];\r\n\r\n  if (!item.taxGroupNames) item.taxGroupNames = [];\r\n\r\n  if (isChecked) {\r\n    if (!item.taxGroupNames.includes(groupName)) {\r\n      item.taxGroupNames.push(groupName);\r\n    }\r\n  } else {\r\n    item.taxGroupNames = item.taxGroupNames.filter(g => g !== groupName);\r\n  }\r\n\r\n  this.setState({ formData }, () => this.calculateOrderTotals());\r\n};\r\n\r\n  showOverlay = (type) => this.setState({ overlayType: type, overlaySearch: '' });\r\n  hideOverlay = () => this.setState({ overlayType: '', overlaySearch: '' });\r\n\r\n  selectOverlayValue = (value) => {\r\n    if (this.state.overlayType === 'customer') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          customer: value.custname || value.custcode || '', // Use custname or custcode\r\n          billTo: this.formatAddress(value.billTo),\r\n          shipTo: this.formatAddress(value.shipTo),\r\n          currency: value.currency || '',\r\n          // despatchMode: value.despatchMode || '', // No auto-fill for despatch mode\r\n          // paymentTerms: value.paymentTerms || '' // No auto-fill for payment terms\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }), () => {\r\n        if (this.customerInputRef.current) {\r\n          this.customerInputRef.current.value = value.custname || value.custcode || '';\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n renderOverlay = () => {\r\n  const { overlayType, overlaySearch, customers, despatchModes, paymentTerms } = this.state;\r\n\r\n  const getFilteredRows = (list, nameKey = 'name', codeKey = 'shortName') =>\r\n    list.filter(item =>\r\n      (item[nameKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()) ||\r\n      (item[codeKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase())\r\n    );\r\n\r\n  const handleSelect = (item) => {\r\n    if (overlayType === 'customer') {\r\n      this.selectOverlayValue(item);\r\n    } else if (overlayType === 'despatchMode') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          despatchMode: item.name\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }));\r\n    } else if (overlayType === 'paymentTerms') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          paymentTerms: item.name\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  let title = '';\r\n  let headers = [];\r\n  let rows = [];\r\n\r\n  if (overlayType === 'customer') {\r\n    title = 'Select Customer';\r\n    headers = ['Name', 'Code', 'Short Name'];\r\n    rows = getFilteredRows(customers, 'custname', 'custcode');\r\n  } else if (overlayType === 'despatchMode') {\r\n    title = 'Select Despatch Mode';\r\n    headers = ['Name'];\r\n    rows = getFilteredRows(despatchModes);\r\n  } else if (overlayType === 'paymentTerms') {\r\n    title = 'Select Payment Terms';\r\n    headers = ['Name'];\r\n    rows = getFilteredRows(paymentTerms);\r\n  } else {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"custom-overlay\">\r\n      <div className=\"custom-overlay-content\">\r\n        <div className=\"custom-overlay-title\">{title}</div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control mb-2\"\r\n          placeholder={`Search ${overlayType}...`}\r\n          value={overlaySearch}\r\n          onChange={e => this.setState({ overlaySearch: e.target.value })}\r\n        />\r\n        <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n          <table className=\"table table-bordered table-sm\">\r\n            <thead>\r\n              <tr>\r\n                {headers.map((h, i) => <th key={i}>{h}</th>)}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {rows.map((item, i) => (\r\n                <tr key={item.id || i} onClick={() => handleSelect(item)} style={{ cursor: 'pointer' }}>\r\n                  {headers.map((h, j) => (\r\n                    <td key={j}>\r\n                      {overlayType === 'customer'\r\n                        ? h === 'Name' ? item.custname\r\n                          : h === 'Code' ? item.custcode\r\n                          : item.custshortName\r\n                        : h === 'Name' ? item.name\r\n                          : item.shortName}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n              {rows.length === 0 && (\r\n                <tr>\r\n                  <td colSpan={headers.length} className=\"text-center\">No records found</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <button className=\"btn btn-secondary btn-sm mt-2\" onClick={this.hideOverlay}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nrenderTaxOverlay = () => {\r\n  const { taxGroups, currentTaxIdx, formData } = this.state;\r\n  if (currentTaxIdx === null) return null;\r\n\r\n  const item = formData.lineItems[currentTaxIdx];\r\n  const selected = new Set(item.taxGroupNames || []);\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed', zIndex: 1000, top: '10%', left: '15%',\r\n      background: '#fff', border: '1px solid #ccc', padding: '20px',\r\n      boxShadow: '0 0 10px rgba(0,0,0,0.3)', width: '70%',\r\n      maxHeight: '70vh', overflowY: 'auto'\r\n    }}>\r\n      <h5>Select Tax Groups</h5>\r\n      <table className=\"table table-sm table-bordered\">\r\n        <thead>\r\n          <tr><th></th><th>Group</th><th>Components</th><th>%</th></tr>\r\n        </thead>\r\n        <tbody>\r\n          {taxGroups.map(tg => (\r\n            <tr key={tg.groupName}>\r\n              <td>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selected.has(tg.groupName)}\r\n                  onChange={e =>\r\n                    this.toggleTaxGroupSelection(tg.groupName, currentTaxIdx, e.target.checked)\r\n                  }\r\n                />\r\n              </td>\r\n              <td>{tg.groupName}</td>\r\n              <td>{tg.lineItems.map(li => li.component).join(', ')}</td>\r\n              <td>{tg.lineItems.map(li => li.percentOrAmt).join(', ')}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"text-right mt-3\">\r\n        <button className=\"btn btn-sm btn-success\" onClick={() => this.setState({ showTaxOverlay: false })}>\r\n          Done\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nrenderOrderPreview = () => {\r\n  const o = this.state.selectedOrder;\r\n  if (!o) return null;\r\n\r\n  const subtotal = o.lineItems?.reduce(\r\n    (sum, item) => sum + (parseFloat(item.total) || 0),\r\n    0\r\n  ) || 0;\r\n\r\n  const freightCharges = parseFloat(o.freightCharges || 0);\r\n  const taxAmount = parseFloat(o.taxAmount || 0);\r\n  const grandTotal = parseFloat(o.orderValue || subtotal + freightCharges + taxAmount);\r\n\r\n  const amountWords = `INR ${window.toWords\r\n    ? window.toWords(Math.floor(grandTotal))\r\n    : grandTotal} Only`;\r\n\r\n  // Find customer record for extra details\r\n  const customer = this.state.customers.find(\r\n    c => c.custshortName === o.customer || c.custname === o.customer\r\n  ) || {};\r\n\r\n  return (\r\n    <div className=\"card mt-4 p-4 shadow-sm full-height d-flex flex-column\">\r\n      <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n        <h4 className=\"card-title mb-0\">Order Preview - {o.orderNo}</h4>\r\n        <div className=\"flex items-center gap-x-4\">\r\n          <button\r\n            className=\"btn btn-sm btn-primary mr-2\"\r\n            onClick={() => this.loadorderForEdit(o)}\r\n            disabled={o.status === \"Approved\"}\r\n          >\r\n            Edit\r\n          </button>\r\n          <button\r\n            className=\"btn btn-sm btn-outline-secondary\"\r\n            onClick={() => this.handleConvertToInvoice()}\r\n            disabled={o.status === \"Approved\"}\r\n          >\r\n            --Convert to Invoice\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col-md-4\"><b>Customer:</b> {o.customer}</div>\r\n        <div className=\"col-md-4\"><b>Date:</b> {o.orderDate}</div>\r\n        <div className=\"col-md-4\"><b>Status:</b> {o.status}</div>\r\n      </div>\r\n      <div className=\"row mb-4\">\r\n        <div className=\"col-md-6\">\r\n          <b>Bill To:</b><br />\r\n          {o.billTo || \"-\"}\r\n          <div className=\"mt-2\" style={{ fontSize: \"0.9em\" }}>\r\n            <b>GSTIN:</b> {customer.gstin || \"-\"}<br />\r\n            <b>Email:</b> {customer.email || \"-\"}<br />\r\n            <b>Phone:</b> {customer.phone || \"-\"}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <b>Ship To:</b><br />\r\n          {o.shipTo || \"-\"}\r\n        </div>\r\n      </div>\r\n      <h5 className=\"mt-2\">Line Items</h5>\r\n      <table className=\"table table-bordered table-sm\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th>Item Code</th>\r\n            <th>Description</th>\r\n            <th>Qty</th>\r\n            <th>Unit Price</th>\r\n            <th>Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {o.lineItems?.map((item, i) => (\r\n            <tr key={i}>\r\n              <td>{item.itemCode}</td>\r\n              <td>{item.itemDescription}</td>\r\n              <td>{item.qty}</td>\r\n              <td>{item.unitPrice}</td>\r\n              <td>{item.total}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"mt-3\">\r\n        <p><b>Subtotal:</b> {subtotal.toFixed(2)}</p>\r\n        <p><b>Freight Charges:</b> {freightCharges.toFixed(2)}</p>\r\n        <p><b>Tax Amount:</b> {taxAmount.toFixed(2)}</p>\r\n        <p className=\"h6\"><b>Grand Total:</b> {grandTotal.toFixed(2)}</p>\r\n        <p className=\"h6\"><b>Amount in Words:</b> {amountWords}</p>\r\n      </div>\r\n      <div className=\"mt-auto pt-3 text-right \">\r\n        <button\r\n          className=\"btn btn-secondary\"\r\n          onClick={() => this.setState({ previewOrderMode: false })}\r\n        >\r\n          Back to List\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nrenderBreakdownTab = () => {\r\n  const { breakdownItems, breakdownType, formData } = this.state;\r\n\r\n  // map item totals from lineItems (main product totals)\r\n  const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\r\n    acc[li.itemCode] = parseFloat(li.total || 0) || 0;\r\n    return acc;\r\n  }, {});\r\n  const sumOfItemTotals = Object.values(itemTotals).reduce((s, v) => s + v, 0);\r\n\r\n  // compute subproducts sum\r\n  const getSubProductsSum = (bi) => {\r\n    const mainTotal = itemTotals[bi.productId] || 0;\r\n    const subs = Array.isArray(bi.subProducts) ? bi.subProducts : [];\r\n    return subs.reduce((s, sp) => {\r\n      const val = parseFloat(sp.value || 0) || 0;\r\n      return s + (breakdownType === \"Percentage\" ? (mainTotal * val / 100) : val);\r\n    }, 0);\r\n  };\r\n\r\n  const canSave = this.isBreakdownValid();\r\n  const isConverted = formData?.status === \"ConvertedToOrder\"; // ðŸ”‘ single flag\r\n\r\n  return (\r\n    <div>\r\n      <h5>Milestone Breakdown</h5>\r\n\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col\"><b>Quote Value:</b> {formData.quoteValue}</div>\r\n        <div className=\"col\"><b>After Discount Quote Value:</b> {formData.afterDiscountValue}</div>\r\n        <div className=\"col\"><b>Tax Amount:</b> {formData.taxAmount}</div>\r\n        <div className=\"col\"><b>Sum of Item Totals:</b> {sumOfItemTotals.toFixed(2)}</div>\r\n      </div>\r\n\r\n      {/* Mode selector + Add Breakdown button */}\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col-md-3\">\r\n          <label>Subproduct Mode</label>\r\n          <select\r\n            className=\"form-control form-control-sm\"\r\n            value={breakdownType}\r\n            onChange={e => this.handleBreakdownTypeChange(e.target.value)}\r\n            disabled={isConverted} // disable if converted\r\n          >\r\n            <option value=\"Amount\">Amount</option>\r\n            <option value=\"Percentage\">Percentage</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"col-md-9 text-right\">\r\n          {!isConverted && (\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary btn-sm\"\r\n              onClick={this.addBreakdownFromLineItems}\r\n            >\r\n              + Add Breakdown\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* ===== Table ===== */}\r\n      <table className=\"table table-bordered\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th>S.No</th>\r\n            <th>ID</th>\r\n            <th>Desc / Subproduct name</th>\r\n            <th>SubProduct value ({breakdownType === \"Percentage\" ? \"%\" : \"â‚¹\"})</th>\r\n            <th>Total (â‚¹)</th>\r\n            <th>Due Date</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {breakdownItems.map((item, idx) => {\r\n            const mainItemTotal = itemTotals[item.productId] || 0;\r\n            const subSum = getSubProductsSum(item);\r\n            const remaining = mainItemTotal - subSum;\r\n            const subs = Array.isArray(item.subProducts) ? item.subProducts : [];\r\n\r\n            return (\r\n              <React.Fragment key={idx}>\r\n                {/* parent product row */}\r\n                <tr style={{ background: \"#eef4ff\" }}>\r\n                  <td>{item.sno}</td>\r\n                  <td>{item.productId}</td>\r\n                  <td>{item.desc}</td>\r\n                  <td>\r\n                    <div>\r\n                      <div><small>Subproducts sum: <b>{subSum.toFixed(2)}</b></small></div>\r\n                      <div>\r\n                        <small>\r\n                          Remaining:{\" \"}\r\n                          <b style={{ color: remaining > 0.01 ? \"red\" : \"green\" }}>\r\n                            {remaining.toFixed(2)}\r\n                          </b>\r\n                        </small>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td>{mainItemTotal.toFixed(2)}</td>\r\n                  <td></td>\r\n                  <td>\r\n                  {!isConverted && (\r\n                    <div className=\"d-flex\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-sm btn-outline-primary mr-2\"\r\n                        onClick={() => this.handleAddInlineSubProduct(idx)}\r\n                      >+ Add</button>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-sm btn-outline-secondary\"\r\n                        onClick={() => {\r\n                          if (remaining <= 0) return;\r\n                          this.handleAddInlineSubProduct(idx, {\r\n                            name: \"New Product\",\r\n                            value: breakdownType === \"Percentage\"\r\n                              ? ((remaining * 100) / (mainItemTotal || 1)).toFixed(2)\r\n                              : remaining.toFixed(2)\r\n                          });\r\n                        }}\r\n                      >Auto-fill</button>\r\n                      \r\n                    </div>\r\n                  )}\r\n                </td>\r\n                </tr>\r\n\r\n                {/* subproduct rows */}\r\n                {subs.length === 0 && (\r\n                  <tr key={`notice-${idx}`}>\r\n                    <td colSpan=\"6\" className=\"text-center text-muted\">\r\n                      No subproducts added for this item.\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n\r\n                {subs.map((sp, spIdx) => {\r\n                  const spId = `${item.productId}_${spIdx + 1}`;\r\n                  const rawVal = parseFloat(sp.value || 0) || 0;\r\n                  const spTotal = breakdownType === \"Percentage\"\r\n                    ? (mainItemTotal * rawVal / 100)\r\n                    : rawVal;\r\n\r\n                  return (\r\n                    <tr key={spId} style={{ background: \"#f9f9f9\" }}>\r\n                      <td className=\"text-muted\">â€”</td>\r\n                      <td>{spId}</td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={sp.name || \"\"}\r\n                          onChange={(e) => this.handleSubProductChange(idx, spIdx, \"name\", e.target.value)}\r\n                          placeholder=\"Enter name\"\r\n                          disabled={isConverted}\r\n                          style={{ paddingLeft: \"18px\" }}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"number\"\r\n                          step=\"any\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={sp.value || \"\"}\r\n                          onChange={(e) => this.handleSubProductChange(idx, spIdx, \"value\", e.target.value)}\r\n                          disabled={isConverted}\r\n                        />\r\n                      </td>\r\n                      <td>{spTotal.toFixed(2)}</td>\r\n                      <td>\r\n                      <input\r\n                        type=\"date\"\r\n                        className=\"form-control form-control-sm\"\r\n                        value={sp.dueDate || \"\"}\r\n                        onChange={(e) =>\r\n                          this.handleSubProductChange(idx, spIdx, \"dueDate\", e.target.value)\r\n                        }\r\n                        disabled={isConverted}\r\n                      />\r\n                    </td>\r\n\r\n                      <td>\r\n                      {!isConverted && (\r\n                        <>\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-sm btn-danger\"\r\n                            onClick={() => this.handleRemoveSubProduct(idx, spIdx)}\r\n                          >-</button>\r\n                        </>\r\n                      )}\r\n                    </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n\r\n      {!canSave && !isConverted && (\r\n        <div className=\"alert alert-danger\">\r\n          Breakdown incomplete â€” for each product the sum of subproduct totals\r\n          must equal the product total. Save disabled until fixed.\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n  renderProductOverlay = () => {\r\n    const { products, productOverlaySearch, selectedProductIds } = this.state;\r\n    const filtered = products.filter(p =>\r\n      (p.ptshortName || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) ||\r\n      (p.ptdescription || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) ||\r\n      (p.itemCode || '').toLowerCase().includes(productOverlaySearch.toLowerCase())\r\n    );\r\n    return (\r\n      <div className=\"custom-overlay\">\r\n        <div className=\"custom-overlay-content\">\r\n          <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n            <div className=\"custom-overlay-title\">Select Products</div>\r\n            <button\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => {\r\n                const selectedProducts = products.filter(p => this.state.selectedProductIds.includes(p.id));\r\n                this.setState(prev => ({\r\n                  formData: {\r\n                    ...prev.formData,\r\n                    lineItems: [\r\n                      ...prev.formData.lineItems,\r\n                      ...selectedProducts\r\n                        .filter(p => !prev.formData.lineItems.some(item => item.id === p.id))\r\n                        .map(p => ({\r\n                          id: p.id,\r\n                          itemCode: p.productId || '',\r\n                          itemDescription: p.ptdescription || '',\r\n                          itemType: p.itemType || '',\r\n                          materialType: p.materialType || '',\r\n                          onHand: p.onHand || 0,\r\n                          taxGroup: p.taxGroup || '',\r\n                          custPartNo: p.custPartNo || '', // Assuming this is cust part table\r\n                          hsnNo: p.hsnNo || '', // Assuming HSN No.\r\n                          unitPrice: p.unitPrice || 0,\r\n                          qty: 1,\r\n                          total: (p.unitPrice || 0).toFixed(2)\r\n                        }))\r\n                    ]\r\n                  },\r\n                  productOverlayVisible: false,\r\n                  selectedProductIds: []\r\n                }));\r\n              }}\r\n            >Add Selected</button>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Search products...\"\r\n            value={productOverlaySearch}\r\n            onChange={e => this.setState({ productOverlaySearch: e.target.value })}\r\n          />\r\n          <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n            <table className=\"table table-bordered table-sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th></th>\r\n                  <th>Item Code</th>\r\n                  <th>Item Desc</th>\r\n                  <th>Item Type</th>\r\n                  <th>Material Type</th>\r\n                  <th>On Hand</th>\r\n                  <th>Tax Grp</th>\r\n                  <th>Cust Part No</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filtered.map(p => (\r\n                  <tr key={p.id}>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedProductIds.includes(p.id)}\r\n                        onChange={e => {\r\n                          const checked = e.target.checked;\r\n                          this.setState(prev => ({\r\n                            selectedProductIds: checked\r\n                              ? [...prev.selectedProductIds, p.id]\r\n                              : prev.selectedProductIds.filter(id => id !== p.id)\r\n                          }));\r\n                        }}\r\n                      />\r\n                    </td>\r\n                    <td>{p.productId}</td>\r\n                    <td>{p.ptdescription || ''}</td>\r\n                    <td>{p.itemType || ''}</td>\r\n                    <td>{p.materialType || ''}</td>\r\n                    <td>{p.onHand || 0}</td>\r\n                    <td>{p.taxGroup || ''}</td>\r\n                    <td>{p.custPartNo || ''}</td>\r\n                  </tr>\r\n                ))}\r\n                {filtered.length === 0 && (\r\n                  <tr>\r\n                    <td colSpan=\"8\" className=\"text-center\">No products found</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          {/* Add pagination here if needed, for now, it's just a placeholder */}\r\n          <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n            <span>Page 1 of 1</span>\r\n            <button className=\"btn btn-secondary btn-sm\" onClick={() => this.setState({ productOverlayVisible: false, selectedProductIds: [] })}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderorderTable = () => (\r\n    <div className=\"card mt-4 full-height\">\r\n      <div className=\"card-body\">\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n          <h4 className=\"card-title\">Orders</h4>\r\n          <button className=\"btn btn-primary\" onClick={() => this.setState({ showForm: true })}>+ Add Order</button>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-bordered table-hover\">\r\n            <thead className=\"thead-light\">\r\n              <tr style={{ fontSize: '14px' }}>\r\n                <th>Order No</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Order Value</th>\r\n                <th>After Discount</th>\r\n                <th>Status</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.orders.map((q, i) => {\r\n                let statusClass = \"badge-secondary\";\r\n                if( q.status === \"Entered\") statusClass=\"badge-warning\";\r\n                else if(q.status === \"Submitted\") statusClass=\"badge-info\";\r\n                else if(q.status === \"Approved\") statusClass=\"badge-success\";\r\n                else if(q.status === \"Rejected\") statusClass=\"badge-danger\";\r\n\r\n                return(\r\n                  <tr key={i} style={{ fontSize: '14px' }}>\r\n                  <td>\r\n                    <button\r\n                     className=\"btn btn-link p-0\" \r\n                     onClick={() => this.loadOrderPreview(q)}>\r\n                    {q.orderNo}\r\n                  </button>\r\n\r\n                  </td>\r\n                  <td>{q.customer}</td>\r\n                  <td>{q.orderDate}</td>\r\n                  <td>{q.orderValue}</td>\r\n                  <td>{q.afterDiscountValue}</td>\r\n                  <td>\r\n                    <label className={`badge ${statusClass}`}\r\n                    style={{fontSize: '14px'}}>{q.status}</label></td>\r\n                  <td>\r\n                    <button className=\"btn btn-outline-primary btn-sm\" onClick={this.handleConvertToInvoice}>\r\n                      --Convert to Invoice\r\n                    </button></td>\r\n                </tr>\r\n                );\r\n              })}\r\n                    {this.state.orders.length === 0 && (\r\n                <tr><td colSpan=\"6\" className=\"text-center\">No orders found.</td></tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  renderorderForm = () => {\r\n    const { formData, overlayType, productOverlayVisible,breakdownItems,breakdownType } = this.state;\r\n    const isFOB = formData.impExp === 'FOB';\r\n      const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\r\n      acc[li.itemCode] = parseFloat(li.total || 0) || 0;\r\n      return acc;\r\n    }, {});\r\n    const sumOfItemTotals = Object.values(itemTotals).reduce((sum, val) => sum + val, 0);\r\n\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"card full-height\">\r\n          <div style={{ flex: 1, overflowY: 'auto', padding: '24px' }}>\r\n            <h4 className=\"mb-3\">Order Form</h4>\r\n            <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n              <li className=\"nav-item\">\r\n                <button type=\"button\" className={`nav-link ${this.state.activeTab === 'co' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'co' })}>CO Details</button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <button type=\"button\" className={`nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'commercial' })}>Commercial Terms</button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n              <button type=\"button\" className={`nav-link ${this.state.activeTab === 'breakdown' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'breakdown' })}>Breakdown</button>\r\n            </li>\r\n            </ul>\r\n            <form className=\"form-sample\" onSubmit={this.handleSubmit}>\r\n              <div className=\"tab-content pt-3\">\r\n                {this.state.activeTab === 'co' && (\r\n                  <>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Order No</label>\r\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={formData.orderNo} onChange={(e) => this.handleInputChange('orderNo', e.target.value)} />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Order Date</label>\r\n                        <input type=\"date\" className=\"form-control form-control-sm\" value={formData.orderDate} onChange={(e) => this.handleInputChange('orderDate', e.target.value)} />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Order Type</label>\r\n                        <select className=\"form-control form-control-sm\" value={formData.orderType} onChange={(e) => this.handleInputChange('orderType', e.target.value)}>\r\n                          <option>Standard</option>\r\n                          <option>Manual</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Status</label>\r\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={formData.status}   style={{ backgroundColor: '#fff' }} readOnly />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Customer</label>\r\n                        <div className=\"input-group input-group-sm\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Choose Customer\"\r\n                            ref={this.customerInputRef}\r\n                            value={formData.customer}\r\n                            readOnly\r\n                            onClick={() => this.showOverlay('customer')}\r\n                            style={{ cursor: 'pointer' }}\r\n                          />\r\n                          <div className=\"input-group-append\">\r\n                            <button className=\"btn btn-outline-secondary btn-sm\" type=\"button\" onClick={() => this.showOverlay('customer')}>Select</button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>IMP/EXP</label>\r\n                        <select\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.impExp}\r\n                          onChange={(e) => this.handleInputChange('impExp', e.target.value)}\r\n                        >\r\n                          <option>None</option>\r\n                          <option>COB</option>\r\n                          <option>FOB</option>\r\n                          <option>CIF</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group col-md-2\">\r\n                        <label>Ref No.</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.qrefNo}\r\n                          onChange={(e) => this.handleInputChange('qrefNo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Choose</label>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"form-check mr-4\">\r\n                            <input type=\"radio\" className=\"form-check-input\" name=\"choose\" id=\"chooseService\" value=\"Service\" checked={formData.choose === 'Service'} onChange={(e) => this.handleInputChange('choose', e.target.value)} />\r\n                            <label className=\"form-check-label\" htmlFor=\"chooseService\">Service</label>\r\n                          </div>\r\n                          <div className=\"form-check\">\r\n                            <input type=\"radio\" className=\"form-check-input\" name=\"choose\" id=\"chooseProduct\" value=\"Product\" checked={formData.choose === 'Product'} onChange={(e) => this.handleInputChange('choose', e.target.value)} />\r\n                            <label className=\"form-check-label\" htmlFor=\"chooseProduct\">Product</label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Currency</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.currency}\r\n                          style={{ backgroundColor: '#fff' }}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Conversion Rate</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.conversionRate}\r\n                          onChange={(e) => this.handleInputChange('conversionRate', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Tax Amount</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxAmount}\r\n                          onChange={(e) => this.handleInputChange('taxAmount', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Order Value</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.orderValue}\r\n                          onChange={(e) => this.handleInputChange('orderValue', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                      <label>Discount %</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={this.state.formData.discountPercent}\r\n                        onChange={e => this.handleDiscountChange(\"discountPercent\", e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                    <label>Discount Amount</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-control\"\r\n                      value={this.state.formData.discountAmount}\r\n                      readOnly\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group col-md-4\">\r\n                      <label>After Discount - Quote Value</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={this.state.formData.afterDiscountValue}\r\n                        readOnly\r\n                      />\r\n                    </div>\r\n                </div>\r\n                          <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                            <h4 className=\"card-title\">Line Item</h4>\r\n                            <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={() => this.setState({ productOverlayVisible: true })}>\r\n                              + Add Product\r\n                            </button>\r\n                          </div>\r\n                          <div className=\"table-responsive\">\r\n                            <table className=\"table table-bordered\">\r\n                              <thead className=\"thead-light\">\r\n                                <tr >\r\n                                  <th> Item Code </th>\r\n                                  <th> Item Desc </th>\r\n                                  <th> Cust Part No </th>\r\n                                  <th> HSN No </th>\r\n                                  <th> On Hand </th> \r\n                                  <th>Unit Price</th>\r\n                                  <th>Quantity</th>\r\n                                  <th>Tax Id</th>\r\n                                  <th>Item Total</th>\r\n                                  <th>Tax Amt</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {formData.lineItems.map((item, idx) => (\r\n                                  <tr key={item.id || idx}>\r\n                                    <td>{item.itemCode}</td>\r\n                                    <td>{item.itemDescription}</td>\r\n                                    <td>{item.custPartNo}</td>\r\n                                    <td>{item.hsnNo}</td>\r\n                                    <td>{item.onHand}</td>\r\n                                    <td>\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        value={item.unitPrice}\r\n                                        onChange={e => this.handleLineItemChange(idx, 'unitPrice', e.target.value)}\r\n                                        style={{ width: 80 }}\r\n                                      />\r\n                                    </td>\r\n                                    <td>\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        min=\"1\"\r\n                                        value={item.qty}\r\n                                        onChange={e => this.handleLineItemChange(idx, 'qty', e.target.value)}\r\n                                        style={{ width: 60 }}\r\n                                      />\r\n                                    </td>\r\n                                    <td style={{ verticalAlign: 'middle' }}>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-sm btn-outline-primary\"\r\n                                        onClick={() => this.setState({ showTaxOverlay: true, currentTaxIdx: idx })}\r\n                                      >\r\n                                        Select Tax\r\n                                      </button>\r\n                                      <div style={{ fontSize: '10px', marginTop: '4px' }}>\r\n                                        {(item.taxGroupNames || []).join(', ') || '-'}\r\n                                      </div>\r\n                                    </td>\r\n                                     <td>{item.total || '0.00'}</td>\r\n                                      <td>{item.taxAmt || '0.00'}</td>\r\n                                     \r\n                                  </tr>\r\n                                ))}\r\n                                {formData.lineItems.length === 0 && (\r\n                                  <tr>\r\n                                    <td colSpan=\"9\" className=\"text-center\">No items</td>\r\n                                  </tr>\r\n                                )}\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                          {/* Add pagination for line items here if needed */}\r\n                          <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n                            <span>Page 1 of 1</span>\r\n                          </div>\r\n                      \r\n                  </>\r\n                )}\r\n                {this.state.activeTab === 'commercial' && (\r\n                  <>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-6\">\r\n                        <label>Bill To</label>\r\n                        <textarea\r\n                          className=\"form-control form-control-sm\"\r\n                          rows=\"3\"\r\n                          value={formData.billTo}\r\n                          onChange={(e) => this.handleInputChange('billTo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-6\">\r\n                        <label>Ship To</label>\r\n                        <textarea\r\n                          className=\"form-control form-control-sm\"\r\n                          rows=\"3\"\r\n                          value={formData.shipTo}\r\n                          onChange={(e) => this.handleInputChange('shipTo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-4\">\r\n  <label>Despatch Mode</label>\r\n  <div className=\"input-group input-group-sm\">\r\n    <input\r\n      type=\"text\"\r\n      className=\"form-control\"\r\n      value={formData.despatchMode}\r\n      readOnly\r\n      onClick={() => !isFOB && this.showOverlay('despatchMode')}\r\n      style={{ cursor: isFOB ? 'not-allowed' : 'pointer', backgroundColor: '#fff' }}\r\n    />\r\n    <div className=\"input-group-append\">\r\n      <button\r\n        className=\"btn btn-outline-secondary btn-sm\"\r\n        type=\"button\"\r\n        disabled={isFOB}\r\n        onClick={() => this.showOverlay('despatchMode')}\r\n      >\r\n        Select\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div className=\"form-group col-md-4\">\r\n  <label>Payment Terms</label>\r\n  <div className=\"input-group input-group-sm\">\r\n    <input\r\n      type=\"text\"\r\n      className=\"form-control\"\r\n      value={formData.paymentTerms}\r\n      readOnly\r\n      onClick={() => !isFOB && this.showOverlay('paymentTerms')}\r\n      style={{ cursor: isFOB ? 'not-allowed' : 'pointer', backgroundColor: '#fff' }}\r\n    />\r\n    <div className=\"input-group-append\">\r\n      <button\r\n        className=\"btn btn-outline-secondary btn-sm\"\r\n        type=\"button\"\r\n        disabled={isFOB}\r\n        onClick={() => this.showOverlay('paymentTerms')}\r\n      >\r\n        Select\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Freight Charges</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.freightCharges}\r\n                          onChange={(e) => this.handleInputChange('freightCharges', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Tax %</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxPercent}\r\n                          onChange={(e) => this.handleInputChange('taxPercent', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Freight Tax Amount</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxAmount}\r\n                          onChange={(e) => this.handleInputChange('freighttaxAmount', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Packing Charges</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.packingCharges}\r\n                          onChange={(e) => this.handleInputChange('packingCharges', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-right mt-3\">\r\n                      <button type=\"submit\" className=\"btn btn-success\">Save All Details</button>\r\n                    </div>\r\n                  </>\r\n                )}\r\n                 {this.state.activeTab === 'breakdown' && (this.renderBreakdownTab())}\r\n              </div>\r\n\r\n             <div className=\"fixed-card-footer text-right p-3 border-top bg-white\">\r\n                <button type=\"submit\" className=\"btn btn-success mr-2\" disabled={!this.isBreakdownValid()}>Save All Details</button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => this.setState({ showForm: false, editingId: null })}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n            {overlayType && this.renderOverlay()}\r\n            {productOverlayVisible && this.renderProductOverlay()}\r\n            {this.state.showTaxOverlay && this.renderTaxOverlay()}\r\n          </div>\r\n           \r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        {this.state.previewOrderMode ? this.renderOrderPreview() : (this.state.showForm ? this.renderorderForm() : this.renderorderTable())}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Order);\r\n"]},"metadata":{},"sourceType":"module"}