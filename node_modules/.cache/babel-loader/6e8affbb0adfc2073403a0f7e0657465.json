{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\panelone\\\\Order.js\";\nimport React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport { db } from '../../firebase';\nimport { collection, getDocs, addDoc, doc, updateDoc, serverTimestamp } from 'firebase/firestore';\nimport html2canvas from 'html2canvas';\nimport { jsPDF } from 'jspdf';\nimport { withRouter } from 'react-router-dom';\nimport { recalculateTotals, getTaxDetailsFromGroup } from './calculation';\n\nconst numberToWords = num => {\n  const a = ['', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine', 'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];\n  const b = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\n  if (num === 0) return 'Zero';\n  if (num < 20) return a[num];\n  if (num < 100) return b[Math.floor(num / 10)] + ' ' + a[num % 10];\n  if (num < 1000) return a[Math.floor(num / 100)] + ' Hundred ' + numberToWords(num % 100);\n  if (num < 100000) return numberToWords(Math.floor(num / 1000)) + ' Thousand ' + numberToWords(num % 1000);\n  return 'Amount too large';\n};\n\nclass Order extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: 'co',\n      breakdownItems: [],\n      orders: [],\n      customers: [],\n      products: [],\n      despatchModes: [],\n      paymentTerms: [],\n      showForm: false,\n      editingId: null,\n      overlayType: '',\n      overlaySearch: '',\n      productOverlayVisible: false,\n      productOverlaySearch: '',\n      selectedProductIds: [],\n      taxGroups: [],\n      showTaxOverlay: false,\n      currentTaxIdx: null,\n      formData: {\n        orderNo: '',\n        orderDate: new Date().toISOString().split('T')[0],\n        orderType: 'Standard',\n        customer: '',\n        status: 'Entered',\n        // Static 'Entered'\n        choose: 'Service',\n        qrefNo: '',\n        impExp: 'None',\n        currency: '',\n        conversionRate: '',\n        taxAmount: '',\n        orderValue: '',\n        billTo: '',\n        shipTo: '',\n        despatchMode: 'By Air',\n        paymentTerms: '',\n        freightCharges: '',\n        freighttaxAmount: '',\n        taxPercent: '',\n        packingCharges: '',\n        lineItems: []\n      }\n    };\n    this.customerInputRef = React.createRef();\n\n    this.formatAddress = addr => {\n      if (!addr) return '';\n      if (typeof addr === 'string') return addr;\n      return [addr.address, [addr.city, addr.state, addr.country].filter(Boolean).join(', '), addr.zip].filter(Boolean).join('\\n');\n    };\n\n    this.calculateOrderTotals = () => {\n      const {\n        impExp,\n        freightCharges,\n        taxPercent,\n        packingCharges,\n        lineItems\n      } = this.state.formData;\n      let freight = parseFloat(freightCharges) || 0;\n      let packing = parseFloat(packingCharges) || 0;\n      let taxOnFreight = 0;\n\n      if (['None', 'CIF'].includes(impExp)) {\n        taxOnFreight = freight * (parseFloat(taxPercent) || 0) / 100;\n      }\n\n      let lineTotal = 0;\n      let itemTaxTotal = 0;\n      const updatedLineItems = lineItems.map(item => {\n        var _item$taxGroupNames;\n\n        const qty = parseFloat(item.qty || 1);\n        const unitPrice = parseFloat(item.unitPrice || 0);\n        const baseTotal = unitPrice * qty;\n        const groupNames = ((_item$taxGroupNames = item.taxGroupNames) === null || _item$taxGroupNames === void 0 ? void 0 : _item$taxGroupNames.length) ? item.taxGroupNames : [item.taxGroup || ''];\n        let percent = 0;\n        let amount = 0;\n        groupNames.forEach(groupName => {\n          const group = this.state.taxGroups.find(t => t.groupName === groupName);\n\n          if (group && Array.isArray(group.lineItems)) {\n            group.lineItems.forEach(comp => {\n              const val = parseFloat(comp.percentOrAmt || 0);\n              if (comp.type === 'Percentage') percent += val;\n              if (comp.type === 'Amount') amount += val;\n            });\n          }\n        });\n        const taxAmt = baseTotal * percent / 100 + amount;\n        const total = baseTotal + taxAmt;\n        item.taxAmt = taxAmt.toFixed(2);\n        item.total = total.toFixed(2);\n        return item;\n      });\n      const totalTaxAmount = itemTaxTotal + taxOnFreight;\n      const orderValue = lineTotal + freight + packing + itemTaxTotal;\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          taxAmount: totalTaxAmount.toFixed(2),\n          // âœ… Top-level field\n          orderValue: orderValue.toFixed(2),\n          lineItems: updatedLineItems\n        }\n      }));\n    };\n\n    this.handleConvertToInvoice = () => {\n      const {\n        formData\n      } = this.state;\n      const invoiceData = {\n        customer: formData.customer,\n        qrefNo: formData.qrefNo,\n        impExp: formData.impExp,\n        billTo: formData.billTo,\n        shipTo: formData.shipTo,\n        currency: formData.currency,\n        conversionRate: formData.conversionRate,\n        despatchMode: formData.despatchMode,\n        paymentTerms: formData.paymentTerms,\n        freightCharges: formData.freightCharges,\n        packingCharges: formData.packingCharges,\n        taxPercent: formData.taxPercent,\n        lineItems: formData.lineItems,\n        orderDate: formData.orderDate,\n        orderNo: formData.orderNo,\n        InvoiceDate: new Date().toISOString().split('T')[0]\n      };\n      sessionStorage.setItem('invoiceDataFromOrder', JSON.stringify(invoiceData));\n      this.props.history.push({\n        pathname: '/panelone/Invoice',\n        state: {\n          invoiceDataFromOrder: invoiceData\n        } // <- add this line\n\n      });\n      ;\n    };\n\n    this.fetchTaxGroups = async () => {\n      const snap = await getDocs(collection(db, 'taxGroups'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        taxGroups: data\n      });\n    };\n\n    this.fetchorders = async () => {\n      const snap = await getDocs(collection(db, 'orders'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        orders: data.reverse()\n      });\n    };\n\n    this.fetchCustomers = async () => {\n      const snap = await getDocs(collection(db, 'customers'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        customers: data\n      });\n    };\n\n    this.fetchProducts = async () => {\n      const snap = await getDocs(collection(db, 'products'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        products: data\n      });\n    };\n\n    this.fetchDespatchModes = async () => {\n      const snap = await getDocs(collection(db, 'modes'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        despatchModes: data\n      });\n    };\n\n    this.fetchPaymentTerms = async () => {\n      const snap = await getDocs(collection(db, 'paymentTerms'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        paymentTerms: data\n      });\n    };\n\n    this.handleInputChange = (field, value) => {\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          [field]: value\n        }\n      }));\n    };\n\n    this.handleBreakdownChange = (idx, field, value) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        items[idx][field] = value;\n        return {\n          breakdownItems: items\n        };\n      });\n    };\n\n    this.handleLineItemChange = (idx, field, value) => {\n      const updatedItems = [...this.state.formData.lineItems];\n      updatedItems[idx] = { ...updatedItems[idx],\n        [field]: value\n      };\n      const {\n        updatedLineItems,\n        freighttaxAmount,\n        taxAmount,\n        quoteValue\n      } = recalculateTotals({\n        lineItems: updatedItems,\n        freightCharges: this.state.formData.freightCharges,\n        packingCharges: this.state.formData.packingCharges,\n        taxPercent: this.state.formData.taxPercent,\n        taxGroups: this.state.taxGroups\n      });\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          lineItems: updatedLineItems,\n          freighttaxAmount,\n          taxAmount,\n          quoteValue\n        }\n      }));\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        editingId,\n        formData,\n        orders,\n        breakdownItems\n      } = this.state;\n      if (!formData.customer) return alert(\"Customer is required\");\n      if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\n      formData.breakdownItems = breakdownItems;\n\n      if (editingId) {\n        // Update existing order\n        await updateDoc(doc(db, \"orders\", editingId), { ...formData,\n          status: \"Entered\",\n          // stays Entered until approval\n          updatedAt: serverTimestamp()\n        });\n      } else {\n        // Create new order\n        formData.orderNo = `CO${1000 + orders.length}`;\n        await addDoc(collection(db, \"orders\"), { ...formData,\n          status: \"Entered\",\n          // new order starts as Entered\n          createdAt: serverTimestamp()\n        });\n      }\n\n      this.setState({\n        showForm: false,\n        editingId: null\n      });\n      this.fetchorders();\n    };\n\n    this.loadOrderPreview = order => {\n      this.setState({\n        selectedOrder: order,\n        previewOrderMode: true\n      });\n    };\n\n    this.loadorderForEdit = order => {\n      this.setState({\n        formData: { ...order,\n          lineItems: Array.isArray(order.lineItems) ? order.lineItems : [] // Ensure array\n\n        },\n        breakdownItems: Array.isArray(order.breakdownItems) ? order.breakdownItems : [],\n        // âœ… Load it here\n        editingId: order.id,\n        showForm: true,\n        activeTab: 'co'\n      }, () => {\n        if (this.customerInputRef.current) {\n          this.customerInputRef.current.value = order.customer;\n        }\n      });\n    };\n\n    this.toggleTaxGroupSelection = (groupName, lineIdx, isChecked) => {\n      const formData = { ...this.state.formData\n      };\n      const item = formData.lineItems[lineIdx];\n      if (!item.taxGroupNames) item.taxGroupNames = [];\n\n      if (isChecked) {\n        if (!item.taxGroupNames.includes(groupName)) {\n          item.taxGroupNames.push(groupName);\n        }\n      } else {\n        item.taxGroupNames = item.taxGroupNames.filter(g => g !== groupName);\n      }\n\n      this.setState({\n        formData\n      }, () => this.calculateOrderTotals());\n    };\n\n    this.showOverlay = type => this.setState({\n      overlayType: type,\n      overlaySearch: ''\n    });\n\n    this.hideOverlay = () => this.setState({\n      overlayType: '',\n      overlaySearch: ''\n    });\n\n    this.selectOverlayValue = value => {\n      if (this.state.overlayType === 'customer') {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            customer: value.custname || value.custcode || '',\n            // Use custname or custcode\n            billTo: this.formatAddress(value.billTo),\n            shipTo: this.formatAddress(value.shipTo),\n            currency: value.currency || '' // despatchMode: value.despatchMode || '', // No auto-fill for despatch mode\n            // paymentTerms: value.paymentTerms || '' // No auto-fill for payment terms\n\n          },\n          overlayType: '',\n          overlaySearch: ''\n        }), () => {\n          if (this.customerInputRef.current) {\n            this.customerInputRef.current.value = value.custname || value.custcode || '';\n          }\n        });\n      }\n    };\n\n    this.renderOverlay = () => {\n      const {\n        overlayType,\n        overlaySearch,\n        customers,\n        despatchModes,\n        paymentTerms\n      } = this.state;\n\n      const getFilteredRows = (list, nameKey = 'name', codeKey = 'shortName') => list.filter(item => (item[nameKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()) || (item[codeKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()));\n\n      const handleSelect = item => {\n        if (overlayType === 'customer') {\n          this.selectOverlayValue(item);\n        } else if (overlayType === 'despatchMode') {\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              despatchMode: item.name\n            },\n            overlayType: '',\n            overlaySearch: ''\n          }));\n        } else if (overlayType === 'paymentTerms') {\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              paymentTerms: item.name\n            },\n            overlayType: '',\n            overlaySearch: ''\n          }));\n        }\n      };\n\n      let title = '';\n      let headers = [];\n      let rows = [];\n\n      if (overlayType === 'customer') {\n        title = 'Select Customer';\n        headers = ['Name', 'Code', 'Short Name'];\n        rows = getFilteredRows(customers, 'custname', 'custcode');\n      } else if (overlayType === 'despatchMode') {\n        title = 'Select Despatch Mode';\n        headers = ['Name'];\n        rows = getFilteredRows(despatchModes);\n      } else if (overlayType === 'paymentTerms') {\n        title = 'Select Payment Terms';\n        headers = ['Name'];\n        rows = getFilteredRows(paymentTerms);\n      } else {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 9\n        }\n      }, title), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: `Search ${overlayType}...`,\n        value: overlaySearch,\n        onChange: e => this.setState({\n          overlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 15\n        }\n      }, headers.map((h, i) => /*#__PURE__*/React.createElement(\"th\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 40\n        }\n      }, h)))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 13\n        }\n      }, rows.map((item, i) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id || i,\n        onClick: () => handleSelect(item),\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 17\n        }\n      }, headers.map((h, j) => /*#__PURE__*/React.createElement(\"td\", {\n        key: j,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 21\n        }\n      }, overlayType === 'customer' ? h === 'Name' ? item.custname : h === 'Code' ? item.custcode : item.custshortName : h === 'Name' ? item.name : item.shortName)))), rows.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: headers.length,\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 19\n        }\n      }, \"No records found\"))))), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm mt-2\",\n        onClick: this.hideOverlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 9\n        }\n      }, \"Cancel\")));\n    };\n\n    this.renderTaxOverlay = () => {\n      const {\n        taxGroups,\n        currentTaxIdx,\n        formData\n      } = this.state;\n      if (currentTaxIdx === null) return null;\n      const item = formData.lineItems[currentTaxIdx];\n      const selected = new Set(item.taxGroupNames || []);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'fixed',\n          zIndex: 1000,\n          top: '10%',\n          left: '15%',\n          background: '#fff',\n          border: '1px solid #ccc',\n          padding: '20px',\n          boxShadow: '0 0 10px rgba(0,0,0,0.3)',\n          width: '70%',\n          maxHeight: '70vh',\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 7\n        }\n      }, \"Select Tax Groups\"), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-sm table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 24\n        }\n      }, \"Group\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 38\n        }\n      }, \"Components\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 57\n        }\n      }, \"%\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 9\n        }\n      }, taxGroups.map(tg => /*#__PURE__*/React.createElement(\"tr\", {\n        key: tg.groupName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: selected.has(tg.groupName),\n        onChange: e => this.toggleTaxGroupSelection(tg.groupName, currentTaxIdx, e.target.checked),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 15\n        }\n      }, tg.groupName), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 15\n        }\n      }, tg.lineItems.map(li => li.component).join(', ')), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 15\n        }\n      }, tg.lineItems.map(li => li.percentOrAmt).join(', ')))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-success\",\n        onClick: () => this.setState({\n          showTaxOverlay: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 9\n        }\n      }, \"Done\")));\n    };\n\n    this.renderOrderPreview = () => {\n      var _o$lineItems;\n\n      const o = this.state.selectedOrder;\n      if (!o) return null;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card mt-4 full-height p-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 9\n        }\n      }, \"Order Preview - \", o.orderNo), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-info mr-2\",\n        onClick: () => this.loadorderForEdit(o),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 11\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-success\",\n        onClick: this.handleConvertToInvoice,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 11\n        }\n      }, \"Convert to Invoice\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 35\n        }\n      }, \"Customer:\"), \" \", o.customer), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 35\n        }\n      }, \"Date:\"), \" \", o.orderDate), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 35\n        }\n      }, \"Status:\"), \" \", o.status)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 35\n        }\n      }, \"Bill To:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 50\n        }\n      }), o.billTo), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 35\n        }\n      }, \"Ship To:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 50\n        }\n      }), o.shipTo)), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 7\n        }\n      }, \"Line Items\"), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 20\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 38\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 58\n        }\n      }, \"Qty\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 70\n        }\n      }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 89\n        }\n      }, \"Total\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 9\n        }\n      }, (_o$lineItems = o.lineItems) === null || _o$lineItems === void 0 ? void 0 : _o$lineItems.map((item, i) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 15\n        }\n      }, item.itemCode), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 15\n        }\n      }, item.itemDescription), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 15\n        }\n      }, item.qty), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 15\n        }\n      }, item.unitPrice), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 15\n        }\n      }, item.total))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 35\n        }\n      }, \"Total:\"), \" \", o.orderValue), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary mt-3\",\n        onClick: () => this.setState({\n          previewOrderMode: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 7\n        }\n      }, \"Back to List\"));\n    };\n\n    this.renderProductOverlay = () => {\n      const {\n        products,\n        productOverlaySearch,\n        selectedProductIds\n      } = this.state;\n      const filtered = products.filter(p => (p.ptshortName || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) || (p.ptdescription || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) || (p.itemCode || '').toLowerCase().includes(productOverlaySearch.toLowerCase()));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 13\n        }\n      }, \"Select Products\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-success btn-sm\",\n        onClick: () => {\n          const selectedProducts = products.filter(p => this.state.selectedProductIds.includes(p.id));\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              lineItems: [...prev.formData.lineItems, ...selectedProducts.filter(p => !prev.formData.lineItems.some(item => item.id === p.id)).map(p => ({\n                id: p.id,\n                itemCode: p.productId || '',\n                itemDescription: p.ptdescription || '',\n                itemType: p.itemType || '',\n                materialType: p.materialType || '',\n                onHand: p.onHand || 0,\n                taxGroup: p.taxGroup || '',\n                custPartNo: p.custPartNo || '',\n                // Assuming this is cust part table\n                hsnNo: p.hsnNo || '',\n                // Assuming HSN No.\n                unitPrice: p.unitPrice || 0,\n                qty: 1,\n                total: (p.unitPrice || 0).toFixed(2)\n              }))]\n            },\n            productOverlayVisible: false,\n            selectedProductIds: []\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 13\n        }\n      }, \"Add Selected\")), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: \"Search products...\",\n        value: productOverlaySearch,\n        onChange: e => this.setState({\n          productOverlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 19\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 19\n        }\n      }, \"Item Desc\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 19\n        }\n      }, \"Item Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 19\n        }\n      }, \"Material Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 19\n        }\n      }, \"On Hand\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 19\n        }\n      }, \"Tax Grp\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 19\n        }\n      }, \"Cust Part No\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 15\n        }\n      }, filtered.map(p => /*#__PURE__*/React.createElement(\"tr\", {\n        key: p.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: selectedProductIds.includes(p.id),\n        onChange: e => {\n          const checked = e.target.checked;\n          this.setState(prev => ({\n            selectedProductIds: checked ? [...prev.selectedProductIds, p.id] : prev.selectedProductIds.filter(id => id !== p.id)\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 21\n        }\n      }, p.productId), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 21\n        }\n      }, p.ptdescription || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 21\n        }\n      }, p.itemType || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 21\n        }\n      }, p.materialType || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 21\n        }\n      }, p.onHand || 0), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 21\n        }\n      }, p.taxGroup || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 21\n        }\n      }, p.custPartNo || ''))), filtered.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"8\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 21\n        }\n      }, \"No products found\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 13\n        }\n      }, \"Page 1 of 1\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        onClick: () => this.setState({\n          productOverlayVisible: false,\n          selectedProductIds: []\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 13\n        }\n      }, \"Cancel\"))));\n    };\n\n    this.renderorderTable = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-4 full-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 11\n      }\n    }, \"Orders\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.setState({\n        showForm: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 11\n      }\n    }, \"+ Add Order\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 17\n      }\n    }, \"Order No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 17\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 17\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 17\n      }\n    }, \"Order Value\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 17\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 17\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 790,\n        columnNumber: 13\n      }\n    }, this.state.orders.map((q, i) => {\n      let statusClass = \"badge-secondary\";\n      if (q.status === \"Entered\") statusClass = \"badge-warning\";else if (q.status === \"Submitted\") statusClass = \"badge-info\";else if (q.status === \"Approved\") statusClass = \"badge-success\";else if (q.status === \"Rejected\") statusClass = \"badge-danger\";\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        style: {\n          fontSize: '14px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-link p-0\",\n        onClick: () => this.loadOrderPreview(q),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 21\n        }\n      }, q.orderNo)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 19\n        }\n      }, q.customer), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 19\n        }\n      }, q.orderDate), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 19\n        }\n      }, q.orderValue), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: `badge ${statusClass}`,\n        style: {\n          fontSize: '14px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 21\n        }\n      }, q.status)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-primary btn-sm\",\n        onClick: this.handleConvertToInvoice,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 21\n        }\n      }, \"Convert to Invoice\")));\n    }), this.state.orders.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"6\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 21\n      }\n    }, \"No orders found.\")))))));\n\n    this.renderorderForm = () => {\n      const {\n        formData,\n        overlayType,\n        productOverlayVisible,\n        breakdownItems\n      } = this.state;\n      const isFOB = formData.impExp === 'FOB';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card full-height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 837,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: 'auto',\n          padding: '24px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 13\n        }\n      }, \"Order Form\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"nav nav-tabs\",\n        role: \"tablist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'co' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'co'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 17\n        }\n      }, \"CO Details\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'commercial'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 17\n        }\n      }, \"Commercial Terms\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'breakdown' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'breakdown'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 15\n        }\n      }, \"Breakdown\"))), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"form-sample\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tab-content pt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 15\n        }\n      }, this.state.activeTab === 'co' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 25\n        }\n      }, \"Order No\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.orderNo,\n        onChange: e => this.handleInputChange('orderNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 25\n        }\n      }, \"Order Date\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"date\",\n        className: \"form-control form-control-sm\",\n        value: formData.orderDate,\n        onChange: e => this.handleInputChange('orderDate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 25\n        }\n      }, \"Order Type\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.orderType,\n        onChange: e => this.handleInputChange('orderType', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 27\n        }\n      }, \"Standard\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 27\n        }\n      }, \"Manual\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 25\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.status,\n        style: {\n          backgroundColor: '#fff'\n        },\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 876,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 878,\n          columnNumber: 25\n        }\n      }, \"Customer\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Choose Customer\",\n        ref: this.customerInputRef,\n        value: formData.customer,\n        readOnly: true,\n        onClick: () => this.showOverlay('customer'),\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        onClick: () => this.showOverlay('customer'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 891,\n          columnNumber: 29\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 896,\n          columnNumber: 25\n        }\n      }, \"IMP/EXP\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.impExp,\n        onChange: e => this.handleInputChange('impExp', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 897,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 902,\n          columnNumber: 27\n        }\n      }, \"None\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 27\n        }\n      }, \"COB\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 27\n        }\n      }, \"FOB\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 905,\n          columnNumber: 27\n        }\n      }, \"CIF\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 908,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 25\n        }\n      }, \"Ref No.\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.qrefNo,\n        onChange: e => this.handleInputChange('qrefNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 917,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 918,\n          columnNumber: 25\n        }\n      }, \"Choose\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check mr-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 920,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        className: \"form-check-input\",\n        name: \"choose\",\n        id: \"chooseService\",\n        value: \"Service\",\n        checked: formData.choose === 'Service',\n        onChange: e => this.handleInputChange('choose', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 921,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"chooseService\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 29\n        }\n      }, \"Service\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        className: \"form-check-input\",\n        name: \"choose\",\n        id: \"chooseProduct\",\n        value: \"Product\",\n        checked: formData.choose === 'Product',\n        onChange: e => this.handleInputChange('choose', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"chooseProduct\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 29\n        }\n      }, \"Product\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 931,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 933,\n          columnNumber: 25\n        }\n      }, \"Currency\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.currency,\n        style: {\n          backgroundColor: '#fff'\n        },\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 934,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 942,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 25\n        }\n      }, \"Conversion Rate\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.conversionRate,\n        onChange: e => this.handleInputChange('conversionRate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 952,\n          columnNumber: 25\n        }\n      }, \"Tax Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxAmount,\n        onChange: e => this.handleInputChange('taxAmount', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 953,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 962,\n          columnNumber: 25\n        }\n      }, \"Order Value\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.orderValue,\n        onChange: e => this.handleInputChange('orderValue', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 963,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 973,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 974,\n          columnNumber: 29\n        }\n      }, \"Line Item\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-sm\",\n        onClick: () => this.setState({\n          productOverlayVisible: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 975,\n          columnNumber: 29\n        }\n      }, \"+ Add Product\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-responsive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 979,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 980,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 981,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 982,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 983,\n          columnNumber: 35\n        }\n      }, \" Item Code \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 984,\n          columnNumber: 35\n        }\n      }, \" Item Desc \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 985,\n          columnNumber: 35\n        }\n      }, \" Cust Part No \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 986,\n          columnNumber: 35\n        }\n      }, \" HSN No \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 987,\n          columnNumber: 35\n        }\n      }, \" On Hand \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 988,\n          columnNumber: 35\n        }\n      }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 989,\n          columnNumber: 35\n        }\n      }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 990,\n          columnNumber: 35\n        }\n      }, \"Tax Id\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 991,\n          columnNumber: 35\n        }\n      }, \"Item Total\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 992,\n          columnNumber: 35\n        }\n      }, \"Tax Amt\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 995,\n          columnNumber: 31\n        }\n      }, formData.lineItems.map((item, idx) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id || idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 997,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 998,\n          columnNumber: 37\n        }\n      }, item.itemCode), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 999,\n          columnNumber: 37\n        }\n      }, item.itemDescription), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1000,\n          columnNumber: 37\n        }\n      }, item.custPartNo), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1001,\n          columnNumber: 37\n        }\n      }, item.hsnNo), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1002,\n          columnNumber: 37\n        }\n      }, item.onHand), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1003,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        value: item.unitPrice,\n        onChange: e => this.handleLineItemChange(idx, 'unitPrice', e.target.value),\n        style: {\n          width: 80\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 39\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1011,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        min: \"1\",\n        value: item.qty,\n        onChange: e => this.handleLineItemChange(idx, 'qty', e.target.value),\n        style: {\n          width: 60\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1012,\n          columnNumber: 39\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          verticalAlign: 'middle'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1020,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-sm btn-outline-primary\",\n        onClick: () => this.setState({\n          showTaxOverlay: true,\n          currentTaxIdx: idx\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1021,\n          columnNumber: 39\n        }\n      }, \"Select Tax\"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          fontSize: '10px',\n          marginTop: '4px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1028,\n          columnNumber: 39\n        }\n      }, (item.taxGroupNames || []).join(', ') || '-')), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1032,\n          columnNumber: 39\n        }\n      }, item.taxAmount || '0.00'), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1033,\n          columnNumber: 39\n        }\n      }, item.total || '0.00'))), formData.lineItems.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1037,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"9\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1038,\n          columnNumber: 37\n        }\n      }, \"No items\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1045,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1046,\n          columnNumber: 29\n        }\n      }, \"Page 1 of 1\"))), this.state.activeTab === 'commercial' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1053,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1054,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1055,\n          columnNumber: 25\n        }\n      }, \"Bill To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"3\",\n        value: formData.billTo,\n        onChange: e => this.handleInputChange('billTo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1056,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1063,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1064,\n          columnNumber: 25\n        }\n      }, \"Ship To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"3\",\n        value: formData.shipTo,\n        onChange: e => this.handleInputChange('shipTo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1065,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1073,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1074,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1075,\n          columnNumber: 3\n        }\n      }, \"Despatch Mode\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1076,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: formData.despatchMode,\n        readOnly: true,\n        onClick: () => !isFOB && this.showOverlay('despatchMode'),\n        style: {\n          cursor: isFOB ? 'not-allowed' : 'pointer',\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1077,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1085,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        disabled: isFOB,\n        onClick: () => this.showOverlay('despatchMode'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1086,\n          columnNumber: 7\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1098,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1099,\n          columnNumber: 3\n        }\n      }, \"Payment Terms\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1100,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: formData.paymentTerms,\n        readOnly: true,\n        onClick: () => !isFOB && this.showOverlay('paymentTerms'),\n        style: {\n          cursor: isFOB ? 'not-allowed' : 'pointer',\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1101,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1109,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        disabled: isFOB,\n        onClick: () => this.showOverlay('paymentTerms'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1110,\n          columnNumber: 7\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1122,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1123,\n          columnNumber: 25\n        }\n      }, \"Freight Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.freightCharges,\n        onChange: e => this.handleInputChange('freightCharges', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1124,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1133,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1134,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1135,\n          columnNumber: 25\n        }\n      }, \"Tax %\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxPercent,\n        onChange: e => this.handleInputChange('taxPercent', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1136,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1144,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1145,\n          columnNumber: 25\n        }\n      }, \"Freight Tax Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxAmount,\n        onChange: e => this.handleInputChange('freighttaxAmount', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1146,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1154,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1155,\n          columnNumber: 25\n        }\n      }, \"Packing Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.packingCharges,\n        onChange: e => this.handleInputChange('packingCharges', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1156,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1165,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1166,\n          columnNumber: 23\n        }\n      }, \"Save All Details\"))), this.state.activeTab === 'breakdown' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1172,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1173,\n          columnNumber: 21\n        }\n      }, \"Breakdown Items\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-sm\",\n        onClick: () => {\n          this.setState(prev => ({\n            breakdownItems: [...prev.breakdownItems, {\n              date: '',\n              description: '',\n              lastDate: ''\n            }]\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1174,\n          columnNumber: 21\n        }\n      }, \"+ Add Breakdown\")), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1182,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1183,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1184,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1185,\n          columnNumber: 25\n        }\n      }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1186,\n          columnNumber: 25\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1187,\n          columnNumber: 25\n        }\n      }, \"Last Date to Complete\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1190,\n          columnNumber: 21\n        }\n      }, breakdownItems.map((item, idx) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1192,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1193,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: item.acknowledged || false,\n        onChange: e => this.handleBreakdownChange(idx, 'acknowledged', e.target.checked),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1194,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1200,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"date\",\n        className: \"form-control\",\n        value: item.date,\n        onChange: e => this.handleBreakdownChange(idx, 'date', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1201,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1208,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: item.desc,\n        onChange: e => this.handleBreakdownChange(idx, 'desc', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1209,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1216,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"date\",\n        className: \"form-control\",\n        value: item.lastDate,\n        onChange: e => this.handleBreakdownChange(idx, 'lastDate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1217,\n          columnNumber: 27\n        }\n      })))), breakdownItems.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1228,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"3\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1228,\n          columnNumber: 29\n        }\n      }, \"No breakdown items added\")))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fixed-card-footer text-right p-3 border-top bg-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1235,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1236,\n          columnNumber: 17\n        }\n      }, \"Save All Details\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: () => this.setState({\n          showForm: false,\n          editingId: null\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1237,\n          columnNumber: 17\n        }\n      }, \"Cancel\"))), overlayType && this.renderOverlay(), productOverlayVisible && this.renderProductOverlay())));\n    };\n  }\n\n  getTaxDetailsFromGroup(groupName) {\n    if (!groupName || groupName === 'nill' || groupName === 'more') return {\n      totalPercent: 0,\n      totalAmount: 0\n    };\n    const group = this.state.taxGroups.find(tg => tg.groupName === groupName);\n    if (!group || !Array.isArray(group.lineItems)) return {\n      totalPercent: 0,\n      totalAmount: 0\n    };\n    let totalPercent = 0;\n    let totalAmount = 0;\n    group.lineItems.forEach(item => {\n      if (item.type === 'Percentage') {\n        totalPercent += parseFloat(item.percentOrAmt || 0);\n      } else if (item.type === 'Amount') {\n        totalAmount += parseFloat(item.percentOrAmt || 0);\n      }\n    });\n    return {\n      totalPercent,\n      totalAmount\n    };\n  }\n\n  componentDidMount() {\n    var _this$props$location, _this$props$location$;\n\n    bsCustomFileInput.init();\n    this.fetchorders();\n    this.fetchCustomers();\n    this.fetchProducts();\n    this.fetchDespatchModes();\n    this.fetchPaymentTerms();\n    this.calculateOrderTotals();\n    this.fetchTaxGroups();\n    const quoteFromSession = sessionStorage.getItem('quoteToConvert');\n\n    if (quoteFromSession && !this.state.showForm) {\n      const quote = JSON.parse(quoteFromSession);\n      sessionStorage.removeItem('quoteToConvert');\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          ...quote,\n          // auto-generate an order number (existing logic)\n          orderNo: `PO${1000 + prev.orders.length}`,\n          orderDate: new Date().toISOString().split('T')[0],\n          status: 'Entered',\n          orderType: 'Standard',\n          orderValue: quote.quoteValue || '',\n          quoteNo: quote.quoteNo || '',\n          qrefNo: quote.quoteNo || '' // <-- auto place the quote number into Ref No\n\n        },\n        // ensure the breakdown from quote is loaded to order screen\n        breakdownItems: Array.isArray(quote.breakdownItems) ? quote.breakdownItems : [],\n        showForm: true\n      }));\n    }\n\n    const invoiceData = (_this$props$location = this.props.location) === null || _this$props$location === void 0 ? void 0 : (_this$props$location$ = _this$props$location.state) === null || _this$props$location$ === void 0 ? void 0 : _this$props$location$.invoiceDataFromOrder;\n\n    if (invoiceData) {\n      this.setState({\n        formData: invoiceData\n      }, () => this.calculateInvoiceTotals());\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // Customer details auto-fill\n    if (this.state.showForm && this.state.customers.length > 0 && this.state.formData.customer && (prevState.formData.customer !== this.state.formData.customer || !this.state.formData.billTo && !this.state.formData.shipTo)) {\n      const customerObj = this.state.customers.find(c => c.custname === this.state.formData.customer || c.custcode === this.state.formData.customer);\n\n      if (customerObj) {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            billTo: this.formatAddress(customerObj.billTo),\n            shipTo: this.formatAddress(customerObj.shipTo),\n            currency: customerObj.currency || '' // paymentTerms: customerObj.paymentTerms || '', // No auto-fill for payment terms\n            // despatchMode: customerObj.despatchMode || '' // No auto-fill for despatch mode\n\n          }\n        }));\n      }\n    } // Freight and Tax calculation based on impExp\n\n\n    const {\n      impExp,\n      freightCharges,\n      taxPercent,\n      packingCharges,\n      lineItems\n    } = this.state.formData;\n\n    if (['None', 'CIF'].includes(impExp)) {\n      const freight = parseFloat(freightCharges) || 0;\n      const tax = parseFloat(taxPercent) || 0;\n      const packing = parseFloat(packingCharges) || 0;\n      const taxAmount = freight * tax / 100;\n      const lineTotal = lineItems.reduce((sum, item) => {\n        const total = parseFloat(item.total) || 0;\n        return sum + total;\n      }, 0);\n      const orderValue = lineTotal + freight + taxAmount + packing;\n\n      if (this.state.formData.taxAmount !== taxAmount.toFixed(2) || this.state.formData.orderValue !== orderValue.toFixed(2)) {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            taxAmount: taxAmount.toFixed(2),\n            orderValue: orderValue.toFixed(2)\n          }\n        }));\n      }\n    } else if (impExp === 'FOB') {\n      if (this.state.formData.freightCharges !== '' || this.state.formData.taxPercent !== '' || this.state.formData.taxAmount !== '' || this.state.formData.packingCharges !== '') {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            freightCharges: '',\n            taxPercent: '',\n            taxAmount: '',\n            packingCharges: '',\n            orderValue: ''\n          }\n        }));\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1257,\n        columnNumber: 7\n      }\n    }, this.state.previewOrderMode ? this.renderOrderPreview() : this.state.showForm ? this.renderorderForm() : this.renderorderTable());\n  }\n\n}\n\nexport default withRouter(Order);","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/panelone/Order.js"],"names":["React","Component","Form","bsCustomFileInput","db","collection","getDocs","addDoc","doc","updateDoc","serverTimestamp","html2canvas","jsPDF","withRouter","recalculateTotals","getTaxDetailsFromGroup","numberToWords","num","a","b","Math","floor","Order","state","activeTab","breakdownItems","orders","customers","products","despatchModes","paymentTerms","showForm","editingId","overlayType","overlaySearch","productOverlayVisible","productOverlaySearch","selectedProductIds","taxGroups","showTaxOverlay","currentTaxIdx","formData","orderNo","orderDate","Date","toISOString","split","orderType","customer","status","choose","qrefNo","impExp","currency","conversionRate","taxAmount","orderValue","billTo","shipTo","despatchMode","freightCharges","freighttaxAmount","taxPercent","packingCharges","lineItems","customerInputRef","createRef","formatAddress","addr","address","city","country","filter","Boolean","join","zip","calculateOrderTotals","freight","parseFloat","packing","taxOnFreight","includes","lineTotal","itemTaxTotal","updatedLineItems","map","item","qty","unitPrice","baseTotal","groupNames","taxGroupNames","length","taxGroup","percent","amount","forEach","groupName","group","find","t","Array","isArray","comp","val","percentOrAmt","type","taxAmt","total","toFixed","totalTaxAmount","setState","prev","handleConvertToInvoice","invoiceData","InvoiceDate","sessionStorage","setItem","JSON","stringify","props","history","push","pathname","invoiceDataFromOrder","fetchTaxGroups","snap","data","docs","id","fetchorders","reverse","fetchCustomers","fetchProducts","fetchDespatchModes","fetchPaymentTerms","handleInputChange","field","value","handleBreakdownChange","idx","items","handleLineItemChange","updatedItems","quoteValue","handleSubmit","e","preventDefault","alert","updatedAt","createdAt","loadOrderPreview","order","selectedOrder","previewOrderMode","loadorderForEdit","current","toggleTaxGroupSelection","lineIdx","isChecked","g","showOverlay","hideOverlay","selectOverlayValue","custname","custcode","renderOverlay","getFilteredRows","list","nameKey","codeKey","toLowerCase","handleSelect","name","title","headers","rows","target","maxHeight","overflowY","h","i","cursor","j","custshortName","shortName","renderTaxOverlay","selected","Set","position","zIndex","top","left","background","border","padding","boxShadow","width","tg","has","checked","li","component","renderOrderPreview","o","itemCode","itemDescription","renderProductOverlay","filtered","p","ptshortName","ptdescription","selectedProducts","some","productId","itemType","materialType","onHand","custPartNo","hsnNo","renderorderTable","fontSize","q","statusClass","renderorderForm","isFOB","flex","backgroundColor","verticalAlign","marginTop","date","description","lastDate","acknowledged","desc","totalPercent","totalAmount","componentDidMount","init","quoteFromSession","getItem","quote","parse","removeItem","quoteNo","location","calculateInvoiceTotals","componentDidUpdate","prevProps","prevState","customerObj","c","tax","reduce","sum","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport bsCustomFileInput from 'bs-custom-file-input';\r\nimport { db } from '../../firebase';\r\nimport { collection, getDocs, addDoc, doc, updateDoc ,serverTimestamp} from 'firebase/firestore';\r\nimport html2canvas from 'html2canvas';\r\nimport { jsPDF } from 'jspdf'; \r\nimport { withRouter } from 'react-router-dom';\r\nimport { recalculateTotals,getTaxDetailsFromGroup } from './calculation';\r\nconst numberToWords = (num) => {\r\n  const a = ['', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine',\r\n    'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen',\r\n    'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];\r\n  const b = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\r\n\r\n  if (num === 0) return 'Zero';\r\n  if (num < 20) return a[num];\r\n  if (num < 100) return b[Math.floor(num / 10)] + ' ' + a[num % 10];\r\n  if (num < 1000)\r\n    return a[Math.floor(num / 100)] + ' Hundred ' + numberToWords(num % 100);\r\n  if (num < 100000)\r\n    return numberToWords(Math.floor(num / 1000)) + ' Thousand ' + numberToWords(num % 1000);\r\n  return 'Amount too large';\r\n};\r\n\r\nclass Order extends Component {\r\n  state = {\r\n    activeTab: 'co',\r\n    breakdownItems: [],\r\n    orders: [],\r\n    customers: [],\r\n    products: [],\r\n    despatchModes: [],\r\n    paymentTerms: [],\r\n    showForm: false,\r\n    editingId: null,\r\n    overlayType: '',\r\n    overlaySearch: '',\r\n    productOverlayVisible: false,\r\n    productOverlaySearch: '',\r\n    selectedProductIds: [],\r\n    taxGroups: [],\r\n    showTaxOverlay: false,\r\n    currentTaxIdx: null,\r\n    formData: {\r\n      orderNo: '',\r\n      orderDate: new Date().toISOString().split('T')[0],\r\n      orderType: 'Standard',\r\n      customer: '',\r\n      status: 'Entered', // Static 'Entered'\r\n      choose: 'Service',\r\n      qrefNo: '',\r\n      impExp: 'None',\r\n      currency: '',\r\n      conversionRate: '',\r\n      taxAmount: '',\r\n      orderValue: '',\r\n      billTo: '',\r\n      shipTo: '',\r\n      despatchMode: 'By Air',\r\n      paymentTerms: '',\r\n      freightCharges: '',\r\n      freighttaxAmount: '',\r\n      taxPercent: '',\r\n      packingCharges: '',\r\n      lineItems: [],\r\n    }\r\n  };\r\n  customerInputRef = React.createRef();\r\n\r\n  formatAddress = (addr) => {\r\n    if (!addr) return '';\r\n    if (typeof addr === 'string') return addr;\r\n    return [\r\n      addr.address,\r\n      [addr.city, addr.state, addr.country].filter(Boolean).join(', '),\r\n      addr.zip\r\n    ].filter(Boolean).join('\\n');\r\n  };\r\n\r\n  \r\n  getTaxDetailsFromGroup(groupName) {\r\n  if (!groupName || groupName === 'nill' || groupName === 'more') return { totalPercent: 0, totalAmount: 0 };\r\n\r\n  const group = this.state.taxGroups.find(tg => tg.groupName === groupName);\r\n  if (!group || !Array.isArray(group.lineItems)) return { totalPercent: 0, totalAmount: 0 };\r\n\r\n  let totalPercent = 0;\r\n  let totalAmount = 0;\r\n\r\n  group.lineItems.forEach(item => {\r\n    if (item.type === 'Percentage') {\r\n      totalPercent += parseFloat(item.percentOrAmt || 0);\r\n    } else if (item.type === 'Amount') {\r\n      totalAmount += parseFloat(item.percentOrAmt || 0);\r\n    }\r\n  });\r\n\r\n  return { totalPercent, totalAmount };\r\n}\r\n\r\ncalculateOrderTotals = () => {\r\n  const { impExp, freightCharges, taxPercent, packingCharges, lineItems } = this.state.formData;\r\n  let freight = parseFloat(freightCharges) || 0;\r\n  let packing = parseFloat(packingCharges) || 0;\r\n  let taxOnFreight = 0;\r\n  if (['None', 'CIF'].includes(impExp)) {\r\n    taxOnFreight = (freight * (parseFloat(taxPercent) || 0)) / 100;\r\n  }\r\n\r\n  let lineTotal = 0;\r\n  let itemTaxTotal = 0;\r\n\r\n  const updatedLineItems = lineItems.map(item => {\r\n  const qty = parseFloat(item.qty || 1);\r\n  const unitPrice = parseFloat(item.unitPrice || 0);\r\n  const baseTotal = unitPrice * qty;\r\n\r\n  const groupNames = item.taxGroupNames?.length ? item.taxGroupNames : [item.taxGroup || ''];\r\n\r\n  let percent = 0;\r\n  let amount = 0;\r\n  groupNames.forEach(groupName => {\r\n    const group = this.state.taxGroups.find(t => t.groupName === groupName);\r\n    if (group && Array.isArray(group.lineItems)) {\r\n      group.lineItems.forEach(comp => {\r\n        const val = parseFloat(comp.percentOrAmt || 0);\r\n        if (comp.type === 'Percentage') percent += val;\r\n        if (comp.type === 'Amount') amount += val;\r\n      });\r\n    }\r\n  });\r\n\r\n  const taxAmt = (baseTotal * percent) / 100 + amount;\r\n  const total = baseTotal + taxAmt;\r\n  item.taxAmt = taxAmt.toFixed(2);\r\n  item.total = total.toFixed(2);\r\n  return item;\r\n});\r\n\r\n\r\n  const totalTaxAmount = itemTaxTotal + taxOnFreight;\r\n  const orderValue = lineTotal + freight + packing + itemTaxTotal;\r\n\r\n  this.setState(prev => ({\r\n    formData: {\r\n      ...prev.formData,\r\n      taxAmount: totalTaxAmount.toFixed(2),  // âœ… Top-level field\r\n      orderValue: orderValue.toFixed(2),\r\n      lineItems: updatedLineItems\r\n    }\r\n  }));\r\n};\r\nhandleConvertToInvoice = () => {\r\n  const { formData } = this.state;\r\n  \r\n  const invoiceData = {\r\n  customer: formData.customer,\r\n  qrefNo: formData.qrefNo,\r\n  impExp: formData.impExp,\r\n  billTo: formData.billTo,\r\n  shipTo: formData.shipTo,\r\n  currency: formData.currency,\r\n  conversionRate: formData.conversionRate,\r\n  despatchMode: formData.despatchMode,\r\n  paymentTerms: formData.paymentTerms,\r\n  freightCharges: formData.freightCharges,\r\n  packingCharges: formData.packingCharges,\r\n  taxPercent: formData.taxPercent,\r\n  lineItems: formData.lineItems,\r\n  orderDate: formData.orderDate,\r\n  orderNo: formData.orderNo,\r\n  InvoiceDate: new Date().toISOString().split('T')[0]\r\n};\r\nsessionStorage.setItem('invoiceDataFromOrder', JSON.stringify(invoiceData));\r\nthis.props.history.push({\r\n  pathname: '/panelone/Invoice',\r\n  state: { invoiceDataFromOrder: invoiceData } // <- add this line\r\n});\r\n;\r\n};\r\n\r\n\r\ncomponentDidMount() {\r\n    bsCustomFileInput.init();\r\n    this.fetchorders();\r\n    this.fetchCustomers();\r\n    this.fetchProducts();\r\n    this.fetchDespatchModes();\r\n    this.fetchPaymentTerms();\r\n    this.calculateOrderTotals();\r\n    this.fetchTaxGroups();\r\n\r\n\r\n    const quoteFromSession = sessionStorage.getItem('quoteToConvert');\r\nif (quoteFromSession && !this.state.showForm) {\r\n  const quote = JSON.parse(quoteFromSession);\r\n  sessionStorage.removeItem('quoteToConvert');\r\n\r\n  this.setState(prev => ({\r\n    formData: {\r\n      ...prev.formData,\r\n      ...quote,\r\n      // auto-generate an order number (existing logic)\r\n      orderNo: `PO${1000 + prev.orders.length}`,\r\n      orderDate: new Date().toISOString().split('T')[0],\r\n      status: 'Entered',\r\n      orderType: 'Standard',\r\n      orderValue: quote.quoteValue || '',\r\n      quoteNo: quote.quoteNo || '',\r\n      qrefNo: quote.quoteNo || ''  // <-- auto place the quote number into Ref No\r\n    },\r\n    // ensure the breakdown from quote is loaded to order screen\r\n    breakdownItems: Array.isArray(quote.breakdownItems) ? quote.breakdownItems : [],\r\n    showForm: true\r\n  }));\r\n}\r\n\r\n  const invoiceData = this.props.location?.state?.invoiceDataFromOrder;\r\n  if (invoiceData) {\r\n    this.setState({ formData: invoiceData }, () => this.calculateInvoiceTotals());\r\n  }\r\n\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // Customer details auto-fill\r\n    if (\r\n      this.state.showForm &&\r\n      this.state.customers.length > 0 &&\r\n      this.state.formData.customer &&\r\n      (prevState.formData.customer !== this.state.formData.customer ||\r\n       (!this.state.formData.billTo && !this.state.formData.shipTo))\r\n    ) {\r\n      const customerObj = this.state.customers.find(\r\n        c => c.custname === this.state.formData.customer || c.custcode === this.state.formData.customer\r\n      );\r\n      if (customerObj) {\r\n        this.setState(prev => ({\r\n          formData: {\r\n            ...prev.formData,\r\n            billTo: this.formatAddress(customerObj.billTo),\r\n            shipTo: this.formatAddress(customerObj.shipTo),\r\n            currency: customerObj.currency || '',\r\n            // paymentTerms: customerObj.paymentTerms || '', // No auto-fill for payment terms\r\n            // despatchMode: customerObj.despatchMode || '' // No auto-fill for despatch mode\r\n          }\r\n        }));\r\n      }\r\n    }\r\n\r\n    // Freight and Tax calculation based on impExp\r\n    const { impExp, freightCharges, taxPercent,packingCharges, lineItems } = this.state.formData;\r\n    if (['None', 'CIF'].includes(impExp)) {\r\n      const freight = parseFloat(freightCharges) || 0;\r\n      const tax = parseFloat(taxPercent) || 0;\r\n      const packing = parseFloat(packingCharges) || 0;\r\n\r\n      const taxAmount = (freight * tax) / 100;\r\n\r\n      const lineTotal = lineItems.reduce((sum, item) => {\r\n        const total = parseFloat(item.total) || 0;\r\n        return sum + total;\r\n      }, 0);\r\n\r\n      const orderValue = lineTotal + freight + taxAmount + packing;\r\n\r\n      if (\r\n    this.state.formData.taxAmount !== taxAmount.toFixed(2) ||\r\n    this.state.formData.orderValue !== orderValue.toFixed(2)\r\n  ) {\r\n    this.setState(prev => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        taxAmount: taxAmount.toFixed(2),\r\n        orderValue: orderValue.toFixed(2)\r\n      }\r\n    }));\r\n  }\r\n} else if (impExp === 'FOB') {\r\n  if (\r\n    this.state.formData.freightCharges !== '' ||\r\n    this.state.formData.taxPercent !== '' ||\r\n    this.state.formData.taxAmount !== '' ||\r\n    this.state.formData.packingCharges !== ''\r\n  ) {\r\n    this.setState(prev => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        freightCharges: '',\r\n        taxPercent: '',\r\n        taxAmount: '',\r\n        packingCharges: '',\r\n        orderValue: ''\r\n      }\r\n    }));\r\n  }\r\n\r\n    }\r\n  }\r\nfetchTaxGroups = async () => {\r\n  const snap = await getDocs(collection(db, 'taxGroups'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ taxGroups: data });\r\n};\r\n\r\n  fetchorders = async () => {\r\n    const snap = await getDocs(collection(db, 'orders'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ orders: data.reverse() });\r\n  };\r\n\r\n  fetchCustomers = async () => {\r\n    const snap = await getDocs(collection(db, 'customers'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ customers: data });\r\n  };\r\n\r\n  fetchProducts = async () => {\r\n    const snap = await getDocs(collection(db, 'products'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ products: data });\r\n  };\r\n  fetchDespatchModes = async () => {\r\n  const snap = await getDocs(collection(db, 'modes'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ despatchModes: data });\r\n};\r\n\r\nfetchPaymentTerms = async () => {\r\n  const snap = await getDocs(collection(db, 'paymentTerms'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ paymentTerms: data });\r\n};\r\n\r\n\r\n  handleInputChange = (field, value) => {\r\n    this.setState(prev => ({\r\n      formData: { ...prev.formData, [field]: value }\r\n    }));\r\n  };\r\n  handleBreakdownChange = (idx, field, value) => {\r\n  this.setState(prev => {\r\n    const items = [...prev.breakdownItems];\r\n    items[idx][field] = value;\r\n    return { breakdownItems: items };\r\n  });\r\n};\r\n  \r\nhandleLineItemChange = (idx, field, value) => {\r\n  const updatedItems = [...this.state.formData.lineItems];\r\n  updatedItems[idx] = { ...updatedItems[idx], [field]: value };\r\n  const { updatedLineItems, freighttaxAmount, taxAmount, quoteValue } = recalculateTotals({\r\n    lineItems: updatedItems,\r\n    freightCharges: this.state.formData.freightCharges,\r\n    packingCharges: this.state.formData.packingCharges,\r\n    taxPercent: this.state.formData.taxPercent,\r\n    taxGroups: this.state.taxGroups\r\n  });\r\n  this.setState(prev => ({\r\n    formData: {\r\n      ...prev.formData,\r\n      lineItems: updatedLineItems,\r\n      freighttaxAmount,\r\n      taxAmount,\r\n      quoteValue\r\n    }\r\n  }));\r\n};\r\n\r\n\r\n handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  const { editingId, formData, orders, breakdownItems } = this.state;\r\n  if (!formData.customer) return alert(\"Customer is required\");\r\n  if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\r\n\r\n  formData.breakdownItems = breakdownItems;\r\n\r\n  if (editingId) {\r\n    // Update existing order\r\n    await updateDoc(doc(db, \"orders\", editingId), {\r\n      ...formData,\r\n      status: \"Entered\",   // stays Entered until approval\r\n      updatedAt: serverTimestamp()\r\n    });\r\n  } else {\r\n    // Create new order\r\n    formData.orderNo = `CO${1000 + orders.length}`;\r\n    await addDoc(collection(db, \"orders\"), {\r\n      ...formData,\r\n      status: \"Entered\",   // new order starts as Entered\r\n      createdAt: serverTimestamp()\r\n    });\r\n  }\r\n\r\n  this.setState({ showForm: false, editingId: null });\r\n  this.fetchorders();\r\n};\r\nloadOrderPreview = (order) => {\r\n  this.setState({\r\n    selectedOrder: order,\r\n    previewOrderMode: true\r\n  });\r\n};\r\n\r\n\r\n\r\n  loadorderForEdit = (order) => {\r\n  this.setState({\r\n    formData: {\r\n      ...order,\r\n      lineItems: Array.isArray(order.lineItems) ? order.lineItems : [] // Ensure array\r\n    },\r\n    breakdownItems: Array.isArray(order.breakdownItems) ? order.breakdownItems : [], // âœ… Load it here\r\n    editingId: order.id,\r\n    showForm: true,\r\n    activeTab: 'co'\r\n  }, () => {\r\n    if (this.customerInputRef.current) {\r\n      this.customerInputRef.current.value = order.customer;\r\n    }\r\n  });\r\n};\r\ntoggleTaxGroupSelection = (groupName, lineIdx, isChecked) => {\r\n  const formData = { ...this.state.formData };\r\n  const item = formData.lineItems[lineIdx];\r\n\r\n  if (!item.taxGroupNames) item.taxGroupNames = [];\r\n\r\n  if (isChecked) {\r\n    if (!item.taxGroupNames.includes(groupName)) {\r\n      item.taxGroupNames.push(groupName);\r\n    }\r\n  } else {\r\n    item.taxGroupNames = item.taxGroupNames.filter(g => g !== groupName);\r\n  }\r\n\r\n  this.setState({ formData }, () => this.calculateOrderTotals());\r\n};\r\n\r\n  showOverlay = (type) => this.setState({ overlayType: type, overlaySearch: '' });\r\n  hideOverlay = () => this.setState({ overlayType: '', overlaySearch: '' });\r\n\r\n  selectOverlayValue = (value) => {\r\n    if (this.state.overlayType === 'customer') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          customer: value.custname || value.custcode || '', // Use custname or custcode\r\n          billTo: this.formatAddress(value.billTo),\r\n          shipTo: this.formatAddress(value.shipTo),\r\n          currency: value.currency || '',\r\n          // despatchMode: value.despatchMode || '', // No auto-fill for despatch mode\r\n          // paymentTerms: value.paymentTerms || '' // No auto-fill for payment terms\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }), () => {\r\n        if (this.customerInputRef.current) {\r\n          this.customerInputRef.current.value = value.custname || value.custcode || '';\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n renderOverlay = () => {\r\n  const { overlayType, overlaySearch, customers, despatchModes, paymentTerms } = this.state;\r\n\r\n  const getFilteredRows = (list, nameKey = 'name', codeKey = 'shortName') =>\r\n    list.filter(item =>\r\n      (item[nameKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()) ||\r\n      (item[codeKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase())\r\n    );\r\n\r\n  const handleSelect = (item) => {\r\n    if (overlayType === 'customer') {\r\n      this.selectOverlayValue(item);\r\n    } else if (overlayType === 'despatchMode') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          despatchMode: item.name\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }));\r\n    } else if (overlayType === 'paymentTerms') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          paymentTerms: item.name\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  let title = '';\r\n  let headers = [];\r\n  let rows = [];\r\n\r\n  if (overlayType === 'customer') {\r\n    title = 'Select Customer';\r\n    headers = ['Name', 'Code', 'Short Name'];\r\n    rows = getFilteredRows(customers, 'custname', 'custcode');\r\n  } else if (overlayType === 'despatchMode') {\r\n    title = 'Select Despatch Mode';\r\n    headers = ['Name'];\r\n    rows = getFilteredRows(despatchModes);\r\n  } else if (overlayType === 'paymentTerms') {\r\n    title = 'Select Payment Terms';\r\n    headers = ['Name'];\r\n    rows = getFilteredRows(paymentTerms);\r\n  } else {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"custom-overlay\">\r\n      <div className=\"custom-overlay-content\">\r\n        <div className=\"custom-overlay-title\">{title}</div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control mb-2\"\r\n          placeholder={`Search ${overlayType}...`}\r\n          value={overlaySearch}\r\n          onChange={e => this.setState({ overlaySearch: e.target.value })}\r\n        />\r\n        <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n          <table className=\"table table-bordered table-sm\">\r\n            <thead>\r\n              <tr>\r\n                {headers.map((h, i) => <th key={i}>{h}</th>)}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {rows.map((item, i) => (\r\n                <tr key={item.id || i} onClick={() => handleSelect(item)} style={{ cursor: 'pointer' }}>\r\n                  {headers.map((h, j) => (\r\n                    <td key={j}>\r\n                      {overlayType === 'customer'\r\n                        ? h === 'Name' ? item.custname\r\n                          : h === 'Code' ? item.custcode\r\n                          : item.custshortName\r\n                        : h === 'Name' ? item.name\r\n                          : item.shortName}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n              {rows.length === 0 && (\r\n                <tr>\r\n                  <td colSpan={headers.length} className=\"text-center\">No records found</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <button className=\"btn btn-secondary btn-sm mt-2\" onClick={this.hideOverlay}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nrenderTaxOverlay = () => {\r\n  const { taxGroups, currentTaxIdx, formData } = this.state;\r\n  if (currentTaxIdx === null) return null;\r\n\r\n  const item = formData.lineItems[currentTaxIdx];\r\n  const selected = new Set(item.taxGroupNames || []);\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed', zIndex: 1000, top: '10%', left: '15%',\r\n      background: '#fff', border: '1px solid #ccc', padding: '20px',\r\n      boxShadow: '0 0 10px rgba(0,0,0,0.3)', width: '70%',\r\n      maxHeight: '70vh', overflowY: 'auto'\r\n    }}>\r\n      <h5>Select Tax Groups</h5>\r\n      <table className=\"table table-sm table-bordered\">\r\n        <thead>\r\n          <tr><th></th><th>Group</th><th>Components</th><th>%</th></tr>\r\n        </thead>\r\n        <tbody>\r\n          {taxGroups.map(tg => (\r\n            <tr key={tg.groupName}>\r\n              <td>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selected.has(tg.groupName)}\r\n                  onChange={e =>\r\n                    this.toggleTaxGroupSelection(tg.groupName, currentTaxIdx, e.target.checked)\r\n                  }\r\n                />\r\n              </td>\r\n              <td>{tg.groupName}</td>\r\n              <td>{tg.lineItems.map(li => li.component).join(', ')}</td>\r\n              <td>{tg.lineItems.map(li => li.percentOrAmt).join(', ')}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"text-right mt-3\">\r\n        <button className=\"btn btn-sm btn-success\" onClick={() => this.setState({ showTaxOverlay: false })}>\r\n          Done\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nrenderOrderPreview = () => {\r\n  const o = this.state.selectedOrder;\r\n  if (!o) return null;\r\n\r\n  return (\r\n    <div className=\"card mt-4 full-height p-4\">\r\n      <div className=\"d-flex justify-content-between mb-3\">\r\n        <h4 className=\"card-title\">Order Preview - {o.orderNo}</h4>\r\n        <div>\r\n          <button className=\"btn btn-sm btn-info mr-2\" onClick={() => this.loadorderForEdit(o)}>Edit</button>\r\n          <button className=\"btn btn-sm btn-success\" onClick={this.handleConvertToInvoice}>Convert to Invoice</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\"><b>Customer:</b> {o.customer}</div>\r\n        <div className=\"col-md-4\"><b>Date:</b> {o.orderDate}</div>\r\n        <div className=\"col-md-4\"><b>Status:</b> {o.status}</div>\r\n      </div>\r\n\r\n      <div className=\"row mt-2\">\r\n        <div className=\"col-md-6\"><b>Bill To:</b><br />{o.billTo}</div>\r\n        <div className=\"col-md-6\"><b>Ship To:</b><br />{o.shipTo}</div>\r\n      </div>\r\n\r\n      <h5 className=\"mt-4\">Line Items</h5>\r\n      <table className=\"table table-bordered\">\r\n        <thead><tr><th>Item Code</th><th>Description</th><th>Qty</th><th>Unit Price</th><th>Total</th></tr></thead>\r\n        <tbody>\r\n          {o.lineItems?.map((item, i) => (\r\n            <tr key={i}>\r\n              <td>{item.itemCode}</td>\r\n              <td>{item.itemDescription}</td>\r\n              <td>{item.qty}</td>\r\n              <td>{item.unitPrice}</td>\r\n              <td>{item.total}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <div className=\"text-right\"><b>Total:</b> {o.orderValue}</div>\r\n      <button className=\"btn btn-secondary mt-3\" onClick={() => this.setState({ previewOrderMode: false })}>Back to List</button>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n  renderProductOverlay = () => {\r\n    const { products, productOverlaySearch, selectedProductIds } = this.state;\r\n    const filtered = products.filter(p =>\r\n      (p.ptshortName || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) ||\r\n      (p.ptdescription || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) ||\r\n      (p.itemCode || '').toLowerCase().includes(productOverlaySearch.toLowerCase())\r\n    );\r\n    return (\r\n      <div className=\"custom-overlay\">\r\n        <div className=\"custom-overlay-content\">\r\n          <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n            <div className=\"custom-overlay-title\">Select Products</div>\r\n            <button\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => {\r\n                const selectedProducts = products.filter(p => this.state.selectedProductIds.includes(p.id));\r\n                this.setState(prev => ({\r\n                  formData: {\r\n                    ...prev.formData,\r\n                    lineItems: [\r\n                      ...prev.formData.lineItems,\r\n                      ...selectedProducts\r\n                        .filter(p => !prev.formData.lineItems.some(item => item.id === p.id))\r\n                        .map(p => ({\r\n                          id: p.id,\r\n                          itemCode: p.productId || '',\r\n                          itemDescription: p.ptdescription || '',\r\n                          itemType: p.itemType || '',\r\n                          materialType: p.materialType || '',\r\n                          onHand: p.onHand || 0,\r\n                          taxGroup: p.taxGroup || '',\r\n                          custPartNo: p.custPartNo || '', // Assuming this is cust part table\r\n                          hsnNo: p.hsnNo || '', // Assuming HSN No.\r\n                          unitPrice: p.unitPrice || 0,\r\n                          qty: 1,\r\n                          total: (p.unitPrice || 0).toFixed(2)\r\n                        }))\r\n                    ]\r\n                  },\r\n                  productOverlayVisible: false,\r\n                  selectedProductIds: []\r\n                }));\r\n              }}\r\n            >Add Selected</button>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Search products...\"\r\n            value={productOverlaySearch}\r\n            onChange={e => this.setState({ productOverlaySearch: e.target.value })}\r\n          />\r\n          <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n            <table className=\"table table-bordered table-sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th></th>\r\n                  <th>Item Code</th>\r\n                  <th>Item Desc</th>\r\n                  <th>Item Type</th>\r\n                  <th>Material Type</th>\r\n                  <th>On Hand</th>\r\n                  <th>Tax Grp</th>\r\n                  <th>Cust Part No</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filtered.map(p => (\r\n                  <tr key={p.id}>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedProductIds.includes(p.id)}\r\n                        onChange={e => {\r\n                          const checked = e.target.checked;\r\n                          this.setState(prev => ({\r\n                            selectedProductIds: checked\r\n                              ? [...prev.selectedProductIds, p.id]\r\n                              : prev.selectedProductIds.filter(id => id !== p.id)\r\n                          }));\r\n                        }}\r\n                      />\r\n                    </td>\r\n                    <td>{p.productId}</td>\r\n                    <td>{p.ptdescription || ''}</td>\r\n                    <td>{p.itemType || ''}</td>\r\n                    <td>{p.materialType || ''}</td>\r\n                    <td>{p.onHand || 0}</td>\r\n                    <td>{p.taxGroup || ''}</td>\r\n                    <td>{p.custPartNo || ''}</td>\r\n                  </tr>\r\n                ))}\r\n                {filtered.length === 0 && (\r\n                  <tr>\r\n                    <td colSpan=\"8\" className=\"text-center\">No products found</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          {/* Add pagination here if needed, for now, it's just a placeholder */}\r\n          <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n            <span>Page 1 of 1</span>\r\n            <button className=\"btn btn-secondary btn-sm\" onClick={() => this.setState({ productOverlayVisible: false, selectedProductIds: [] })}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderorderTable = () => (\r\n    <div className=\"card mt-4 full-height\">\r\n      <div className=\"card-body\">\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n          <h4 className=\"card-title\">Orders</h4>\r\n          <button className=\"btn btn-primary\" onClick={() => this.setState({ showForm: true })}>+ Add Order</button>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-bordered table-hover\">\r\n            <thead className=\"thead-light\">\r\n              <tr style={{ fontSize: '14px' }}>\r\n                <th>Order No</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Order Value</th>\r\n                <th>Status</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.orders.map((q, i) => {\r\n                let statusClass = \"badge-secondary\";\r\n                if( q.status === \"Entered\") statusClass=\"badge-warning\";\r\n                else if(q.status === \"Submitted\") statusClass=\"badge-info\";\r\n                else if(q.status === \"Approved\") statusClass=\"badge-success\";\r\n                else if(q.status === \"Rejected\") statusClass=\"badge-danger\";\r\n\r\n                return(\r\n                  <tr key={i} style={{ fontSize: '14px' }}>\r\n                  <td>\r\n                    <button\r\n                     className=\"btn btn-link p-0\" \r\n                     onClick={() => this.loadOrderPreview(q)}>\r\n                    {q.orderNo}\r\n                  </button>\r\n\r\n                  </td>\r\n                  <td>{q.customer}</td>\r\n                  <td>{q.orderDate}</td>\r\n                  <td>{q.orderValue}</td>\r\n                  <td>\r\n                    <label className={`badge ${statusClass}`}\r\n                    style={{fontSize: '14px'}}>{q.status}</label></td>\r\n                  <td>\r\n                    <button className=\"btn btn-outline-primary btn-sm\" onClick={this.handleConvertToInvoice}>\r\n                      Convert to Invoice\r\n                    </button></td>\r\n                </tr>\r\n                );\r\n              })}\r\n                    {this.state.orders.length === 0 && (\r\n                <tr><td colSpan=\"6\" className=\"text-center\">No orders found.</td></tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  renderorderForm = () => {\r\n    const { formData, overlayType, productOverlayVisible,breakdownItems } = this.state;\r\n    const isFOB = formData.impExp === 'FOB';\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"card full-height\">\r\n          <div style={{ flex: 1, overflowY: 'auto', padding: '24px' }}>\r\n            <h4 className=\"mb-3\">Order Form</h4>\r\n            <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n              <li className=\"nav-item\">\r\n                <button type=\"button\" className={`nav-link ${this.state.activeTab === 'co' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'co' })}>CO Details</button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <button type=\"button\" className={`nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'commercial' })}>Commercial Terms</button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n              <button type=\"button\" className={`nav-link ${this.state.activeTab === 'breakdown' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'breakdown' })}>Breakdown</button>\r\n            </li>\r\n            </ul>\r\n            <form className=\"form-sample\" onSubmit={this.handleSubmit}>\r\n              <div className=\"tab-content pt-3\">\r\n                {this.state.activeTab === 'co' && (\r\n                  <>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Order No</label>\r\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={formData.orderNo} onChange={(e) => this.handleInputChange('orderNo', e.target.value)} />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Order Date</label>\r\n                        <input type=\"date\" className=\"form-control form-control-sm\" value={formData.orderDate} onChange={(e) => this.handleInputChange('orderDate', e.target.value)} />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Order Type</label>\r\n                        <select className=\"form-control form-control-sm\" value={formData.orderType} onChange={(e) => this.handleInputChange('orderType', e.target.value)}>\r\n                          <option>Standard</option>\r\n                          <option>Manual</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Status</label>\r\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={formData.status}   style={{ backgroundColor: '#fff' }} readOnly />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Customer</label>\r\n                        <div className=\"input-group input-group-sm\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Choose Customer\"\r\n                            ref={this.customerInputRef}\r\n                            value={formData.customer}\r\n                            readOnly\r\n                            onClick={() => this.showOverlay('customer')}\r\n                            style={{ cursor: 'pointer' }}\r\n                          />\r\n                          <div className=\"input-group-append\">\r\n                            <button className=\"btn btn-outline-secondary btn-sm\" type=\"button\" onClick={() => this.showOverlay('customer')}>Select</button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>IMP/EXP</label>\r\n                        <select\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.impExp}\r\n                          onChange={(e) => this.handleInputChange('impExp', e.target.value)}\r\n                        >\r\n                          <option>None</option>\r\n                          <option>COB</option>\r\n                          <option>FOB</option>\r\n                          <option>CIF</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group col-md-2\">\r\n                        <label>Ref No.</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.qrefNo}\r\n                          onChange={(e) => this.handleInputChange('qrefNo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Choose</label>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"form-check mr-4\">\r\n                            <input type=\"radio\" className=\"form-check-input\" name=\"choose\" id=\"chooseService\" value=\"Service\" checked={formData.choose === 'Service'} onChange={(e) => this.handleInputChange('choose', e.target.value)} />\r\n                            <label className=\"form-check-label\" htmlFor=\"chooseService\">Service</label>\r\n                          </div>\r\n                          <div className=\"form-check\">\r\n                            <input type=\"radio\" className=\"form-check-input\" name=\"choose\" id=\"chooseProduct\" value=\"Product\" checked={formData.choose === 'Product'} onChange={(e) => this.handleInputChange('choose', e.target.value)} />\r\n                            <label className=\"form-check-label\" htmlFor=\"chooseProduct\">Product</label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Currency</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.currency}\r\n                          style={{ backgroundColor: '#fff' }}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Conversion Rate</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.conversionRate}\r\n                          onChange={(e) => this.handleInputChange('conversionRate', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Tax Amount</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxAmount}\r\n                          onChange={(e) => this.handleInputChange('taxAmount', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Order Value</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.orderValue}\r\n                          onChange={(e) => this.handleInputChange('orderValue', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                   \r\n                          <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                            <h4 className=\"card-title\">Line Item</h4>\r\n                            <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={() => this.setState({ productOverlayVisible: true })}>\r\n                              + Add Product\r\n                            </button>\r\n                          </div>\r\n                          <div className=\"table-responsive\">\r\n                            <table className=\"table table-bordered\">\r\n                              <thead className=\"thead-light\">\r\n                                <tr >\r\n                                  <th> Item Code </th>\r\n                                  <th> Item Desc </th>\r\n                                  <th> Cust Part No </th>\r\n                                  <th> HSN No </th>\r\n                                  <th> On Hand </th> \r\n                                  <th>Unit Price</th>\r\n                                  <th>Quantity</th>\r\n                                  <th>Tax Id</th>\r\n                                  <th>Item Total</th>\r\n                                  <th>Tax Amt</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {formData.lineItems.map((item, idx) => (\r\n                                  <tr key={item.id || idx}>\r\n                                    <td>{item.itemCode}</td>\r\n                                    <td>{item.itemDescription}</td>\r\n                                    <td>{item.custPartNo}</td>\r\n                                    <td>{item.hsnNo}</td>\r\n                                    <td>{item.onHand}</td>\r\n                                    <td>\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        value={item.unitPrice}\r\n                                        onChange={e => this.handleLineItemChange(idx, 'unitPrice', e.target.value)}\r\n                                        style={{ width: 80 }}\r\n                                      />\r\n                                    </td>\r\n                                    <td>\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        min=\"1\"\r\n                                        value={item.qty}\r\n                                        onChange={e => this.handleLineItemChange(idx, 'qty', e.target.value)}\r\n                                        style={{ width: 60 }}\r\n                                      />\r\n                                    </td>\r\n                                    <td style={{ verticalAlign: 'middle' }}>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-sm btn-outline-primary\"\r\n                                        onClick={() => this.setState({ showTaxOverlay: true, currentTaxIdx: idx })}\r\n                                      >\r\n                                        Select Tax\r\n                                      </button>\r\n                                      <div style={{ fontSize: '10px', marginTop: '4px' }}>\r\n                                        {(item.taxGroupNames || []).join(', ') || '-'}\r\n                                      </div>\r\n                                    </td>\r\n                                      <td>{item.taxAmount || '0.00'}</td>\r\n                                      <td>{item.total || '0.00'}</td>\r\n                                  </tr>\r\n                                ))}\r\n                                {formData.lineItems.length === 0 && (\r\n                                  <tr>\r\n                                    <td colSpan=\"9\" className=\"text-center\">No items</td>\r\n                                  </tr>\r\n                                )}\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                          {/* Add pagination for line items here if needed */}\r\n                          <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n                            <span>Page 1 of 1</span>\r\n                          </div>\r\n                      \r\n                  </>\r\n                )}\r\n                {this.state.activeTab === 'commercial' && (\r\n                  <>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-6\">\r\n                        <label>Bill To</label>\r\n                        <textarea\r\n                          className=\"form-control form-control-sm\"\r\n                          rows=\"3\"\r\n                          value={formData.billTo}\r\n                          onChange={(e) => this.handleInputChange('billTo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-6\">\r\n                        <label>Ship To</label>\r\n                        <textarea\r\n                          className=\"form-control form-control-sm\"\r\n                          rows=\"3\"\r\n                          value={formData.shipTo}\r\n                          onChange={(e) => this.handleInputChange('shipTo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-4\">\r\n  <label>Despatch Mode</label>\r\n  <div className=\"input-group input-group-sm\">\r\n    <input\r\n      type=\"text\"\r\n      className=\"form-control\"\r\n      value={formData.despatchMode}\r\n      readOnly\r\n      onClick={() => !isFOB && this.showOverlay('despatchMode')}\r\n      style={{ cursor: isFOB ? 'not-allowed' : 'pointer', backgroundColor: '#fff' }}\r\n    />\r\n    <div className=\"input-group-append\">\r\n      <button\r\n        className=\"btn btn-outline-secondary btn-sm\"\r\n        type=\"button\"\r\n        disabled={isFOB}\r\n        onClick={() => this.showOverlay('despatchMode')}\r\n      >\r\n        Select\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div className=\"form-group col-md-4\">\r\n  <label>Payment Terms</label>\r\n  <div className=\"input-group input-group-sm\">\r\n    <input\r\n      type=\"text\"\r\n      className=\"form-control\"\r\n      value={formData.paymentTerms}\r\n      readOnly\r\n      onClick={() => !isFOB && this.showOverlay('paymentTerms')}\r\n      style={{ cursor: isFOB ? 'not-allowed' : 'pointer', backgroundColor: '#fff' }}\r\n    />\r\n    <div className=\"input-group-append\">\r\n      <button\r\n        className=\"btn btn-outline-secondary btn-sm\"\r\n        type=\"button\"\r\n        disabled={isFOB}\r\n        onClick={() => this.showOverlay('paymentTerms')}\r\n      >\r\n        Select\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Freight Charges</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.freightCharges}\r\n                          onChange={(e) => this.handleInputChange('freightCharges', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Tax %</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxPercent}\r\n                          onChange={(e) => this.handleInputChange('taxPercent', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Freight Tax Amount</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxAmount}\r\n                          onChange={(e) => this.handleInputChange('freighttaxAmount', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Packing Charges</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.packingCharges}\r\n                          onChange={(e) => this.handleInputChange('packingCharges', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-right mt-3\">\r\n                      <button type=\"submit\" className=\"btn btn-success\">Save All Details</button>\r\n                    </div>\r\n                  </>\r\n                )}\r\n                {this.state.activeTab === 'breakdown' && (\r\n                <>\r\n                  <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                    <h5 className=\"card-title\">Breakdown Items</h5>\r\n                    <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={() => {\r\n                      this.setState(prev => ({\r\n                        breakdownItems: [...prev.breakdownItems, { date: '', description: '', lastDate: '' }]\r\n                      }));\r\n                    }}>\r\n                      + Add Breakdown\r\n                    </button>\r\n                  </div>\r\n                  <table className=\"table table-bordered table-sm\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Date</th>\r\n                        <th>Description</th>\r\n                        <th>Last Date to Complete</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {breakdownItems.map((item, idx) => (\r\n                       <tr key={idx}>\r\n                        <td>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={item.acknowledged || false}\r\n                            onChange={(e) => this.handleBreakdownChange(idx, 'acknowledged', e.target.checked)}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                            value={item.date}\r\n                            onChange={(e) => this.handleBreakdownChange(idx, 'date', e.target.value)}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={item.desc}\r\n                            onChange={(e) => this.handleBreakdownChange(idx, 'desc', e.target.value)}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                            value={item.lastDate}\r\n                            onChange={(e) => this.handleBreakdownChange(idx, 'lastDate', e.target.value)}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n\r\n                      ))}\r\n                      {breakdownItems.length === 0 && (\r\n                        <tr><td colSpan=\"3\" className=\"text-center\">No breakdown items added</td></tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </>\r\n              )}\r\n              </div>\r\n              <div className=\"fixed-card-footer text-right p-3 border-top bg-white\">\r\n                <button type=\"submit\" className=\"btn btn-success mr-2\">Save All Details</button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => this.setState({ showForm: false, editingId: null })}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n            {overlayType && this.renderOverlay()}\r\n            {productOverlayVisible && this.renderProductOverlay()}\r\n          </div>\r\n           \r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        {this.state.previewOrderMode ? this.renderOrderPreview() : (this.state.showForm ? this.renderorderForm() : this.renderorderTable())}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Order);\r\n\r\n"]},"metadata":{},"sourceType":"module"}