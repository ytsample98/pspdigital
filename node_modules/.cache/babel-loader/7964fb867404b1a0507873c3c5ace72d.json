{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\sales\\\\salestransactions\\\\invoice\\\\BillingCancel.js\";\n// BillingCancel.js\nimport React, { Component } from 'react';\nimport { db } from '../../../../firebase';\nimport { collection, getDocs, updateDoc, doc } from 'firebase/firestore';\nimport { serverTimestamp } from 'firebase/firestore';\n\nclass BillingCancel extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cobilling: [],\n      loading: false\n    };\n\n    this.fetch = async () => {\n      const snap = await getDocs(collection(db, 'cobilling'));\n      const data = snap.docs.map(d => ({\n        id: d.id,\n        ...d.data()\n      })); // show awaiting/approved/amended as per your description\n\n      const rows = data.filter(c => ['Awaiting Approval', 'Approved', 'Amended'].includes(c.status));\n      this.setState({\n        cobilling: rows\n      });\n    };\n\n    this.cancel = async cob => {\n      if (!window.confirm(`Cancel ${cob.cobillingNo}? This will reverse applied quantities if already applied.`)) return;\n      this.setState({\n        loading: true\n      });\n\n      try {\n        // If cob had been applied earlier (Approved or Amended), reverse approvedLineItems\n        const toReverse = cob.approvedLineItems || (cob.status === 'Approved' || cob.status === 'Amended' ? cob.lineItems : []);\n\n        if (toReverse && toReverse.length && cob.customerOrderId) {\n          const ordersSnap = await getDocs(collection(db, 'orders'));\n          const orderDoc = ordersSnap.docs.find(d => (d.data().orderNo || '') === (cob.customerOrderId || ''));\n\n          if (orderDoc) {\n            const orderId = orderDoc.id;\n            const orderData = orderDoc.data();\n            const updatedLineItems = (orderData.lineItems || []).map(oli => {\n              const match = (toReverse || []).find(ci => ci.itemCode === oli.itemCode);\n\n              if (match) {\n                const prevRecv = parseFloat(oli.recvQty || 0) || 0;\n                const dec = parseFloat(match.qty || 0) || 0;\n                const newRecv = Math.max(0, prevRecv - dec);\n                oli.recvQty = newRecv;\n                oli.remainingQty = Math.max(0, parseFloat(oli.qty || oli.orderQty || 0) - newRecv);\n              }\n\n              return oli;\n            });\n            let anyRecv = updatedLineItems.some(li => parseFloat(li.recvQty || 0) > 0);\n            let allDone = updatedLineItems.every(li => parseFloat(li.qty || li.orderQty || 0) <= parseFloat(li.recvQty || 0));\n            const newOrderStatus = allDone ? 'Completed' : anyRecv ? 'Partial' : 'Entered';\n            await updateDoc(doc(db, 'orders', orderId), {\n              lineItems: updatedLineItems,\n              status: newOrderStatus,\n              updatedAt: serverTimestamp()\n            });\n          }\n        } // mark COB as cancelled\n\n\n        await updateDoc(doc(db, 'cobilling', cob.id), {\n          status: 'Cancelled',\n          cancelledAt: serverTimestamp(),\n          updatedAt: serverTimestamp()\n        });\n        alert('Cancelled.');\n        this.fetch();\n      } catch (err) {\n        console.error(err);\n        alert(err.message);\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.fetch();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"Billing Cancel\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-sm table-bordered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 24\n      }\n    }, \"Bill No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 40\n      }\n    }, \"Order\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 54\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 71\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 84\n      }\n    }, \"Value\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 98\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 113\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, this.state.cobilling.map(c => /*#__PURE__*/React.createElement(\"tr\", {\n      key: c.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, c.cobillingNo), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, c.customerOrderId), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, c.customer), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, c.cobillingDate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, c.billValue), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    }, c.status), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-danger btn-sm\",\n      onClick: () => this.cancel(c),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 23\n      }\n    }, \"Cancel\")))), this.state.cobilling.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"7\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 57\n      }\n    }, \"No cancellable bills\"))))));\n  }\n\n}\n\nexport default BillingCancel;","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/sales/salestransactions/invoice/BillingCancel.js"],"names":["React","Component","db","collection","getDocs","updateDoc","doc","serverTimestamp","BillingCancel","state","cobilling","loading","fetch","snap","data","docs","map","d","id","rows","filter","c","includes","status","setState","cancel","cob","window","confirm","cobillingNo","toReverse","approvedLineItems","lineItems","length","customerOrderId","ordersSnap","orderDoc","find","orderNo","orderId","orderData","updatedLineItems","oli","match","ci","itemCode","prevRecv","parseFloat","recvQty","dec","qty","newRecv","Math","max","remainingQty","orderQty","anyRecv","some","li","allDone","every","newOrderStatus","updatedAt","cancelledAt","alert","err","console","error","message","componentDidMount","render","customer","cobillingDate","billValue"],"mappings":"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","sourcesContent":["// BillingCancel.js\r\nimport React, { Component } from 'react';\r\nimport { db } from '../../../../firebase';\r\nimport { collection, getDocs, updateDoc, doc } from 'firebase/firestore';\r\nimport { serverTimestamp } from 'firebase/firestore';\r\n\r\nclass BillingCancel extends Component {\r\n  state = { cobilling: [], loading: false };\r\n\r\n  componentDidMount() { this.fetch(); }\r\n\r\n  fetch = async () => {\r\n    const snap = await getDocs(collection(db, 'cobilling'));\r\n    const data = snap.docs.map(d => ({ id: d.id, ...d.data() }));\r\n    // show awaiting/approved/amended as per your description\r\n    const rows = data.filter(c => ['Awaiting Approval','Approved','Amended'].includes(c.status));\r\n    this.setState({ cobilling: rows });\r\n  };\r\n\r\n  cancel = async (cob) => {\r\n    if (!window.confirm(`Cancel ${cob.cobillingNo}? This will reverse applied quantities if already applied.`)) return;\r\n    this.setState({ loading: true });\r\n    try {\r\n      // If cob had been applied earlier (Approved or Amended), reverse approvedLineItems\r\n      const toReverse = cob.approvedLineItems || (cob.status === 'Approved' || cob.status === 'Amended' ? cob.lineItems : []);\r\n      if (toReverse && toReverse.length && cob.customerOrderId) {\r\n        const ordersSnap = await getDocs(collection(db, 'orders'));\r\n        const orderDoc = ordersSnap.docs.find(d => (d.data().orderNo || '') === (cob.customerOrderId || ''));\r\n        if (orderDoc) {\r\n          const orderId = orderDoc.id;\r\n          const orderData = orderDoc.data();\r\n          const updatedLineItems = (orderData.lineItems || []).map(oli => {\r\n            const match = (toReverse || []).find(ci => ci.itemCode === oli.itemCode);\r\n            if (match) {\r\n              const prevRecv = parseFloat(oli.recvQty || 0) || 0;\r\n              const dec = parseFloat(match.qty || 0) || 0;\r\n              const newRecv = Math.max(0, prevRecv - dec);\r\n              oli.recvQty = newRecv;\r\n              oli.remainingQty = Math.max(0, (parseFloat(oli.qty || oli.orderQty || 0) - newRecv));\r\n            }\r\n            return oli;\r\n          });\r\n          let anyRecv = updatedLineItems.some(li => (parseFloat(li.recvQty || 0) > 0));\r\n          let allDone = updatedLineItems.every(li => (parseFloat(li.qty || li.orderQty || 0) <= (parseFloat(li.recvQty || 0))));\r\n          const newOrderStatus = allDone ? 'Completed' : (anyRecv ? 'Partial' : 'Entered');\r\n          await updateDoc(doc(db, 'orders', orderId), {\r\n            lineItems: updatedLineItems,\r\n            status: newOrderStatus,\r\n            updatedAt: serverTimestamp()\r\n          });\r\n        }\r\n      }\r\n\r\n      // mark COB as cancelled\r\n      await updateDoc(doc(db, 'cobilling', cob.id), {\r\n        status: 'Cancelled',\r\n        cancelledAt: serverTimestamp(),\r\n        updatedAt: serverTimestamp()\r\n      });\r\n\r\n      alert('Cancelled.');\r\n      this.fetch();\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(err.message);\r\n    } finally { this.setState({ loading: false }); }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <h4>Billing Cancel</h4>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-sm table-bordered\">\r\n            <thead><tr><th>Bill No</th><th>Order</th><th>Customer</th><th>Date</th><th>Value</th><th>Status</th><th>Action</th></tr></thead>\r\n            <tbody>\r\n              {this.state.cobilling.map(c => (\r\n                <tr key={c.id}>\r\n                  <td>{c.cobillingNo}</td>\r\n                  <td>{c.customerOrderId}</td>\r\n                  <td>{c.customer}</td>\r\n                  <td>{c.cobillingDate}</td>\r\n                  <td>{c.billValue}</td>\r\n                  <td>{c.status}</td>\r\n                  <td><button className=\"btn btn-danger btn-sm\" onClick={() => this.cancel(c)}>Cancel</button></td>\r\n                </tr>\r\n              ))}\r\n              {this.state.cobilling.length === 0 && <tr><td colSpan=\"7\" className=\"text-center\">No cancellable bills</td></tr>}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BillingCancel;\r\n"]},"metadata":{},"sourceType":"module"}