{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\dashboard\\\\Dashboard.js\";\nimport React, { Component } from \"react\";\nimport { Card, Row, Col, ButtonGroup, Button } from \"react-bootstrap\";\nimport { db } from \"../../firebase\";\nimport { collection, onSnapshot } from \"firebase/firestore\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport \"chart.js\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activities: [],\n      lineData: null,\n      barData: null,\n      filter: \"1M\" // default filter\n\n    };\n\n    this.buildLineChart = () => {\n      const {\n        activities\n      } = this.state;\n      const grouped = {}; // Group by date and source\n\n      activities.forEach(a => {\n        const date = a.date;\n        if (!grouped[date]) grouped[date] = {};\n        if (!grouped[date][a.source]) grouped[date][a.source] = 0;\n        grouped[date][a.source]++;\n      });\n      const labels = Object.keys(grouped).sort();\n      const sources = [\"Call\", \"Meeting\", \"Demo\", \"Mail\", \"Whatsapp\"];\n      const datasets = sources.map((src, i) => ({\n        label: src,\n        data: labels.map(d => grouped[d][src] || 0),\n        borderColor: this.getColor(i),\n        backgroundColor: this.getColor(i, 0.2),\n        fill: false,\n        tension: 0.4,\n        borderWidth: 2,\n        pointRadius: 5\n      }));\n      this.setState({\n        lineData: {\n          labels,\n          datasets\n        }\n      });\n    };\n\n    this.buildBarChart = () => {\n      const {\n        activities\n      } = this.state;\n      const grouped = {}; // Count per source\n\n      activities.forEach(a => {\n        const src = a.source || \"Unknown\";\n        if (!grouped[src]) grouped[src] = 0;\n        grouped[src]++;\n      });\n      const labels = Object.keys(grouped);\n      const data = Object.values(grouped);\n      const dataset = {\n        label: \"Total Activities\",\n        data,\n        backgroundColor: labels.map((_, i) => this.getColor(i, 0.7)),\n        borderRadius: 8\n      };\n      this.setState({\n        barData: {\n          labels,\n          datasets: [dataset]\n        }\n      });\n    };\n\n    this.getColor = (i, alpha = 1) => {\n      const colors = [`rgba(99, 102, 241, ${alpha})`, // Indigo\n      `rgba(34, 197, 94, ${alpha})`, // Green\n      `rgba(239, 68, 68, ${alpha})`, // Red\n      `rgba(234, 179, 8, ${alpha})`, // Yellow\n      `rgba(59, 130, 246, ${alpha})` // Blue\n      ];\n      return colors[i % colors.length];\n    };\n\n    this.getGradient = color => {\n      const canvas = document.createElement(\"canvas\");\n      const ctx = canvas.getContext(\"2d\");\n      const gradient = ctx.createLinearGradient(0, 0, 0, 200);\n      gradient.addColorStop(0, color);\n      gradient.addColorStop(1, \"rgba(255,255,255,0)\");\n      return gradient;\n    };\n  }\n\n  componentDidMount() {\n    onSnapshot(collection(db, \"activities\"), snapshot => {\n      const activities = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        activities\n      }, () => {\n        this.buildLineChart();\n        this.buildBarChart();\n      });\n    });\n  }\n\n  render() {\n    const {\n      lineData,\n      barData,\n      filter\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"p-3 shadow-sm bg-white border-0 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }, \"Sales Statistics Overview\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, \"Lorem ipsum is placeholder text commonly used\")), /*#__PURE__*/React.createElement(ButtonGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, [\"1D\", \"5D\", \"1M\", \"1Y\"].map(f => /*#__PURE__*/React.createElement(Button, {\n      key: f,\n      size: \"sm\",\n      variant: filter === f ? \"primary\" : \"light\",\n      onClick: () => this.setState({\n        filter: f\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, f)))), lineData && /*#__PURE__*/React.createElement(Line, {\n      data: lineData,\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: \"top\"\n          },\n          tooltip: {\n            mode: \"index\",\n            intersect: false,\n            backgroundColor: \"#111827\",\n            titleColor: \"#fff\",\n            bodyColor: \"#fff\"\n          }\n        },\n        interaction: {\n          mode: \"nearest\",\n          axis: \"x\",\n          intersect: false\n        },\n        scales: {\n          x: {\n            grid: {\n              display: false\n            }\n          },\n          y: {\n            beginAtZero: true,\n            grid: {\n              color: \"#f3f4f6\"\n            }\n          }\n        }\n      },\n      height: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"p-3 shadow-sm bg-white border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }, \"Market Overview\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, \"Lorem ipsum dolor sit amet consectetur.\"), barData && /*#__PURE__*/React.createElement(Bar, {\n      data: barData,\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: \"top\"\n          },\n          tooltip: {\n            callbacks: {\n              label: ctx => `$${ctx.raw} USD`\n            }\n          }\n        },\n        scales: {\n          x: {\n            stacked: true,\n            grid: {\n              display: false\n            }\n          },\n          y: {\n            stacked: true,\n            beginAtZero: true\n          }\n        }\n      },\n      height: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/dashboard/Dashboard.js"],"names":["React","Component","Card","Row","Col","ButtonGroup","Button","db","collection","onSnapshot","Line","Bar","Dashboard","state","activities","lineData","barData","filter","buildLineChart","grouped","forEach","a","date","source","labels","Object","keys","sort","sources","datasets","map","src","i","label","data","d","borderColor","getColor","backgroundColor","fill","tension","borderWidth","pointRadius","setState","buildBarChart","values","dataset","_","borderRadius","alpha","colors","length","getGradient","color","canvas","document","createElement","ctx","getContext","gradient","createLinearGradient","addColorStop","componentDidMount","snapshot","docs","doc","id","render","f","responsive","plugins","legend","position","tooltip","mode","intersect","titleColor","bodyColor","interaction","axis","scales","x","grid","display","y","beginAtZero","callbacks","raw","stacked"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Row, Col, ButtonGroup, Button } from \"react-bootstrap\";\nimport { db } from \"../../firebase\";\nimport { collection, onSnapshot } from \"firebase/firestore\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport \"chart.js\";\n\nclass Dashboard extends Component {\n  state = {\n    activities: [],\n    lineData: null,\n    barData: null,\n    filter: \"1M\", // default filter\n  };\n\n  componentDidMount() {\n    onSnapshot(collection(db, \"activities\"), (snapshot) => {\n      const activities = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      this.setState({ activities }, () => {\n        this.buildLineChart();\n        this.buildBarChart();\n      });\n    });\n  }\n\n buildLineChart = () => {\n    const { activities } = this.state;\n    const grouped = {};\n\n    // Group by date and source\n    activities.forEach((a) => {\n      const date = a.date;\n      if (!grouped[date]) grouped[date] = {};\n      if (!grouped[date][a.source]) grouped[date][a.source] = 0;\n      grouped[date][a.source]++;\n    });\n\n    const labels = Object.keys(grouped).sort();\n    const sources = [\"Call\", \"Meeting\", \"Demo\", \"Mail\", \"Whatsapp\"];\n\n    const datasets = sources.map((src, i) => ({\n      label: src,\n      data: labels.map((d) => grouped[d][src] || 0),\n      borderColor: this.getColor(i),\n      backgroundColor: this.getColor(i, 0.2),\n      fill: false,\n      tension: 0.4,\n      borderWidth: 2,\n      pointRadius: 5,\n    }));\n\n    this.setState({ lineData: { labels, datasets } });\n  };\n\n   buildBarChart = () => {\n    const { activities } = this.state;\n    const grouped = {};\n\n    // Count per source\n    activities.forEach((a) => {\n      const src = a.source || \"Unknown\";\n      if (!grouped[src]) grouped[src] = 0;\n      grouped[src]++;\n    });\n\n    const labels = Object.keys(grouped);\n    const data = Object.values(grouped);\n\n    const dataset = {\n      label: \"Total Activities\",\n      data,\n      backgroundColor: labels.map((_, i) => this.getColor(i, 0.7)),\n      borderRadius: 8,\n    };\n\n    this.setState({\n      barData: { labels, datasets: [dataset] },\n    });\n  };\n\n\n  getColor = (i, alpha = 1) => {\n    const colors = [\n      `rgba(99, 102, 241, ${alpha})`, // Indigo\n      `rgba(34, 197, 94, ${alpha})`,  // Green\n      `rgba(239, 68, 68, ${alpha})`,  // Red\n      `rgba(234, 179, 8, ${alpha})`,  // Yellow\n      `rgba(59, 130, 246, ${alpha})`, // Blue\n    ];\n    return colors[i % colors.length];\n  };\n\n  getGradient = (color) => {\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const gradient = ctx.createLinearGradient(0, 0, 0, 200);\n    gradient.addColorStop(0, color);\n    gradient.addColorStop(1, \"rgba(255,255,255,0)\");\n    return gradient;\n  };\n\n  render() {\n    const { lineData, barData, filter } = this.state;\n\n    return (\n      <div className=\"container mt-4\">\n        <Row>\n          <Col md={12}>\n            <Card className=\"p-3 shadow-sm bg-white border-0 mb-4\">\n              <div className=\"d-flex justify-content-between align-items-center\">\n                <div>\n                  <h5>Sales Statistics Overview</h5>\n                  <p>Lorem ipsum is placeholder text commonly used</p>\n                </div>\n                <ButtonGroup>\n                  {[\"1D\", \"5D\", \"1M\", \"1Y\"].map((f) => (\n                    <Button\n                      key={f}\n                      size=\"sm\"\n                      variant={filter === f ? \"primary\" : \"light\"}\n                      onClick={() => this.setState({ filter: f })}\n                    >\n                      {f}\n                    </Button>\n                  ))}\n                </ButtonGroup>\n              </div>\n\n              {lineData && (\n                <Line\n                  data={lineData}\n                  options={{\n                    responsive: true,\n                    plugins: {\n                      legend: { position: \"top\" },\n                      tooltip: {\n                        mode: \"index\",\n                        intersect: false,\n                        backgroundColor: \"#111827\",\n                        titleColor: \"#fff\",\n                        bodyColor: \"#fff\",\n                      },\n                    },\n                    interaction: { mode: \"nearest\", axis: \"x\", intersect: false },\n                    scales: {\n                      x: { grid: { display: false } },\n                      y: { beginAtZero: true, grid: { color: \"#f3f4f6\" } },\n                    },\n                  }}\n                  height={100}\n                />\n              )}\n            </Card>\n          </Col>\n\n          <Col md={12}>\n            <Card className=\"p-3 shadow-sm bg-white border-0\">\n              <h5>Market Overview</h5>\n              <p>Lorem ipsum dolor sit amet consectetur.</p>\n              {barData && (\n                <Bar\n                  data={barData}\n                  options={{\n                    responsive: true,\n                    plugins: {\n                      legend: { position: \"top\" },\n                      tooltip: {\n                        callbacks: {\n                          label: (ctx) => `$${ctx.raw} USD`,\n                        },\n                      },\n                    },\n                    scales: {\n                      x: { stacked: true, grid: { display: false } },\n                      y: { stacked: true, beginAtZero: true },\n                    },\n                  }}\n                  height={100}\n                />\n              )}\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}