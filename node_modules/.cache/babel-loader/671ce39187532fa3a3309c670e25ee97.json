{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\panelone\\\\Quote.js\";\nimport React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport { db } from '../../firebase';\nimport { collection, getDocs, addDoc, doc, updateDoc } from 'firebase/firestore';\nimport { withRouter } from 'react-router-dom';\nimport html2canvas from 'html2canvas';\nimport { jsPDF } from 'jspdf';\nimport { recalculateTotals, getTaxDetailsFromGroup } from './calculation';\nimport ToWords from 'to-words';\nconst ToWordsConstructor = ToWords.default || ToWords;\nconst toWords = new ToWordsConstructor({\n  localeCode: 'en-IN',\n  converterOptions: {\n    currency: true,\n    ignoreDecimal: true\n  }\n});\n\nconst numberToWords = amount => {\n  return `INR ${toWords.convert(amount)} Only`;\n};\n\nclass Quote extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: 'co',\n      quotes: [],\n      customers: [],\n      products: [],\n      despatchModes: [],\n      paymentTerms: [],\n      showForm: false,\n      showTaxOverlay: false,\n      currentTaxLineIdx: null,\n      editingId: null,\n      overlayType: '',\n      overlaySearch: '',\n      productOverlayVisible: false,\n      productOverlaySearch: '',\n      selectedProductIds: [],\n      selectedTaxGroups: [],\n      taxComponents: [],\n      taxGroups: [],\n      previewMode: false,\n      selectedQuote: null,\n      breakdownItems: [],\n      breakdownType: 'Percentage',\n      breakdownSelectAll: false,\n      showSubProductDialog: false,\n      currentBreakdownIdx: null,\n      subProductForm: {\n        name: '',\n        value: '',\n        type: 'Amount',\n        dueDate: ''\n      },\n      formData: {\n        quoteNo: '',\n        quoteDate: new Date().toISOString().split('T')[0],\n        quoteType: 'Standard',\n        customer: '',\n        status: 'Entered',\n        // Static 'Entered'\n        choose: 'Service',\n        qrefNo: '',\n        impExp: 'None',\n        currency: '',\n        conversionRate: '',\n        taxAmount: '',\n        quoteValue: '',\n        billTo: '',\n        shipTo: '',\n        despatchMode: 'By Air',\n        paymentTerms: '',\n        freightCharges: '',\n        freighttaxAmount: '',\n        taxPercent: '',\n        packingCharges: '',\n        lineItems: []\n      }\n    };\n    this.customerInputRef = React.createRef();\n\n    this.formatAddress = addr => {\n      if (!addr) return '';\n      if (typeof addr === 'string') return addr;\n      return [addr.address, [addr.city, addr.state, addr.country].filter(Boolean).join(', '), addr.zip].filter(Boolean).join('\\n');\n    };\n\n    this.handleLineItemChange = (idx, field, value) => {\n      const updatedItems = [...this.state.formData.lineItems];\n      updatedItems[idx] = { ...updatedItems[idx],\n        [field]: value\n      };\n      const {\n        updatedLineItems,\n        freighttaxAmount,\n        taxAmount,\n        quoteValue\n      } = recalculateTotals({\n        lineItems: updatedItems,\n        freightCharges: this.state.formData.freightCharges,\n        packingCharges: this.state.formData.packingCharges,\n        taxPercent: this.state.formData.taxPercent,\n        taxGroups: this.state.taxGroups\n      });\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          lineItems: updatedLineItems,\n          freighttaxAmount,\n          taxAmount,\n          quoteValue\n        }\n      }));\n    };\n\n    this.fetchTaxGroups = async () => {\n      const snap = await getDocs(collection(db, 'taxGroups'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        taxGroups: data\n      });\n    };\n\n    this.fetchQuotes = async () => {\n      const snap = await getDocs(collection(db, 'quotes'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        quotes: data.reverse()\n      });\n    };\n\n    this.fetchCustomers = async () => {\n      const snap = await getDocs(collection(db, 'customers'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        customers: data\n      });\n    };\n\n    this.fetchProducts = async () => {\n      const snap = await getDocs(collection(db, 'products'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        products: data\n      });\n    };\n\n    this.fetchDespatchModes = async () => {\n      const snap = await getDocs(collection(db, 'modes'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        despatchModes: data\n      });\n    };\n\n    this.fetchPaymentTerms = async () => {\n      const snap = await getDocs(collection(db, 'paymentTerms'));\n      const data = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        paymentTerms: data\n      });\n    };\n\n    this.toggleTaxGroupSelection = (groupName, lineIdx, checked) => {\n      this.setState(prev => {\n        const lineItems = [...prev.formData.lineItems];\n        const item = { ...lineItems[lineIdx]\n        };\n        let taxGroupNames = Array.isArray(item.taxGroupNames) ? [...item.taxGroupNames] : [];\n\n        if (checked) {\n          if (!taxGroupNames.includes(groupName)) taxGroupNames.push(groupName);\n        } else {\n          taxGroupNames = taxGroupNames.filter(g => g !== groupName);\n        }\n\n        item.taxGroupNames = taxGroupNames;\n        item.taxGroupName = taxGroupNames.join(', ');\n        lineItems[lineIdx] = item;\n        const {\n          updatedLineItems,\n          freighttaxAmount,\n          taxAmount,\n          quoteValue\n        } = recalculateTotals({\n          lineItems,\n          freightCharges: prev.formData.freightCharges,\n          packingCharges: prev.formData.packingCharges,\n          taxPercent: prev.formData.taxPercent,\n          taxGroups: prev.taxGroups\n        });\n        return {\n          formData: { ...prev.formData,\n            lineItems: updatedLineItems,\n            freighttaxAmount,\n            taxAmount,\n            quoteValue\n          }\n        };\n      });\n    };\n\n    this.handleInputChange = (field, value) => {\n      this.setState(prev => ({\n        formData: { ...prev.formData,\n          [field]: value\n        }\n      }), () => {\n        if (['freightCharges', 'taxPercent', 'packingCharges'].includes(field)) {\n          const {\n            updatedLineItems,\n            freighttaxAmount,\n            taxAmount,\n            quoteValue\n          } = recalculateTotals({\n            lineItems: this.state.formData.lineItems,\n            freightCharges: this.state.formData.freightCharges,\n            packingCharges: this.state.formData.packingCharges,\n            taxPercent: this.state.formData.taxPercent,\n            taxGroups: this.state.taxGroups\n          });\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              lineItems: updatedLineItems,\n              freighttaxAmount,\n              taxAmount,\n              quoteValue\n            }\n          }));\n        }\n      });\n    };\n\n    this.handleBreakdownSelectAll = checked => {\n      this.setState(prev => ({\n        breakdownSelectAll: checked,\n        breakdownItems: prev.breakdownItems.map(item => ({ ...item,\n          selected: checked\n        }))\n      }));\n    };\n\n    this.handleBreakdownRowSelect = (idx, checked) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        items[idx].selected = checked;\n        return {\n          breakdownItems: items\n        };\n      });\n    };\n\n    this.handleBreakdownTypeChange = type => {\n      this.setState({\n        breakdownType: type\n      });\n    };\n\n    this.handleBreakdownValueChange = (idx, value) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        items[idx].value = value;\n        return {\n          breakdownItems: items\n        };\n      });\n    };\n\n    this.handleBreakdownDateChange = (idx, value) => {\n      this.setState(prev => {\n        const items = [...prev.breakdownItems];\n        items[idx].lastDate = value;\n        return {\n          breakdownItems: items\n        };\n      });\n    };\n\n    this.saveBreakdownToSession = () => {\n      sessionStorage.setItem('breakdownItems', JSON.stringify(this.state.breakdownItems));\n    };\n\n    this.loadBreakdownFromSession = () => {\n      const data = sessionStorage.getItem('breakdownItems');\n      if (data) this.setState({\n        breakdownItems: JSON.parse(data)\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        editingId,\n        formData,\n        quotes\n      } = this.state;\n      if (!formData.customer) return alert(\"Customer is required\");\n      if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\n\n      if (editingId) {\n        await updateDoc(doc(db, 'quotes', editingId), formData);\n      } else {\n        formData.quoteNo = `QT${1000 + quotes.length}`;\n        await addDoc(collection(db, 'quotes'), formData);\n      }\n\n      this.setState({\n        showForm: false,\n        editingId: null\n      });\n      this.fetchQuotes();\n    };\n\n    this.loadQuotePreview = q => {\n      this.setState({\n        selectedQuote: q,\n        previewMode: true\n      });\n    };\n\n    this.loadQuoteForEdit = quote => {\n      this.setState({\n        formData: { ...quote,\n          lineItems: Array.isArray(quote.lineItems) ? quote.lineItems : [] // Ensure array\n\n        },\n        editingId: quote.id,\n        showForm: true,\n        previewMode: false,\n        activeTab: 'co'\n      }, () => {\n        if (this.customerInputRef.current) {\n          this.customerInputRef.current.value = quote.customer;\n        }\n      });\n    };\n\n    this.convertToOrder = quote => {\n      // Save quote in sessionStorage (or navigate with state via router if you use react-router)\n      sessionStorage.setItem('quoteToConvert', JSON.stringify(quote));\n      this.props.history.push('/panelone/Order');\n    };\n\n    this.showQuotePDFWithOrg = async quote => {\n      var _orgSnap$docs$, _quote$billTo, _quote$shipTo;\n\n      if (!quote || !Array.isArray(quote.lineItems) || quote.lineItems.length === 0) {\n        alert(\"Quote data is incomplete.\");\n        return;\n      }\n\n      const orgSnap = await getDocs(collection(db, 'businessGroups'));\n      const org = ((_orgSnap$docs$ = orgSnap.docs[0]) === null || _orgSnap$docs$ === void 0 ? void 0 : _orgSnap$docs$.data()) || {};\n      const customer = this.state.customers.find(c => c.custshortName === quote.customer) || {};\n      const enrichedItems = quote.lineItems.map(item => {\n        const product = this.state.products.find(p => p.productId === item.itemCode) || {};\n        return { ...item,\n          ptshortName: product.ptshortName || '',\n          hsnCode: product.hsnCode || '',\n          uom: product.stockingUOM || '',\n          cgst: item.cgst || 0,\n          sgst: item.sgst || 0,\n          igst: item.igst || 0\n        };\n      }); // Calculate subtotal based on item.total\n\n      const subtotal = enrichedItems.reduce((sum, item) => sum + (parseFloat(item.total) || 0), 0);\n      const freightCharges = parseFloat(quote.freightCharges || 0);\n      const freightTax = parseFloat(quote.freighttaxAmount || 0);\n      const totalTaxAmount = parseFloat(quote.taxAmount || 0);\n      const grandTotal = parseFloat(quote.quoteValue || subtotal + totalTaxAmount);\n      const amountWords = `INR ${numberToWords(Math.floor(grandTotal))} Only`; // Build tax group breakdown\n\n      let taxBreakdown = {};\n      enrichedItems.forEach(item => {\n        const qty = parseFloat(item.qty || 0);\n        const unitPrice = parseFloat(item.unitPrice || 0);\n        const base = qty * unitPrice;\n\n        if (item.cgst) {\n          const key = `CGST ${item.cgst}%`;\n          taxBreakdown[key] = (taxBreakdown[key] || 0) + base * item.cgst / 100;\n        }\n\n        if (item.sgst) {\n          const key = `SGST ${item.sgst}%`;\n          taxBreakdown[key] = (taxBreakdown[key] || 0) + base * item.sgst / 100;\n        }\n\n        if (item.igst) {\n          const key = `IGST ${item.igst}%`;\n          taxBreakdown[key] = (taxBreakdown[key] || 0) + base * item.igst / 100;\n        }\n      });\n      if (freightTax > 0) taxBreakdown[\"Freight Tax\"] = freightTax;\n      const container = document.createElement('div');\n      container.id = 'pdf-preview-container';\n      container.style.width = '794px';\n      container.style.padding = '40px';\n      container.style.fontFamily = 'Arial';\n      container.innerHTML = `\n    <div style=\"display:flex; justify-content:space-between; align-items:center;\">\n      <img src=\"${org.logoUrl || ''}\" style=\"height:50px;\" />\n      <div style=\"font-size:18px; font-weight:bold;\">QUOTATION</div>\n    </div>\n    <hr/>\n    <div style=\"display:flex; justify-content:space-between; font-size:11px;\">\n      <div style=\"line-height:1.5; width:50%;\">\n        <b>${org.bgName || ''}</b><br/>\n        ${org.address || ''}<br/>\n        <b>Email:</b> ${org.email || ''}<br/>\n        <b>Website:</b> ${org.website || ''}<br/>\n        <b>GSTIN:</b> ${org.gstin || ''}\n      </div>\n      <table style=\"font-size:11px; text-align:left;\">\n        <tr><td><b>Quote No</b></td><td>: ${quote.quoteNo}</td></tr>\n        <tr><td><b>Quote Date</b></td><td>: ${quote.quoteDate}</td></tr>\n        <tr><td><b>Currency</b></td><td>: ${quote.currency || 'INR'}</td></tr>\n        <tr><td><b>Despatch</b></td><td>: ${quote.despatchMode || ''}</td></tr>\n      </table>\n    </div>\n\n    <div style=\"margin-top:15px; display:flex; justify-content:space-between; font-size:11px;\">\n      <div style=\"width:48%;\">\n        <b style=\"background:#011b56; color:#fff; display:block; padding:4px;\">Bill To</b>\n        <div style=\"border:1px solid #ccc; padding:6px;\">\n         <b>${quote.customer || ''}</b><br/>\n          ${((_quote$billTo = quote.billTo) === null || _quote$billTo === void 0 ? void 0 : _quote$billTo.replace(/\\n/g, '<br/>')) || ''}\n        </div>\n        <div style=\"font-size:10px; margin-top:6px;\">\n            <b>GSTIN:</b> ${customer.gstin || ''}<br/>\n            <b>Email:</b> ${customer.email || ''}<br/>\n            <b>Contact:</b> ${customer.contactPerson || ''}<br/>\n            <b>Phone:</b> ${customer.phone || ''}\n        </div>\n      </div>\n      <div style=\"width:48%;\">\n        <b style=\"background:#011b56; color:#fff; display:block; padding:4px;\">Ship To</b>\n        <div style=\"border:1px solid #ccc; padding:6px;\">\n         <b>${quote.customer || ''}</b><br/>\n          ${((_quote$shipTo = quote.shipTo) === null || _quote$shipTo === void 0 ? void 0 : _quote$shipTo.replace(/\\n/g, '<br/>')) || ''}\n        </div>\n      </div>\n    </div>\n\n    <table style=\"width:100%; border-collapse:collapse; margin-top:20px; font-size:10px;\">\n  <thead>\n    <tr style=\"background:#f4f6fa;\">\n      <th style=\"border:1px solid #011b56;\">Item Code</th>\n      <th style=\"border:1px solid #011b56;\">Description</th>\n      <th style=\"border:1px solid #011b56;\">HSN</th>\n      <th style=\"border:1px solid #011b56;\">UOM</th>\n      <th style=\"border:1px solid #011b56;\">Qty</th>\n      <th style=\"border:1px solid #011b56;\">Unit Price</th>\n      <th style=\"border:1px solid #011b56;\">GST%</th>\n      <th style=\"border:1px solid #011b56;\">Item Total</th>\n    </tr>\n  </thead>\n  <tbody>\n  ${enrichedItems.map(item => {\n        const gstLabel = Array.isArray(item.taxGroupNames) && item.taxGroupNames.length ? item.taxGroupNames.join(', ') : item.taxGroupName || item.taxId || '-';\n        return `\n      <tr>\n        <td style=\"border:1px solid #011b56;\">${item.itemCode}</td>\n        <td style=\"border:1px solid #011b56;\">${item.itemDescription}</td>\n        <td style=\"border:1px solid #011b56;\">${item.hsnCode}</td>\n        <td style=\"border:1px solid #011b56;\">${item.uom}</td>\n        <td style=\"border:1px solid #011b56;\">${item.qty}</td>\n        <td style=\"border:1px solid #011b56;\">${item.unitPrice}</td>\n        <td style=\"border:1px solid #011b56;\">${gstLabel}</td>\n        <td style=\"border:1px solid #011b56;\">${item.total}</td>\n      </tr>`;\n      }).join('')}\n\n  ${Object.entries(taxBreakdown).map(([key, val]) => `\n    <tr>\n      <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>${key}</b></td>\n      <td style=\"border:1px solid #011b56;\">${val.toFixed(2)}</td>\n    </tr>\n  `).join('')}\n\n  <tr>\n    <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>Total Tax Amount</b></td>\n    <td style=\"border:1px solid #011b56;\"><b>${totalTaxAmount.toFixed(2)}</b></td>\n  </tr>\n  <tr>\n    <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>Grand Total</b></td>\n    <td style=\"border:1px solid #011b56;\"><b>${grandTotal.toFixed(2)}</b></td>\n  </tr>\n</tbody>\n\n    </table>\n\n    <div style=\"margin-top:8px; font-size:11px;\"><b>Amount in Words:</b> ${amountWords}</div>\n    <div style=\"text-align:right; font-size:11px; margin-top:30px;\">For ${org.bgName}<br/><br/><br/>Authorized Signatory</div>\n    <div style=\"margin-top:20px; text-align:right; font-size:10px;\">Printed on ${new Date().toLocaleString()}</div>\n  `;\n      document.body.appendChild(container);\n      const canvas = await html2canvas(container, {\n        scale: 2,\n        useCORS: true\n      });\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'pt', 'a4');\n      const width = 595.28;\n      const height = canvas.height * width / canvas.width;\n      pdf.addImage(imgData, 'PNG', 0, 0, width, height);\n      document.body.removeChild(container);\n      const {\n        breakdownItems,\n        breakdownType\n      } = this.state;\n\n      if (breakdownItems && breakdownItems.length > 0) {\n        pdf.addPage();\n        let breakdownHtml = `\n  <div style=\"font-family:Arial; padding:30px; width:90%;\">\n    <h3 style=\"margin-bottom:10px; font-size:14px;\">Milestone Breakdown</h3>\n    \n\n    <table style=\"width:100%; border-collapse:collapse; margin-top:20px; font-size:13px;\">\n      <thead>\n        <tr style=\"background:#f4f6fa;\">\n          <th style=\"border:1px solid #011b56;\">S.No</th>\n          <th style=\"border:1px solid #011b56;\">Item ID</th>\n          <th style=\"border:1px solid #011b56;\">Desc</th>\n          <th style=\"border:1px solid #011b56;\">${breakdownType}</th>\n          <th style=\"border:1px solid #011b56;\">Last Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${breakdownItems.filter(bi => bi.selected).map(item => `\n          <tr>\n            <td style=\"border:1px solid #011b56; \">${item.sno}</td>\n            <td style=\"border:1px solid #011b56;\">${item.productId}</td>\n            <td style=\"border:1px solid #011b56; \">${item.desc}</td>\n            <td style=\"border:1px solid #011b56; \">${item.value} ${breakdownType === 'Percentage' ? '%' : '₹'}</td>\n            <td style=\"border:1px solid #011b56; \">${item.lastDate}</td>\n          </tr>\n        `).join('')}\n      </tbody>\n    </table>\n  </div>\n`;\n        const breakdownContainer = document.createElement('div');\n        breakdownContainer.innerHTML = breakdownHtml;\n        document.body.appendChild(breakdownContainer);\n        const breakdownCanvas = await html2canvas(breakdownContainer, {\n          scale: 2,\n          useCORS: true\n        });\n        const breakdownImg = breakdownCanvas.toDataURL('image/png');\n        pdf.addImage(breakdownImg, 'PNG', 0, 0, width, breakdownCanvas.height * width / breakdownCanvas.width);\n        document.body.removeChild(breakdownContainer);\n      }\n\n      const blob = pdf.output('blob');\n      const url = URL.createObjectURL(blob);\n      const newWin = window.open();\n      newWin.document.write(`\n    <html><head><title>Quote PDF Preview</title></head>\n    <body style=\"margin:0;\">\n      <iframe width=\"100%\" height=\"100%\" style=\"border:none;\" src=\"${url}\"></iframe>\n      <button onclick=\"document.querySelector('iframe').contentWindow.print()\" style=\"position:fixed;top:10px;right:110px;\"></button>\n      <a href=\"${url}\" download=\"Quote_${quote.quoteNo || 'PDF'}.pdf\" style=\"position:fixed;top:10px;right:10px;\"></a>\n    </body></html>\n  `);\n      newWin.document.close();\n    };\n\n    this.showOverlay = type => this.setState({\n      overlayType: type,\n      overlaySearch: ''\n    });\n\n    this.hideOverlay = () => this.setState({\n      overlayType: '',\n      overlaySearch: ''\n    });\n\n    this.selectOverlayValue = value => {\n      if (this.state.overlayType === 'customer') {\n        this.setState(prev => ({\n          formData: { ...prev.formData,\n            customer: value.custname || value.custcode || '',\n            // Use custname or custcode\n            billTo: this.formatAddress(value.billTo),\n            shipTo: this.formatAddress(value.shipTo),\n            currency: value.currency || '' // despatchMode: value.despatchMode || '', // No auto-fill for despatch mode\n            // paymentTerms: value.paymentTerms || '' // No auto-fill for payment terms\n\n          },\n          overlayType: '',\n          overlaySearch: ''\n        }), () => {\n          if (this.customerInputRef.current) {\n            this.customerInputRef.current.value = value.custname || value.custcode || '';\n          }\n        });\n      }\n    };\n\n    this.renderTaxOverlay = () => {\n      const {\n        taxGroups,\n        currentTaxLineIdx,\n        formData\n      } = this.state;\n      if (currentTaxLineIdx === null) return null;\n      const item = formData.lineItems[currentTaxLineIdx];\n      const selected = new Set(item.taxGroupNames || []);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          zIndex: 9999,\n          top: '10%',\n          left: '20%',\n          background: '#fff',\n          border: '1px solid #ccc',\n          padding: '20px',\n          boxShadow: '0 0 10px rgba(0,0,0,0.3)',\n          width: '800px',\n          maxHeight: '60vh',\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 7\n        }\n      }, \"Select Tax Groups\"), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-sm table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 24\n        }\n      }, \"Group\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 38\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 51\n        }\n      }, \"%\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 9\n        }\n      }, taxGroups.map(tg => /*#__PURE__*/React.createElement(\"tr\", {\n        key: tg.groupName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: selected.has(tg.groupName),\n        onChange: e => this.toggleTaxGroupSelection(tg.groupName, currentTaxLineIdx, e.target.checked),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 15\n        }\n      }, tg.groupName), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 15\n        }\n      }, tg.lineItems.map(li => li.component).join(', ')), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 15\n        }\n      }, tg.lineItems.map(li => li.percentOrAmt).join(', ')))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-sm btn-primary\",\n        onClick: () => this.setState({\n          showTaxOverlay: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 9\n        }\n      }, \"Done\")));\n    };\n\n    this.renderOverlay = () => {\n      const {\n        overlayType,\n        overlaySearch,\n        customers,\n        despatchModes,\n        paymentTerms\n      } = this.state;\n\n      const getFilteredRows = (list, nameKey = 'name', codeKey = 'shortName') => list.filter(item => (item[nameKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()) || (item[codeKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()));\n\n      const handleSelect = item => {\n        if (overlayType === 'customer') {\n          this.selectOverlayValue(item);\n        } else if (overlayType === 'despatchMode') {\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              despatchMode: item.name\n            },\n            overlayType: '',\n            overlaySearch: ''\n          }));\n        } else if (overlayType === 'paymentTerms') {\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              paymentTerms: item.name\n            },\n            overlayType: '',\n            overlaySearch: ''\n          }));\n        }\n      };\n\n      let title = '';\n      let headers = [];\n      let rows = [];\n\n      if (overlayType === 'customer') {\n        title = 'Select Customer';\n        headers = ['Name', 'Code', 'Short Name'];\n        rows = getFilteredRows(customers, 'custname', 'custcode');\n      } else if (overlayType === 'despatchMode') {\n        title = 'Select Despatch Mode';\n        headers = ['Name', 'Short Name'];\n        rows = getFilteredRows(despatchModes);\n      } else if (overlayType === 'paymentTerms') {\n        title = 'Select Payment Terms';\n        headers = ['Name', 'Short Name'];\n        rows = getFilteredRows(paymentTerms);\n      } else {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 9\n        }\n      }, title), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: `Search ${overlayType}...`,\n        value: overlaySearch,\n        onChange: e => this.setState({\n          overlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 15\n        }\n      }, headers.map((h, i) => /*#__PURE__*/React.createElement(\"th\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 40\n        }\n      }, h)))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 13\n        }\n      }, rows.map((item, i) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id || i,\n        onClick: () => handleSelect(item),\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 17\n        }\n      }, headers.map((h, j) => /*#__PURE__*/React.createElement(\"td\", {\n        key: j,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 21\n        }\n      }, overlayType === 'customer' ? h === 'Name' ? item.custname : h === 'Code' ? item.custcode : item.custshortName : h === 'Name' ? item.name : item.shortName)))), rows.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: headers.length,\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 19\n        }\n      }, \"No records found\"))))), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm mt-2\",\n        onClick: this.hideOverlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 9\n        }\n      }, \"Cancel\")));\n    };\n\n    this.renderProductOverlay = () => {\n      const {\n        products,\n        productOverlaySearch,\n        selectedProductIds\n      } = this.state;\n      const filtered = products.filter(p => (p.ptshortName || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) || (p.ptdescription || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) || (p.itemCode || '').toLowerCase().includes(productOverlaySearch.toLowerCase()));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 13\n        }\n      }, \"Select Products\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-success btn-sm\",\n        onClick: () => {\n          const selectedProducts = products.filter(p => this.state.selectedProductIds.includes(p.id));\n          this.setState(prev => ({\n            formData: { ...prev.formData,\n              lineItems: [...prev.formData.lineItems, ...selectedProducts.filter(p => !prev.formData.lineItems.some(item => item.id === p.id)).map(p => ({\n                id: p.id,\n                itemCode: p.productId || '',\n                itemDescription: p.ptdescription || '',\n                itemType: p.itemType || '',\n                materialType: p.materialType || '',\n                onHand: p.onHand || 0,\n                taxGroup: p.taxGroup || '',\n                taxGroupName: p.taxGroup || '',\n                custPartNo: p.custPartNo || '',\n                hsnNo: p.hsnNo || '',\n                unitPrice: p.unitPrice || 0,\n                qty: 1,\n                total: (p.unitPrice || 0).toFixed(2)\n              }))]\n            },\n            productOverlayVisible: false,\n            selectedProductIds: []\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 13\n        }\n      }, \"Add Selected\")), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-2\",\n        placeholder: \"Search products...\",\n        value: productOverlaySearch,\n        onChange: e => this.setState({\n          productOverlaySearch: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxHeight: 300,\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered table-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 19\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 19\n        }\n      }, \"Item Desc\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 19\n        }\n      }, \"Item Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 19\n        }\n      }, \"Material Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 19\n        }\n      }, \"On Hand\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 19\n        }\n      }, \"Tax Grp\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 19\n        }\n      }, \"Cust Part No\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 15\n        }\n      }, filtered.map(p => /*#__PURE__*/React.createElement(\"tr\", {\n        key: p.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: selectedProductIds.includes(p.id),\n        onChange: e => {\n          const checked = e.target.checked;\n          this.setState(prev => ({\n            selectedProductIds: checked ? [...prev.selectedProductIds, p.id] : prev.selectedProductIds.filter(id => id !== p.id)\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 21\n        }\n      }, p.productId), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 21\n        }\n      }, p.ptdescription || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 21\n        }\n      }, p.itemType || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 21\n        }\n      }, p.materialType || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 21\n        }\n      }, p.onHand || 0), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 21\n        }\n      }, p.taxGroup || ''), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 21\n        }\n      }, p.custPartNo || ''))), filtered.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"8\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 21\n        }\n      }, \"No products found\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 837,\n          columnNumber: 13\n        }\n      }, \"Page 1 of 1\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        onClick: () => this.setState({\n          productOverlayVisible: false,\n          selectedProductIds: []\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 13\n        }\n      }, \"Cancel\"))));\n    };\n\n    this.renderBreakdownTab = () => {\n      const {\n        breakdownItems,\n        breakdownType,\n        formData\n      } = this.state; // Get item totals from lineItems (with tax)\n\n      const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\n        acc[li.itemCode] = parseFloat(li.total || 0);\n        return acc;\n      }, {}); // Sum of all item totals\n\n      const sumOfItemTotals = Object.values(itemTotals).reduce((sum, val) => sum + val, 0);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 7\n        }\n      }, \"Add Milestone\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 30\n        }\n      }, \"Quote Value:\"), \" \", formData.quoteValue), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 30\n        }\n      }, \"Tax Amount:\"), \" \", formData.taxAmount), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 30\n        }\n      }, \"Sum of Item Totals:\"), \" \", sumOfItemTotals.toFixed(2))), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 13\n        }\n      }, \"S.No\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 13\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 13\n        }\n      }, \"Desc\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 15\n        }\n      }, \"Per/Amt\"), /*#__PURE__*/React.createElement(\"select\", {\n        value: breakdownType,\n        onChange: e => this.handleBreakdownTypeChange(e.target.value),\n        className: \"form-control form-control-sm font-weight-bold\",\n        style: {\n          fontWeight: 'bold',\n          display: 'inline-block',\n          width: 'auto',\n          marginLeft: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Percentage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 17\n        }\n      }, \"%\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Amount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 17\n        }\n      }, \"\\u20B9\"))), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 13\n        }\n      }, \"Due Date\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 885,\n          columnNumber: 15\n        }\n      }, \"Item Total\")), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 887,\n          columnNumber: 13\n        }\n      }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 9\n        }\n      }, breakdownItems.map((item, idx) => {\n        // Main item total (with tax) from lineItems\n        const mainItemTotal = itemTotals[item.productId] || 0; // Sub-product sum logic\n\n        const subTotal = (item.subProducts || []).reduce((sum, sp) => {\n          if (sp.type === 'Amount') return sum + parseFloat(sp.value || 0);\n          if (sp.type === 'Percentage') return sum + mainItemTotal * parseFloat(sp.value || 0) / 100;\n          return sum;\n        }, 0);\n        const isSatisfied = Math.abs(mainItemTotal - subTotal) < 0.01 && subTotal > 0;\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          key: idx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 905,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 906,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 907,\n            columnNumber: 19\n          }\n        }, item.sno), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 19\n          }\n        }, item.productId), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 909,\n            columnNumber: 19\n          }\n        }, item.desc), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 910,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"input-group input-group-sm\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 911,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"input-group-prepend\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 912,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"input-group-text\",\n          style: {\n            fontWeight: 'bold'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 913,\n            columnNumber: 25\n          }\n        }, breakdownType === 'Percentage' ? '%' : '₹')), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          value: item.value,\n          onChange: e => {\n            this.handleBreakdownValueChange(idx, e.target.value);\n            this.saveBreakdownToSession();\n          },\n          placeholder: breakdownType === 'Percentage' ? 'Enter %' : 'Enter Amt',\n          style: {\n            fontWeight: 'bold'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 917,\n            columnNumber: 23\n          }\n        }))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 930,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"date\",\n          className: \"form-control form-control-sm\",\n          value: item.lastDate,\n          onChange: e => {\n            this.handleBreakdownDateChange(idx, e.target.value);\n            this.saveBreakdownToSession();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 931,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 941,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: isSatisfied ? 'green' : 'red',\n            fontWeight: 'bold'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 942,\n            columnNumber: 21\n          }\n        }, mainItemTotal.toFixed(2))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 946,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm btn-outline-primary\",\n          onClick: () => this.setState({\n            showSubProductDialog: true,\n            currentBreakdownIdx: idx\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 947,\n            columnNumber: 21\n          }\n        }, \"+ Add Milestone\"))), (item.subProducts || []).map((sp, spIdx) => {\n          // Sub-product item total calculation\n          let spTotal = 0;\n          if (sp.type === 'Amount') spTotal = parseFloat(sp.value || 0);else if (sp.type === 'Percentage') spTotal = mainItemTotal * parseFloat(sp.value || 0) / 100;\n          return /*#__PURE__*/React.createElement(\"tr\", {\n            key: spIdx,\n            style: {\n              background: '#f9f9f9'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 962,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 963,\n              columnNumber: 23\n            }\n          }), /*#__PURE__*/React.createElement(\"td\", {\n            colSpan: 2,\n            style: {\n              paddingLeft: 40\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 964,\n              columnNumber: 23\n            }\n          }, \"\\u2192 \", sp.name), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 965,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              fontWeight: 'bold'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 966,\n              columnNumber: 25\n            }\n          }, sp.type === 'Amount' ? `₹${sp.value}` : `${sp.value}%`)), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 970,\n              columnNumber: 23\n            }\n          }, sp.dueDate), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 971,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              fontWeight: 'bold'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 972,\n              columnNumber: 25\n            }\n          }, spTotal.toFixed(2))), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 974,\n              columnNumber: 23\n            }\n          }));\n        }));\n      }))));\n    };\n\n    this.renderSubProductDialog = () => {\n      const {\n        showSubProductDialog,\n        subProductForm\n      } = this.state;\n      if (!showSubProductDialog) return null;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay\",\n        onClick: e => e.stopPropagation(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 991,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-overlay-content\",\n        style: {\n          width: 400\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 992,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 993,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 994,\n          columnNumber: 11\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control\",\n        value: subProductForm.name,\n        onChange: e => this.setState({\n          subProductForm: { ...subProductForm,\n            name: e.target.value\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 995,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 997,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 998,\n          columnNumber: 11\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control\",\n        value: subProductForm.type,\n        onChange: e => this.setState({\n          subProductForm: { ...subProductForm,\n            type: e.target.value\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 999,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Amount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1000,\n          columnNumber: 13\n        }\n      }, \"Amount\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Percentage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1001,\n          columnNumber: 13\n        }\n      }, \"Percentage\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1005,\n          columnNumber: 11\n        }\n      }, subProductForm.type), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"number\",\n        value: subProductForm.value,\n        onChange: e => this.setState({\n          subProductForm: { ...subProductForm,\n            value: e.target.value\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1006,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1008,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1009,\n          columnNumber: 11\n        }\n      }, \"Due Date\"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"date\",\n        value: subProductForm.dueDate,\n        onChange: e => this.setState({\n          subProductForm: { ...subProductForm,\n            dueDate: e.target.value\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1010,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1012,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary mr-2\",\n        onClick: () => this.setState({\n          showSubProductDialog: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1013,\n          columnNumber: 11\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: e => {\n          e.preventDefault(); //  this prevents the form submission\n\n          this.handleAddSubProduct();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1015,\n          columnNumber: 11\n        }\n      }, \"Add\"))));\n    };\n\n    this.handleAddSubProduct = () => {\n      const {\n        currentBreakdownIdx,\n        subProductForm,\n        breakdownItems\n      } = this.state;\n      if (!subProductForm.name || !subProductForm.value) return;\n      const items = [...breakdownItems];\n      const subProducts = items[currentBreakdownIdx].subProducts || [];\n      subProducts.push({ ...subProductForm\n      });\n      items[currentBreakdownIdx].subProducts = subProducts;\n      this.setState({\n        breakdownItems: items,\n        showSubProductDialog: false,\n        subProductForm: {\n          name: '',\n          value: '',\n          type: 'Amount',\n          dueDate: ''\n        }\n      }, this.saveBreakdownToSession);\n    };\n\n    this.renderQuoteTable = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-4 full-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1039,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1040,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1041,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1042,\n        columnNumber: 11\n      }\n    }, \"Quotes\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.setState({\n        showForm: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1043,\n        columnNumber: 11\n      }\n    }, \"+ Add Quote\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1045,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1046,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1047,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1048,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1049,\n        columnNumber: 17\n      }\n    }, \"Quote No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1050,\n        columnNumber: 17\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1051,\n        columnNumber: 17\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1052,\n        columnNumber: 17\n      }\n    }, \"Quote Value\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1053,\n        columnNumber: 17\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1054,\n        columnNumber: 17\n      }\n    }, \"Print\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1057,\n        columnNumber: 13\n      }\n    }, this.state.quotes.map((q, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1059,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1060,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-link p-0\",\n      onClick: () => this.loadQuotePreview(q),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1061,\n        columnNumber: 21\n      }\n    }, q.quoteNo)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1068,\n        columnNumber: 19\n      }\n    }, q.customer), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1069,\n        columnNumber: 19\n      }\n    }, q.quoteDate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1070,\n        columnNumber: 19\n      }\n    }, q.quoteValue), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1071,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"badge badge-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1071,\n        columnNumber: 23\n      }\n    }, q.status)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1072,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"mdi mdi-printer menu-icon\",\n      onClick: () => this.showQuotePDFWithOrg(q),\n      style: {\n        fontSize: '24px',\n        color: '#2196F3',\n        cursor: 'pointer'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1073,\n        columnNumber: 19\n      }\n    })))), this.state.quotes.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1084,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"6\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1084,\n        columnNumber: 21\n      }\n    }, \"No quotes found.\")))))));\n\n    this.renderQuoteForm = () => {\n      const {\n        formData,\n        overlayType,\n        productOverlayVisible,\n        showTaxOverlay,\n        taxGroups,\n        recalculateTotals\n      } = this.state;\n      const isFOB = formData.impExp === 'FOB';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1098,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card full-height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1099,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: 'auto',\n          padding: '24px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1100,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1101,\n          columnNumber: 13\n        }\n      }, \"Quote Form\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"nav nav-tabs\",\n        role: \"tablist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1102,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1103,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'co' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'co'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1104,\n          columnNumber: 17\n        }\n      }, \"CO Details\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1106,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'breakdown' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'breakdown'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1107,\n          columnNumber: 15\n        }\n      }, \"Breakdown\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1109,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`,\n        onClick: () => this.setState({\n          activeTab: 'commercial'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1110,\n          columnNumber: 17\n        }\n      }, \"Commercial Terms\"))), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"form-sample\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1113,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tab-content pt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1114,\n          columnNumber: 15\n        }\n      }, this.state.activeTab === 'co' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1117,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1118,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1119,\n          columnNumber: 25\n        }\n      }, \"Quote No\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.quoteNo,\n        onChange: e => this.handleInputChange('quoteNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1120,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1122,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1123,\n          columnNumber: 25\n        }\n      }, \"Quote Date\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"date\",\n        className: \"form-control form-control-sm\",\n        value: formData.quoteDate,\n        onChange: e => this.handleInputChange('quoteDate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1124,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1126,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1127,\n          columnNumber: 25\n        }\n      }, \"Quote Type\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.quoteType,\n        onChange: e => this.handleInputChange('quoteType', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1128,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1129,\n          columnNumber: 27\n        }\n      }, \"Standard\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1130,\n          columnNumber: 27\n        }\n      }, \"Manual\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1133,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1134,\n          columnNumber: 25\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.status,\n        style: {\n          backgroundColor: '#fff'\n        },\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1135,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1138,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1139,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1140,\n          columnNumber: 25\n        }\n      }, \"Customer\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1141,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Choose Customer\",\n        ref: this.customerInputRef,\n        value: formData.customer,\n        readOnly: true,\n        onClick: () => this.showOverlay('customer'),\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1142,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1152,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        onClick: () => this.showOverlay('customer'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1153,\n          columnNumber: 29\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1157,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1158,\n          columnNumber: 25\n        }\n      }, \"IMP/EXP\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: formData.impExp,\n        onChange: e => this.handleInputChange('impExp', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1159,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1164,\n          columnNumber: 27\n        }\n      }, \"None\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1165,\n          columnNumber: 27\n        }\n      }, \"COB\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1166,\n          columnNumber: 27\n        }\n      }, \"FOB\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1167,\n          columnNumber: 27\n        }\n      }, \"CIF\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1170,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1171,\n          columnNumber: 25\n        }\n      }, \"Ref No.\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.qrefNo,\n        onChange: e => this.handleInputChange('qrefNo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1172,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1179,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1180,\n          columnNumber: 25\n        }\n      }, \"Choose\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1181,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check mr-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1182,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        className: \"form-check-input\",\n        name: \"choose\",\n        id: \"chooseService\",\n        value: \"Service\",\n        checked: formData.choose === 'Service',\n        onChange: e => this.handleInputChange('choose', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1183,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"chooseService\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1184,\n          columnNumber: 29\n        }\n      }, \"Service\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1186,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        className: \"form-check-input\",\n        name: \"choose\",\n        id: \"chooseProduct\",\n        value: \"Product\",\n        checked: formData.choose === 'Product',\n        onChange: e => this.handleInputChange('choose', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1187,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"chooseProduct\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1188,\n          columnNumber: 29\n        }\n      }, \"Product\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1193,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1194,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1195,\n          columnNumber: 25\n        }\n      }, \"Currency\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.currency,\n        style: {\n          backgroundColor: '#fff'\n        },\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1196,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1204,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1205,\n          columnNumber: 25\n        }\n      }, \"Conversion Rate\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: formData.conversionRate,\n        onChange: e => this.handleInputChange('conversionRate', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1206,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1213,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1214,\n          columnNumber: 25\n        }\n      }, \"Tax Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxAmount,\n        onChange: e => this.handleInputChange('taxAmount', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1215,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1223,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1224,\n          columnNumber: 25\n        }\n      }, \"Quote Value\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.quoteValue,\n        onChange: e => this.handleInputChange('quoteValue', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1225,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1235,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1236,\n          columnNumber: 29\n        }\n      }, \"Line Item\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-sm\",\n        onClick: () => this.setState({\n          productOverlayVisible: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1237,\n          columnNumber: 29\n        }\n      }, \"+ Add Product\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-responsive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1241,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1242,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1243,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1244,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1245,\n          columnNumber: 15\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1246,\n          columnNumber: 15\n        }\n      }, \"Item Desc\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1247,\n          columnNumber: 15\n        }\n      }, \"Cust Part No\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1248,\n          columnNumber: 15\n        }\n      }, \"HSN No\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1249,\n          columnNumber: 15\n        }\n      }, \"UOM\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1250,\n          columnNumber: 15\n        }\n      }, \"On Hand\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1251,\n          columnNumber: 15\n        }\n      }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1252,\n          columnNumber: 15\n        }\n      }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1253,\n          columnNumber: 15\n        }\n      }, \"Tax Id\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1254,\n          columnNumber: 15\n        }\n      }, \"Item Total\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1257,\n          columnNumber: 11\n        }\n      }, formData.lineItems.map((item, idx) => {\n        const itemTotal = item.unitPrice * item.qty;\n        const taxDetails = getTaxDetailsFromGroup(item.taxGroupName, this.state.taxGroups);\n        const taxAmt = itemTotal * taxDetails.totalPercent / 100 + itemTotal * taxDetails.totalAmount;\n        const totalWithTax = itemTotal + taxAmt;\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: item.id || idx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1266,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1267,\n            columnNumber: 19\n          }\n        }, item.itemCode), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1268,\n            columnNumber: 19\n          }\n        }, item.itemDescription), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1269,\n            columnNumber: 19\n          }\n        }, item.custPartNo), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1270,\n            columnNumber: 19\n          }\n        }, item.hsnNo), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1271,\n            columnNumber: 19\n          }\n        }, item.uom), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1272,\n            columnNumber: 19\n          }\n        }, item.onHand), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1273,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          value: item.unitPrice,\n          onChange: e => this.handleLineItemChange(idx, 'unitPrice', e.target.value),\n          style: {\n            width: 80\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1274,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1281,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          value: item.qty,\n          onChange: e => this.handleLineItemChange(idx, 'qty', e.target.value),\n          style: {\n            width: 60\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1282,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1290,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-outline-secondary btn-sm btn-rounded btn-icon\",\n          style: {\n            padding: '2px 6px',\n            fontSize: '12px',\n            lineHeight: '1'\n          },\n          onClick: () => this.setState({\n            showTaxOverlay: true,\n            currentTaxLineIdx: idx\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1291,\n            columnNumber: 19\n          }\n        }, \"+\"), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            fontSize: '13px',\n            marginTop: '4px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1299,\n            columnNumber: 19\n          }\n        }, (item.taxGroupNames || []).join(', ') || '-')), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1303,\n            columnNumber: 15\n          }\n        }, parseFloat(item.total || 0).toFixed(2)));\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1314,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1315,\n          columnNumber: 29\n        }\n      }, \"Page 1 of 1\"))), this.state.activeTab === 'commercial' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1322,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1323,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1324,\n          columnNumber: 25\n        }\n      }, \"Bill To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"3\",\n        value: formData.billTo,\n        onChange: e => this.handleInputChange('billTo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1325,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1332,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1333,\n          columnNumber: 25\n        }\n      }, \"Ship To\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control form-control-sm\",\n        rows: \"3\",\n        value: formData.shipTo,\n        onChange: e => this.handleInputChange('shipTo', e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1334,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1342,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1343,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1344,\n          columnNumber: 3\n        }\n      }, \"Despatch Mode\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1345,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: formData.despatchMode,\n        readOnly: true,\n        onClick: () => !isFOB && this.showOverlay('despatchMode'),\n        style: {\n          cursor: isFOB ? 'not-allowed' : 'pointer',\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1346,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1354,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        disabled: isFOB,\n        onClick: () => this.showOverlay('despatchMode'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1355,\n          columnNumber: 7\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1367,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1368,\n          columnNumber: 3\n        }\n      }, \"Payment Terms\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1369,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: formData.paymentTerms,\n        readOnly: true,\n        onClick: () => !isFOB && this.showOverlay('paymentTerms'),\n        style: {\n          cursor: isFOB ? 'not-allowed' : 'pointer',\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1370,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1378,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary btn-sm\",\n        type: \"button\",\n        disabled: isFOB,\n        onClick: () => this.showOverlay('paymentTerms'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1379,\n          columnNumber: 7\n        }\n      }, \"Select\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1391,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1392,\n          columnNumber: 25\n        }\n      }, \"Freight Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.freightCharges,\n        onChange: e => this.handleInputChange('freightCharges', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1393,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1402,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1403,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1404,\n          columnNumber: 25\n        }\n      }, \"Tax %\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.taxPercent,\n        onChange: e => this.handleInputChange('taxPercent', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1405,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1413,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1414,\n          columnNumber: 25\n        }\n      }, \"Freight Tax Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.freighttaxAmount,\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1415,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1422,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1423,\n          columnNumber: 25\n        }\n      }, \"Packing Charges\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: formData.packingCharges,\n        onChange: e => this.handleInputChange('packingCharges', e.target.value),\n        readOnly: isFOB // Read-only if FOB\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1424,\n          columnNumber: 25\n        }\n      })))), this.state.activeTab === 'breakdown' && this.renderBreakdownTab()), this.renderSubProductDialog(), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fixed-card-footer text-right p-3 border-top bg-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1439,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1440,\n          columnNumber: 17\n        }\n      }, \"Save All Details\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: () => this.setState({\n          showForm: false,\n          editingId: null\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1441,\n          columnNumber: 17\n        }\n      }, \"Cancel\"))), overlayType && this.renderOverlay(), productOverlayVisible && this.renderProductOverlay(), this.state.showTaxOverlay && this.renderTaxOverlay())));\n    };\n\n    this.renderQuotePreview = () => {\n      var _q$lineItems;\n\n      const q = this.state.selectedQuote;\n      if (!q) return null;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card mt-4 full-height p-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1465,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1466,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1467,\n          columnNumber: 9\n        }\n      }, \"Quote Preview - \", q.quoteNo), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1468,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-info mr-2\",\n        onClick: () => this.loadQuoteForEdit(q),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1469,\n          columnNumber: 11\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-success\",\n        onClick: () => this.convertToOrder(q),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1470,\n          columnNumber: 11\n        }\n      }, \"Convert to Order\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1473,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1474,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1474,\n          columnNumber: 35\n        }\n      }, \"Customer:\"), \" \", q.customer), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1475,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1475,\n          columnNumber: 35\n        }\n      }, \"Date:\"), \" \", q.quoteDate), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1476,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1476,\n          columnNumber: 35\n        }\n      }, \"Status:\"), \" \", q.status)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1478,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1479,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1479,\n          columnNumber: 35\n        }\n      }, \"Bill To:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1479,\n          columnNumber: 50\n        }\n      }), q.billTo), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1480,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1480,\n          columnNumber: 35\n        }\n      }, \"Ship To:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1480,\n          columnNumber: 50\n        }\n      }), q.shipTo)), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1482,\n          columnNumber: 7\n        }\n      }, \"Line Items\"), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1483,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1484,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1485,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1486,\n          columnNumber: 13\n        }\n      }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1486,\n          columnNumber: 31\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1486,\n          columnNumber: 51\n        }\n      }, \"Qty\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1486,\n          columnNumber: 63\n        }\n      }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1486,\n          columnNumber: 82\n        }\n      }, \"Total\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1489,\n          columnNumber: 9\n        }\n      }, (_q$lineItems = q.lineItems) === null || _q$lineItems === void 0 ? void 0 : _q$lineItems.map((item, i) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1491,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1492,\n          columnNumber: 15\n        }\n      }, item.itemCode), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1493,\n          columnNumber: 15\n        }\n      }, item.itemDescription), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1494,\n          columnNumber: 15\n        }\n      }, item.qty), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1495,\n          columnNumber: 15\n        }\n      }, item.unitPrice), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1496,\n          columnNumber: 15\n        }\n      }, item.total))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1501,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1501,\n          columnNumber: 35\n        }\n      }, \"Total:\"), \" \", q.quoteValue), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary mt-3\",\n        onClick: () => this.setState({\n          previewMode: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1502,\n          columnNumber: 7\n        }\n      }, \"Back to List\"));\n    };\n  }\n\n  componentDidMount() {\n    bsCustomFileInput.init();\n    this.fetchQuotes();\n    this.fetchCustomers();\n    this.fetchProducts();\n    this.fetchDespatchModes();\n    this.fetchPaymentTerms();\n    this.fetchTaxGroups();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevLineItems = prevState.formData.lineItems || [];\n    const currLineItems = this.state.formData.lineItems || [];\n\n    if (prevLineItems.length !== currLineItems.length) {\n      const prevBreakdownMap = {};\n      (this.state.breakdownItems || []).forEach(bi => {\n        prevBreakdownMap[bi.productId] = bi;\n      });\n      this.setState({\n        breakdownItems: currLineItems.map((li, idx) => {\n          var _prevBreakdownMap$li$, _prevBreakdownMap$li$2, _prevBreakdownMap$li$3;\n\n          return {\n            sno: idx + 1,\n            productId: li.itemCode,\n            desc: li.itemDescription,\n            value: ((_prevBreakdownMap$li$ = prevBreakdownMap[li.itemCode]) === null || _prevBreakdownMap$li$ === void 0 ? void 0 : _prevBreakdownMap$li$.value) || '',\n            lastDate: ((_prevBreakdownMap$li$2 = prevBreakdownMap[li.itemCode]) === null || _prevBreakdownMap$li$2 === void 0 ? void 0 : _prevBreakdownMap$li$2.lastDate) || '',\n            subProducts: ((_prevBreakdownMap$li$3 = prevBreakdownMap[li.itemCode]) === null || _prevBreakdownMap$li$3 === void 0 ? void 0 : _prevBreakdownMap$li$3.subProducts) || []\n          };\n        })\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1509,\n        columnNumber: 7\n      }\n    }, this.state.previewMode ? this.renderQuotePreview() : this.state.showForm ? this.renderQuoteForm() : this.renderQuoteTable());\n  }\n\n}\n\nexport default withRouter(Quote);","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/panelone/Quote.js"],"names":["React","Component","Form","bsCustomFileInput","db","collection","getDocs","addDoc","doc","updateDoc","withRouter","html2canvas","jsPDF","recalculateTotals","getTaxDetailsFromGroup","ToWords","ToWordsConstructor","default","toWords","localeCode","converterOptions","currency","ignoreDecimal","numberToWords","amount","convert","Quote","state","activeTab","quotes","customers","products","despatchModes","paymentTerms","showForm","showTaxOverlay","currentTaxLineIdx","editingId","overlayType","overlaySearch","productOverlayVisible","productOverlaySearch","selectedProductIds","selectedTaxGroups","taxComponents","taxGroups","previewMode","selectedQuote","breakdownItems","breakdownType","breakdownSelectAll","showSubProductDialog","currentBreakdownIdx","subProductForm","name","value","type","dueDate","formData","quoteNo","quoteDate","Date","toISOString","split","quoteType","customer","status","choose","qrefNo","impExp","conversionRate","taxAmount","quoteValue","billTo","shipTo","despatchMode","freightCharges","freighttaxAmount","taxPercent","packingCharges","lineItems","customerInputRef","createRef","formatAddress","addr","address","city","country","filter","Boolean","join","zip","handleLineItemChange","idx","field","updatedItems","updatedLineItems","setState","prev","fetchTaxGroups","snap","data","docs","map","id","fetchQuotes","reverse","fetchCustomers","fetchProducts","fetchDespatchModes","fetchPaymentTerms","toggleTaxGroupSelection","groupName","lineIdx","checked","item","taxGroupNames","Array","isArray","includes","push","g","taxGroupName","handleInputChange","handleBreakdownSelectAll","selected","handleBreakdownRowSelect","items","handleBreakdownTypeChange","handleBreakdownValueChange","handleBreakdownDateChange","lastDate","saveBreakdownToSession","sessionStorage","setItem","JSON","stringify","loadBreakdownFromSession","getItem","parse","handleSubmit","e","preventDefault","alert","length","loadQuotePreview","q","loadQuoteForEdit","quote","current","convertToOrder","props","history","showQuotePDFWithOrg","orgSnap","org","find","c","custshortName","enrichedItems","product","p","productId","itemCode","ptshortName","hsnCode","uom","stockingUOM","cgst","sgst","igst","subtotal","reduce","sum","parseFloat","total","freightTax","totalTaxAmount","grandTotal","amountWords","Math","floor","taxBreakdown","forEach","qty","unitPrice","base","key","container","document","createElement","style","width","padding","fontFamily","innerHTML","logoUrl","bgName","email","website","gstin","replace","contactPerson","phone","gstLabel","taxId","itemDescription","Object","entries","val","toFixed","toLocaleString","body","appendChild","canvas","scale","useCORS","imgData","toDataURL","pdf","height","addImage","removeChild","addPage","breakdownHtml","bi","sno","desc","breakdownContainer","breakdownCanvas","breakdownImg","blob","output","url","URL","createObjectURL","newWin","window","open","write","close","showOverlay","hideOverlay","selectOverlayValue","custname","custcode","renderTaxOverlay","Set","position","zIndex","top","left","background","border","boxShadow","maxHeight","overflowY","tg","has","target","li","component","percentOrAmt","renderOverlay","getFilteredRows","list","nameKey","codeKey","toLowerCase","handleSelect","title","headers","rows","h","i","cursor","j","shortName","renderProductOverlay","filtered","ptdescription","selectedProducts","some","itemType","materialType","onHand","taxGroup","custPartNo","hsnNo","renderBreakdownTab","itemTotals","acc","sumOfItemTotals","values","fontWeight","display","marginLeft","mainItemTotal","subTotal","subProducts","sp","isSatisfied","abs","color","spIdx","spTotal","paddingLeft","renderSubProductDialog","stopPropagation","handleAddSubProduct","renderQuoteTable","fontSize","renderQuoteForm","isFOB","flex","backgroundColor","itemTotal","taxDetails","taxAmt","totalPercent","totalAmount","totalWithTax","lineHeight","marginTop","renderQuotePreview","componentDidMount","init","componentDidUpdate","prevProps","prevState","prevLineItems","currLineItems","prevBreakdownMap","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport bsCustomFileInput from 'bs-custom-file-input';\r\nimport { db } from '../../firebase';\r\nimport { collection, getDocs, addDoc, doc, updateDoc } from 'firebase/firestore';\r\nimport { withRouter } from 'react-router-dom';\r\nimport html2canvas from 'html2canvas';\r\nimport { jsPDF } from 'jspdf';\r\nimport { recalculateTotals, getTaxDetailsFromGroup } from './calculation';\r\nimport ToWords from 'to-words';\r\n\r\n\r\nconst ToWordsConstructor = ToWords.default || ToWords;\r\nconst toWords = new ToWordsConstructor({\r\n  localeCode: 'en-IN',\r\n  converterOptions: {\r\n    currency: true,\r\n    ignoreDecimal: true,\r\n  },\r\n});\r\nconst numberToWords = (amount) => {\r\n  return `INR ${toWords.convert(amount)} Only`;\r\n};\r\n\r\n\r\nclass Quote extends Component {\r\n  state = {\r\n    activeTab: 'co',\r\n    quotes: [],\r\n    customers: [],\r\n    products: [],\r\n    despatchModes: [],\r\n    paymentTerms: [],\r\n    showForm: false,\r\n    showTaxOverlay: false,\r\n    currentTaxLineIdx: null,\r\n    editingId: null,\r\n    overlayType: '',\r\n    overlaySearch: '',\r\n    productOverlayVisible: false,\r\n    productOverlaySearch: '',\r\n    selectedProductIds: [],\r\n    selectedTaxGroups: [],\r\n    taxComponents: [],\r\n    taxGroups:[],\r\n    previewMode: false,\r\n    selectedQuote: null,\r\n    breakdownItems: [], \r\n    breakdownType: 'Percentage',\r\n    breakdownSelectAll: false,\r\n    showSubProductDialog: false,\r\n    currentBreakdownIdx: null,\r\n    subProductForm: { name: '', value: '', type: 'Amount', dueDate: '' },\r\n    formData: {\r\n      quoteNo: '',\r\n      quoteDate: new Date().toISOString().split('T')[0],\r\n      quoteType: 'Standard',\r\n      customer: '',\r\n      status: 'Entered', // Static 'Entered'\r\n      choose: 'Service',\r\n      qrefNo: '',\r\n      impExp: 'None',\r\n      currency: '',\r\n      conversionRate: '',\r\n      taxAmount: '',\r\n      quoteValue: '',\r\n      billTo: '',\r\n      shipTo: '',\r\n      despatchMode: 'By Air',\r\n      paymentTerms: '',\r\n      freightCharges: '',\r\n      freighttaxAmount: '',\r\n      taxPercent: '',\r\n      packingCharges: '',\r\n      lineItems: [],\r\n    }\r\n  };\r\n  customerInputRef = React.createRef();\r\n\r\n  // Helper to format address for Bill To / Ship To\r\n  formatAddress = (addr) => {\r\n    if (!addr) return '';\r\n    if (typeof addr === 'string') return addr;\r\n    return [\r\n      addr.address,\r\n      [addr.city, addr.state, addr.country].filter(Boolean).join(', '),\r\n      addr.zip\r\n    ].filter(Boolean).join('\\n');\r\n  };\r\n\r\n  componentDidMount() {\r\n    bsCustomFileInput.init();\r\n    this.fetchQuotes();\r\n    this.fetchCustomers();\r\n    this.fetchProducts();\r\n    this.fetchDespatchModes();\r\n    this.fetchPaymentTerms();\r\n    this.fetchTaxGroups();\r\n  }\r\nhandleLineItemChange = (idx, field, value) => {\r\n  const updatedItems = [...this.state.formData.lineItems];\r\n  updatedItems[idx] = { ...updatedItems[idx], [field]: value };\r\n  const { updatedLineItems, freighttaxAmount, taxAmount, quoteValue } = recalculateTotals({\r\n    lineItems: updatedItems,\r\n    freightCharges: this.state.formData.freightCharges,\r\n    packingCharges: this.state.formData.packingCharges,\r\n    taxPercent: this.state.formData.taxPercent,\r\n    taxGroups: this.state.taxGroups\r\n  });\r\n  this.setState(prev => ({\r\n    formData: {\r\n      ...prev.formData,\r\n      lineItems: updatedLineItems,\r\n      freighttaxAmount,\r\n      taxAmount,\r\n      quoteValue\r\n    }\r\n  }));\r\n};\r\n\r\ncomponentDidUpdate(prevProps, prevState) {\r\n  const prevLineItems = prevState.formData.lineItems || [];\r\n  const currLineItems = this.state.formData.lineItems || [];\r\n  if (prevLineItems.length !== currLineItems.length) {\r\n    const prevBreakdownMap = {};\r\n    (this.state.breakdownItems || []).forEach(bi => {\r\n      prevBreakdownMap[bi.productId] = bi;\r\n    });\r\n    this.setState({\r\n      breakdownItems: currLineItems.map((li, idx) => ({\r\n        sno: idx + 1,\r\n        productId: li.itemCode,\r\n        desc: li.itemDescription,\r\n        value: prevBreakdownMap[li.itemCode]?.value || '',\r\n        lastDate: prevBreakdownMap[li.itemCode]?.lastDate || '',\r\n        subProducts: prevBreakdownMap[li.itemCode]?.subProducts || []\r\n      }))\r\n    });\r\n  }\r\n}\r\n\r\nfetchTaxGroups = async () => {\r\n  const snap = await getDocs(collection(db, 'taxGroups'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ taxGroups: data });\r\n};\r\n\r\n\r\n  fetchQuotes = async () => {\r\n    const snap = await getDocs(collection(db, 'quotes'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ quotes: data.reverse() });\r\n  };\r\n\r\n  fetchCustomers = async () => {\r\n    const snap = await getDocs(collection(db, 'customers'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ customers: data });\r\n  };\r\n\r\n  fetchProducts = async () => {\r\n    const snap = await getDocs(collection(db, 'products'));\r\n    const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ products: data });\r\n  };\r\n  fetchDespatchModes = async () => {\r\n  const snap = await getDocs(collection(db, 'modes'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ despatchModes: data });\r\n};\r\n\r\nfetchPaymentTerms = async () => {\r\n  const snap = await getDocs(collection(db, 'paymentTerms'));\r\n  const data = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  this.setState({ paymentTerms: data });\r\n};\r\ntoggleTaxGroupSelection = (groupName, lineIdx, checked) => {\r\n  this.setState(prev => {\r\n    const lineItems = [...prev.formData.lineItems];\r\n    const item = { ...lineItems[lineIdx] };\r\n    let taxGroupNames = Array.isArray(item.taxGroupNames) ? [...item.taxGroupNames] : [];\r\n    if (checked) {\r\n      if (!taxGroupNames.includes(groupName)) taxGroupNames.push(groupName);\r\n    } else {\r\n      taxGroupNames = taxGroupNames.filter(g => g !== groupName);\r\n    }\r\n    item.taxGroupNames = taxGroupNames;\r\n    item.taxGroupName = taxGroupNames.join(', ');\r\n    lineItems[lineIdx] = item;\r\n    const { updatedLineItems, freighttaxAmount, taxAmount, quoteValue } = recalculateTotals({\r\n      lineItems,\r\n      freightCharges: prev.formData.freightCharges,\r\n      packingCharges: prev.formData.packingCharges,\r\n      taxPercent: prev.formData.taxPercent,\r\n      taxGroups: prev.taxGroups\r\n    });\r\n\r\n    return {\r\n      formData: {\r\n        ...prev.formData,\r\n        lineItems: updatedLineItems,\r\n        freighttaxAmount,\r\n        taxAmount,\r\n        quoteValue\r\n      }\r\n    };\r\n  });\r\n};\r\n\r\nhandleInputChange = (field, value) => {\r\n  this.setState(prev => ({\r\n    formData: { ...prev.formData, [field]: value }\r\n  }), () => {\r\n    if (['freightCharges', 'taxPercent', 'packingCharges'].includes(field)) {\r\n      const { updatedLineItems, freighttaxAmount, taxAmount, quoteValue } = recalculateTotals({\r\n        lineItems: this.state.formData.lineItems,\r\n        freightCharges: this.state.formData.freightCharges,\r\n        packingCharges: this.state.formData.packingCharges,\r\n        taxPercent: this.state.formData.taxPercent,\r\n        taxGroups: this.state.taxGroups\r\n      });\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          lineItems: updatedLineItems,\r\n          freighttaxAmount,\r\n          taxAmount,\r\n          quoteValue\r\n        }\r\n      }));\r\n    }\r\n  });\r\n};\r\n\r\nhandleBreakdownSelectAll = (checked) => {\r\n  this.setState(prev => ({\r\n    breakdownSelectAll: checked,\r\n    breakdownItems: prev.breakdownItems.map(item => ({ ...item, selected: checked }))\r\n  }));\r\n};\r\nhandleBreakdownRowSelect = (idx, checked) => {\r\n  this.setState(prev => {\r\n    const items = [...prev.breakdownItems];\r\n    items[idx].selected = checked;\r\n    return { breakdownItems: items };\r\n  });\r\n};\r\n\r\n// Handler for per/amt dropdown\r\nhandleBreakdownTypeChange = (type) => {\r\n  this.setState({ breakdownType: type });\r\n};\r\n\r\n// Handler for per/amt value\r\nhandleBreakdownValueChange = (idx, value) => {\r\n  this.setState(prev => {\r\n    const items = [...prev.breakdownItems];\r\n    items[idx].value = value;\r\n    return { breakdownItems: items };\r\n  });\r\n};\r\n\r\n// Handler for last date\r\nhandleBreakdownDateChange = (idx, value) => {\r\n  this.setState(prev => {\r\n    const items = [...prev.breakdownItems];\r\n    items[idx].lastDate = value;\r\n    return { breakdownItems: items };\r\n  });\r\n};\r\nsaveBreakdownToSession = () => {\r\n  sessionStorage.setItem('breakdownItems', JSON.stringify(this.state.breakdownItems));\r\n};\r\nloadBreakdownFromSession = () => {\r\n  const data = sessionStorage.getItem('breakdownItems');\r\n  if (data) this.setState({ breakdownItems: JSON.parse(data) });\r\n};\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { editingId, formData, quotes } = this.state;\r\n    if (!formData.customer) return alert(\"Customer is required\");\r\n    if (formData.lineItems.length === 0) return alert(\"At least one line item is required\");\r\n\r\n    if (editingId) {\r\n      await updateDoc(doc(db, 'quotes', editingId), formData);\r\n    } else {\r\n      formData.quoteNo = `QT${1000 + quotes.length}`;\r\n      await addDoc(collection(db, 'quotes'), formData);\r\n    }\r\n    this.setState({ showForm: false, editingId: null });\r\n    this.fetchQuotes();\r\n  };\r\nloadQuotePreview = (q) => {\r\n  this.setState({\r\n    selectedQuote: q,\r\n    previewMode: true\r\n  });\r\n};\r\n\r\n\r\n  loadQuoteForEdit = (quote) => {\r\n    this.setState({\r\n      formData: {\r\n        ...quote,\r\n        lineItems: Array.isArray(quote.lineItems) ? quote.lineItems : [] // Ensure array\r\n      },\r\n      editingId: quote.id,\r\n      showForm: true,\r\n      previewMode: false,\r\n      activeTab: 'co'\r\n    }, () => {\r\n      if (this.customerInputRef.current) {\r\n        this.customerInputRef.current.value = quote.customer;\r\n      }\r\n    });\r\n  };\r\nconvertToOrder = (quote) => {\r\n  // Save quote in sessionStorage (or navigate with state via router if you use react-router)\r\n  sessionStorage.setItem('quoteToConvert', JSON.stringify(quote));\r\n this.props.history.push('/panelone/Order');\r\n};\r\n// ✅ FULL UPDATED PDF FUNCTION — showQuotePDFWithOrg()\r\n\r\nshowQuotePDFWithOrg = async (quote) => {\r\n  if (!quote || !Array.isArray(quote.lineItems) || quote.lineItems.length === 0) {\r\n    alert(\"Quote data is incomplete.\");\r\n    return;\r\n  }\r\n\r\n  const orgSnap = await getDocs(collection(db, 'businessGroups'));\r\n  const org = orgSnap.docs[0]?.data() || {};\r\n  const customer = this.state.customers.find(c => c.custshortName === quote.customer) || {};\r\n\r\n  const enrichedItems = quote.lineItems.map(item => {\r\n    const product = this.state.products.find(p => p.productId === item.itemCode) || {};\r\n    return {\r\n      ...item,\r\n      ptshortName: product.ptshortName || '',\r\n      hsnCode: product.hsnCode || '',\r\n      uom: product.stockingUOM || '',\r\n      cgst: item.cgst || 0,\r\n      sgst: item.sgst || 0,\r\n      igst: item.igst || 0\r\n    };\r\n  });\r\n\r\n  // Calculate subtotal based on item.total\r\n  const subtotal = enrichedItems.reduce((sum, item) => sum + (parseFloat(item.total) || 0), 0);\r\n  const freightCharges = parseFloat(quote.freightCharges || 0);\r\n  const freightTax = parseFloat(quote.freighttaxAmount || 0);\r\n  const totalTaxAmount = parseFloat(quote.taxAmount || 0);\r\n  const grandTotal = parseFloat(quote.quoteValue || (subtotal + totalTaxAmount));\r\n  const amountWords = `INR ${numberToWords(Math.floor(grandTotal))} Only`;\r\n  \r\n\r\n  // Build tax group breakdown\r\n  let taxBreakdown = {};\r\n  enrichedItems.forEach(item => {\r\n    const qty = parseFloat(item.qty || 0);\r\n    const unitPrice = parseFloat(item.unitPrice || 0);\r\n    const base = qty * unitPrice;\r\n\r\n    if (item.cgst) {\r\n      const key = `CGST ${item.cgst}%`;\r\n      taxBreakdown[key] = (taxBreakdown[key] || 0) + (base * item.cgst) / 100;\r\n    }\r\n    if (item.sgst) {\r\n      const key = `SGST ${item.sgst}%`;\r\n      taxBreakdown[key] = (taxBreakdown[key] || 0) + (base * item.sgst) / 100;\r\n    }\r\n    if (item.igst) {\r\n      const key = `IGST ${item.igst}%`;\r\n      taxBreakdown[key] = (taxBreakdown[key] || 0) + (base * item.igst) / 100;\r\n    }\r\n  });\r\n  if (freightTax > 0) taxBreakdown[\"Freight Tax\"] = freightTax;\r\n\r\n  const container = document.createElement('div');\r\n  container.id = 'pdf-preview-container';\r\n  container.style.width = '794px';\r\n  container.style.padding = '40px';\r\n  container.style.fontFamily = 'Arial';\r\n\r\n\r\n  container.innerHTML = `\r\n    <div style=\"display:flex; justify-content:space-between; align-items:center;\">\r\n      <img src=\"${org.logoUrl || ''}\" style=\"height:50px;\" />\r\n      <div style=\"font-size:18px; font-weight:bold;\">QUOTATION</div>\r\n    </div>\r\n    <hr/>\r\n    <div style=\"display:flex; justify-content:space-between; font-size:11px;\">\r\n      <div style=\"line-height:1.5; width:50%;\">\r\n        <b>${org.bgName || ''}</b><br/>\r\n        ${org.address || ''}<br/>\r\n        <b>Email:</b> ${org.email || ''}<br/>\r\n        <b>Website:</b> ${org.website || ''}<br/>\r\n        <b>GSTIN:</b> ${org.gstin || ''}\r\n      </div>\r\n      <table style=\"font-size:11px; text-align:left;\">\r\n        <tr><td><b>Quote No</b></td><td>: ${quote.quoteNo}</td></tr>\r\n        <tr><td><b>Quote Date</b></td><td>: ${quote.quoteDate}</td></tr>\r\n        <tr><td><b>Currency</b></td><td>: ${quote.currency || 'INR'}</td></tr>\r\n        <tr><td><b>Despatch</b></td><td>: ${quote.despatchMode || ''}</td></tr>\r\n      </table>\r\n    </div>\r\n\r\n    <div style=\"margin-top:15px; display:flex; justify-content:space-between; font-size:11px;\">\r\n      <div style=\"width:48%;\">\r\n        <b style=\"background:#011b56; color:#fff; display:block; padding:4px;\">Bill To</b>\r\n        <div style=\"border:1px solid #ccc; padding:6px;\">\r\n         <b>${quote.customer || ''}</b><br/>\r\n          ${quote.billTo?.replace(/\\n/g, '<br/>') || ''}\r\n        </div>\r\n        <div style=\"font-size:10px; margin-top:6px;\">\r\n            <b>GSTIN:</b> ${customer.gstin || ''}<br/>\r\n            <b>Email:</b> ${customer.email || ''}<br/>\r\n            <b>Contact:</b> ${customer.contactPerson || ''}<br/>\r\n            <b>Phone:</b> ${customer.phone || ''}\r\n        </div>\r\n      </div>\r\n      <div style=\"width:48%;\">\r\n        <b style=\"background:#011b56; color:#fff; display:block; padding:4px;\">Ship To</b>\r\n        <div style=\"border:1px solid #ccc; padding:6px;\">\r\n         <b>${quote.customer || ''}</b><br/>\r\n          ${quote.shipTo?.replace(/\\n/g, '<br/>') || ''}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <table style=\"width:100%; border-collapse:collapse; margin-top:20px; font-size:10px;\">\r\n  <thead>\r\n    <tr style=\"background:#f4f6fa;\">\r\n      <th style=\"border:1px solid #011b56;\">Item Code</th>\r\n      <th style=\"border:1px solid #011b56;\">Description</th>\r\n      <th style=\"border:1px solid #011b56;\">HSN</th>\r\n      <th style=\"border:1px solid #011b56;\">UOM</th>\r\n      <th style=\"border:1px solid #011b56;\">Qty</th>\r\n      <th style=\"border:1px solid #011b56;\">Unit Price</th>\r\n      <th style=\"border:1px solid #011b56;\">GST%</th>\r\n      <th style=\"border:1px solid #011b56;\">Item Total</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n  ${enrichedItems.map(item => {\r\n   const gstLabel = Array.isArray(item.taxGroupNames) && item.taxGroupNames.length\r\n  ? item.taxGroupNames.join(', ')\r\n  : (item.taxGroupName || item.taxId || '-');\r\n\r\n\r\n    return `\r\n      <tr>\r\n        <td style=\"border:1px solid #011b56;\">${item.itemCode}</td>\r\n        <td style=\"border:1px solid #011b56;\">${item.itemDescription}</td>\r\n        <td style=\"border:1px solid #011b56;\">${item.hsnCode}</td>\r\n        <td style=\"border:1px solid #011b56;\">${item.uom}</td>\r\n        <td style=\"border:1px solid #011b56;\">${item.qty}</td>\r\n        <td style=\"border:1px solid #011b56;\">${item.unitPrice}</td>\r\n        <td style=\"border:1px solid #011b56;\">${gstLabel}</td>\r\n        <td style=\"border:1px solid #011b56;\">${item.total}</td>\r\n      </tr>`;\r\n  }).join('')}\r\n\r\n  ${Object.entries(taxBreakdown).map(([key, val]) => `\r\n    <tr>\r\n      <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>${key}</b></td>\r\n      <td style=\"border:1px solid #011b56;\">${val.toFixed(2)}</td>\r\n    </tr>\r\n  `).join('')}\r\n\r\n  <tr>\r\n    <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>Total Tax Amount</b></td>\r\n    <td style=\"border:1px solid #011b56;\"><b>${totalTaxAmount.toFixed(2)}</b></td>\r\n  </tr>\r\n  <tr>\r\n    <td colspan=\"7\" style=\"text-align:right; border:1px solid #011b56;\"><b>Grand Total</b></td>\r\n    <td style=\"border:1px solid #011b56;\"><b>${grandTotal.toFixed(2)}</b></td>\r\n  </tr>\r\n</tbody>\r\n\r\n    </table>\r\n\r\n    <div style=\"margin-top:8px; font-size:11px;\"><b>Amount in Words:</b> ${amountWords}</div>\r\n    <div style=\"text-align:right; font-size:11px; margin-top:30px;\">For ${org.bgName}<br/><br/><br/>Authorized Signatory</div>\r\n    <div style=\"margin-top:20px; text-align:right; font-size:10px;\">Printed on ${new Date().toLocaleString()}</div>\r\n  `;\r\n\r\n\r\n  document.body.appendChild(container);\r\n  const canvas = await html2canvas(container, { scale: 2, useCORS: true });\r\n  const imgData = canvas.toDataURL('image/png');\r\n  const pdf = new jsPDF('p', 'pt', 'a4');\r\n  const width = 595.28;\r\n  const height = canvas.height * width / canvas.width;\r\n  pdf.addImage(imgData, 'PNG', 0, 0, width, height);\r\n\r\n  \r\n  document.body.removeChild(container);\r\n  const { breakdownItems, breakdownType } = this.state;\r\n  if (breakdownItems && breakdownItems.length > 0) {\r\n    pdf.addPage(); \r\n\r\n  let breakdownHtml = `\r\n  <div style=\"font-family:Arial; padding:30px; width:90%;\">\r\n    <h3 style=\"margin-bottom:10px; font-size:14px;\">Milestone Breakdown</h3>\r\n    \r\n\r\n    <table style=\"width:100%; border-collapse:collapse; margin-top:20px; font-size:13px;\">\r\n      <thead>\r\n        <tr style=\"background:#f4f6fa;\">\r\n          <th style=\"border:1px solid #011b56;\">S.No</th>\r\n          <th style=\"border:1px solid #011b56;\">Item ID</th>\r\n          <th style=\"border:1px solid #011b56;\">Desc</th>\r\n          <th style=\"border:1px solid #011b56;\">${breakdownType}</th>\r\n          <th style=\"border:1px solid #011b56;\">Last Date</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        ${breakdownItems.filter(bi => bi.selected).map(item => `\r\n          <tr>\r\n            <td style=\"border:1px solid #011b56; \">${item.sno}</td>\r\n            <td style=\"border:1px solid #011b56;\">${item.productId}</td>\r\n            <td style=\"border:1px solid #011b56; \">${item.desc}</td>\r\n            <td style=\"border:1px solid #011b56; \">${item.value} ${breakdownType === 'Percentage' ? '%' : '₹'}</td>\r\n            <td style=\"border:1px solid #011b56; \">${item.lastDate}</td>\r\n          </tr>\r\n        `).join('')}\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n`;\r\n  const breakdownContainer = document.createElement('div');\r\n  breakdownContainer.innerHTML = breakdownHtml;\r\n  document.body.appendChild(breakdownContainer);\r\n  const breakdownCanvas = await html2canvas(breakdownContainer, { scale: 2, useCORS: true });\r\n  const breakdownImg = breakdownCanvas.toDataURL('image/png');\r\n  pdf.addImage(breakdownImg, 'PNG', 0, 0, width, breakdownCanvas.height * width / breakdownCanvas.width);\r\n  document.body.removeChild(breakdownContainer);\r\n}\r\nconst blob = pdf.output('blob');\r\n  const url = URL.createObjectURL(blob);\r\n  const newWin = window.open();\r\n  newWin.document.write(`\r\n    <html><head><title>Quote PDF Preview</title></head>\r\n    <body style=\"margin:0;\">\r\n      <iframe width=\"100%\" height=\"100%\" style=\"border:none;\" src=\"${url}\"></iframe>\r\n      <button onclick=\"document.querySelector('iframe').contentWindow.print()\" style=\"position:fixed;top:10px;right:110px;\"></button>\r\n      <a href=\"${url}\" download=\"Quote_${quote.quoteNo || 'PDF'}.pdf\" style=\"position:fixed;top:10px;right:10px;\"></a>\r\n    </body></html>\r\n  `);\r\n  newWin.document.close();\r\n\r\n};\r\n\r\n\r\n  showOverlay = (type) => this.setState({ overlayType: type, overlaySearch: '' });\r\n  hideOverlay = () => this.setState({ overlayType: '', overlaySearch: '' });\r\n\r\n\r\n  selectOverlayValue = (value) => {\r\n    if (this.state.overlayType === 'customer') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          customer: value.custname || value.custcode || '', // Use custname or custcode\r\n          billTo: this.formatAddress(value.billTo),\r\n          shipTo: this.formatAddress(value.shipTo),\r\n          currency: value.currency || '',\r\n          // despatchMode: value.despatchMode || '', // No auto-fill for despatch mode\r\n          // paymentTerms: value.paymentTerms || '' // No auto-fill for payment terms\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }), () => {\r\n        if (this.customerInputRef.current) {\r\n          this.customerInputRef.current.value = value.custname || value.custcode || '';\r\n        }\r\n      });\r\n    }\r\n  };\r\nrenderTaxOverlay = () => {\r\n  const { taxGroups, currentTaxLineIdx, formData } = this.state;\r\n  if (currentTaxLineIdx === null) return null;\r\n\r\n  const item = formData.lineItems[currentTaxLineIdx];\r\n  const selected = new Set(item.taxGroupNames || []);\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'absolute',\r\n      zIndex: 9999,\r\n      top: '10%',\r\n      left: '20%',\r\n      background: '#fff',\r\n      border: '1px solid #ccc',\r\n      padding: '20px',\r\n      boxShadow: '0 0 10px rgba(0,0,0,0.3)',\r\n      width: '800px',\r\n      maxHeight: '60vh',\r\n      overflowY: 'auto'\r\n    }}>\r\n      <h5>Select Tax Groups</h5>\r\n      <table className=\"table table-sm table-bordered\">\r\n        <thead>\r\n          <tr><th></th><th>Group</th><th>Type</th><th>%</th></tr>\r\n        </thead>\r\n        <tbody>\r\n          {taxGroups.map(tg => (\r\n            <tr key={tg.groupName}>\r\n              <td>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selected.has(tg.groupName)}\r\n                  onChange={e => this.toggleTaxGroupSelection(tg.groupName, currentTaxLineIdx, e.target.checked)}\r\n                />\r\n              </td>\r\n              <td>{tg.groupName}</td>\r\n              <td>{tg.lineItems.map(li => li.component).join(', ')}</td>\r\n              <td>{tg.lineItems.map(li => li.percentOrAmt).join(', ')}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"text-right mt-2\">\r\n        <button type=\"button\" className=\"btn btn-sm btn-primary\" onClick={() => this.setState({ showTaxOverlay: false })}>\r\n          Done\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n renderOverlay = () => {\r\n  const { overlayType, overlaySearch, customers, despatchModes, paymentTerms } = this.state;\r\n\r\n  const getFilteredRows = (list, nameKey = 'name', codeKey = 'shortName') =>\r\n    list.filter(item =>\r\n      (item[nameKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase()) ||\r\n      (item[codeKey] || '').toLowerCase().includes((overlaySearch || '').toLowerCase())\r\n    );\r\n\r\n  const handleSelect = (item) => {\r\n    if (overlayType === 'customer') {\r\n      this.selectOverlayValue(item);\r\n    } else if (overlayType === 'despatchMode') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          despatchMode: item.name\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }));\r\n    } else if (overlayType === 'paymentTerms') {\r\n      this.setState(prev => ({\r\n        formData: {\r\n          ...prev.formData,\r\n          paymentTerms: item.name\r\n        },\r\n        overlayType: '',\r\n        overlaySearch: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  let title = '';\r\n  let headers = [];\r\n  let rows = [];\r\n\r\n  if (overlayType === 'customer') {\r\n    title = 'Select Customer';\r\n    headers = ['Name', 'Code', 'Short Name'];\r\n    rows = getFilteredRows(customers, 'custname', 'custcode');\r\n  } else if (overlayType === 'despatchMode') {\r\n    title = 'Select Despatch Mode';\r\n    headers = ['Name', 'Short Name'];\r\n    rows = getFilteredRows(despatchModes);\r\n  } else if (overlayType === 'paymentTerms') {\r\n    title = 'Select Payment Terms';\r\n    headers = ['Name', 'Short Name'];\r\n    rows = getFilteredRows(paymentTerms);\r\n  } else {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"custom-overlay\">\r\n      <div className=\"custom-overlay-content\">\r\n        <div className=\"custom-overlay-title\">{title}</div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control mb-2\"\r\n          placeholder={`Search ${overlayType}...`}\r\n          value={overlaySearch}\r\n          onChange={e => this.setState({ overlaySearch: e.target.value })}\r\n        />\r\n        <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n          <table className=\"table table-bordered table-sm\">\r\n            <thead>\r\n              <tr>\r\n                {headers.map((h, i) => <th key={i}>{h}</th>)}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {rows.map((item, i) => (\r\n                <tr key={item.id || i} onClick={() => handleSelect(item)} style={{ cursor: 'pointer' }}>\r\n                  {headers.map((h, j) => (\r\n                    <td key={j}>\r\n                      {overlayType === 'customer'\r\n                        ? h === 'Name' ? item.custname\r\n                          : h === 'Code' ? item.custcode\r\n                          : item.custshortName\r\n                        : h === 'Name' ? item.name\r\n                          : item.shortName}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n              {rows.length === 0 && (\r\n                <tr>\r\n                  <td colSpan={headers.length} className=\"text-center\">No records found</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <button className=\"btn btn-secondary btn-sm mt-2\" onClick={this.hideOverlay}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n  renderProductOverlay = () => {\r\n    const { products, productOverlaySearch, selectedProductIds } = this.state;\r\n    const filtered = products.filter(p =>\r\n      (p.ptshortName || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) ||\r\n      (p.ptdescription || '').toLowerCase().includes(productOverlaySearch.toLowerCase()) ||\r\n      (p.itemCode || '').toLowerCase().includes(productOverlaySearch.toLowerCase())\r\n    );\r\n    return (\r\n      <div className=\"custom-overlay\">\r\n        <div className=\"custom-overlay-content\">\r\n          <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n            <div className=\"custom-overlay-title\">Select Products</div>\r\n            <button\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => {\r\n                const selectedProducts = products.filter(p => this.state.selectedProductIds.includes(p.id));\r\n                this.setState(prev => ({\r\n                  formData: {\r\n                    ...prev.formData,\r\n                    lineItems: [\r\n                      ...prev.formData.lineItems,\r\n                      ...selectedProducts\r\n                        .filter(p => !prev.formData.lineItems.some(item => item.id === p.id))\r\n                        .map(p => ({\r\n                          id: p.id,\r\n                          itemCode: p.productId || '',\r\n                          itemDescription: p.ptdescription || '',\r\n                          itemType: p.itemType || '',\r\n                          materialType: p.materialType || '',\r\n                          onHand: p.onHand || 0,\r\n                          taxGroup: p.taxGroup || '',\r\n                          taxGroupName: p.taxGroup || '',\r\n                          custPartNo: p.custPartNo || '', \r\n                          hsnNo: p.hsnNo || '',\r\n                          unitPrice: p.unitPrice || 0,\r\n                          qty: 1,\r\n                          total: (p.unitPrice || 0).toFixed(2)\r\n                        }))\r\n                    ]\r\n                  },\r\n                  productOverlayVisible: false,\r\n                  selectedProductIds: []\r\n                }));\r\n              }}\r\n            >Add Selected</button>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Search products...\"\r\n            value={productOverlaySearch}\r\n            onChange={e => this.setState({ productOverlaySearch: e.target.value })}\r\n          />\r\n          <div style={{ maxHeight: 300, overflowY: 'auto' }}>\r\n            <table className=\"table table-bordered table-sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th></th>\r\n                  <th>Item Code</th>\r\n                  <th>Item Desc</th>\r\n                  <th>Item Type</th>\r\n                  <th>Material Type</th>\r\n                  <th>On Hand</th>\r\n                  <th>Tax Grp</th>\r\n                  <th>Cust Part No</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filtered.map(p => (\r\n                  <tr key={p.id}>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedProductIds.includes(p.id)}\r\n                        onChange={e => {\r\n                          const checked = e.target.checked;\r\n                          this.setState(prev => ({\r\n                            selectedProductIds: checked\r\n                              ? [...prev.selectedProductIds, p.id]\r\n                              : prev.selectedProductIds.filter(id => id !== p.id)\r\n                          }));\r\n                        }}\r\n                      />\r\n                    </td>\r\n                    <td>{p.productId}</td>\r\n                    <td>{p.ptdescription || ''}</td>\r\n                    <td>{p.itemType || ''}</td>\r\n                    <td>{p.materialType || ''}</td>\r\n                    <td>{p.onHand || 0}</td>\r\n                    <td>{p.taxGroup || ''}</td>\r\n                    <td>{p.custPartNo || ''}</td>\r\n                  </tr>\r\n                ))}\r\n                {filtered.length === 0 && (\r\n                  <tr>\r\n                    <td colSpan=\"8\" className=\"text-center\">No products found</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          {/* Add pagination here if needed, for now, it's just a placeholder */}\r\n          <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n            <span>Page 1 of 1</span>\r\n            <button className=\"btn btn-secondary btn-sm\" onClick={() => this.setState({ productOverlayVisible: false, selectedProductIds: [] })}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderBreakdownTab = () => {\r\n  const { breakdownItems, breakdownType, formData } = this.state;\r\n\r\n  // Get item totals from lineItems (with tax)\r\n  const itemTotals = (formData.lineItems || []).reduce((acc, li) => {\r\n    acc[li.itemCode] = parseFloat(li.total || 0);\r\n    return acc;\r\n  }, {});\r\n\r\n  // Sum of all item totals\r\n  const sumOfItemTotals = Object.values(itemTotals).reduce((sum, val) => sum + val, 0);\r\n\r\n  return (\r\n    <div>\r\n      <h5>Add Milestone</h5>\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col\"><b>Quote Value:</b> {formData.quoteValue}</div>\r\n        <div className=\"col\"><b>Tax Amount:</b> {formData.taxAmount}</div>\r\n        <div className=\"col\"><b>Sum of Item Totals:</b> {sumOfItemTotals.toFixed(2)}</div>\r\n      </div>\r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>S.No</th>\r\n            <th>Item Code</th>\r\n            <th>Desc</th>\r\n            <th>\r\n              <b>Per/Amt</b>\r\n              <select\r\n                value={breakdownType}\r\n                onChange={e => this.handleBreakdownTypeChange(e.target.value)}\r\n                className=\"form-control form-control-sm font-weight-bold\"\r\n                style={{ fontWeight: 'bold', display: 'inline-block', width: 'auto', marginLeft: 8 }}\r\n              >\r\n                <option value=\"Percentage\">%</option>\r\n                <option value=\"Amount\">₹</option>\r\n              </select>\r\n            </th>\r\n            <th>Due Date</th>\r\n            <th>\r\n              <b>Item Total</b>\r\n            </th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {breakdownItems.map((item, idx) => {\r\n            // Main item total (with tax) from lineItems\r\n            const mainItemTotal = itemTotals[item.productId] || 0;\r\n\r\n            // Sub-product sum logic\r\n            const subTotal = (item.subProducts || []).reduce((sum, sp) => {\r\n              if (sp.type === 'Amount') return sum + parseFloat(sp.value || 0);\r\n              if (sp.type === 'Percentage') return sum + (mainItemTotal * parseFloat(sp.value || 0) / 100);\r\n              return sum;\r\n            }, 0);\r\n\r\n            const isSatisfied = Math.abs(mainItemTotal - subTotal) < 0.01 && subTotal > 0;\r\n\r\n            return (\r\n              <React.Fragment key={idx}>\r\n                <tr>\r\n                  <td>{item.sno}</td>\r\n                  <td>{item.productId}</td>\r\n                  <td>{item.desc}</td>\r\n                  <td>\r\n                    <div className=\"input-group input-group-sm\">\r\n                      <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\" style={{ fontWeight: 'bold' }}>\r\n                          {breakdownType === 'Percentage' ? '%' : '₹'}\r\n                        </span>\r\n                      </div>\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={item.value}\r\n                        onChange={e => {\r\n                          this.handleBreakdownValueChange(idx, e.target.value);\r\n                          this.saveBreakdownToSession();\r\n                        }}\r\n                        placeholder={breakdownType === 'Percentage' ? 'Enter %' : 'Enter Amt'}\r\n                        style={{ fontWeight: 'bold' }}\r\n                      />\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-sm\"\r\n                      value={item.lastDate}\r\n                      onChange={e => {\r\n                        this.handleBreakdownDateChange(idx, e.target.value);\r\n                        this.saveBreakdownToSession();\r\n                      }}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <span style={{ color: isSatisfied ? 'green' : 'red', fontWeight: 'bold' }}>\r\n                      {mainItemTotal.toFixed(2)}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      type = \"button\" className=\"btn btn-sm btn-outline-primary\"\r\n                      onClick={() => this.setState({ showSubProductDialog: true, currentBreakdownIdx: idx })}\r\n                    >\r\n                      + Add Milestone\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n                {/* Sub-products */}\r\n                {(item.subProducts || []).map((sp, spIdx) => {\r\n                  // Sub-product item total calculation\r\n                  let spTotal = 0;\r\n                  if (sp.type === 'Amount') spTotal = parseFloat(sp.value || 0);\r\n                  else if (sp.type === 'Percentage') spTotal = mainItemTotal * parseFloat(sp.value || 0) / 100;\r\n                  return (\r\n                    <tr key={spIdx} style={{ background: '#f9f9f9' }}>\r\n                      <td></td>\r\n                      <td colSpan={2} style={{ paddingLeft: 40 }}>→ {sp.name}</td>\r\n                      <td>\r\n                        <span style={{ fontWeight: 'bold' }}>\r\n                          {sp.type === 'Amount' ? `₹${sp.value}` : `${sp.value}%`}\r\n                        </span>\r\n                      </td>\r\n                      <td>{sp.dueDate}</td>\r\n                      <td>\r\n                        <span style={{ fontWeight: 'bold' }}>{spTotal.toFixed(2)}</span>\r\n                      </td>\r\n                      <td></td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nrenderSubProductDialog = () => {\r\n  const { showSubProductDialog, subProductForm } = this.state;\r\n  if (!showSubProductDialog) return null;\r\n  return (\r\n    <div className=\"custom-overlay\" onClick={(e) => e.stopPropagation()}>\r\n      <div className=\"custom-overlay-content\" style={{ width: 400 }}>\r\n        <div className=\"form-group\">\r\n          <label>Name</label>\r\n          <input className=\"form-control\" value={subProductForm.name} onChange={e => this.setState({ subProductForm: { ...subProductForm, name: e.target.value } })} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Type</label>\r\n          <select className=\"form-control\" value={subProductForm.type} onChange={e => this.setState({ subProductForm: { ...subProductForm, type: e.target.value } })}>\r\n            <option value=\"Amount\">Amount</option>\r\n            <option value=\"Percentage\">Percentage</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>{subProductForm.type}</label>\r\n          <input className=\"form-control\" type=\"number\" value={subProductForm.value} onChange={e => this.setState({ subProductForm: { ...subProductForm, value: e.target.value } })} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Due Date</label>\r\n          <input className=\"form-control\" type=\"date\" value={subProductForm.dueDate} onChange={e => this.setState({ subProductForm: { ...subProductForm, dueDate: e.target.value } })} />\r\n        </div>\r\n        <div className=\"text-right\">\r\n          <button type=\"button\" className=\"btn btn-secondary mr-2\" onClick={() => this.setState({ showSubProductDialog: false })}>Cancel</button>\r\n\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={(e) => {\r\n            e.preventDefault();  //  this prevents the form submission\r\n            this.handleAddSubProduct();\r\n          }}>Add</button>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nhandleAddSubProduct = () => {\r\n  const { currentBreakdownIdx, subProductForm, breakdownItems } = this.state;\r\n  if (!subProductForm.name || !subProductForm.value) return;\r\n  const items = [...breakdownItems];\r\n  const subProducts = items[currentBreakdownIdx].subProducts || [];\r\n  subProducts.push({ ...subProductForm });\r\n  items[currentBreakdownIdx].subProducts = subProducts;\r\n  this.setState({\r\n    breakdownItems: items,\r\n    showSubProductDialog: false,\r\n    subProductForm: { name: '', value: '', type: 'Amount', dueDate: '' }\r\n  }, this.saveBreakdownToSession);\r\n};\r\n  renderQuoteTable = () => (\r\n    <div className=\"card mt-4 full-height\">\r\n      <div className=\"card-body\">\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n          <h4 className=\"card-title\">Quotes</h4>\r\n          <button className=\"btn btn-primary\" onClick={() => this.setState({ showForm: true })}>+ Add Quote</button>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-bordered table-hover\">\r\n            <thead className=\"thead-light\">\r\n              <tr style={{ fontSize: '14px' }}>\r\n                <th>Quote No</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Quote Value</th>\r\n                <th>Status</th>\r\n                <th>Print</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.quotes.map((q, i) => (\r\n                <tr key={i} style={{ fontSize: '14px' }}>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-link p-0\"\r\n                      onClick={() => this.loadQuotePreview(q)}\r\n                    >\r\n                      {q.quoteNo}\r\n                    </button>\r\n                  </td>\r\n                  <td>{q.customer}</td>\r\n                  <td>{q.quoteDate}</td>\r\n                  <td>{q.quoteValue}</td>\r\n                  <td><label className=\"badge badge-info\">{q.status}</label></td>\r\n                  <td>\r\n                  <i\r\n                    className=\"mdi mdi-printer menu-icon\"\r\n                    onClick={() => this.showQuotePDFWithOrg(q)}\r\n                    style={{ fontSize: '24px', color: '#2196F3', cursor: 'pointer' }}\r\n                  ></i>\r\n                </td>\r\n\r\n          \r\n                </tr>\r\n              ))}\r\n              {this.state.quotes.length === 0 && (\r\n                <tr><td colSpan=\"6\" className=\"text-center\">No quotes found.</td></tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  renderQuoteForm = () => {\r\n    const { formData, overlayType, productOverlayVisible ,showTaxOverlay,taxGroups,recalculateTotals} = this.state;\r\n    const isFOB = formData.impExp === 'FOB';\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"card full-height\">\r\n          <div style={{ flex: 1, overflowY: 'auto', padding: '24px' }}>\r\n            <h4 className=\"mb-3\">Quote Form</h4>\r\n            <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n              <li className=\"nav-item\">\r\n                <button type=\"button\" className={`nav-link ${this.state.activeTab === 'co' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'co' })}>CO Details</button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n              <button type=\"button\" className={`nav-link ${this.state.activeTab === 'breakdown' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'breakdown' })}>Breakdown</button>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <button type=\"button\" className={`nav-link ${this.state.activeTab === 'commercial' ? 'active' : ''}`} onClick={() => this.setState({ activeTab: 'commercial' })}>Commercial Terms</button>\r\n              </li>\r\n            </ul>\r\n            <form className=\"form-sample\" onSubmit={this.handleSubmit}>\r\n              <div className=\"tab-content pt-3\">\r\n                {this.state.activeTab === 'co' && (\r\n                  <>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Quote No</label>\r\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={formData.quoteNo} onChange={(e) => this.handleInputChange('quoteNo', e.target.value)} />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Quote Date</label>\r\n                        <input type=\"date\" className=\"form-control form-control-sm\" value={formData.quoteDate} onChange={(e) => this.handleInputChange('quoteDate', e.target.value)} />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Quote Type</label>\r\n                        <select className=\"form-control form-control-sm\" value={formData.quoteType} onChange={(e) => this.handleInputChange('quoteType', e.target.value)}>\r\n                          <option>Standard</option>\r\n                          <option>Manual</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Status</label>\r\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={formData.status}   style={{ backgroundColor: '#fff' }} readOnly />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Customer</label>\r\n                        <div className=\"input-group input-group-sm\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Choose Customer\"\r\n                            ref={this.customerInputRef}\r\n                            value={formData.customer}\r\n                            readOnly\r\n                            onClick={() => this.showOverlay('customer')}\r\n                            style={{ cursor: 'pointer' }}\r\n                          />\r\n                          <div className=\"input-group-append\">\r\n                            <button className=\"btn btn-outline-secondary btn-sm\" type=\"button\" onClick={() => this.showOverlay('customer')}>Select</button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>IMP/EXP</label>\r\n                        <select\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.impExp}\r\n                          onChange={(e) => this.handleInputChange('impExp', e.target.value)}\r\n                        >\r\n                          <option>None</option>\r\n                          <option>COB</option>\r\n                          <option>FOB</option>\r\n                          <option>CIF</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group col-md-2\">\r\n                        <label>Ref No.</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.qrefNo}\r\n                          onChange={(e) => this.handleInputChange('qrefNo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Choose</label>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"form-check mr-4\">\r\n                            <input type=\"radio\" className=\"form-check-input\" name=\"choose\" id=\"chooseService\" value=\"Service\" checked={formData.choose === 'Service'} onChange={(e) => this.handleInputChange('choose', e.target.value)} />\r\n                            <label className=\"form-check-label\" htmlFor=\"chooseService\">Service</label>\r\n                          </div>\r\n                          <div className=\"form-check\">\r\n                            <input type=\"radio\" className=\"form-check-input\" name=\"choose\" id=\"chooseProduct\" value=\"Product\" checked={formData.choose === 'Product'} onChange={(e) => this.handleInputChange('choose', e.target.value)} />\r\n                            <label className=\"form-check-label\" htmlFor=\"chooseProduct\">Product</label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Currency</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.currency}\r\n                          style={{ backgroundColor: '#fff' }}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Conversion Rate</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.conversionRate}\r\n                          onChange={(e) => this.handleInputChange('conversionRate', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Tax Amount</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxAmount}\r\n                          onChange={(e) => this.handleInputChange('taxAmount', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <label>Quote Value</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.quoteValue}\r\n                          onChange={(e) => this.handleInputChange('quoteValue', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                   \r\n                          <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                            <h4 className=\"card-title\">Line Item</h4>\r\n                            <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={() => this.setState({ productOverlayVisible: true })}>\r\n                              + Add Product\r\n                            </button>\r\n                          </div>\r\n                       <div className=\"table-responsive\">\r\n        <table className=\"table table-bordered\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>Item Code</th>\r\n              <th>Item Desc</th>\r\n              <th>Cust Part No</th>\r\n              <th>HSN No</th>\r\n              <th>UOM</th>\r\n              <th>On Hand</th>\r\n              <th>Unit Price</th>\r\n              <th>Quantity</th>\r\n              <th>Tax Id</th>\r\n              <th>Item Total</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {formData.lineItems.map((item, idx) => {\r\n              const itemTotal = item.unitPrice * item.qty;\r\n              const taxDetails = getTaxDetailsFromGroup(item.taxGroupName, this.state.taxGroups);\r\n              const taxAmt = (itemTotal * taxDetails.totalPercent / 100) + (itemTotal * taxDetails.totalAmount);\r\n              const totalWithTax = itemTotal + taxAmt;\r\n             \r\n              \r\n              return (\r\n                <tr key={item.id || idx}>\r\n                  <td>{item.itemCode}</td>\r\n                  <td>{item.itemDescription}</td>\r\n                  <td>{item.custPartNo}</td>\r\n                  <td>{item.hsnNo}</td>\r\n                  <td>{item.uom}</td>\r\n                  <td>{item.onHand}</td>\r\n                  <td>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={item.unitPrice}\r\n                      onChange={e => this.handleLineItemChange(idx, 'unitPrice', e.target.value)}\r\n                      style={{ width: 80 }}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      value={item.qty}\r\n                      onChange={e => this.handleLineItemChange(idx, 'qty', e.target.value)}\r\n                      style={{ width: 60 }}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-secondary btn-sm btn-rounded btn-icon\"\r\n                    style={{ padding: '2px 6px', fontSize: '12px', lineHeight: '1' }}\r\n                    onClick={() => this.setState({ showTaxOverlay: true, currentTaxLineIdx: idx })}\r\n                  >\r\n                    +\r\n                  </button>\r\n                  <div style={{ fontSize: '13px', marginTop: '4px' }}>\r\n                    {(item.taxGroupNames || []).join(', ') || '-'}\r\n                  </div>\r\n                </td>\r\n              <td>{parseFloat(item.total || 0).toFixed(2)}</td>\r\n\r\n\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n                          {/* Add pagination for line items here if needed */}\r\n                          <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n                            <span>Page 1 of 1</span>\r\n                          </div>\r\n                      \r\n                  </>\r\n                )}\r\n                {this.state.activeTab === 'commercial' && (\r\n                  <>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-6\">\r\n                        <label>Bill To</label>\r\n                        <textarea\r\n                          className=\"form-control form-control-sm\"\r\n                          rows=\"3\"\r\n                          value={formData.billTo}\r\n                          onChange={(e) => this.handleInputChange('billTo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-6\">\r\n                        <label>Ship To</label>\r\n                        <textarea\r\n                          className=\"form-control form-control-sm\"\r\n                          rows=\"3\"\r\n                          value={formData.shipTo}\r\n                          onChange={(e) => this.handleInputChange('shipTo', e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-4\">\r\n  <label>Despatch Mode</label>\r\n  <div className=\"input-group input-group-sm\">\r\n    <input\r\n      type=\"text\"\r\n      className=\"form-control\"\r\n      value={formData.despatchMode}\r\n      readOnly\r\n      onClick={() => !isFOB && this.showOverlay('despatchMode')}\r\n      style={{ cursor: isFOB ? 'not-allowed' : 'pointer', backgroundColor: '#fff' }}\r\n    />\r\n    <div className=\"input-group-append\">\r\n      <button\r\n        className=\"btn btn-outline-secondary btn-sm\"\r\n        type=\"button\"\r\n        disabled={isFOB}\r\n        onClick={() => this.showOverlay('despatchMode')}\r\n      >\r\n        Select\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div className=\"form-group col-md-4\">\r\n  <label>Payment Terms</label>\r\n  <div className=\"input-group input-group-sm\">\r\n    <input\r\n      type=\"text\"\r\n      className=\"form-control\"\r\n      value={formData.paymentTerms}\r\n      readOnly\r\n      onClick={() => !isFOB && this.showOverlay('paymentTerms')}\r\n      style={{ cursor: isFOB ? 'not-allowed' : 'pointer', backgroundColor: '#fff' }}\r\n    />\r\n    <div className=\"input-group-append\">\r\n      <button\r\n        className=\"btn btn-outline-secondary btn-sm\"\r\n        type=\"button\"\r\n        disabled={isFOB}\r\n        onClick={() => this.showOverlay('paymentTerms')}\r\n      >\r\n        Select\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Freight Charges</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.freightCharges}\r\n                          onChange={(e) => this.handleInputChange('freightCharges', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Tax %</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.taxPercent}\r\n                          onChange={(e) => this.handleInputChange('taxPercent', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Freight Tax Amount</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.freighttaxAmount}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <label>Packing Charges</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          value={formData.packingCharges}\r\n                          onChange={(e) => this.handleInputChange('packingCharges', e.target.value)}\r\n                          readOnly={isFOB} // Read-only if FOB\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </>\r\n                )}\r\n                {this.state.activeTab === 'breakdown' && (this.renderBreakdownTab())}\r\n              </div>\r\n              {this.renderSubProductDialog()}\r\n              <div className=\"fixed-card-footer text-right p-3 border-top bg-white\">\r\n                <button type=\"submit\" className=\"btn btn-success mr-2\">Save All Details</button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => this.setState({ showForm: false, editingId: null })}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n            {overlayType && this.renderOverlay()}\r\n            {productOverlayVisible && this.renderProductOverlay()}\r\n            {this.state.showTaxOverlay && this.renderTaxOverlay()}\r\n\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\nrenderQuotePreview = () => {\r\n  const q = this.state.selectedQuote;\r\n  if (!q) return null;\r\n\r\n  return (\r\n    <div className=\"card mt-4 full-height p-4\">\r\n      <div className=\"d-flex justify-content-between mb-3\">\r\n        <h4 className=\"card-title\">Quote Preview - {q.quoteNo}</h4>\r\n        <div>\r\n          <button className=\"btn btn-sm btn-info mr-2\" onClick={() => this.loadQuoteForEdit(q)}>Edit</button>\r\n          <button className=\"btn btn-sm btn-success\" onClick={() => this.convertToOrder(q)}>Convert to Order</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\"><b>Customer:</b> {q.customer}</div>\r\n        <div className=\"col-md-4\"><b>Date:</b> {q.quoteDate}</div>\r\n        <div className=\"col-md-4\"><b>Status:</b> {q.status}</div>\r\n      </div>\r\n      <div className=\"row mt-2\">\r\n        <div className=\"col-md-6\"><b>Bill To:</b><br />{q.billTo}</div>\r\n        <div className=\"col-md-6\"><b>Ship To:</b><br />{q.shipTo}</div>\r\n      </div>\r\n      <h5 className=\"mt-4\">Line Items</h5>\r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>Item Code</th><th>Description</th><th>Qty</th><th>Unit Price</th><th>Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {q.lineItems?.map((item, i) => (\r\n            <tr key={i}>\r\n              <td>{item.itemCode}</td>\r\n              <td>{item.itemDescription}</td>\r\n              <td>{item.qty}</td>\r\n              <td>{item.unitPrice}</td>\r\n              <td>{item.total}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"text-right\"><b>Total:</b> {q.quoteValue}</div>\r\n      <button className=\"btn btn-secondary mt-3\" onClick={() => this.setState({ previewMode: false })}>Back to List</button>\r\n    </div>\r\n  );\r\n};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        {this.state.previewMode? this.renderQuotePreview(): this.state.showForm ? this.renderQuoteForm() : this.renderQuoteTable()}\r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Quote);\r\n"]},"metadata":{},"sourceType":"module"}