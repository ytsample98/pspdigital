{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\crm\\\\Datalist.js\";\nimport React, { Component } from \"react\";\nimport { Modal, Button, Table, Form, Card } from \"react-bootstrap\";\nimport { db } from \"../../firebase\";\nimport { collection, getDocs, addDoc, updateDoc, doc } from \"firebase/firestore\";\nimport { Country, State, City } from \"country-state-city\";\n\nclass Datalist extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      accounts: [],\n      showModal: false,\n      selectedAccount: null,\n      contactPersons: []\n    };\n\n    this.fetchAccounts = async () => {\n      const snap = await getDocs(collection(db, \"accounts\"));\n      const accounts = snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        accounts\n      });\n    };\n\n    this.openModal = (account = null) => {\n      this.setState({\n        showModal: true,\n        selectedAccount: account || {\n          acno: \"\",\n          acname: \"\",\n          contact: \"\",\n          email: \"\",\n          website: \"\",\n          phone: \"\",\n          country: \"\",\n          state: \"\",\n          city: \"\"\n        },\n        contactPersons: (account === null || account === void 0 ? void 0 : account.contactPersons) || []\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        showModal: false,\n        selectedAccount: null,\n        contactPersons: []\n      });\n    };\n\n    this.handleFieldChange = (field, value) => {\n      this.setState({\n        selectedAccount: { ...this.state.selectedAccount,\n          [field]: value\n        }\n      });\n    };\n\n    this.handleContactPersonChange = (index, field, value) => {\n      const cps = [...this.state.contactPersons];\n      cps[index][field] = value;\n      this.setState({\n        contactPersons: cps\n      });\n    };\n\n    this.addContactPerson = () => {\n      this.setState({\n        contactPersons: [...this.state.contactPersons, {\n          name: \"\",\n          designation: \"\",\n          phone: \"\",\n          mail: \"\",\n          linkedin: \"\"\n        }]\n      });\n    };\n\n    this.saveAccount = async () => {\n      const {\n        selectedAccount,\n        contactPersons\n      } = this.state;\n      const updatedAcc = { ...selectedAccount,\n        contactPersons\n      };\n\n      if (updatedAcc.id) {\n        await updateDoc(doc(db, \"accounts\", updatedAcc.id), updatedAcc);\n      } else {\n        await addDoc(collection(db, \"accounts\"), updatedAcc);\n      }\n\n      this.fetchAccounts();\n      this.closeModal();\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAccounts();\n  }\n\n  render() {\n    const {\n      accounts,\n      selectedAccount\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"p-3 shadow-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"Account Data List\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.openModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, \"+ Add Account\")), /*#__PURE__*/React.createElement(Table, {\n      bordered: true,\n      hover: true,\n      responsive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, \"a/c No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, \"a/c Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, \"Contact\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, \"Phone\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, \"Country\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, \"More\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, accounts.map(acc => {\n      var _Country$getCountryBy, _State$getStateByCode;\n\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: acc.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 19\n        }\n      }, acc.acno), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 19\n        }\n      }, acc.acname), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 19\n        }\n      }, acc.contact), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 19\n        }\n      }, acc.email), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }\n      }, acc.phone), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 19\n        }\n      }, ((_Country$getCountryBy = Country.getCountryByCode(acc.country)) === null || _Country$getCountryBy === void 0 ? void 0 : _Country$getCountryBy.name) || \"\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 19\n        }\n      }, acc.country ? (_State$getStateByCode = State.getStateByCodeAndCountry(acc.state, acc.country)) === null || _State$getStateByCode === void 0 ? void 0 : _State$getStateByCode.name : \"\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 19\n        }\n      }, acc.city), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"info\",\n        size: \"sm\",\n        onClick: () => this.openModal(acc),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }\n      }, \"More\")));\n    })))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showModal,\n      onHide: this.closeModal,\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, (selectedAccount === null || selectedAccount === void 0 ? void 0 : selectedAccount.id) ? \"Edit Account\" : \"Add Account\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, selectedAccount && /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }, \"a/c No\"), /*#__PURE__*/React.createElement(Form.Control, {\n      value: selectedAccount.acno,\n      onChange: e => this.handleFieldChange(\"acno\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, \"a/c Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      value: selectedAccount.acname,\n      onChange: e => this.handleFieldChange(\"acname\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, \"Contact\"), /*#__PURE__*/React.createElement(Form.Control, {\n      value: selectedAccount.contact,\n      onChange: e => this.handleFieldChange(\"contact\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n      value: selectedAccount.email,\n      onChange: e => this.handleFieldChange(\"email\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, \"Website\"), /*#__PURE__*/React.createElement(Form.Control, {\n      value: selectedAccount.website,\n      onChange: e => this.handleFieldChange(\"website\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    }, \"Phone\"), /*#__PURE__*/React.createElement(Form.Control, {\n      value: selectedAccount.phone,\n      onChange: e => this.handleFieldChange(\"phone\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, \"Country\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      value: selectedAccount.country,\n      onChange: e => {\n        this.handleFieldChange(\"country\", e.target.value);\n        this.handleFieldChange(\"state\", \"\");\n        this.handleFieldChange(\"city\", \"\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 23\n      }\n    }, \"Select Country\"), Country.getAllCountries().map(c => /*#__PURE__*/React.createElement(\"option\", {\n      key: c.isoCode,\n      value: c.isoCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }\n    }, c.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      value: selectedAccount.state,\n      onChange: e => {\n        this.handleFieldChange(\"state\", e.target.value);\n        this.handleFieldChange(\"city\", \"\");\n      },\n      disabled: !selectedAccount.country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 23\n      }\n    }, \"Select State\"), selectedAccount.country && State.getStatesOfCountry(selectedAccount.country).map(s => /*#__PURE__*/React.createElement(\"option\", {\n      key: s.isoCode,\n      value: s.isoCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 27\n      }\n    }, s.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      value: selectedAccount.city,\n      onChange: e => this.handleFieldChange(\"city\", e.target.value),\n      disabled: !selectedAccount.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 23\n      }\n    }, \"Select City\"), selectedAccount.country && selectedAccount.state && City.getCitiesOfState(selectedAccount.country, selectedAccount.state).map(ct => /*#__PURE__*/React.createElement(\"option\", {\n      key: ct.name,\n      value: ct.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 27\n      }\n    }, ct.name))))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }, \"Contact Persons\"), this.state.contactPersons.map((cp, i) => /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: \"mb-3 p-2 border rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Name\",\n      value: cp.name,\n      onChange: e => this.handleContactPersonChange(i, \"name\", e.target.value),\n      className: \"mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Designation\",\n      value: cp.designation,\n      onChange: e => this.handleContactPersonChange(i, \"designation\", e.target.value),\n      className: \"mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Phone\",\n      value: cp.phone,\n      onChange: e => this.handleContactPersonChange(i, \"phone\", e.target.value),\n      className: \"mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Mail\",\n      value: cp.mail,\n      onChange: e => this.handleContactPersonChange(i, \"mail\", e.target.value),\n      className: \"mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"LinkedIn\",\n      value: cp.linkedin,\n      onChange: e => this.handleContactPersonChange(i, \"linkedin\", e.target.value),\n      className: \"mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.addContactPerson,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }\n    }, \"+ Add Contact Person\"))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.saveAccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 13\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 13\n      }\n    }, \"Cancel\"))));\n  }\n\n}\n\nexport default Datalist;","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/crm/Datalist.js"],"names":["React","Component","Modal","Button","Table","Form","Card","db","collection","getDocs","addDoc","updateDoc","doc","Country","State","City","Datalist","state","accounts","showModal","selectedAccount","contactPersons","fetchAccounts","snap","docs","map","id","data","setState","openModal","account","acno","acname","contact","email","website","phone","country","city","closeModal","handleFieldChange","field","value","handleContactPersonChange","index","cps","addContactPerson","name","designation","mail","linkedin","saveAccount","updatedAcc","componentDidMount","render","acc","getCountryByCode","getStateByCodeAndCountry","e","target","getAllCountries","c","isoCode","getStatesOfCountry","s","getCitiesOfState","ct","cp","i"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Modal, Button, Table, Form, Card } from \"react-bootstrap\";\r\nimport { db } from \"../../firebase\";\r\nimport { collection, getDocs, addDoc, updateDoc, doc } from \"firebase/firestore\";\r\nimport { Country, State, City } from \"country-state-city\";\r\n\r\nclass Datalist extends Component {\r\n  state = {\r\n    accounts: [],\r\n    showModal: false,\r\n    selectedAccount: null,\r\n    contactPersons: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchAccounts();\r\n  }\r\n\r\n  fetchAccounts = async () => {\r\n    const snap = await getDocs(collection(db, \"accounts\"));\r\n    const accounts = snap.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n    this.setState({ accounts });\r\n  };\r\n\r\n  // open modal for new or edit\r\n  openModal = (account = null) => {\r\n    this.setState({\r\n      showModal: true,\r\n      selectedAccount: account || {\r\n        acno: \"\",\r\n        acname: \"\",\r\n        contact: \"\",\r\n        email: \"\",\r\n        website: \"\",\r\n        phone: \"\",\r\n        country: \"\",\r\n        state: \"\",\r\n        city: \"\",\r\n      },\r\n      contactPersons: account?.contactPersons || [],\r\n    });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ showModal: false, selectedAccount: null, contactPersons: [] });\r\n  };\r\n\r\n  handleFieldChange = (field, value) => {\r\n    this.setState({\r\n      selectedAccount: { ...this.state.selectedAccount, [field]: value },\r\n    });\r\n  };\r\n\r\n  handleContactPersonChange = (index, field, value) => {\r\n    const cps = [...this.state.contactPersons];\r\n    cps[index][field] = value;\r\n    this.setState({ contactPersons: cps });\r\n  };\r\n\r\n  addContactPerson = () => {\r\n    this.setState({\r\n      contactPersons: [\r\n        ...this.state.contactPersons,\r\n        { name: \"\", designation: \"\", phone: \"\", mail: \"\", linkedin: \"\" },\r\n      ],\r\n    });\r\n  };\r\n\r\n  saveAccount = async () => {\r\n    const { selectedAccount, contactPersons } = this.state;\r\n    const updatedAcc = { ...selectedAccount, contactPersons };\r\n\r\n    if (updatedAcc.id) {\r\n      await updateDoc(doc(db, \"accounts\", updatedAcc.id), updatedAcc);\r\n    } else {\r\n      await addDoc(collection(db, \"accounts\"), updatedAcc);\r\n    }\r\n\r\n    this.fetchAccounts();\r\n    this.closeModal();\r\n  };\r\n\r\n  render() {\r\n    const { accounts, selectedAccount } = this.state;\r\n\r\n    return (\r\n      <div className=\"container mt-4\">\r\n        <Card className=\"p-3 shadow-sm\">\r\n          <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n            <h3>Account Data List</h3>\r\n            <Button variant=\"primary\" onClick={() => this.openModal()}>\r\n              + Add Account\r\n            </Button>\r\n          </div>\r\n\r\n          <Table bordered hover responsive>\r\n            <thead className=\"thead-light\">\r\n              <tr>\r\n                <th>a/c No</th>\r\n                <th>a/c Name</th>\r\n                <th>Contact</th>\r\n                <th>Email</th>\r\n                <th>Phone</th>\r\n                <th>Country</th>\r\n                <th>State</th>\r\n                <th>City</th>\r\n                <th>More</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {accounts.map((acc) => (\r\n                <tr key={acc.id}>\r\n                  <td>{acc.acno}</td>\r\n                  <td>{acc.acname}</td>\r\n                  <td>{acc.contact}</td>\r\n                  <td>{acc.email}</td>\r\n                  <td>{acc.phone}</td>\r\n                  <td>{Country.getCountryByCode(acc.country)?.name || \"\"}</td>\r\n                  <td>\r\n                    {acc.country\r\n                      ? State.getStateByCodeAndCountry(acc.state, acc.country)?.name\r\n                      : \"\"}\r\n                  </td>\r\n                  <td>{acc.city}</td>\r\n                  <td>\r\n                    <Button\r\n                      variant=\"info\"\r\n                      size=\"sm\"\r\n                      onClick={() => this.openModal(acc)}\r\n                    >\r\n                      More\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Card>\r\n\r\n        {/* Modal Form */}\r\n        <Modal show={this.state.showModal} onHide={this.closeModal} size=\"lg\">\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{selectedAccount?.id ? \"Edit Account\" : \"Add Account\"}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {selectedAccount && (\r\n              <Form>\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>a/c No</label>\r\n                    <Form.Control\r\n                      value={selectedAccount.acno}\r\n                      onChange={(e) => this.handleFieldChange(\"acno\", e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>a/c Name</label>\r\n                    <Form.Control\r\n                      value={selectedAccount.acname}\r\n                      onChange={(e) => this.handleFieldChange(\"acname\", e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>Contact</label>\r\n                    <Form.Control\r\n                      value={selectedAccount.contact}\r\n                      onChange={(e) => this.handleFieldChange(\"contact\", e.target.value)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>Email</label>\r\n                    <Form.Control\r\n                      value={selectedAccount.email}\r\n                      onChange={(e) => this.handleFieldChange(\"email\", e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>Website</label>\r\n                    <Form.Control\r\n                      value={selectedAccount.website}\r\n                      onChange={(e) => this.handleFieldChange(\"website\", e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>Phone</label>\r\n                    <Form.Control\r\n                      value={selectedAccount.phone}\r\n                      onChange={(e) => this.handleFieldChange(\"phone\", e.target.value)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>Country</label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      value={selectedAccount.country}\r\n                      onChange={(e) => {\r\n                        this.handleFieldChange(\"country\", e.target.value);\r\n                        this.handleFieldChange(\"state\", \"\");\r\n                        this.handleFieldChange(\"city\", \"\");\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select Country</option>\r\n                      {Country.getAllCountries().map((c) => (\r\n                        <option key={c.isoCode} value={c.isoCode}>\r\n                          {c.name}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>State</label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      value={selectedAccount.state}\r\n                      onChange={(e) => {\r\n                        this.handleFieldChange(\"state\", e.target.value);\r\n                        this.handleFieldChange(\"city\", \"\");\r\n                      }}\r\n                      disabled={!selectedAccount.country}\r\n                    >\r\n                      <option value=\"\">Select State</option>\r\n                      {selectedAccount.country &&\r\n                        State.getStatesOfCountry(selectedAccount.country).map((s) => (\r\n                          <option key={s.isoCode} value={s.isoCode}>\r\n                            {s.name}\r\n                          </option>\r\n                        ))}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>City</label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      value={selectedAccount.city}\r\n                      onChange={(e) => this.handleFieldChange(\"city\", e.target.value)}\r\n                      disabled={!selectedAccount.state}\r\n                    >\r\n                      <option value=\"\">Select City</option>\r\n                      {selectedAccount.country &&\r\n                        selectedAccount.state &&\r\n                        City.getCitiesOfState(\r\n                          selectedAccount.country,\r\n                          selectedAccount.state\r\n                        ).map((ct) => (\r\n                          <option key={ct.name} value={ct.name}>\r\n                            {ct.name}\r\n                          </option>\r\n                        ))}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n\r\n                <hr />\r\n                <h5>Contact Persons</h5>\r\n                {this.state.contactPersons.map((cp, i) => (\r\n                  <div key={i} className=\"mb-3 p-2 border rounded\">\r\n                    <Form.Control\r\n                      placeholder=\"Name\"\r\n                      value={cp.name}\r\n                      onChange={(e) =>\r\n                        this.handleContactPersonChange(i, \"name\", e.target.value)\r\n                      }\r\n                      className=\"mb-1\"\r\n                    />\r\n                    <Form.Control\r\n                      placeholder=\"Designation\"\r\n                      value={cp.designation}\r\n                      onChange={(e) =>\r\n                        this.handleContactPersonChange(i, \"designation\", e.target.value)\r\n                      }\r\n                      className=\"mb-1\"\r\n                    />\r\n                    <Form.Control\r\n                      placeholder=\"Phone\"\r\n                      value={cp.phone}\r\n                      onChange={(e) =>\r\n                        this.handleContactPersonChange(i, \"phone\", e.target.value)\r\n                      }\r\n                      className=\"mb-1\"\r\n                    />\r\n                    <Form.Control\r\n                      placeholder=\"Mail\"\r\n                      value={cp.mail}\r\n                      onChange={(e) =>\r\n                        this.handleContactPersonChange(i, \"mail\", e.target.value)\r\n                      }\r\n                      className=\"mb-1\"\r\n                    />\r\n                    <Form.Control\r\n                      placeholder=\"LinkedIn\"\r\n                      value={cp.linkedin}\r\n                      onChange={(e) =>\r\n                        this.handleContactPersonChange(i, \"linkedin\", e.target.value)\r\n                      }\r\n                      className=\"mb-1\"\r\n                    />\r\n                  </div>\r\n                ))}\r\n                <Button variant=\"secondary\" onClick={this.addContactPerson}>\r\n                  + Add Contact Person\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={this.saveAccount}>\r\n              Submit\r\n            </Button>\r\n            <Button variant=\"secondary\" onClick={this.closeModal}>\r\n              Cancel\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Datalist;\r\n"]},"metadata":{},"sourceType":"module"}