{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\College\\\\admin\\\\StarAdmin-Free-React-Admin-Template-master\\\\template\\\\demo_1\\\\src\\\\app\\\\dashboard\\\\Dashboard.js\";\nimport React, { Component } from \"react\";\nimport { Card, Row, Col, ButtonGroup, Button } from \"react-bootstrap\";\nimport { db } from \"../../firebase\";\nimport { collection, onSnapshot } from \"firebase/firestore\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport \"chart.js\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activities: [],\n      lineData: null,\n      barData: null,\n      filter: \"1M\",\n      // default filter\n      barGroup: \"Daily\"\n    };\n\n    this.filterByRange = (activities, range) => {\n      const now = new Date();\n      let cutoff;\n\n      switch (range) {\n        case \"1D\":\n          cutoff = new Date();\n          cutoff.setDate(now.getDate() - 1);\n          break;\n\n        case \"5D\":\n          cutoff = new Date();\n          cutoff.setDate(now.getDate() - 5);\n          break;\n\n        case \"1M\":\n          cutoff = new Date();\n          cutoff.setMonth(now.getMonth() - 1);\n          break;\n\n        case \"1Y\":\n          cutoff = new Date();\n          cutoff.setFullYear(now.getFullYear() - 1);\n          break;\n\n        default:\n          cutoff = new Date(\"2000-01-01\");\n      }\n\n      return activities.filter(a => new Date(a.date) >= cutoff);\n    };\n\n    this.getShade = (i, total, alpha = 0.9) => {\n      const hue = 225; // blue/purple family\n\n      const sat = 80;\n      const l0 = 35,\n            l1 = 80; // lightness range\n\n      const light = l0 + (l1 - l0) * (i / Math.max(total - 1, 1));\n      return `hsla(${hue}, ${sat}%, ${light}%, ${alpha})`;\n    };\n\n    this.periodKey = (dateStr, group) => {\n      const d = new Date(`${dateStr}T00:00:00`); // avoid TZ shifts\n\n      if (group === \"Daily\") {\n        const label = d.toISOString().slice(0, 10); // YYYY-MM-DD\n\n        return {\n          label,\n          sort: +new Date(label)\n        };\n      }\n\n      if (group === \"Weekly\") {\n        // ISO week\n        const tmp = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()));\n        const day = tmp.getUTCDay() || 7;\n        tmp.setUTCDate(tmp.getUTCDate() + 4 - day);\n        const yearStart = new Date(Date.UTC(tmp.getUTCFullYear(), 0, 1));\n        const week = Math.ceil(((tmp - yearStart) / 86400000 + 1) / 7);\n        return {\n          label: `W${String(week).padStart(2, \"0\")} ${tmp.getUTCFullYear()}`,\n          sort: tmp.getUTCFullYear() * 100 + week\n        };\n      } // Monthly\n\n\n      const label = `${d.toLocaleString(\"default\", {\n        month: \"short\"\n      })} ${d.getFullYear()}`;\n      return {\n        label,\n        sort: d.getFullYear() * 100 + (d.getMonth() + 1)\n      };\n    };\n\n    this.buildLineChart = () => {\n      const {\n        activities,\n        filter\n      } = this.state;\n      const filtered = this.filterByRange(activities, filter); // Group by date + source\n\n      const grouped = {};\n      filtered.forEach(a => {\n        const date = a.date;\n        if (!grouped[date]) grouped[date] = {};\n        if (!grouped[date][a.source]) grouped[date][a.source] = 0;\n        grouped[date][a.source]++;\n      });\n      const labels = Object.keys(grouped).sort();\n      const sources = [\"Call\", \"Meeting\", \"Demo\", \"Mail\", \"Whatsapp\"];\n      const datasets = sources.map((src, i) => ({\n        label: src,\n        data: labels.map(d => grouped[d][src] || 0),\n        borderColor: this.getColor(i),\n        backgroundColor: this.getColor(i, 0.2),\n        fill: false,\n        tension: 0.3,\n        borderWidth: 2,\n        pointRadius: 4\n      }));\n      this.setState({\n        lineData: {\n          labels,\n          datasets\n        }\n      });\n    };\n\n    this.buildBarChart = () => {\n      const {\n        activities,\n        barGroup\n      } = this.state;\n      const sources = [\"Call\", \"Meeting\", \"Demo\", \"Mail\", \"Whatsapp\"]; // Period → { source → count }\n\n      const byPeriod = {};\n      activities.forEach(a => {\n        const {\n          label,\n          sort\n        } = this.periodKey(a.date, barGroup);\n        if (!byPeriod[label]) byPeriod[label] = {\n          __sort: sort\n        };\n        const src = a.source || \"Unknown\";\n        byPeriod[label][src] = (byPeriod[label][src] || 0) + 1;\n      }); // Sort periods chronologically\n\n      const labels = Object.keys(byPeriod).sort((a, b) => byPeriod[a].__sort - byPeriod[b].__sort); // Build stacked datasets (same hue, different brightness)\n\n      const datasets = sources.map((src, i) => ({\n        label: src,\n        data: labels.map(p => byPeriod[p][src] || 0),\n        backgroundColor: this.getShade(i, sources.length, 0.9),\n        // Chart.js v2: same stack id for stacking\n        stack: \"one\"\n      }));\n      this.setState({\n        barData: {\n          labels,\n          datasets\n        }\n      });\n    };\n\n    this.getColor = (i, alpha = 1) => {\n      const colors = [`rgba(99, 102, 241, ${alpha})`, // Indigo\n      `rgba(34, 197, 94, ${alpha})`, // Green\n      `rgba(239, 68, 68, ${alpha})`, // Red\n      `rgba(234, 179, 8, ${alpha})`, // Yellow\n      `rgba(59, 130, 246, ${alpha})` // Blue\n      ];\n      return colors[i % colors.length];\n    };\n\n    this.getGradient = color => {\n      const canvas = document.createElement(\"canvas\");\n      const ctx = canvas.getContext(\"2d\");\n      const gradient = ctx.createLinearGradient(0, 0, 0, 200);\n      gradient.addColorStop(0, color);\n      gradient.addColorStop(1, \"rgba(255,255,255,0)\");\n      return gradient;\n    };\n  }\n\n  componentDidMount() {\n    onSnapshot(collection(db, \"activities\"), snapshot => {\n      const activities = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.setState({\n        activities\n      }, () => {\n        this.buildLineChart();\n        this.buildBarChart();\n      });\n    });\n  }\n\n  render() {\n    const {\n      lineData,\n      barData,\n      filter\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"p-3 shadow-sm bg-white border-0 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    }, \"Activities by Source over Time\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }, \"Daily count of activities split by source\")), /*#__PURE__*/React.createElement(ButtonGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, [\"1D\", \"5D\", \"1M\", \"1Y\"].map(f => /*#__PURE__*/React.createElement(Button, {\n      key: f,\n      size: \"sm\",\n      variant: filter === f ? \"primary\" : \"light\",\n      onClick: () => this.setState({\n        filter: f\n      }, () => {\n        this.buildLineChart();\n        this.buildBarChart();\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, f)))), lineData && /*#__PURE__*/React.createElement(Line, {\n      data: lineData,\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: \"top\"\n          },\n          tooltip: {\n            mode: \"index\",\n            intersect: false,\n            backgroundColor: \"#111827\",\n            titleColor: \"#fff\",\n            bodyColor: \"#fff\"\n          }\n        },\n        interaction: {\n          mode: \"nearest\",\n          axis: \"x\",\n          intersect: false\n        },\n        scales: {\n          x: {\n            grid: {\n              display: false\n            }\n          },\n          y: {\n            beginAtZero: true,\n            grid: {\n              color: \"#f3f4f6\"\n            }\n          }\n        }\n      },\n      height: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"p-3 shadow-sm bg-white border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 7\n      }\n    }, \"Source Usage by Period (Stacked)\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 7\n      }\n    }, \"How each source was used per \", this.state.barGroup.toLowerCase())), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-select w-auto\",\n      value: this.state.barGroup,\n      onChange: e => this.setState({\n        barGroup: e.target.value\n      }, this.buildBarChart),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 7\n      }\n    }, \"Daily\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 7\n      }\n    }, \"Weekly\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 7\n      }\n    }, \"Monthly\"))), this.state.barData && /*#__PURE__*/React.createElement(Bar, {\n      data: this.state.barData,\n      options: {\n        responsive: true,\n        legend: {\n          position: \"top\"\n        },\n        tooltips: {\n          mode: \"index\",\n          intersect: false\n        },\n        scales: {\n          xAxes: [{\n            stacked: true,\n            gridLines: {\n              display: false\n            }\n          }],\n          yAxes: [{\n            stacked: true,\n            ticks: {\n              beginAtZero: true,\n              precision: 0\n            }\n          }]\n        }\n      },\n      height: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 5\n      }\n    })))));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/College/admin/StarAdmin-Free-React-Admin-Template-master/template/demo_1/src/app/dashboard/Dashboard.js"],"names":["React","Component","Card","Row","Col","ButtonGroup","Button","db","collection","onSnapshot","Line","Bar","Dashboard","state","activities","lineData","barData","filter","barGroup","filterByRange","range","now","Date","cutoff","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","a","date","getShade","i","total","alpha","hue","sat","l0","l1","light","Math","max","periodKey","dateStr","group","d","label","toISOString","slice","sort","tmp","UTC","day","getUTCDay","setUTCDate","getUTCDate","yearStart","getUTCFullYear","week","ceil","String","padStart","toLocaleString","month","buildLineChart","filtered","grouped","forEach","source","labels","Object","keys","sources","datasets","map","src","data","borderColor","getColor","backgroundColor","fill","tension","borderWidth","pointRadius","setState","buildBarChart","byPeriod","__sort","b","p","length","stack","colors","getGradient","color","canvas","document","createElement","ctx","getContext","gradient","createLinearGradient","addColorStop","componentDidMount","snapshot","docs","doc","id","render","f","responsive","plugins","legend","position","tooltip","mode","intersect","titleColor","bodyColor","interaction","axis","scales","x","grid","display","y","beginAtZero","toLowerCase","e","target","value","tooltips","xAxes","stacked","gridLines","yAxes","ticks","precision"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Row, Col, ButtonGroup, Button } from \"react-bootstrap\";\nimport { db } from \"../../firebase\";\nimport { collection, onSnapshot } from \"firebase/firestore\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport \"chart.js\";\n\nclass Dashboard extends Component {\n  state = {\n    activities: [],\n    lineData: null,\n    barData: null,\n    filter: \"1M\", // default filter\n    barGroup: \"Daily\",\n  };\n\n  componentDidMount() {\n    onSnapshot(collection(db, \"activities\"), (snapshot) => {\n      const activities = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      this.setState({ activities }, () => {\n        this.buildLineChart();\n        this.buildBarChart();\n      });\n    });\n  }\n\n\n  filterByRange = (activities, range) => {\n  const now = new Date();\n  let cutoff;\n\n  switch (range) {\n    case \"1D\":\n      cutoff = new Date();\n      cutoff.setDate(now.getDate() - 1);\n      break;\n    case \"5D\":\n      cutoff = new Date();\n      cutoff.setDate(now.getDate() - 5);\n      break;\n    case \"1M\":\n      cutoff = new Date();\n      cutoff.setMonth(now.getMonth() - 1);\n      break;\n    case \"1Y\":\n      cutoff = new Date();\n      cutoff.setFullYear(now.getFullYear() - 1);\n      break;\n    default:\n      cutoff = new Date(\"2000-01-01\");\n  }\n\n  return activities.filter((a) => new Date(a.date) >= cutoff);\n};\n\n\n// single-hue, different brightness per source\ngetShade = (i, total, alpha = 0.9) => {\n  const hue = 225;           // blue/purple family\n  const sat = 80;\n  const l0 = 35, l1 = 80;    // lightness range\n  const light = l0 + ((l1 - l0) * (i / Math.max(total - 1, 1)));\n  return `hsla(${hue}, ${sat}%, ${light}%, ${alpha})`;\n};\n\n// period key + sortable numeric key\nperiodKey = (dateStr, group) => {\n  const d = new Date(`${dateStr}T00:00:00`); // avoid TZ shifts\n  if (group === \"Daily\") {\n    const label = d.toISOString().slice(0, 10); // YYYY-MM-DD\n    return { label, sort: +new Date(label) };\n  }\n  if (group === \"Weekly\") { // ISO week\n    const tmp = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()));\n    const day = tmp.getUTCDay() || 7;\n    tmp.setUTCDate(tmp.getUTCDate() + 4 - day);\n    const yearStart = new Date(Date.UTC(tmp.getUTCFullYear(), 0, 1));\n    const week = Math.ceil((((tmp - yearStart) / 86400000) + 1) / 7);\n    return { label: `W${String(week).padStart(2, \"0\")} ${tmp.getUTCFullYear()}`,\n             sort: tmp.getUTCFullYear() * 100 + week };\n  }\n  // Monthly\n  const label = `${d.toLocaleString(\"default\", { month: \"short\" })} ${d.getFullYear()}`;\n  return { label, sort: d.getFullYear() * 100 + (d.getMonth() + 1) };\n};\n\n\n  buildLineChart = () => {\n  const { activities, filter } = this.state;\n  const filtered = this.filterByRange(activities, filter);\n\n  // Group by date + source\n  const grouped = {};\n  filtered.forEach((a) => {\n    const date = a.date;\n    if (!grouped[date]) grouped[date] = {};\n    if (!grouped[date][a.source]) grouped[date][a.source] = 0;\n    grouped[date][a.source]++;\n  });\n\n  const labels = Object.keys(grouped).sort();\n  const sources = [\"Call\", \"Meeting\", \"Demo\", \"Mail\", \"Whatsapp\"];\n\n  const datasets = sources.map((src, i) => ({\n    label: src,\n    data: labels.map((d) => grouped[d][src] || 0),\n    borderColor: this.getColor(i),\n    backgroundColor: this.getColor(i, 0.2),\n    fill: false,\n    tension: 0.3,\n    borderWidth: 2,\n    pointRadius: 4,\n  }));\n\n  this.setState({ lineData: { labels, datasets } });\n};\n\nbuildBarChart = () => {\n  const { activities, barGroup } = this.state;\n  const sources = [\"Call\", \"Meeting\", \"Demo\", \"Mail\", \"Whatsapp\"];\n\n  // Period → { source → count }\n  const byPeriod = {};\n  activities.forEach(a => {\n    const { label, sort } = this.periodKey(a.date, barGroup);\n    if (!byPeriod[label]) byPeriod[label] = { __sort: sort };\n    const src = a.source || \"Unknown\";\n    byPeriod[label][src] = (byPeriod[label][src] || 0) + 1;\n  });\n\n  // Sort periods chronologically\n  const labels = Object.keys(byPeriod)\n    .sort((a, b) => byPeriod[a].__sort - byPeriod[b].__sort);\n\n  // Build stacked datasets (same hue, different brightness)\n  const datasets = sources.map((src, i) => ({\n    label: src,\n    data: labels.map(p => byPeriod[p][src] || 0),\n    backgroundColor: this.getShade(i, sources.length, 0.9),\n    // Chart.js v2: same stack id for stacking\n    stack: \"one\",\n  }));\n\n  this.setState({ barData: { labels, datasets } });\n};\n\n\n\n  getColor = (i, alpha = 1) => {\n    const colors = [\n      `rgba(99, 102, 241, ${alpha})`, // Indigo\n      `rgba(34, 197, 94, ${alpha})`,  // Green\n      `rgba(239, 68, 68, ${alpha})`,  // Red\n      `rgba(234, 179, 8, ${alpha})`,  // Yellow\n      `rgba(59, 130, 246, ${alpha})`, // Blue\n    ];\n    return colors[i % colors.length];\n  };\n\n  getGradient = (color) => {\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const gradient = ctx.createLinearGradient(0, 0, 0, 200);\n    gradient.addColorStop(0, color);\n    gradient.addColorStop(1, \"rgba(255,255,255,0)\");\n    return gradient;\n  };\n\n  render() {\n    const { lineData, barData, filter } = this.state;\n\n    return (\n      <div className=\"container mt-4\">\n        <Row>\n          <Col md={12}>\n            <Card className=\"p-3 shadow-sm bg-white border-0 mb-4\">\n              <div className=\"d-flex justify-content-between align-items-center\">\n                <div>\n                    <h5>Activities by Source over Time</h5>\n                    <p>Daily count of activities split by source</p>\n                </div>\n                <ButtonGroup>\n                  {[\"1D\", \"5D\", \"1M\", \"1Y\"].map((f) => (\n                    <Button\n                      key={f}\n                      size=\"sm\"\n                      variant={filter === f ? \"primary\" : \"light\"}\n                      onClick={() =>\n                        this.setState({ filter: f }, () => {\n                          this.buildLineChart();\n                          this.buildBarChart();\n                        })\n                      }\n                    >\n                      {f}\n                    </Button>\n                  ))}\n                </ButtonGroup>\n\n              </div>\n\n              {lineData && (\n                <Line\n                  data={lineData}\n                  options={{\n                    responsive: true,\n                    plugins: {\n                      legend: { position: \"top\" },\n                      tooltip: {\n                        mode: \"index\",\n                        intersect: false,\n                        backgroundColor: \"#111827\",\n                        titleColor: \"#fff\",\n                        bodyColor: \"#fff\",\n                      },\n                    },\n                    interaction: { mode: \"nearest\", axis: \"x\", intersect: false },\n                    scales: {\n                      x: { grid: { display: false } },\n                      y: { beginAtZero: true, grid: { color: \"#f3f4f6\" } },\n                    },\n                  }}\n                  height={100}\n                />\n              )}\n            </Card>\n          </Col>\n\n          <Col md={12}>\n        <Card className=\"p-3 shadow-sm bg-white border-0\">\n  <div className=\"d-flex justify-content-between align-items-center mb-2\">\n    <div>\n      <h5>Source Usage by Period (Stacked)</h5>\n      <p className=\"mb-0\">How each source was used per {this.state.barGroup.toLowerCase()}</p>\n    </div>\n    <select\n      className=\"form-select w-auto\"\n      value={this.state.barGroup}\n      onChange={(e) => this.setState({ barGroup: e.target.value }, this.buildBarChart)}\n    >\n      <option>Daily</option>\n      <option>Weekly</option>\n      <option>Monthly</option>\n    </select>\n  </div>\n\n  {this.state.barData && (\n    <Bar\n      data={this.state.barData}\n      options={{\n        responsive: true,\n        legend: { position: \"top\" },\n        tooltips: { mode: \"index\", intersect: false },\n        scales: {\n          xAxes: [{ stacked: true, gridLines: { display: false } }],\n          yAxes: [{ stacked: true, ticks: { beginAtZero: true, precision: 0 } }],\n        },\n      }}\n      height={100}\n    />\n  )}\n</Card>\n\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}